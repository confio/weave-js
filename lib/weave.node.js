(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("util"), require("events"), require("stream"), require("buffer"), require("url"), require("crypto"), require("fs"), require("http"), require("https"), require("path"), require("assert"), require("zlib"), require("os"), require("string_decoder"), require("tls"), require("tty"));
	else if(typeof define === 'function' && define.amd)
		define(["util", "events", "stream", "buffer", "url", "crypto", "fs", "http", "https", "path", "assert", "zlib", "os", "string_decoder", "tls", "tty"], factory);
	else if(typeof exports === 'object')
		exports["weave"] = factory(require("util"), require("events"), require("stream"), require("buffer"), require("url"), require("crypto"), require("fs"), require("http"), require("https"), require("path"), require("assert"), require("zlib"), require("os"), require("string_decoder"), require("tls"), require("tty"));
	else
		root["weave"] = factory(root["util"], root["events"], root["stream"], root["buffer"], root["url"], root["crypto"], root["fs"], root["http"], root["https"], root["path"], root["assert"], root["zlib"], root["os"], root["string_decoder"], root["tls"], root["tty"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_27__, __WEBPACK_EXTERNAL_MODULE_28__, __WEBPACK_EXTERNAL_MODULE_29__, __WEBPACK_EXTERNAL_MODULE_45__, __WEBPACK_EXTERNAL_MODULE_46__, __WEBPACK_EXTERNAL_MODULE_102__, __WEBPACK_EXTERNAL_MODULE_103__, __WEBPACK_EXTERNAL_MODULE_206__, __WEBPACK_EXTERNAL_MODULE_207__, __WEBPACK_EXTERNAL_MODULE_208__, __WEBPACK_EXTERNAL_MODULE_209__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 135);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

try {
  var util = __webpack_require__(1);
  if (typeof util.inherits !== 'function') throw '';
  module.exports = util.inherits;
} catch (e) {
  module.exports = __webpack_require__(152);
}


/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("util");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Various utility functions.
 * @namespace
 */
var util = module.exports = __webpack_require__(6);

var roots = __webpack_require__(77);

var Type, // cyclic
    Enum;

util.codegen = __webpack_require__(108);
util.fetch   = __webpack_require__(110);
util.path    = __webpack_require__(112);

/**
 * Node's fs module if available.
 * @type {Object.<string,*>}
 */
util.fs = util.inquire("fs");

/**
 * Converts an object's values to an array.
 * @param {Object.<string,*>} object Object to convert
 * @returns {Array.<*>} Converted array
 */
util.toArray = function toArray(object) {
    if (object) {
        var keys  = Object.keys(object),
            array = new Array(keys.length),
            index = 0;
        while (index < keys.length)
            array[index] = object[keys[index++]];
        return array;
    }
    return [];
};

/**
 * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.
 * @param {Array.<*>} array Array to convert
 * @returns {Object.<string,*>} Converted object
 */
util.toObject = function toObject(array) {
    var object = {},
        index  = 0;
    while (index < array.length) {
        var key = array[index++],
            val = array[index++];
        if (val !== undefined)
            object[key] = val;
    }
    return object;
};

var safePropBackslashRe = /\\/g,
    safePropQuoteRe     = /"/g;

/**
 * Tests whether the specified name is a reserved word in JS.
 * @param {string} name Name to test
 * @returns {boolean} `true` if reserved, otherwise `false`
 */
util.isReserved = function isReserved(name) {
    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);
};

/**
 * Returns a safe property accessor for the specified property name.
 * @param {string} prop Property name
 * @returns {string} Safe accessor
 */
util.safeProp = function safeProp(prop) {
    if (!/^[$\w_]+$/.test(prop) || util.isReserved(prop))
        return "[\"" + prop.replace(safePropBackslashRe, "\\\\").replace(safePropQuoteRe, "\\\"") + "\"]";
    return "." + prop;
};

/**
 * Converts the first character of a string to upper case.
 * @param {string} str String to convert
 * @returns {string} Converted string
 */
util.ucFirst = function ucFirst(str) {
    return str.charAt(0).toUpperCase() + str.substring(1);
};

var camelCaseRe = /_([a-z])/g;

/**
 * Converts a string to camel case.
 * @param {string} str String to convert
 * @returns {string} Converted string
 */
util.camelCase = function camelCase(str) {
    return str.substring(0, 1)
         + str.substring(1)
               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });
};

/**
 * Compares reflected fields by id.
 * @param {Field} a First field
 * @param {Field} b Second field
 * @returns {number} Comparison value
 */
util.compareFieldsById = function compareFieldsById(a, b) {
    return a.id - b.id;
};

/**
 * Decorator helper for types (TypeScript).
 * @param {Constructor<T>} ctor Constructor function
 * @param {string} [typeName] Type name, defaults to the constructor's name
 * @returns {Type} Reflected type
 * @template T extends Message<T>
 * @property {Root} root Decorators root
 */
util.decorateType = function decorateType(ctor, typeName) {

    /* istanbul ignore if */
    if (ctor.$type) {
        if (typeName && ctor.$type.name !== typeName) {
            util.decorateRoot.remove(ctor.$type);
            ctor.$type.name = typeName;
            util.decorateRoot.add(ctor.$type);
        }
        return ctor.$type;
    }

    /* istanbul ignore next */
    if (!Type)
        Type = __webpack_require__(40);

    var type = new Type(typeName || ctor.name);
    util.decorateRoot.add(type);
    type.ctor = ctor; // sets up .encode, .decode etc.
    Object.defineProperty(ctor, "$type", { value: type, enumerable: false });
    Object.defineProperty(ctor.prototype, "$type", { value: type, enumerable: false });
    return type;
};

var decorateEnumIndex = 0;

/**
 * Decorator helper for enums (TypeScript).
 * @param {Object} object Enum object
 * @returns {Enum} Reflected enum
 */
util.decorateEnum = function decorateEnum(object) {

    /* istanbul ignore if */
    if (object.$type)
        return object.$type;

    /* istanbul ignore next */
    if (!Enum)
        Enum = __webpack_require__(5);

    var enm = new Enum("Enum" + decorateEnumIndex++, object);
    util.decorateRoot.add(enm);
    Object.defineProperty(object, "$type", { value: enm, enumerable: false });
    return enm;
};

/**
 * Decorator root (TypeScript).
 * @name util.decorateRoot
 * @type {Root}
 * @readonly
 */
Object.defineProperty(util, "decorateRoot", {
    get: function() {
        return roots["decorated"] || (roots["decorated"] = new (__webpack_require__(38))());
    }
});


/***/ }),
/* 3 */
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(56);
var isBuffer = __webpack_require__(153);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = Enum;

// extends ReflectionObject
var ReflectionObject = __webpack_require__(15);
((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = "Enum";

var Namespace = __webpack_require__(20),
    util = __webpack_require__(2);

/**
 * Constructs a new enum instance.
 * @classdesc Reflected enum.
 * @extends ReflectionObject
 * @constructor
 * @param {string} name Unique name within its namespace
 * @param {Object.<string,number>} [values] Enum values as an object, by name
 * @param {Object.<string,*>} [options] Declared options
 * @param {string} [comment] The comment for this enum
 * @param {Object.<string,string>} [comments] The value comments for this enum
 */
function Enum(name, values, options, comment, comments) {
    ReflectionObject.call(this, name, options);

    if (values && typeof values !== "object")
        throw TypeError("values must be an object");

    /**
     * Enum values by id.
     * @type {Object.<number,string>}
     */
    this.valuesById = {};

    /**
     * Enum values by name.
     * @type {Object.<string,number>}
     */
    this.values = Object.create(this.valuesById); // toJSON, marker

    /**
     * Enum comment text.
     * @type {string|null}
     */
    this.comment = comment;

    /**
     * Value comment texts, if any.
     * @type {Object.<string,string>}
     */
    this.comments = comments || {};

    /**
     * Reserved ranges, if any.
     * @type {Array.<number[]|string>}
     */
    this.reserved = undefined; // toJSON

    // Note that values inherit valuesById on their prototype which makes them a TypeScript-
    // compatible enum. This is used by pbts to write actual enum definitions that work for
    // static and reflection code alike instead of emitting generic object definitions.

    if (values)
        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)
            if (typeof values[keys[i]] === "number") // use forward entries only
                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];
}

/**
 * Enum descriptor.
 * @interface IEnum
 * @property {Object.<string,number>} values Enum values
 * @property {Object.<string,*>} [options] Enum options
 */

/**
 * Constructs an enum from an enum descriptor.
 * @param {string} name Enum name
 * @param {IEnum} json Enum descriptor
 * @returns {Enum} Created enum
 * @throws {TypeError} If arguments are invalid
 */
Enum.fromJSON = function fromJSON(name, json) {
    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);
    enm.reserved = json.reserved;
    return enm;
};

/**
 * Converts this enum to an enum descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {IEnum} Enum descriptor
 */
Enum.prototype.toJSON = function toJSON(toJSONOptions) {
    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;
    return util.toObject([
        "options"  , this.options,
        "values"   , this.values,
        "reserved" , this.reserved && this.reserved.length ? this.reserved : undefined,
        "comment"  , keepComments ? this.comment : undefined,
        "comments" , keepComments ? this.comments : undefined
    ]);
};

/**
 * Adds a value to this enum.
 * @param {string} name Value name
 * @param {number} id Value id
 * @param {string} [comment] Comment, if any
 * @returns {Enum} `this`
 * @throws {TypeError} If arguments are invalid
 * @throws {Error} If there is already a value with this name or id
 */
Enum.prototype.add = function add(name, id, comment) {
    // utilized by the parser but not by .fromJSON

    if (!util.isString(name))
        throw TypeError("name must be a string");

    if (!util.isInteger(id))
        throw TypeError("id must be an integer");

    if (this.values[name] !== undefined)
        throw Error("duplicate name '" + name + "' in " + this);

    if (this.isReservedId(id))
        throw Error("id " + id + " is reserved in " + this);

    if (this.isReservedName(name))
        throw Error("name '" + name + "' is reserved in " + this);

    if (this.valuesById[id] !== undefined) {
        if (!(this.options && this.options.allow_alias))
            throw Error("duplicate id " + id + " in " + this);
        this.values[name] = id;
    } else
        this.valuesById[this.values[name] = id] = name;

    this.comments[name] = comment || null;
    return this;
};

/**
 * Removes a value from this enum
 * @param {string} name Value name
 * @returns {Enum} `this`
 * @throws {TypeError} If arguments are invalid
 * @throws {Error} If `name` is not a name of this enum
 */
Enum.prototype.remove = function remove(name) {

    if (!util.isString(name))
        throw TypeError("name must be a string");

    var val = this.values[name];
    if (val == null)
        throw Error("name '" + name + "' does not exist in " + this);

    delete this.valuesById[val];
    delete this.values[name];
    delete this.comments[name];

    return this;
};

/**
 * Tests if the specified id is reserved.
 * @param {number} id Id to test
 * @returns {boolean} `true` if reserved, otherwise `false`
 */
Enum.prototype.isReservedId = function isReservedId(id) {
    return Namespace.isReservedId(this.reserved, id);
};

/**
 * Tests if the specified name is reserved.
 * @param {string} name Name to test
 * @returns {boolean} `true` if reserved, otherwise `false`
 */
Enum.prototype.isReservedName = function isReservedName(name) {
    return Namespace.isReservedName(this.reserved, name);
};


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var util = exports;

// used to return a Promise where callback is omitted
util.asPromise = __webpack_require__(47);

// converts to / from base64 encoded strings
util.base64 = __webpack_require__(107);

// base class of rpc.Service
util.EventEmitter = __webpack_require__(109);

// float handling accross browsers
util.float = __webpack_require__(111);

// requires modules optionally and hides the call from bundlers
util.inquire = __webpack_require__(48);

// converts to / from utf8 encoded strings
util.utf8 = __webpack_require__(114);

// provides a node-like buffer pool in the browser
util.pool = __webpack_require__(113);

// utility to work with the low and high bits of a 64 bit value
util.LongBits = __webpack_require__(173);

/**
 * An immuable empty array.
 * @memberof util
 * @type {Array.<*>}
 * @const
 */
util.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes

/**
 * An immutable empty object.
 * @type {Object}
 * @const
 */
util.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes

/**
 * Whether running within node or not.
 * @memberof util
 * @type {boolean}
 * @const
 */
util.isNode = Boolean(global.process && global.process.versions && global.process.versions.node);

/**
 * Tests if the specified value is an integer.
 * @function
 * @param {*} value Value to test
 * @returns {boolean} `true` if the value is an integer
 */
util.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {
    return typeof value === "number" && isFinite(value) && Math.floor(value) === value;
};

/**
 * Tests if the specified value is a string.
 * @param {*} value Value to test
 * @returns {boolean} `true` if the value is a string
 */
util.isString = function isString(value) {
    return typeof value === "string" || value instanceof String;
};

/**
 * Tests if the specified value is a non-null object.
 * @param {*} value Value to test
 * @returns {boolean} `true` if the value is a non-null object
 */
util.isObject = function isObject(value) {
    return value && typeof value === "object";
};

/**
 * Checks if a property on a message is considered to be present.
 * This is an alias of {@link util.isSet}.
 * @function
 * @param {Object} obj Plain object or message instance
 * @param {string} prop Property name
 * @returns {boolean} `true` if considered to be present, otherwise `false`
 */
util.isset =

/**
 * Checks if a property on a message is considered to be present.
 * @param {Object} obj Plain object or message instance
 * @param {string} prop Property name
 * @returns {boolean} `true` if considered to be present, otherwise `false`
 */
util.isSet = function isSet(obj, prop) {
    var value = obj[prop];
    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins
        return typeof value !== "object" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;
    return false;
};

/**
 * Any compatible Buffer instance.
 * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.
 * @interface Buffer
 * @extends Uint8Array
 */

/**
 * Node's Buffer class if available.
 * @type {Constructor<Buffer>}
 */
util.Buffer = (function() {
    try {
        var Buffer = util.inquire("buffer").Buffer;
        // refuse to use non-node buffers if not explicitly assigned (perf reasons):
        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;
    } catch (e) {
        /* istanbul ignore next */
        return null;
    }
})();

// Internal alias of or polyfull for Buffer.from.
util._Buffer_from = null;

// Internal alias of or polyfill for Buffer.allocUnsafe.
util._Buffer_allocUnsafe = null;

/**
 * Creates a new buffer of whatever type supported by the environment.
 * @param {number|number[]} [sizeOrArray=0] Buffer size or number array
 * @returns {Uint8Array|Buffer} Buffer
 */
util.newBuffer = function newBuffer(sizeOrArray) {
    /* istanbul ignore next */
    return typeof sizeOrArray === "number"
        ? util.Buffer
            ? util._Buffer_allocUnsafe(sizeOrArray)
            : new util.Array(sizeOrArray)
        : util.Buffer
            ? util._Buffer_from(sizeOrArray)
            : typeof Uint8Array === "undefined"
                ? sizeOrArray
                : new Uint8Array(sizeOrArray);
};

/**
 * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.
 * @type {Constructor<Uint8Array>}
 */
util.Array = typeof Uint8Array !== "undefined" ? Uint8Array /* istanbul ignore next */ : Array;

/**
 * Any compatible Long instance.
 * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.
 * @interface Long
 * @property {number} low Low bits
 * @property {number} high High bits
 * @property {boolean} unsigned Whether unsigned or not
 */

/**
 * Long.js's Long class if available.
 * @type {Constructor<Long>}
 */
util.Long = /* istanbul ignore next */ global.dcodeIO && /* istanbul ignore next */ global.dcodeIO.Long || util.inquire("long");

/**
 * Regular expression used to verify 2 bit (`bool`) map keys.
 * @type {RegExp}
 * @const
 */
util.key2Re = /^true|false|0|1$/;

/**
 * Regular expression used to verify 32 bit (`int32` etc.) map keys.
 * @type {RegExp}
 * @const
 */
util.key32Re = /^-?(?:0|[1-9][0-9]*)$/;

/**
 * Regular expression used to verify 64 bit (`int64` etc.) map keys.
 * @type {RegExp}
 * @const
 */
util.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;

/**
 * Converts a number or long to an 8 characters long hash string.
 * @param {Long|number} value Value to convert
 * @returns {string} Hash
 */
util.longToHash = function longToHash(value) {
    return value
        ? util.LongBits.from(value).toHash()
        : util.LongBits.zeroHash;
};

/**
 * Converts an 8 characters long hash string to a long or number.
 * @param {string} hash Hash
 * @param {boolean} [unsigned=false] Whether unsigned or not
 * @returns {Long|number} Original value
 */
util.longFromHash = function longFromHash(hash, unsigned) {
    var bits = util.LongBits.fromHash(hash);
    if (util.Long)
        return util.Long.fromBits(bits.lo, bits.hi, unsigned);
    return bits.toNumber(Boolean(unsigned));
};

/**
 * Merges the properties of the source object into the destination object.
 * @memberof util
 * @param {Object.<string,*>} dst Destination object
 * @param {Object.<string,*>} src Source object
 * @param {boolean} [ifNotSet=false] Merges only if the key is not already set
 * @returns {Object.<string,*>} Destination object
 */
function merge(dst, src, ifNotSet) { // used by converters
    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)
        if (dst[keys[i]] === undefined || !ifNotSet)
            dst[keys[i]] = src[keys[i]];
    return dst;
}

util.merge = merge;

/**
 * Converts the first character of a string to lower case.
 * @param {string} str String to convert
 * @returns {string} Converted string
 */
util.lcFirst = function lcFirst(str) {
    return str.charAt(0).toLowerCase() + str.substring(1);
};

/**
 * Creates a custom error constructor.
 * @memberof util
 * @param {string} name Error name
 * @returns {Constructor<Error>} Custom error constructor
 */
function newError(name) {

    function CustomError(message, properties) {

        if (!(this instanceof CustomError))
            return new CustomError(message, properties);

        // Error.call(this, message);
        // ^ just returns a new error instance because the ctor can be called as a function

        Object.defineProperty(this, "message", { get: function() { return message; } });

        /* istanbul ignore next */
        if (Error.captureStackTrace) // node
            Error.captureStackTrace(this, CustomError);
        else
            Object.defineProperty(this, "stack", { value: (new Error()).stack || "" });

        if (properties)
            merge(this, properties);
    }

    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;

    Object.defineProperty(CustomError.prototype, "name", { get: function() { return name; } });

    CustomError.prototype.toString = function toString() {
        return this.name + ": " + this.message;
    };

    return CustomError;
}

util.newError = newError;

/**
 * Constructs a new protocol error.
 * @classdesc Error subclass indicating a protocol specifc error.
 * @memberof util
 * @extends Error
 * @template T extends Message<T>
 * @constructor
 * @param {string} message Error message
 * @param {Object.<string,*>} [properties] Additional properties
 * @example
 * try {
 *     MyMessage.decode(someBuffer); // throws if required fields are missing
 * } catch (e) {
 *     if (e instanceof ProtocolError && e.instance)
 *         console.log("decoded so far: " + JSON.stringify(e.instance));
 * }
 */
util.ProtocolError = newError("ProtocolError");

/**
 * So far decoded message instance.
 * @name util.ProtocolError#instance
 * @type {Message<T>}
 */

/**
 * A OneOf getter as returned by {@link util.oneOfGetter}.
 * @typedef OneOfGetter
 * @type {function}
 * @returns {string|undefined} Set field name, if any
 */

/**
 * Builds a getter for a oneof's present field name.
 * @param {string[]} fieldNames Field names
 * @returns {OneOfGetter} Unbound getter
 */
util.oneOfGetter = function getOneOf(fieldNames) {
    var fieldMap = {};
    for (var i = 0; i < fieldNames.length; ++i)
        fieldMap[fieldNames[i]] = 1;

    /**
     * @returns {string|undefined} Set field name, if any
     * @this Object
     * @ignore
     */
    return function() { // eslint-disable-line consistent-return
        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)
            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)
                return keys[i];
    };
};

/**
 * A OneOf setter as returned by {@link util.oneOfSetter}.
 * @typedef OneOfSetter
 * @type {function}
 * @param {string|undefined} value Field name
 * @returns {undefined}
 */

/**
 * Builds a setter for a oneof's present field name.
 * @param {string[]} fieldNames Field names
 * @returns {OneOfSetter} Unbound setter
 */
util.oneOfSetter = function setOneOf(fieldNames) {

    /**
     * @param {string} name Field name
     * @returns {undefined}
     * @this Object
     * @ignore
     */
    return function(name) {
        for (var i = 0; i < fieldNames.length; ++i)
            if (fieldNames[i] !== name)
                delete this[fieldNames[i]];
    };
};

/**
 * Default conversion options used for {@link Message#toJSON} implementations.
 *
 * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:
 *
 * - Longs become strings
 * - Enums become string keys
 * - Bytes become base64 encoded strings
 * - (Sub-)Messages become plain objects
 * - Maps become plain objects with all string keys
 * - Repeated fields become arrays
 * - NaN and Infinity for float and double fields become strings
 *
 * @type {IConversionOptions}
 * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json
 */
util.toJSONOptions = {
    longs: String,
    enums: String,
    bytes: String,
    json: true
};

util._configure = function() {
    var Buffer = util.Buffer;
    /* istanbul ignore if */
    if (!Buffer) {
        util._Buffer_from = util._Buffer_allocUnsafe = null;
        return;
    }
    // because node 4.x buffers are incompatible & immutable
    // see: https://github.com/dcodeIO/protobuf.js/pull/665
    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||
        /* istanbul ignore next */
        function Buffer_from(value, encoding) {
            return new Buffer(value, encoding);
        };
    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||
        /* istanbul ignore next */
        function Buffer_allocUnsafe(size) {
            return new Buffer(size);
        };
};


/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = require("events");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = { nextTick: nextTick };
} else {
  module.exports = process
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}



/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = require("stream");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = Field;

// extends ReflectionObject
var ReflectionObject = __webpack_require__(15);
((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = "Field";

var Enum  = __webpack_require__(5),
    types = __webpack_require__(16),
    util  = __webpack_require__(2);

var Type; // cyclic

var ruleRe = /^required|optional|repeated$/;

/**
 * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.
 * @name Field
 * @classdesc Reflected message field.
 * @extends FieldBase
 * @constructor
 * @param {string} name Unique name within its namespace
 * @param {number} id Unique id within its namespace
 * @param {string} type Value type
 * @param {string|Object.<string,*>} [rule="optional"] Field rule
 * @param {string|Object.<string,*>} [extend] Extended type if different from parent
 * @param {Object.<string,*>} [options] Declared options
 */

/**
 * Constructs a field from a field descriptor.
 * @param {string} name Field name
 * @param {IField} json Field descriptor
 * @returns {Field} Created field
 * @throws {TypeError} If arguments are invalid
 */
Field.fromJSON = function fromJSON(name, json) {
    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);
};

/**
 * Not an actual constructor. Use {@link Field} instead.
 * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.
 * @exports FieldBase
 * @extends ReflectionObject
 * @constructor
 * @param {string} name Unique name within its namespace
 * @param {number} id Unique id within its namespace
 * @param {string} type Value type
 * @param {string|Object.<string,*>} [rule="optional"] Field rule
 * @param {string|Object.<string,*>} [extend] Extended type if different from parent
 * @param {Object.<string,*>} [options] Declared options
 * @param {string} [comment] Comment associated with this field
 */
function Field(name, id, type, rule, extend, options, comment) {

    if (util.isObject(rule)) {
        comment = extend;
        options = rule;
        rule = extend = undefined;
    } else if (util.isObject(extend)) {
        comment = options;
        options = extend;
        extend = undefined;
    }

    ReflectionObject.call(this, name, options);

    if (!util.isInteger(id) || id < 0)
        throw TypeError("id must be a non-negative integer");

    if (!util.isString(type))
        throw TypeError("type must be a string");

    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))
        throw TypeError("rule must be a string rule");

    if (extend !== undefined && !util.isString(extend))
        throw TypeError("extend must be a string");

    /**
     * Field rule, if any.
     * @type {string|undefined}
     */
    this.rule = rule && rule !== "optional" ? rule : undefined; // toJSON

    /**
     * Field type.
     * @type {string}
     */
    this.type = type; // toJSON

    /**
     * Unique field id.
     * @type {number}
     */
    this.id = id; // toJSON, marker

    /**
     * Extended type if different from parent.
     * @type {string|undefined}
     */
    this.extend = extend || undefined; // toJSON

    /**
     * Whether this field is required.
     * @type {boolean}
     */
    this.required = rule === "required";

    /**
     * Whether this field is optional.
     * @type {boolean}
     */
    this.optional = !this.required;

    /**
     * Whether this field is repeated.
     * @type {boolean}
     */
    this.repeated = rule === "repeated";

    /**
     * Whether this field is a map or not.
     * @type {boolean}
     */
    this.map = false;

    /**
     * Message this field belongs to.
     * @type {Type|null}
     */
    this.message = null;

    /**
     * OneOf this field belongs to, if any,
     * @type {OneOf|null}
     */
    this.partOf = null;

    /**
     * The field type's default value.
     * @type {*}
     */
    this.typeDefault = null;

    /**
     * The field's default value on prototypes.
     * @type {*}
     */
    this.defaultValue = null;

    /**
     * Whether this field's value should be treated as a long.
     * @type {boolean}
     */
    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;

    /**
     * Whether this field's value is a buffer.
     * @type {boolean}
     */
    this.bytes = type === "bytes";

    /**
     * Resolved type if not a basic type.
     * @type {Type|Enum|null}
     */
    this.resolvedType = null;

    /**
     * Sister-field within the extended type if a declaring extension field.
     * @type {Field|null}
     */
    this.extensionField = null;

    /**
     * Sister-field within the declaring namespace if an extended field.
     * @type {Field|null}
     */
    this.declaringField = null;

    /**
     * Internally remembers whether this field is packed.
     * @type {boolean|null}
     * @private
     */
    this._packed = null;

    /**
     * Comment for this field.
     * @type {string|null}
     */
    this.comment = comment;
}

/**
 * Determines whether this field is packed. Only relevant when repeated and working with proto2.
 * @name Field#packed
 * @type {boolean}
 * @readonly
 */
Object.defineProperty(Field.prototype, "packed", {
    get: function() {
        // defaults to packed=true if not explicity set to false
        if (this._packed === null)
            this._packed = this.getOption("packed") !== false;
        return this._packed;
    }
});

/**
 * @override
 */
Field.prototype.setOption = function setOption(name, value, ifNotSet) {
    if (name === "packed") // clear cached before setting
        this._packed = null;
    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);
};

/**
 * Field descriptor.
 * @interface IField
 * @property {string} [rule="optional"] Field rule
 * @property {string} type Field type
 * @property {number} id Field id
 * @property {Object.<string,*>} [options] Field options
 */

/**
 * Extension field descriptor.
 * @interface IExtensionField
 * @extends IField
 * @property {string} extend Extended type
 */

/**
 * Converts this field to a field descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {IField} Field descriptor
 */
Field.prototype.toJSON = function toJSON(toJSONOptions) {
    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;
    return util.toObject([
        "rule"    , this.rule !== "optional" && this.rule || undefined,
        "type"    , this.type,
        "id"      , this.id,
        "extend"  , this.extend,
        "options" , this.options,
        "comment" , keepComments ? this.comment : undefined
    ]);
};

/**
 * Resolves this field's type references.
 * @returns {Field} `this`
 * @throws {Error} If any reference cannot be resolved
 */
Field.prototype.resolve = function resolve() {

    if (this.resolved)
        return this;

    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it
        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);
        if (this.resolvedType instanceof Type)
            this.typeDefault = null;
        else // instanceof Enum
            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined
    }

    // use explicitly set default value if present
    if (this.options && this.options["default"] != null) {
        this.typeDefault = this.options["default"];
        if (this.resolvedType instanceof Enum && typeof this.typeDefault === "string")
            this.typeDefault = this.resolvedType.values[this.typeDefault];
    }

    // remove unnecessary options
    if (this.options) {
        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))
            delete this.options.packed;
        if (!Object.keys(this.options).length)
            this.options = undefined;
    }

    // convert to internal data type if necesssary
    if (this.long) {
        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === "u");

        /* istanbul ignore else */
        if (Object.freeze)
            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)

    } else if (this.bytes && typeof this.typeDefault === "string") {
        var buf;
        if (util.base64.test(this.typeDefault))
            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);
        else
            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);
        this.typeDefault = buf;
    }

    // take special care of maps and repeated fields
    if (this.map)
        this.defaultValue = util.emptyObject;
    else if (this.repeated)
        this.defaultValue = util.emptyArray;
    else
        this.defaultValue = this.typeDefault;

    // ensure proper value on prototype
    if (this.parent instanceof Type)
        this.parent.ctor.prototype[this.name] = this.defaultValue;

    return ReflectionObject.prototype.resolve.call(this);
};

/**
 * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).
 * @typedef FieldDecorator
 * @type {function}
 * @param {Object} prototype Target prototype
 * @param {string} fieldName Field name
 * @returns {undefined}
 */

/**
 * Field decorator (TypeScript).
 * @name Field.d
 * @function
 * @param {number} fieldId Field id
 * @param {"double"|"float"|"int32"|"uint32"|"sint32"|"fixed32"|"sfixed32"|"int64"|"uint64"|"sint64"|"fixed64"|"sfixed64"|"string"|"bool"|"bytes"|Object} fieldType Field type
 * @param {"optional"|"required"|"repeated"} [fieldRule="optional"] Field rule
 * @param {T} [defaultValue] Default value
 * @returns {FieldDecorator} Decorator function
 * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]
 */
Field.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {

    // submessage: decorate the submessage and use its name as the type
    if (typeof fieldType === "function")
        fieldType = util.decorateType(fieldType).name;

    // enum reference: create a reflected copy of the enum and keep reuseing it
    else if (fieldType && typeof fieldType === "object")
        fieldType = util.decorateEnum(fieldType).name;

    return function fieldDecorator(prototype, fieldName) {
        util.decorateType(prototype.constructor)
            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { "default": defaultValue }));
    };
};

/**
 * Field decorator (TypeScript).
 * @name Field.d
 * @function
 * @param {number} fieldId Field id
 * @param {Constructor<T>|string} fieldType Field type
 * @param {"optional"|"required"|"repeated"} [fieldRule="optional"] Field rule
 * @returns {FieldDecorator} Decorator function
 * @template T extends Message<T>
 * @variation 2
 */
// like Field.d but without a default value

Field._configure = function configure(Type_) {
    Type = Type_;
};


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(13)
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var buffer = __webpack_require__(13)

if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  Object.keys(buffer).forEach(function (prop) {
    exports[prop] = buffer[prop]
  })
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
Object.keys(Buffer).forEach(function (prop) {
  SafeBuffer[prop] = Buffer[prop]
})

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = require("buffer");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.



/*<replacement>*/

var processNextTick = __webpack_require__(8).nextTick;
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

var Readable = __webpack_require__(61);
var Writable = __webpack_require__(63);

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  processNextTick(cb, err);
};

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = ReflectionObject;

ReflectionObject.className = "ReflectionObject";

var util = __webpack_require__(2);

var Root; // cyclic

/**
 * Constructs a new reflection object instance.
 * @classdesc Base class of all reflection objects.
 * @constructor
 * @param {string} name Object name
 * @param {Object.<string,*>} [options] Declared options
 * @abstract
 */
function ReflectionObject(name, options) {

    if (!util.isString(name))
        throw TypeError("name must be a string");

    if (options && !util.isObject(options))
        throw TypeError("options must be an object");

    /**
     * Options.
     * @type {Object.<string,*>|undefined}
     */
    this.options = options; // toJSON

    /**
     * Unique name within its namespace.
     * @type {string}
     */
    this.name = name;

    /**
     * Parent namespace.
     * @type {Namespace|null}
     */
    this.parent = null;

    /**
     * Whether already resolved or not.
     * @type {boolean}
     */
    this.resolved = false;

    /**
     * Comment text, if any.
     * @type {string|null}
     */
    this.comment = null;

    /**
     * Defining file name.
     * @type {string|null}
     */
    this.filename = null;
}

Object.defineProperties(ReflectionObject.prototype, {

    /**
     * Reference to the root namespace.
     * @name ReflectionObject#root
     * @type {Root}
     * @readonly
     */
    root: {
        get: function() {
            var ptr = this;
            while (ptr.parent !== null)
                ptr = ptr.parent;
            return ptr;
        }
    },

    /**
     * Full name including leading dot.
     * @name ReflectionObject#fullName
     * @type {string}
     * @readonly
     */
    fullName: {
        get: function() {
            var path = [ this.name ],
                ptr = this.parent;
            while (ptr) {
                path.unshift(ptr.name);
                ptr = ptr.parent;
            }
            return path.join(".");
        }
    }
});

/**
 * Converts this reflection object to its descriptor representation.
 * @returns {Object.<string,*>} Descriptor
 * @abstract
 */
ReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {
    throw Error(); // not implemented, shouldn't happen
};

/**
 * Called when this object is added to a parent.
 * @param {ReflectionObject} parent Parent added to
 * @returns {undefined}
 */
ReflectionObject.prototype.onAdd = function onAdd(parent) {
    if (this.parent && this.parent !== parent)
        this.parent.remove(this);
    this.parent = parent;
    this.resolved = false;
    var root = parent.root;
    if (root instanceof Root)
        root._handleAdd(this);
};

/**
 * Called when this object is removed from a parent.
 * @param {ReflectionObject} parent Parent removed from
 * @returns {undefined}
 */
ReflectionObject.prototype.onRemove = function onRemove(parent) {
    var root = parent.root;
    if (root instanceof Root)
        root._handleRemove(this);
    this.parent = null;
    this.resolved = false;
};

/**
 * Resolves this objects type references.
 * @returns {ReflectionObject} `this`
 */
ReflectionObject.prototype.resolve = function resolve() {
    if (this.resolved)
        return this;
    if (this.root instanceof Root)
        this.resolved = true; // only if part of a root
    return this;
};

/**
 * Gets an option value.
 * @param {string} name Option name
 * @returns {*} Option value or `undefined` if not set
 */
ReflectionObject.prototype.getOption = function getOption(name) {
    if (this.options)
        return this.options[name];
    return undefined;
};

/**
 * Sets an option.
 * @param {string} name Option name
 * @param {*} value Option value
 * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set
 * @returns {ReflectionObject} `this`
 */
ReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {
    if (!ifNotSet || !this.options || this.options[name] === undefined)
        (this.options || (this.options = {}))[name] = value;
    return this;
};

/**
 * Sets multiple options.
 * @param {Object.<string,*>} options Options to set
 * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set
 * @returns {ReflectionObject} `this`
 */
ReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {
    if (options)
        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)
            this.setOption(keys[i], options[keys[i]], ifNotSet);
    return this;
};

/**
 * Converts this instance to its string representation.
 * @returns {string} Class name[, space, full name]
 */
ReflectionObject.prototype.toString = function toString() {
    var className = this.constructor.className,
        fullName  = this.fullName;
    if (fullName.length)
        return className + " " + fullName;
    return className;
};

ReflectionObject._configure = function(Root_) {
    Root = Root_;
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Common type constants.
 * @namespace
 */
var types = exports;

var util = __webpack_require__(2);

var s = [
    "double",   // 0
    "float",    // 1
    "int32",    // 2
    "uint32",   // 3
    "sint32",   // 4
    "fixed32",  // 5
    "sfixed32", // 6
    "int64",    // 7
    "uint64",   // 8
    "sint64",   // 9
    "fixed64",  // 10
    "sfixed64", // 11
    "bool",     // 12
    "string",   // 13
    "bytes"     // 14
];

function bake(values, offset) {
    var i = 0, o = {};
    offset |= 0;
    while (i < values.length) o[s[i + offset]] = values[i++];
    return o;
}

/**
 * Basic type wire types.
 * @type {Object.<string,number>}
 * @const
 * @property {number} double=1 Fixed64 wire type
 * @property {number} float=5 Fixed32 wire type
 * @property {number} int32=0 Varint wire type
 * @property {number} uint32=0 Varint wire type
 * @property {number} sint32=0 Varint wire type
 * @property {number} fixed32=5 Fixed32 wire type
 * @property {number} sfixed32=5 Fixed32 wire type
 * @property {number} int64=0 Varint wire type
 * @property {number} uint64=0 Varint wire type
 * @property {number} sint64=0 Varint wire type
 * @property {number} fixed64=1 Fixed64 wire type
 * @property {number} sfixed64=1 Fixed64 wire type
 * @property {number} bool=0 Varint wire type
 * @property {number} string=2 Ldelim wire type
 * @property {number} bytes=2 Ldelim wire type
 */
types.basic = bake([
    /* double   */ 1,
    /* float    */ 5,
    /* int32    */ 0,
    /* uint32   */ 0,
    /* sint32   */ 0,
    /* fixed32  */ 5,
    /* sfixed32 */ 5,
    /* int64    */ 0,
    /* uint64   */ 0,
    /* sint64   */ 0,
    /* fixed64  */ 1,
    /* sfixed64 */ 1,
    /* bool     */ 0,
    /* string   */ 2,
    /* bytes    */ 2
]);

/**
 * Basic type defaults.
 * @type {Object.<string,*>}
 * @const
 * @property {number} double=0 Double default
 * @property {number} float=0 Float default
 * @property {number} int32=0 Int32 default
 * @property {number} uint32=0 Uint32 default
 * @property {number} sint32=0 Sint32 default
 * @property {number} fixed32=0 Fixed32 default
 * @property {number} sfixed32=0 Sfixed32 default
 * @property {number} int64=0 Int64 default
 * @property {number} uint64=0 Uint64 default
 * @property {number} sint64=0 Sint32 default
 * @property {number} fixed64=0 Fixed64 default
 * @property {number} sfixed64=0 Sfixed64 default
 * @property {boolean} bool=false Bool default
 * @property {string} string="" String default
 * @property {Array.<number>} bytes=Array(0) Bytes default
 * @property {null} message=null Message default
 */
types.defaults = bake([
    /* double   */ 0,
    /* float    */ 0,
    /* int32    */ 0,
    /* uint32   */ 0,
    /* sint32   */ 0,
    /* fixed32  */ 0,
    /* sfixed32 */ 0,
    /* int64    */ 0,
    /* uint64   */ 0,
    /* sint64   */ 0,
    /* fixed64  */ 0,
    /* sfixed64 */ 0,
    /* bool     */ false,
    /* string   */ "",
    /* bytes    */ util.emptyArray,
    /* message  */ null
]);

/**
 * Basic long type wire types.
 * @type {Object.<string,number>}
 * @const
 * @property {number} int64=0 Varint wire type
 * @property {number} uint64=0 Varint wire type
 * @property {number} sint64=0 Varint wire type
 * @property {number} fixed64=1 Fixed64 wire type
 * @property {number} sfixed64=1 Fixed64 wire type
 */
types.long = bake([
    /* int64    */ 0,
    /* uint64   */ 0,
    /* sint64   */ 0,
    /* fixed64  */ 1,
    /* sfixed64 */ 1
], 7);

/**
 * Allowed types for map keys with their associated wire type.
 * @type {Object.<string,number>}
 * @const
 * @property {number} int32=0 Varint wire type
 * @property {number} uint32=0 Varint wire type
 * @property {number} sint32=0 Varint wire type
 * @property {number} fixed32=5 Fixed32 wire type
 * @property {number} sfixed32=5 Fixed32 wire type
 * @property {number} int64=0 Varint wire type
 * @property {number} uint64=0 Varint wire type
 * @property {number} sint64=0 Varint wire type
 * @property {number} fixed64=1 Fixed64 wire type
 * @property {number} sfixed64=1 Fixed64 wire type
 * @property {number} bool=0 Varint wire type
 * @property {number} string=2 Ldelim wire type
 */
types.mapKey = bake([
    /* int32    */ 0,
    /* uint32   */ 0,
    /* sint32   */ 0,
    /* fixed32  */ 5,
    /* sfixed32 */ 5,
    /* int64    */ 0,
    /* uint64   */ 0,
    /* sint64   */ 0,
    /* fixed64  */ 1,
    /* sfixed64 */ 1,
    /* bool     */ 0,
    /* string   */ 2
], 2);

/**
 * Allowed types for packed repeated fields with their associated wire type.
 * @type {Object.<string,number>}
 * @const
 * @property {number} double=1 Fixed64 wire type
 * @property {number} float=5 Fixed32 wire type
 * @property {number} int32=0 Varint wire type
 * @property {number} uint32=0 Varint wire type
 * @property {number} sint32=0 Varint wire type
 * @property {number} fixed32=5 Fixed32 wire type
 * @property {number} sfixed32=5 Fixed32 wire type
 * @property {number} int64=0 Varint wire type
 * @property {number} uint64=0 Varint wire type
 * @property {number} sint64=0 Varint wire type
 * @property {number} fixed64=1 Fixed64 wire type
 * @property {number} sfixed64=1 Fixed64 wire type
 * @property {number} bool=0 Varint wire type
 */
types.packed = bake([
    /* double   */ 1,
    /* float    */ 5,
    /* int32    */ 0,
    /* uint32   */ 0,
    /* sint32   */ 0,
    /* fixed32  */ 5,
    /* sfixed32 */ 5,
    /* int64    */ 0,
    /* uint64   */ 0,
    /* sint64   */ 0,
    /* fixed64  */ 1,
    /* sfixed64 */ 1,
    /* bool     */ 0
]);


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.



/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var processNextTick = __webpack_require__(42);
/*</replacement>*/

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

var Readable = __webpack_require__(82);
var Writable = __webpack_require__(84);

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(12).Buffer

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = (bits & 0xffffffff) >>> 0
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.



/*<replacement>*/

var processNextTick = __webpack_require__(8).nextTick;
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

var Readable = __webpack_require__(89);
var Writable = __webpack_require__(91);

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  processNextTick(cb, err);
};

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = Namespace;

// extends ReflectionObject
var ReflectionObject = __webpack_require__(15);
((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = "Namespace";

var Enum     = __webpack_require__(5),
    Field    = __webpack_require__(10),
    util     = __webpack_require__(2);

var Type,    // cyclic
    Service; // "

/**
 * Constructs a new namespace instance.
 * @name Namespace
 * @classdesc Reflected namespace.
 * @extends NamespaceBase
 * @constructor
 * @param {string} name Namespace name
 * @param {Object.<string,*>} [options] Declared options
 */

/**
 * Constructs a namespace from JSON.
 * @memberof Namespace
 * @function
 * @param {string} name Namespace name
 * @param {Object.<string,*>} json JSON object
 * @returns {Namespace} Created namespace
 * @throws {TypeError} If arguments are invalid
 */
Namespace.fromJSON = function fromJSON(name, json) {
    return new Namespace(name, json.options).addJSON(json.nested);
};

/**
 * Converts an array of reflection objects to JSON.
 * @memberof Namespace
 * @param {ReflectionObject[]} array Object array
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty
 */
function arrayToJSON(array, toJSONOptions) {
    if (!(array && array.length))
        return undefined;
    var obj = {};
    for (var i = 0; i < array.length; ++i)
        obj[array[i].name] = array[i].toJSON(toJSONOptions);
    return obj;
}

Namespace.arrayToJSON = arrayToJSON;

/**
 * Tests if the specified id is reserved.
 * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names
 * @param {number} id Id to test
 * @returns {boolean} `true` if reserved, otherwise `false`
 */
Namespace.isReservedId = function isReservedId(reserved, id) {
    if (reserved)
        for (var i = 0; i < reserved.length; ++i)
            if (typeof reserved[i] !== "string" && reserved[i][0] <= id && reserved[i][1] >= id)
                return true;
    return false;
};

/**
 * Tests if the specified name is reserved.
 * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names
 * @param {string} name Name to test
 * @returns {boolean} `true` if reserved, otherwise `false`
 */
Namespace.isReservedName = function isReservedName(reserved, name) {
    if (reserved)
        for (var i = 0; i < reserved.length; ++i)
            if (reserved[i] === name)
                return true;
    return false;
};

/**
 * Not an actual constructor. Use {@link Namespace} instead.
 * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.
 * @exports NamespaceBase
 * @extends ReflectionObject
 * @abstract
 * @constructor
 * @param {string} name Namespace name
 * @param {Object.<string,*>} [options] Declared options
 * @see {@link Namespace}
 */
function Namespace(name, options) {
    ReflectionObject.call(this, name, options);

    /**
     * Nested objects by name.
     * @type {Object.<string,ReflectionObject>|undefined}
     */
    this.nested = undefined; // toJSON

    /**
     * Cached nested objects as an array.
     * @type {ReflectionObject[]|null}
     * @private
     */
    this._nestedArray = null;
}

function clearCache(namespace) {
    namespace._nestedArray = null;
    return namespace;
}

/**
 * Nested objects of this namespace as an array for iteration.
 * @name NamespaceBase#nestedArray
 * @type {ReflectionObject[]}
 * @readonly
 */
Object.defineProperty(Namespace.prototype, "nestedArray", {
    get: function() {
        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));
    }
});

/**
 * Namespace descriptor.
 * @interface INamespace
 * @property {Object.<string,*>} [options] Namespace options
 * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors
 */

/**
 * Any extension field descriptor.
 * @typedef AnyExtensionField
 * @type {IExtensionField|IExtensionMapField}
 */

/**
 * Any nested object descriptor.
 * @typedef AnyNestedObject
 * @type {IEnum|IType|IService|AnyExtensionField|INamespace}
 */
// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)

/**
 * Converts this namespace to a namespace descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {INamespace} Namespace descriptor
 */
Namespace.prototype.toJSON = function toJSON(toJSONOptions) {
    return util.toObject([
        "options" , this.options,
        "nested"  , arrayToJSON(this.nestedArray, toJSONOptions)
    ]);
};

/**
 * Adds nested objects to this namespace from nested object descriptors.
 * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors
 * @returns {Namespace} `this`
 */
Namespace.prototype.addJSON = function addJSON(nestedJson) {
    var ns = this;
    /* istanbul ignore else */
    if (nestedJson) {
        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {
            nested = nestedJson[names[i]];
            ns.add( // most to least likely
                ( nested.fields !== undefined
                ? Type.fromJSON
                : nested.values !== undefined
                ? Enum.fromJSON
                : nested.methods !== undefined
                ? Service.fromJSON
                : nested.id !== undefined
                ? Field.fromJSON
                : Namespace.fromJSON )(names[i], nested)
            );
        }
    }
    return this;
};

/**
 * Gets the nested object of the specified name.
 * @param {string} name Nested object name
 * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist
 */
Namespace.prototype.get = function get(name) {
    return this.nested && this.nested[name]
        || null;
};

/**
 * Gets the values of the nested {@link Enum|enum} of the specified name.
 * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.
 * @param {string} name Nested enum name
 * @returns {Object.<string,number>} Enum values
 * @throws {Error} If there is no such enum
 */
Namespace.prototype.getEnum = function getEnum(name) {
    if (this.nested && this.nested[name] instanceof Enum)
        return this.nested[name].values;
    throw Error("no such enum: " + name);
};

/**
 * Adds a nested object to this namespace.
 * @param {ReflectionObject} object Nested object to add
 * @returns {Namespace} `this`
 * @throws {TypeError} If arguments are invalid
 * @throws {Error} If there is already a nested object with this name
 */
Namespace.prototype.add = function add(object) {

    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))
        throw TypeError("object must be a valid nested object");

    if (!this.nested)
        this.nested = {};
    else {
        var prev = this.get(object.name);
        if (prev) {
            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {
                // replace plain namespace but keep existing nested elements and options
                var nested = prev.nestedArray;
                for (var i = 0; i < nested.length; ++i)
                    object.add(nested[i]);
                this.remove(prev);
                if (!this.nested)
                    this.nested = {};
                object.setOptions(prev.options, true);

            } else
                throw Error("duplicate name '" + object.name + "' in " + this);
        }
    }
    this.nested[object.name] = object;
    object.onAdd(this);
    return clearCache(this);
};

/**
 * Removes a nested object from this namespace.
 * @param {ReflectionObject} object Nested object to remove
 * @returns {Namespace} `this`
 * @throws {TypeError} If arguments are invalid
 * @throws {Error} If `object` is not a member of this namespace
 */
Namespace.prototype.remove = function remove(object) {

    if (!(object instanceof ReflectionObject))
        throw TypeError("object must be a ReflectionObject");
    if (object.parent !== this)
        throw Error(object + " is not a member of " + this);

    delete this.nested[object.name];
    if (!Object.keys(this.nested).length)
        this.nested = undefined;

    object.onRemove(this);
    return clearCache(this);
};

/**
 * Defines additial namespaces within this one if not yet existing.
 * @param {string|string[]} path Path to create
 * @param {*} [json] Nested types to create from JSON
 * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty
 */
Namespace.prototype.define = function define(path, json) {

    if (util.isString(path))
        path = path.split(".");
    else if (!Array.isArray(path))
        throw TypeError("illegal path");
    if (path && path.length && path[0] === "")
        throw Error("path must be relative");

    var ptr = this;
    while (path.length > 0) {
        var part = path.shift();
        if (ptr.nested && ptr.nested[part]) {
            ptr = ptr.nested[part];
            if (!(ptr instanceof Namespace))
                throw Error("path conflicts with non-namespace objects");
        } else
            ptr.add(ptr = new Namespace(part));
    }
    if (json)
        ptr.addJSON(json);
    return ptr;
};

/**
 * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.
 * @returns {Namespace} `this`
 */
Namespace.prototype.resolveAll = function resolveAll() {
    var nested = this.nestedArray, i = 0;
    while (i < nested.length)
        if (nested[i] instanceof Namespace)
            nested[i++].resolveAll();
        else
            nested[i++].resolve();
    return this.resolve();
};

/**
 * Recursively looks up the reflection object matching the specified path in the scope of this namespace.
 * @param {string|string[]} path Path to look up
 * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.
 * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked
 * @returns {ReflectionObject|null} Looked up object or `null` if none could be found
 */
Namespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {

    /* istanbul ignore next */
    if (typeof filterTypes === "boolean") {
        parentAlreadyChecked = filterTypes;
        filterTypes = undefined;
    } else if (filterTypes && !Array.isArray(filterTypes))
        filterTypes = [ filterTypes ];

    if (util.isString(path) && path.length) {
        if (path === ".")
            return this.root;
        path = path.split(".");
    } else if (!path.length)
        return this;

    // Start at root if path is absolute
    if (path[0] === "")
        return this.root.lookup(path.slice(1), filterTypes);

    // Test if the first part matches any nested object, and if so, traverse if path contains more
    var found = this.get(path[0]);
    if (found) {
        if (path.length === 1) {
            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)
                return found;
        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))
            return found;

    // Otherwise try each nested namespace
    } else
        for (var i = 0; i < this.nestedArray.length; ++i)
            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))
                return found;

    // If there hasn't been a match, try again at the parent
    if (this.parent === null || parentAlreadyChecked)
        return null;
    return this.parent.lookup(path, filterTypes);
};

/**
 * Looks up the reflection object at the specified path, relative to this namespace.
 * @name NamespaceBase#lookup
 * @function
 * @param {string|string[]} path Path to look up
 * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked
 * @returns {ReflectionObject|null} Looked up object or `null` if none could be found
 * @variation 2
 */
// lookup(path: string, [parentAlreadyChecked: boolean])

/**
 * Looks up the {@link Type|type} at the specified path, relative to this namespace.
 * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.
 * @param {string|string[]} path Path to look up
 * @returns {Type} Looked up type
 * @throws {Error} If `path` does not point to a type
 */
Namespace.prototype.lookupType = function lookupType(path) {
    var found = this.lookup(path, [ Type ]);
    if (!found)
        throw Error("no such type: " + path);
    return found;
};

/**
 * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.
 * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.
 * @param {string|string[]} path Path to look up
 * @returns {Enum} Looked up enum
 * @throws {Error} If `path` does not point to an enum
 */
Namespace.prototype.lookupEnum = function lookupEnum(path) {
    var found = this.lookup(path, [ Enum ]);
    if (!found)
        throw Error("no such Enum '" + path + "' in " + this);
    return found;
};

/**
 * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.
 * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.
 * @param {string|string[]} path Path to look up
 * @returns {Type} Looked up type or enum
 * @throws {Error} If `path` does not point to a type or enum
 */
Namespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {
    var found = this.lookup(path, [ Type, Enum ]);
    if (!found)
        throw Error("no such Type or Enum '" + path + "' in " + this);
    return found;
};

/**
 * Looks up the {@link Service|service} at the specified path, relative to this namespace.
 * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.
 * @param {string|string[]} path Path to look up
 * @returns {Service} Looked up service
 * @throws {Error} If `path` does not point to a service
 */
Namespace.prototype.lookupService = function lookupService(path) {
    var found = this.lookup(path, [ Service ]);
    if (!found)
        throw Error("no such Service '" + path + "' in " + this);
    return found;
};

Namespace._configure = function(Type_, Service_) {
    Type    = Type_;
    Service = Service_;
};


/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = require("url");

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var buffer = __webpack_require__(13);
var Buffer = buffer.Buffer;
var SlowBuffer = buffer.SlowBuffer;
var MAX_LEN = buffer.kMaxLength || 2147483647;
exports.alloc = function alloc(size, fill, encoding) {
  if (typeof Buffer.alloc === 'function') {
    return Buffer.alloc(size, fill, encoding);
  }
  if (typeof encoding === 'number') {
    throw new TypeError('encoding must not be number');
  }
  if (typeof size !== 'number') {
    throw new TypeError('size must be a number');
  }
  if (size > MAX_LEN) {
    throw new RangeError('size is too large');
  }
  var enc = encoding;
  var _fill = fill;
  if (_fill === undefined) {
    enc = undefined;
    _fill = 0;
  }
  var buf = new Buffer(size);
  if (typeof _fill === 'string') {
    var fillBuf = new Buffer(_fill, enc);
    var flen = fillBuf.length;
    var i = -1;
    while (++i < size) {
      buf[i] = fillBuf[i % flen];
    }
  } else {
    buf.fill(_fill);
  }
  return buf;
}
exports.allocUnsafe = function allocUnsafe(size) {
  if (typeof Buffer.allocUnsafe === 'function') {
    return Buffer.allocUnsafe(size);
  }
  if (typeof size !== 'number') {
    throw new TypeError('size must be a number');
  }
  if (size > MAX_LEN) {
    throw new RangeError('size is too large');
  }
  return new Buffer(size);
}
exports.from = function from(value, encodingOrOffset, length) {
  if (typeof Buffer.from === 'function' && (!global.Uint8Array || Uint8Array.from !== Buffer.from)) {
    return Buffer.from(value, encodingOrOffset, length);
  }
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number');
  }
  if (typeof value === 'string') {
    return new Buffer(value, encodingOrOffset);
  }
  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    var offset = encodingOrOffset;
    if (arguments.length === 1) {
      return new Buffer(value);
    }
    if (typeof offset === 'undefined') {
      offset = 0;
    }
    var len = length;
    if (typeof len === 'undefined') {
      len = value.byteLength - offset;
    }
    if (offset >= value.byteLength) {
      throw new RangeError('\'offset\' is out of bounds');
    }
    if (len > value.byteLength - offset) {
      throw new RangeError('\'length\' is out of bounds');
    }
    return new Buffer(value.slice(offset, offset + len));
  }
  if (Buffer.isBuffer(value)) {
    var out = new Buffer(value.length);
    value.copy(out, 0, 0, value.length);
    return out;
  }
  if (value) {
    if (Array.isArray(value) || (typeof ArrayBuffer !== 'undefined' && value.buffer instanceof ArrayBuffer) || 'length' in value) {
      return new Buffer(value);
    }
    if (value.type === 'Buffer' && Array.isArray(value.data)) {
      return new Buffer(value.data);
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ' + 'ArrayBuffer, Array, or array-like object.');
}
exports.allocUnsafeSlow = function allocUnsafeSlow(size) {
  if (typeof Buffer.allocUnsafeSlow === 'function') {
    return Buffer.allocUnsafeSlow(size);
  }
  if (typeof size !== 'number') {
    throw new TypeError('size must be a number');
  }
  if (size >= MAX_LEN) {
    throw new RangeError('size is too large');
  }
  return new SlowBuffer(size);
}


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = OneOf;

// extends ReflectionObject
var ReflectionObject = __webpack_require__(15);
((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = "OneOf";

var Field = __webpack_require__(10),
    util  = __webpack_require__(2);

/**
 * Constructs a new oneof instance.
 * @classdesc Reflected oneof.
 * @extends ReflectionObject
 * @constructor
 * @param {string} name Oneof name
 * @param {string[]|Object.<string,*>} [fieldNames] Field names
 * @param {Object.<string,*>} [options] Declared options
 * @param {string} [comment] Comment associated with this field
 */
function OneOf(name, fieldNames, options, comment) {
    if (!Array.isArray(fieldNames)) {
        options = fieldNames;
        fieldNames = undefined;
    }
    ReflectionObject.call(this, name, options);

    /* istanbul ignore if */
    if (!(fieldNames === undefined || Array.isArray(fieldNames)))
        throw TypeError("fieldNames must be an Array");

    /**
     * Field names that belong to this oneof.
     * @type {string[]}
     */
    this.oneof = fieldNames || []; // toJSON, marker

    /**
     * Fields that belong to this oneof as an array for iteration.
     * @type {Field[]}
     * @readonly
     */
    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent

    /**
     * Comment for this field.
     * @type {string|null}
     */
    this.comment = comment;
}

/**
 * Oneof descriptor.
 * @interface IOneOf
 * @property {Array.<string>} oneof Oneof field names
 * @property {Object.<string,*>} [options] Oneof options
 */

/**
 * Constructs a oneof from a oneof descriptor.
 * @param {string} name Oneof name
 * @param {IOneOf} json Oneof descriptor
 * @returns {OneOf} Created oneof
 * @throws {TypeError} If arguments are invalid
 */
OneOf.fromJSON = function fromJSON(name, json) {
    return new OneOf(name, json.oneof, json.options, json.comment);
};

/**
 * Converts this oneof to a oneof descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {IOneOf} Oneof descriptor
 */
OneOf.prototype.toJSON = function toJSON(toJSONOptions) {
    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;
    return util.toObject([
        "options" , this.options,
        "oneof"   , this.oneof,
        "comment" , keepComments ? this.comment : undefined
    ]);
};

/**
 * Adds the fields of the specified oneof to the parent if not already done so.
 * @param {OneOf} oneof The oneof
 * @returns {undefined}
 * @inner
 * @ignore
 */
function addFieldsToParent(oneof) {
    if (oneof.parent)
        for (var i = 0; i < oneof.fieldsArray.length; ++i)
            if (!oneof.fieldsArray[i].parent)
                oneof.parent.add(oneof.fieldsArray[i]);
}

/**
 * Adds a field to this oneof and removes it from its current parent, if any.
 * @param {Field} field Field to add
 * @returns {OneOf} `this`
 */
OneOf.prototype.add = function add(field) {

    /* istanbul ignore if */
    if (!(field instanceof Field))
        throw TypeError("field must be a Field");

    if (field.parent && field.parent !== this.parent)
        field.parent.remove(field);
    this.oneof.push(field.name);
    this.fieldsArray.push(field);
    field.partOf = this; // field.parent remains null
    addFieldsToParent(this);
    return this;
};

/**
 * Removes a field from this oneof and puts it back to the oneof's parent.
 * @param {Field} field Field to remove
 * @returns {OneOf} `this`
 */
OneOf.prototype.remove = function remove(field) {

    /* istanbul ignore if */
    if (!(field instanceof Field))
        throw TypeError("field must be a Field");

    var index = this.fieldsArray.indexOf(field);

    /* istanbul ignore if */
    if (index < 0)
        throw Error(field + " is not a member of " + this);

    this.fieldsArray.splice(index, 1);
    index = this.oneof.indexOf(field.name);

    /* istanbul ignore else */
    if (index > -1) // theoretical
        this.oneof.splice(index, 1);

    field.partOf = null;
    return this;
};

/**
 * @override
 */
OneOf.prototype.onAdd = function onAdd(parent) {
    ReflectionObject.prototype.onAdd.call(this, parent);
    var self = this;
    // Collect present fields
    for (var i = 0; i < this.oneof.length; ++i) {
        var field = parent.get(this.oneof[i]);
        if (field && !field.partOf) {
            field.partOf = self;
            self.fieldsArray.push(field);
        }
    }
    // Add not yet present fields
    addFieldsToParent(this);
};

/**
 * @override
 */
OneOf.prototype.onRemove = function onRemove(parent) {
    for (var i = 0, field; i < this.fieldsArray.length; ++i)
        if ((field = this.fieldsArray[i]).parent)
            field.parent.remove(field);
    ReflectionObject.prototype.onRemove.call(this, parent);
};

/**
 * Decorator function as returned by {@link OneOf.d} (TypeScript).
 * @typedef OneOfDecorator
 * @type {function}
 * @param {Object} prototype Target prototype
 * @param {string} oneofName OneOf name
 * @returns {undefined}
 */

/**
 * OneOf decorator (TypeScript).
 * @function
 * @param {...string} fieldNames Field names
 * @returns {OneOfDecorator} Decorator function
 * @template T extends string
 */
OneOf.d = function decorateOneOf() {
    var fieldNames = new Array(arguments.length),
        index = 0;
    while (index < arguments.length)
        fieldNames[index] = arguments[index++];
    return function oneOfDecorator(prototype, oneofName) {
        util.decorateType(prototype.constructor)
            .add(new OneOf(oneofName, fieldNames));
        Object.defineProperty(prototype, oneofName, {
            get: util.oneOfGetter(fieldNames),
            set: util.oneOfSetter(fieldNames)
        });
    };
};


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Buffer = __webpack_require__(11).Buffer;

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return -1;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// UTF-8 replacement characters ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd'.repeat(p);
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd'.repeat(p + 1);
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd'.repeat(p + 2);
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character for each buffered byte of a (partial)
// character needs to be added to the output.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd'.repeat(this.lastTotal - this.lastNeed);
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {


var zlib = __webpack_require__(103);

var AVAILABLE_WINDOW_BITS = [8, 9, 10, 11, 12, 13, 14, 15];
var DEFAULT_WINDOW_BITS = 15;
var DEFAULT_MEM_LEVEL = 8;

PerMessageDeflate.extensionName = 'permessage-deflate';

/**
 * Per-message Compression Extensions implementation
 */

function PerMessageDeflate(options, isServer,maxPayload) {
  if (this instanceof PerMessageDeflate === false) {
    throw new TypeError("Classes can't be function-called");
  }

  this._options = options || {};
  this._isServer = !!isServer;
  this._inflate = null;
  this._deflate = null;
  this.params = null;
  this._maxPayload = maxPayload || 0;
}

/**
 * Create extension parameters offer
 *
 * @api public
 */

PerMessageDeflate.prototype.offer = function() {
  var params = {};
  if (this._options.serverNoContextTakeover) {
    params.server_no_context_takeover = true;
  }
  if (this._options.clientNoContextTakeover) {
    params.client_no_context_takeover = true;
  }
  if (this._options.serverMaxWindowBits) {
    params.server_max_window_bits = this._options.serverMaxWindowBits;
  }
  if (this._options.clientMaxWindowBits) {
    params.client_max_window_bits = this._options.clientMaxWindowBits;
  } else if (this._options.clientMaxWindowBits == null) {
    params.client_max_window_bits = true;
  }
  return params;
};

/**
 * Accept extension offer
 *
 * @api public
 */

PerMessageDeflate.prototype.accept = function(paramsList) {
  paramsList = this.normalizeParams(paramsList);

  var params;
  if (this._isServer) {
    params = this.acceptAsServer(paramsList);
  } else {
    params = this.acceptAsClient(paramsList);
  }

  this.params = params;
  return params;
};

/**
 * Releases all resources used by the extension
 *
 * @api public
 */

PerMessageDeflate.prototype.cleanup = function() {
  if (this._inflate) {
    if (this._inflate.writeInProgress) {
      this._inflate.pendingClose = true;
    } else {
      if (this._inflate.close) this._inflate.close();
      this._inflate = null;
    }
  }
  if (this._deflate) {
    if (this._deflate.writeInProgress) {
      this._deflate.pendingClose = true;
    } else {
      if (this._deflate.close) this._deflate.close();
      this._deflate = null;
    }
  }
};

/**
 * Accept extension offer from client
 *
 * @api private
 */

PerMessageDeflate.prototype.acceptAsServer = function(paramsList) {
  var accepted = {};
  var result = paramsList.some(function(params) {
    accepted = {};
    if (this._options.serverNoContextTakeover === false && params.server_no_context_takeover) {
      return;
    }
    if (this._options.serverMaxWindowBits === false && params.server_max_window_bits) {
      return;
    }
    if (typeof this._options.serverMaxWindowBits === 'number' &&
        typeof params.server_max_window_bits === 'number' &&
        this._options.serverMaxWindowBits > params.server_max_window_bits) {
      return;
    }
    if (typeof this._options.clientMaxWindowBits === 'number' && !params.client_max_window_bits) {
      return;
    }

    if (this._options.serverNoContextTakeover || params.server_no_context_takeover) {
      accepted.server_no_context_takeover = true;
    }
    if (this._options.clientNoContextTakeover) {
      accepted.client_no_context_takeover = true;
    }
    if (this._options.clientNoContextTakeover !== false && params.client_no_context_takeover) {
      accepted.client_no_context_takeover = true;
    }
    if (typeof this._options.serverMaxWindowBits === 'number') {
      accepted.server_max_window_bits = this._options.serverMaxWindowBits;
    } else if (typeof params.server_max_window_bits === 'number') {
      accepted.server_max_window_bits = params.server_max_window_bits;
    }
    if (typeof this._options.clientMaxWindowBits === 'number') {
      accepted.client_max_window_bits = this._options.clientMaxWindowBits;
    } else if (this._options.clientMaxWindowBits !== false && typeof params.client_max_window_bits === 'number') {
      accepted.client_max_window_bits = params.client_max_window_bits;
    }
    return true;
  }, this);

  if (!result) {
    throw new Error('Doesn\'t support the offered configuration');
  }

  return accepted;
};

/**
 * Accept extension response from server
 *
 * @api privaye
 */

PerMessageDeflate.prototype.acceptAsClient = function(paramsList) {
  var params = paramsList[0];
  if (this._options.clientNoContextTakeover != null) {
    if (this._options.clientNoContextTakeover === false && params.client_no_context_takeover) {
      throw new Error('Invalid value for "client_no_context_takeover"');
    }
  }
  if (this._options.clientMaxWindowBits != null) {
    if (this._options.clientMaxWindowBits === false && params.client_max_window_bits) {
      throw new Error('Invalid value for "client_max_window_bits"');
    }
    if (typeof this._options.clientMaxWindowBits === 'number' &&
        (!params.client_max_window_bits || params.client_max_window_bits > this._options.clientMaxWindowBits)) {
      throw new Error('Invalid value for "client_max_window_bits"');
    }
  }
  return params;
};

/**
 * Normalize extensions parameters
 *
 * @api private
 */

PerMessageDeflate.prototype.normalizeParams = function(paramsList) {
  return paramsList.map(function(params) {
    Object.keys(params).forEach(function(key) {
      var value = params[key];
      if (value.length > 1) {
        throw new Error('Multiple extension parameters for ' + key);
      }

      value = value[0];

      switch (key) {
      case 'server_no_context_takeover':
      case 'client_no_context_takeover':
        if (value !== true) {
          throw new Error('invalid extension parameter value for ' + key + ' (' + value + ')');
        }
        params[key] = true;
        break;
      case 'server_max_window_bits':
      case 'client_max_window_bits':
        if (typeof value === 'string') {
          value = parseInt(value, 10);
          if (!~AVAILABLE_WINDOW_BITS.indexOf(value)) {
            throw new Error('invalid extension parameter value for ' + key + ' (' + value + ')');
          }
        }
        if (!this._isServer && value === true) {
          throw new Error('Missing extension parameter value for ' + key);
        }
        params[key] = value;
        break;
      default:
        throw new Error('Not defined extension parameter (' + key + ')');
      }
    }, this);
    return params;
  }, this);
};

/**
 * Decompress message
 *
 * @api public
 */

PerMessageDeflate.prototype.decompress = function (data, fin, callback) {
  var endpoint = this._isServer ? 'client' : 'server';

  if (!this._inflate) {
    var maxWindowBits = this.params[endpoint + '_max_window_bits'];
    this._inflate = zlib.createInflateRaw({
      windowBits: 'number' === typeof maxWindowBits ? maxWindowBits : DEFAULT_WINDOW_BITS
    });
  }
  this._inflate.writeInProgress = true;

  var self = this;
  var buffers = [];
  var cumulativeBufferLength=0;

  this._inflate.on('error', onError).on('data', onData);
  this._inflate.write(data);
  if (fin) {
    this._inflate.write(new Buffer([0x00, 0x00, 0xff, 0xff]));
  }
  this._inflate.flush(function() {
    cleanup();
    callback(null, Buffer.concat(buffers));
  });

  function onError(err) {
    cleanup();
    callback(err);
  }

  function onData(data) {
      if(self._maxPayload!==undefined && self._maxPayload!==null && self._maxPayload>0){
          cumulativeBufferLength+=data.length;
          if(cumulativeBufferLength>self._maxPayload){
            buffers=[];
            cleanup();
            var err={type:1009};
            callback(err);
            return;
          }
      }
      buffers.push(data);
  }

  function cleanup() {
    if (!self._inflate) return;
    self._inflate.removeListener('error', onError);
    self._inflate.removeListener('data', onData);
    self._inflate.writeInProgress = false;
    if ((fin && self.params[endpoint + '_no_context_takeover']) || self._inflate.pendingClose) {
      if (self._inflate.close) self._inflate.close();
      self._inflate = null;
    }
  }
};

/**
 * Compress message
 *
 * @api public
 */

PerMessageDeflate.prototype.compress = function (data, fin, callback) {
  var endpoint = this._isServer ? 'server' : 'client';

  if (!this._deflate) {
    var maxWindowBits = this.params[endpoint + '_max_window_bits'];
    this._deflate = zlib.createDeflateRaw({
      flush: zlib.Z_SYNC_FLUSH,
      windowBits: 'number' === typeof maxWindowBits ? maxWindowBits : DEFAULT_WINDOW_BITS,
      memLevel: this._options.memLevel || DEFAULT_MEM_LEVEL
    });
  }
  this._deflate.writeInProgress = true;

  var self = this;
  var buffers = [];

  this._deflate.on('error', onError).on('data', onData);
  this._deflate.write(data);
  this._deflate.flush(function() {
    cleanup();
    var data = Buffer.concat(buffers);
    if (fin) {
      data = data.slice(0, data.length - 4);
    }
    callback(null, data);
  });

  function onError(err) {
    cleanup();
    callback(err);
  }

  function onData(data) {
    buffers.push(data);
  }

  function cleanup() {
    if (!self._deflate) return;
    self._deflate.removeListener('error', onError);
    self._deflate.removeListener('data', onData);
    self._deflate.writeInProgress = false;
    if ((fin && self.params[endpoint + '_no_context_takeover']) || self._deflate.pendingClose) {
      if (self._deflate.close) self._deflate.close();
      self._deflate = null;
    }
  }
};

module.exports = PerMessageDeflate;


/***/ }),
/* 26 */
/***/ (function(module, exports) {

module.exports = extend

var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
    var target = {}

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i]

        for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
                target[key] = source[key]
            }
        }
    }

    return target
}


/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = require("crypto");

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),
/* 29 */
/***/ (function(module, exports) {

module.exports = require("http");

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.weave = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.loadJSON = loadJSON;
exports.loadModels = loadModels;
exports.loadOneModel = loadOneModel;
exports.pbToObj = pbToObj;
exports.objToPB = objToPB;

var _protobufjs = __webpack_require__(73);

var _protobufjs2 = _interopRequireDefault(_protobufjs);

var _path = __webpack_require__(46);

var _path2 = _interopRequireDefault(_path);

var _weave = __webpack_require__(205);

var _weave2 = _interopRequireDefault(_weave);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function loadJSON(json) {
    var root = _protobufjs2.default.Root.fromJSON(json);
    var out = {};
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        for (var _iterator = Object.entries(root.nested)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var _step$value = _slicedToArray(_step.value, 2),
                ns = _step$value[0],
                space = _step$value[1];

            var sub = {};
            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
                for (var _iterator2 = Object.entries(space.nested)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var _step2$value = _slicedToArray(_step2.value, 2),
                        ts = _step2$value[0],
                        type = _step2$value[1];

                    sub[ts] = type;
                }
            } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                    }
                } finally {
                    if (_didIteratorError2) {
                        throw _iteratorError2;
                    }
                }
            }

            out[ns] = sub;
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }

    return out;
}

// this contains all model info of weave
var weave = exports.weave = loadJSON(_weave2.default);

// loadModels imports a file with the given packageName
// and accepts a list of strings (messages)
//
// returns an object with a protobufjs.Message class for each message listed
function loadModels(filepath, packageName, messages) {
    return _protobufjs2.default.load(filepath).then(function (root) {
        var res = {};
        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
            for (var _iterator3 = messages[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                var msg = _step3.value;

                var name = packageName + "." + msg;
                res[msg] = root.lookupType(name);
            }
        } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
        } finally {
            try {
                if (!_iteratorNormalCompletion3 && _iterator3.return) {
                    _iterator3.return();
                }
            } finally {
                if (_didIteratorError3) {
                    throw _iteratorError3;
                }
            }
        }

        return res;
    });
}

async function loadOneModel(filepath, packageName, msg) {
    // use loadModels to make sure it is better covered in test cases...
    var models = await loadModels(filepath, packageName, [msg]);
    return models[msg];
}

// reads in a buffer or hex encoded string and parses it as a protobuf object
function pbToObj(msgClass, buffer, opts) {
    if (opts === undefined) {
        opts = { bytes: String, longs: Number };
    }
    if (typeof buffer === 'string') {
        buffer = Buffer.from(buffer, 'hex');
    }
    var decodedMessage = msgClass.decode(buffer);
    return msgClass.toObject(decodedMessage, opts);
}

function objToPB(msgClass, obj) {
    var err = msgClass.verify(obj);
    if (err) throw Error(err);

    var buffer = msgClass.encode(obj).finish();
    return buffer;
}

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(54);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);
var normalizeHeaderName = __webpack_require__(130);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(118);
  } else if (typeof process !== 'undefined') {
    // For node use HTTP adapter
    adapter = __webpack_require__(117);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;


/***/ }),
/* 33 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = MapField;

// extends Field
var Field = __webpack_require__(10);
((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = "MapField";

var types   = __webpack_require__(16),
    util    = __webpack_require__(2);

/**
 * Constructs a new map field instance.
 * @classdesc Reflected map field.
 * @extends FieldBase
 * @constructor
 * @param {string} name Unique name within its namespace
 * @param {number} id Unique id within its namespace
 * @param {string} keyType Key type
 * @param {string} type Value type
 * @param {Object.<string,*>} [options] Declared options
 * @param {string} [comment] Comment associated with this field
 */
function MapField(name, id, keyType, type, options, comment) {
    Field.call(this, name, id, type, undefined, undefined, options, comment);

    /* istanbul ignore if */
    if (!util.isString(keyType))
        throw TypeError("keyType must be a string");

    /**
     * Key type.
     * @type {string}
     */
    this.keyType = keyType; // toJSON, marker

    /**
     * Resolved key type if not a basic type.
     * @type {ReflectionObject|null}
     */
    this.resolvedKeyType = null;

    // Overrides Field#map
    this.map = true;
}

/**
 * Map field descriptor.
 * @interface IMapField
 * @extends {IField}
 * @property {string} keyType Key type
 */

/**
 * Extension map field descriptor.
 * @interface IExtensionMapField
 * @extends IMapField
 * @property {string} extend Extended type
 */

/**
 * Constructs a map field from a map field descriptor.
 * @param {string} name Field name
 * @param {IMapField} json Map field descriptor
 * @returns {MapField} Created map field
 * @throws {TypeError} If arguments are invalid
 */
MapField.fromJSON = function fromJSON(name, json) {
    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);
};

/**
 * Converts this map field to a map field descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {IMapField} Map field descriptor
 */
MapField.prototype.toJSON = function toJSON(toJSONOptions) {
    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;
    return util.toObject([
        "keyType" , this.keyType,
        "type"    , this.type,
        "id"      , this.id,
        "extend"  , this.extend,
        "options" , this.options,
        "comment" , keepComments ? this.comment : undefined
    ]);
};

/**
 * @override
 */
MapField.prototype.resolve = function resolve() {
    if (this.resolved)
        return this;

    // Besides a value type, map fields have a key type that may be "any scalar type except for floating point types and bytes"
    if (types.mapKey[this.keyType] === undefined)
        throw Error("invalid key type: " + this.keyType);

    return Field.prototype.resolve.call(this);
};

/**
 * Map field decorator (TypeScript).
 * @name MapField.d
 * @function
 * @param {number} fieldId Field id
 * @param {"int32"|"uint32"|"sint32"|"fixed32"|"sfixed32"|"int64"|"uint64"|"sint64"|"fixed64"|"sfixed64"|"bool"|"string"} fieldKeyType Field key type
 * @param {"double"|"float"|"int32"|"uint32"|"sint32"|"fixed32"|"sfixed32"|"int64"|"uint64"|"sint64"|"fixed64"|"sfixed64"|"bool"|"string"|"bytes"|Object|Constructor<{}>} fieldValueType Field value type
 * @returns {FieldDecorator} Decorator function
 * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }
 */
MapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {

    // submessage value: decorate the submessage and use its name as the type
    if (typeof fieldValueType === "function")
        fieldValueType = util.decorateType(fieldValueType).name;

    // enum reference value: create a reflected copy of the enum and keep reuseing it
    else if (fieldValueType && typeof fieldValueType === "object")
        fieldValueType = util.decorateEnum(fieldValueType).name;

    return function mapFieldDecorator(prototype, fieldName) {
        util.decorateType(prototype.constructor)
            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));
    };
};


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = Message;

var util = __webpack_require__(6);

/**
 * Constructs a new message instance.
 * @classdesc Abstract runtime message.
 * @constructor
 * @param {Properties<T>} [properties] Properties to set
 * @template T extends object
 */
function Message(properties) {
    // not used internally
    if (properties)
        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
            this[keys[i]] = properties[keys[i]];
}

/**
 * Reference to the reflected type.
 * @name Message.$type
 * @type {Type}
 * @readonly
 */

/**
 * Reference to the reflected type.
 * @name Message#$type
 * @type {Type}
 * @readonly
 */

/*eslint-disable valid-jsdoc*/

/**
 * Creates a new message of this type using the specified properties.
 * @param {Object.<string,*>} [properties] Properties to set
 * @returns {Message<T>} Message instance
 * @template T extends Message<T>
 * @this Constructor<T>
 */
Message.create = function create(properties) {
    return this.$type.create(properties);
};

/**
 * Encodes a message of this type.
 * @param {T|Object.<string,*>} message Message to encode
 * @param {Writer} [writer] Writer to use
 * @returns {Writer} Writer
 * @template T extends Message<T>
 * @this Constructor<T>
 */
Message.encode = function encode(message, writer) {
    return this.$type.encode(message, writer);
};

/**
 * Encodes a message of this type preceeded by its length as a varint.
 * @param {T|Object.<string,*>} message Message to encode
 * @param {Writer} [writer] Writer to use
 * @returns {Writer} Writer
 * @template T extends Message<T>
 * @this Constructor<T>
 */
Message.encodeDelimited = function encodeDelimited(message, writer) {
    return this.$type.encodeDelimited(message, writer);
};

/**
 * Decodes a message of this type.
 * @name Message.decode
 * @function
 * @param {Reader|Uint8Array} reader Reader or buffer to decode
 * @returns {T} Decoded message
 * @template T extends Message<T>
 * @this Constructor<T>
 */
Message.decode = function decode(reader) {
    return this.$type.decode(reader);
};

/**
 * Decodes a message of this type preceeded by its length as a varint.
 * @name Message.decodeDelimited
 * @function
 * @param {Reader|Uint8Array} reader Reader or buffer to decode
 * @returns {T} Decoded message
 * @template T extends Message<T>
 * @this Constructor<T>
 */
Message.decodeDelimited = function decodeDelimited(reader) {
    return this.$type.decodeDelimited(reader);
};

/**
 * Verifies a message of this type.
 * @name Message.verify
 * @function
 * @param {Object.<string,*>} message Plain object to verify
 * @returns {string|null} `null` if valid, otherwise the reason why it is not
 */
Message.verify = function verify(message) {
    return this.$type.verify(message);
};

/**
 * Creates a new message of this type from a plain object. Also converts values to their respective internal types.
 * @param {Object.<string,*>} object Plain object
 * @returns {T} Message instance
 * @template T extends Message<T>
 * @this Constructor<T>
 */
Message.fromObject = function fromObject(object) {
    return this.$type.fromObject(object);
};

/**
 * Creates a plain object from a message of this type. Also converts values to other types if specified.
 * @param {T} message Message instance
 * @param {IConversionOptions} [options] Conversion options
 * @returns {Object.<string,*>} Plain object
 * @template T extends Message<T>
 * @this Constructor<T>
 */
Message.toObject = function toObject(message, options) {
    return this.$type.toObject(message, options);
};

/**
 * Converts this message to JSON.
 * @returns {Object.<string,*>} JSON object
 */
Message.prototype.toJSON = function toJSON() {
    return this.$type.toObject(this, util.toJSONOptions);
};

/*eslint-enable valid-jsdoc*/

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = Method;

// extends ReflectionObject
var ReflectionObject = __webpack_require__(15);
((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = "Method";

var util = __webpack_require__(2);

/**
 * Constructs a new service method instance.
 * @classdesc Reflected service method.
 * @extends ReflectionObject
 * @constructor
 * @param {string} name Method name
 * @param {string|undefined} type Method type, usually `"rpc"`
 * @param {string} requestType Request message type
 * @param {string} responseType Response message type
 * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed
 * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed
 * @param {Object.<string,*>} [options] Declared options
 * @param {string} [comment] The comment for this method
 */
function Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {

    /* istanbul ignore next */
    if (util.isObject(requestStream)) {
        options = requestStream;
        requestStream = responseStream = undefined;
    } else if (util.isObject(responseStream)) {
        options = responseStream;
        responseStream = undefined;
    }

    /* istanbul ignore if */
    if (!(type === undefined || util.isString(type)))
        throw TypeError("type must be a string");

    /* istanbul ignore if */
    if (!util.isString(requestType))
        throw TypeError("requestType must be a string");

    /* istanbul ignore if */
    if (!util.isString(responseType))
        throw TypeError("responseType must be a string");

    ReflectionObject.call(this, name, options);

    /**
     * Method type.
     * @type {string}
     */
    this.type = type || "rpc"; // toJSON

    /**
     * Request type.
     * @type {string}
     */
    this.requestType = requestType; // toJSON, marker

    /**
     * Whether requests are streamed or not.
     * @type {boolean|undefined}
     */
    this.requestStream = requestStream ? true : undefined; // toJSON

    /**
     * Response type.
     * @type {string}
     */
    this.responseType = responseType; // toJSON

    /**
     * Whether responses are streamed or not.
     * @type {boolean|undefined}
     */
    this.responseStream = responseStream ? true : undefined; // toJSON

    /**
     * Resolved request type.
     * @type {Type|null}
     */
    this.resolvedRequestType = null;

    /**
     * Resolved response type.
     * @type {Type|null}
     */
    this.resolvedResponseType = null;

    /**
     * Comment for this method
     * @type {string|null}
     */
    this.comment = comment;
}

/**
 * Method descriptor.
 * @interface IMethod
 * @property {string} [type="rpc"] Method type
 * @property {string} requestType Request type
 * @property {string} responseType Response type
 * @property {boolean} [requestStream=false] Whether requests are streamed
 * @property {boolean} [responseStream=false] Whether responses are streamed
 * @property {Object.<string,*>} [options] Method options
 */

/**
 * Constructs a method from a method descriptor.
 * @param {string} name Method name
 * @param {IMethod} json Method descriptor
 * @returns {Method} Created method
 * @throws {TypeError} If arguments are invalid
 */
Method.fromJSON = function fromJSON(name, json) {
    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);
};

/**
 * Converts this method to a method descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {IMethod} Method descriptor
 */
Method.prototype.toJSON = function toJSON(toJSONOptions) {
    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;
    return util.toObject([
        "type"           , this.type !== "rpc" && /* istanbul ignore next */ this.type || undefined,
        "requestType"    , this.requestType,
        "requestStream"  , this.requestStream,
        "responseType"   , this.responseType,
        "responseStream" , this.responseStream,
        "options"        , this.options,
        "comment"        , keepComments ? this.comment : undefined
    ]);
};

/**
 * @override
 */
Method.prototype.resolve = function resolve() {

    /* istanbul ignore if */
    if (this.resolved)
        return this;

    this.resolvedRequestType = this.parent.lookupType(this.requestType);
    this.resolvedResponseType = this.parent.lookupType(this.responseType);

    return ReflectionObject.prototype.resolve.call(this);
};


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = Reader;

var util      = __webpack_require__(6);

var BufferReader; // cyclic

var LongBits  = util.LongBits,
    utf8      = util.utf8;

/* istanbul ignore next */
function indexOutOfRange(reader, writeLength) {
    return RangeError("index out of range: " + reader.pos + " + " + (writeLength || 1) + " > " + reader.len);
}

/**
 * Constructs a new reader instance using the specified buffer.
 * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.
 * @constructor
 * @param {Uint8Array} buffer Buffer to read from
 */
function Reader(buffer) {

    /**
     * Read buffer.
     * @type {Uint8Array}
     */
    this.buf = buffer;

    /**
     * Read buffer position.
     * @type {number}
     */
    this.pos = 0;

    /**
     * Read buffer length.
     * @type {number}
     */
    this.len = buffer.length;
}

var create_array = typeof Uint8Array !== "undefined"
    ? function create_typed_array(buffer) {
        if (buffer instanceof Uint8Array || Array.isArray(buffer))
            return new Reader(buffer);
        throw Error("illegal buffer");
    }
    /* istanbul ignore next */
    : function create_array(buffer) {
        if (Array.isArray(buffer))
            return new Reader(buffer);
        throw Error("illegal buffer");
    };

/**
 * Creates a new reader using the specified buffer.
 * @function
 * @param {Uint8Array|Buffer} buffer Buffer to read from
 * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}
 * @throws {Error} If `buffer` is not a valid buffer
 */
Reader.create = util.Buffer
    ? function create_buffer_setup(buffer) {
        return (Reader.create = function create_buffer(buffer) {
            return util.Buffer.isBuffer(buffer)
                ? new BufferReader(buffer)
                /* istanbul ignore next */
                : create_array(buffer);
        })(buffer);
    }
    /* istanbul ignore next */
    : create_array;

Reader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;

/**
 * Reads a varint as an unsigned 32 bit value.
 * @function
 * @returns {number} Value read
 */
Reader.prototype.uint32 = (function read_uint32_setup() {
    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)
    return function read_uint32() {
        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;

        /* istanbul ignore if */
        if ((this.pos += 5) > this.len) {
            this.pos = this.len;
            throw indexOutOfRange(this, 10);
        }
        return value;
    };
})();

/**
 * Reads a varint as a signed 32 bit value.
 * @returns {number} Value read
 */
Reader.prototype.int32 = function read_int32() {
    return this.uint32() | 0;
};

/**
 * Reads a zig-zag encoded varint as a signed 32 bit value.
 * @returns {number} Value read
 */
Reader.prototype.sint32 = function read_sint32() {
    var value = this.uint32();
    return value >>> 1 ^ -(value & 1) | 0;
};

/* eslint-disable no-invalid-this */

function readLongVarint() {
    // tends to deopt with local vars for octet etc.
    var bits = new LongBits(0, 0);
    var i = 0;
    if (this.len - this.pos > 4) { // fast route (lo)
        for (; i < 4; ++i) {
            // 1st..4th
            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
        // 5th
        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;
        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;
        if (this.buf[this.pos++] < 128)
            return bits;
        i = 0;
    } else {
        for (; i < 3; ++i) {
            /* istanbul ignore if */
            if (this.pos >= this.len)
                throw indexOutOfRange(this);
            // 1st..3th
            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
        // 4th
        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;
        return bits;
    }
    if (this.len - this.pos > 4) { // fast route (hi)
        for (; i < 5; ++i) {
            // 6th..10th
            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
    } else {
        for (; i < 5; ++i) {
            /* istanbul ignore if */
            if (this.pos >= this.len)
                throw indexOutOfRange(this);
            // 6th..10th
            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
    }
    /* istanbul ignore next */
    throw Error("invalid varint encoding");
}

/* eslint-enable no-invalid-this */

/**
 * Reads a varint as a signed 64 bit value.
 * @name Reader#int64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a varint as an unsigned 64 bit value.
 * @name Reader#uint64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a zig-zag encoded varint as a signed 64 bit value.
 * @name Reader#sint64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a varint as a boolean.
 * @returns {boolean} Value read
 */
Reader.prototype.bool = function read_bool() {
    return this.uint32() !== 0;
};

function readFixed32_end(buf, end) { // note that this uses `end`, not `pos`
    return (buf[end - 4]
          | buf[end - 3] << 8
          | buf[end - 2] << 16
          | buf[end - 1] << 24) >>> 0;
}

/**
 * Reads fixed 32 bits as an unsigned 32 bit integer.
 * @returns {number} Value read
 */
Reader.prototype.fixed32 = function read_fixed32() {

    /* istanbul ignore if */
    if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);

    return readFixed32_end(this.buf, this.pos += 4);
};

/**
 * Reads fixed 32 bits as a signed 32 bit integer.
 * @returns {number} Value read
 */
Reader.prototype.sfixed32 = function read_sfixed32() {

    /* istanbul ignore if */
    if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);

    return readFixed32_end(this.buf, this.pos += 4) | 0;
};

/* eslint-disable no-invalid-this */

function readFixed64(/* this: Reader */) {

    /* istanbul ignore if */
    if (this.pos + 8 > this.len)
        throw indexOutOfRange(this, 8);

    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));
}

/* eslint-enable no-invalid-this */

/**
 * Reads fixed 64 bits.
 * @name Reader#fixed64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads zig-zag encoded fixed 64 bits.
 * @name Reader#sfixed64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a float (32 bit) as a number.
 * @function
 * @returns {number} Value read
 */
Reader.prototype.float = function read_float() {

    /* istanbul ignore if */
    if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);

    var value = util.float.readFloatLE(this.buf, this.pos);
    this.pos += 4;
    return value;
};

/**
 * Reads a double (64 bit float) as a number.
 * @function
 * @returns {number} Value read
 */
Reader.prototype.double = function read_double() {

    /* istanbul ignore if */
    if (this.pos + 8 > this.len)
        throw indexOutOfRange(this, 4);

    var value = util.float.readDoubleLE(this.buf, this.pos);
    this.pos += 8;
    return value;
};

/**
 * Reads a sequence of bytes preceeded by its length as a varint.
 * @returns {Uint8Array} Value read
 */
Reader.prototype.bytes = function read_bytes() {
    var length = this.uint32(),
        start  = this.pos,
        end    = this.pos + length;

    /* istanbul ignore if */
    if (end > this.len)
        throw indexOutOfRange(this, length);

    this.pos += length;
    if (Array.isArray(this.buf)) // plain array
        return this.buf.slice(start, end);
    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1
        ? new this.buf.constructor(0)
        : this._slice.call(this.buf, start, end);
};

/**
 * Reads a string preceeded by its byte length as a varint.
 * @returns {string} Value read
 */
Reader.prototype.string = function read_string() {
    var bytes = this.bytes();
    return utf8.read(bytes, 0, bytes.length);
};

/**
 * Skips the specified number of bytes if specified, otherwise skips a varint.
 * @param {number} [length] Length if known, otherwise a varint is assumed
 * @returns {Reader} `this`
 */
Reader.prototype.skip = function skip(length) {
    if (typeof length === "number") {
        /* istanbul ignore if */
        if (this.pos + length > this.len)
            throw indexOutOfRange(this, length);
        this.pos += length;
    } else {
        do {
            /* istanbul ignore if */
            if (this.pos >= this.len)
                throw indexOutOfRange(this);
        } while (this.buf[this.pos++] & 128);
    }
    return this;
};

/**
 * Skips the next element of the specified wire type.
 * @param {number} wireType Wire type received
 * @returns {Reader} `this`
 */
Reader.prototype.skipType = function(wireType) {
    switch (wireType) {
        case 0:
            this.skip();
            break;
        case 1:
            this.skip(8);
            break;
        case 2:
            this.skip(this.uint32());
            break;
        case 3:
            do { // eslint-disable-line no-constant-condition
                if ((wireType = this.uint32() & 7) === 4)
                    break;
                this.skipType(wireType);
            } while (true);
            break;
        case 5:
            this.skip(4);
            break;

        /* istanbul ignore next */
        default:
            throw Error("invalid wire type " + wireType + " at offset " + this.pos);
    }
    return this;
};

Reader._configure = function(BufferReader_) {
    BufferReader = BufferReader_;

    var fn = util.Long ? "toLong" : /* istanbul ignore next */ "toNumber";
    util.merge(Reader.prototype, {

        int64: function read_int64() {
            return readLongVarint.call(this)[fn](false);
        },

        uint64: function read_uint64() {
            return readLongVarint.call(this)[fn](true);
        },

        sint64: function read_sint64() {
            return readLongVarint.call(this).zzDecode()[fn](false);
        },

        fixed64: function read_fixed64() {
            return readFixed64.call(this)[fn](true);
        },

        sfixed64: function read_sfixed64() {
            return readFixed64.call(this)[fn](false);
        }

    });
};


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = Root;

// extends Namespace
var Namespace = __webpack_require__(20);
((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = "Root";

var Field   = __webpack_require__(10),
    Enum    = __webpack_require__(5),
    OneOf   = __webpack_require__(23),
    util    = __webpack_require__(2);

var Type,   // cyclic
    parse,  // might be excluded
    common; // "

/**
 * Constructs a new root namespace instance.
 * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.
 * @extends NamespaceBase
 * @constructor
 * @param {Object.<string,*>} [options] Top level options
 */
function Root(options) {
    Namespace.call(this, "", options);

    /**
     * Deferred extension fields.
     * @type {Field[]}
     */
    this.deferred = [];

    /**
     * Resolved file names of loaded files.
     * @type {string[]}
     */
    this.files = [];
}

/**
 * Loads a namespace descriptor into a root namespace.
 * @param {INamespace} json Nameespace descriptor
 * @param {Root} [root] Root namespace, defaults to create a new one if omitted
 * @returns {Root} Root namespace
 */
Root.fromJSON = function fromJSON(json, root) {
    if (!root)
        root = new Root();
    if (json.options)
        root.setOptions(json.options);
    return root.addJSON(json.nested);
};

/**
 * Resolves the path of an imported file, relative to the importing origin.
 * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.
 * @function
 * @param {string} origin The file name of the importing file
 * @param {string} target The file name being imported
 * @returns {string|null} Resolved path to `target` or `null` to skip the file
 */
Root.prototype.resolvePath = util.path.resolve;

// A symbol-like function to safely signal synchronous loading
/* istanbul ignore next */
function SYNC() {} // eslint-disable-line no-empty-function

/**
 * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.
 * @param {string|string[]} filename Names of one or multiple files to load
 * @param {IParseOptions} options Parse options
 * @param {LoadCallback} callback Callback function
 * @returns {undefined}
 */
Root.prototype.load = function load(filename, options, callback) {
    if (typeof options === "function") {
        callback = options;
        options = undefined;
    }
    var self = this;
    if (!callback)
        return util.asPromise(load, self, filename, options);

    var sync = callback === SYNC; // undocumented

    // Finishes loading by calling the callback (exactly once)
    function finish(err, root) {
        /* istanbul ignore if */
        if (!callback)
            return;
        var cb = callback;
        callback = null;
        if (sync)
            throw err;
        cb(err, root);
    }

    // Processes a single file
    function process(filename, source) {
        try {
            if (util.isString(source) && source.charAt(0) === "{")
                source = JSON.parse(source);
            if (!util.isString(source))
                self.setOptions(source.options).addJSON(source.nested);
            else {
                parse.filename = filename;
                var parsed = parse(source, self, options),
                    resolved,
                    i = 0;
                if (parsed.imports)
                    for (; i < parsed.imports.length; ++i)
                        if (resolved = self.resolvePath(filename, parsed.imports[i]))
                            fetch(resolved);
                if (parsed.weakImports)
                    for (i = 0; i < parsed.weakImports.length; ++i)
                        if (resolved = self.resolvePath(filename, parsed.weakImports[i]))
                            fetch(resolved, true);
            }
        } catch (err) {
            finish(err);
        }
        if (!sync && !queued)
            finish(null, self); // only once anyway
    }

    // Fetches a single file
    function fetch(filename, weak) {

        // Strip path if this file references a bundled definition
        var idx = filename.lastIndexOf("google/protobuf/");
        if (idx > -1) {
            var altname = filename.substring(idx);
            if (altname in common)
                filename = altname;
        }

        // Skip if already loaded / attempted
        if (self.files.indexOf(filename) > -1)
            return;
        self.files.push(filename);

        // Shortcut bundled definitions
        if (filename in common) {
            if (sync)
                process(filename, common[filename]);
            else {
                ++queued;
                setTimeout(function() {
                    --queued;
                    process(filename, common[filename]);
                });
            }
            return;
        }

        // Otherwise fetch from disk or network
        if (sync) {
            var source;
            try {
                source = util.fs.readFileSync(filename).toString("utf8");
            } catch (err) {
                if (!weak)
                    finish(err);
                return;
            }
            process(filename, source);
        } else {
            ++queued;
            util.fetch(filename, function(err, source) {
                --queued;
                /* istanbul ignore if */
                if (!callback)
                    return; // terminated meanwhile
                if (err) {
                    /* istanbul ignore else */
                    if (!weak)
                        finish(err);
                    else if (!queued) // can't be covered reliably
                        finish(null, self);
                    return;
                }
                process(filename, source);
            });
        }
    }
    var queued = 0;

    // Assembling the root namespace doesn't require working type
    // references anymore, so we can load everything in parallel
    if (util.isString(filename))
        filename = [ filename ];
    for (var i = 0, resolved; i < filename.length; ++i)
        if (resolved = self.resolvePath("", filename[i]))
            fetch(resolved);

    if (sync)
        return self;
    if (!queued)
        finish(null, self);
    return undefined;
};
// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined

/**
 * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.
 * @function Root#load
 * @param {string|string[]} filename Names of one or multiple files to load
 * @param {LoadCallback} callback Callback function
 * @returns {undefined}
 * @variation 2
 */
// function load(filename:string, callback:LoadCallback):undefined

/**
 * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.
 * @function Root#load
 * @param {string|string[]} filename Names of one or multiple files to load
 * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.
 * @returns {Promise<Root>} Promise
 * @variation 3
 */
// function load(filename:string, [options:IParseOptions]):Promise<Root>

/**
 * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).
 * @function Root#loadSync
 * @param {string|string[]} filename Names of one or multiple files to load
 * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.
 * @returns {Root} Root namespace
 * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid
 */
Root.prototype.loadSync = function loadSync(filename, options) {
    if (!util.isNode)
        throw Error("not supported");
    return this.load(filename, options, SYNC);
};

/**
 * @override
 */
Root.prototype.resolveAll = function resolveAll() {
    if (this.deferred.length)
        throw Error("unresolvable extensions: " + this.deferred.map(function(field) {
            return "'extend " + field.extend + "' in " + field.parent.fullName;
        }).join(", "));
    return Namespace.prototype.resolveAll.call(this);
};

// only uppercased (and thus conflict-free) children are exposed, see below
var exposeRe = /^[A-Z]/;

/**
 * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.
 * @param {Root} root Root instance
 * @param {Field} field Declaring extension field witin the declaring type
 * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise
 * @inner
 * @ignore
 */
function tryHandleExtension(root, field) {
    var extendedType = field.parent.lookup(field.extend);
    if (extendedType) {
        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);
        sisterField.declaringField = field;
        field.extensionField = sisterField;
        extendedType.add(sisterField);
        return true;
    }
    return false;
}

/**
 * Called when any object is added to this root or its sub-namespaces.
 * @param {ReflectionObject} object Object added
 * @returns {undefined}
 * @private
 */
Root.prototype._handleAdd = function _handleAdd(object) {
    if (object instanceof Field) {

        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)
            if (!tryHandleExtension(this, object))
                this.deferred.push(object);

    } else if (object instanceof Enum) {

        if (exposeRe.test(object.name))
            object.parent[object.name] = object.values; // expose enum values as property of its parent

    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {

        if (object instanceof Type) // Try to handle any deferred extensions
            for (var i = 0; i < this.deferred.length;)
                if (tryHandleExtension(this, this.deferred[i]))
                    this.deferred.splice(i, 1);
                else
                    ++i;
        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace
            this._handleAdd(object._nestedArray[j]);
        if (exposeRe.test(object.name))
            object.parent[object.name] = object; // expose namespace as property of its parent
    }

    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as
    // properties of namespaces just like static code does. This allows using a .d.ts generated for
    // a static module with reflection-based solutions where the condition is met.
};

/**
 * Called when any object is removed from this root or its sub-namespaces.
 * @param {ReflectionObject} object Object removed
 * @returns {undefined}
 * @private
 */
Root.prototype._handleRemove = function _handleRemove(object) {
    if (object instanceof Field) {

        if (/* an extension field */ object.extend !== undefined) {
            if (/* already handled */ object.extensionField) { // remove its sister field
                object.extensionField.parent.remove(object.extensionField);
                object.extensionField = null;
            } else { // cancel the extension
                var index = this.deferred.indexOf(object);
                /* istanbul ignore else */
                if (index > -1)
                    this.deferred.splice(index, 1);
            }
        }

    } else if (object instanceof Enum) {

        if (exposeRe.test(object.name))
            delete object.parent[object.name]; // unexpose enum values

    } else if (object instanceof Namespace) {

        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace
            this._handleRemove(object._nestedArray[i]);

        if (exposeRe.test(object.name))
            delete object.parent[object.name]; // unexpose namespaces

    }
};

Root._configure = function(Type_, parse_, common_) {
    Type = Type_;
    parse = parse_;
    common = common_;
};


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = Service;

// extends Namespace
var Namespace = __webpack_require__(20);
((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = "Service";

var Method = __webpack_require__(36),
    util   = __webpack_require__(2),
    rpc    = __webpack_require__(78);

/**
 * Constructs a new service instance.
 * @classdesc Reflected service.
 * @extends NamespaceBase
 * @constructor
 * @param {string} name Service name
 * @param {Object.<string,*>} [options] Service options
 * @throws {TypeError} If arguments are invalid
 */
function Service(name, options) {
    Namespace.call(this, name, options);

    /**
     * Service methods.
     * @type {Object.<string,Method>}
     */
    this.methods = {}; // toJSON, marker

    /**
     * Cached methods as an array.
     * @type {Method[]|null}
     * @private
     */
    this._methodsArray = null;
}

/**
 * Service descriptor.
 * @interface IService
 * @extends INamespace
 * @property {Object.<string,IMethod>} methods Method descriptors
 */

/**
 * Constructs a service from a service descriptor.
 * @param {string} name Service name
 * @param {IService} json Service descriptor
 * @returns {Service} Created service
 * @throws {TypeError} If arguments are invalid
 */
Service.fromJSON = function fromJSON(name, json) {
    var service = new Service(name, json.options);
    /* istanbul ignore else */
    if (json.methods)
        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)
            service.add(Method.fromJSON(names[i], json.methods[names[i]]));
    if (json.nested)
        service.addJSON(json.nested);
    service.comment = json.comment;
    return service;
};

/**
 * Converts this service to a service descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {IService} Service descriptor
 */
Service.prototype.toJSON = function toJSON(toJSONOptions) {
    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);
    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;
    return util.toObject([
        "options" , inherited && inherited.options || undefined,
        "methods" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},
        "nested"  , inherited && inherited.nested || undefined,
        "comment" , keepComments ? this.comment : undefined
    ]);
};

/**
 * Methods of this service as an array for iteration.
 * @name Service#methodsArray
 * @type {Method[]}
 * @readonly
 */
Object.defineProperty(Service.prototype, "methodsArray", {
    get: function() {
        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));
    }
});

function clearCache(service) {
    service._methodsArray = null;
    return service;
}

/**
 * @override
 */
Service.prototype.get = function get(name) {
    return this.methods[name]
        || Namespace.prototype.get.call(this, name);
};

/**
 * @override
 */
Service.prototype.resolveAll = function resolveAll() {
    var methods = this.methodsArray;
    for (var i = 0; i < methods.length; ++i)
        methods[i].resolve();
    return Namespace.prototype.resolve.call(this);
};

/**
 * @override
 */
Service.prototype.add = function add(object) {

    /* istanbul ignore if */
    if (this.get(object.name))
        throw Error("duplicate name '" + object.name + "' in " + this);

    if (object instanceof Method) {
        this.methods[object.name] = object;
        object.parent = this;
        return clearCache(this);
    }
    return Namespace.prototype.add.call(this, object);
};

/**
 * @override
 */
Service.prototype.remove = function remove(object) {
    if (object instanceof Method) {

        /* istanbul ignore if */
        if (this.methods[object.name] !== object)
            throw Error(object + " is not a member of " + this);

        delete this.methods[object.name];
        object.parent = null;
        return clearCache(this);
    }
    return Namespace.prototype.remove.call(this, object);
};

/**
 * Creates a runtime service using the specified rpc implementation.
 * @param {RPCImpl} rpcImpl RPC implementation
 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
 * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.
 */
Service.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {
    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);
    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {
        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\w_]/g, "");
        rpcService[methodName] = util.codegen(["r","c"], util.isReserved(methodName) ? methodName + "_" : methodName)("return this.rpcCall(m,q,s,r,c)")({
            m: method,
            q: method.resolvedRequestType.ctor,
            s: method.resolvedResponseType.ctor
        });
    }
    return rpcService;
};


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = Type;

// extends Namespace
var Namespace = __webpack_require__(20);
((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = "Type";

var Enum      = __webpack_require__(5),
    OneOf     = __webpack_require__(23),
    Field     = __webpack_require__(10),
    MapField  = __webpack_require__(34),
    Service   = __webpack_require__(39),
    Message   = __webpack_require__(35),
    Reader    = __webpack_require__(37),
    Writer    = __webpack_require__(41),
    util      = __webpack_require__(2),
    encoder   = __webpack_require__(76),
    decoder   = __webpack_require__(75),
    verifier  = __webpack_require__(80),
    converter = __webpack_require__(74),
    wrappers  = __webpack_require__(81);

/**
 * Constructs a new reflected message type instance.
 * @classdesc Reflected message type.
 * @extends NamespaceBase
 * @constructor
 * @param {string} name Message name
 * @param {Object.<string,*>} [options] Declared options
 */
function Type(name, options) {
    Namespace.call(this, name, options);

    /**
     * Message fields.
     * @type {Object.<string,Field>}
     */
    this.fields = {};  // toJSON, marker

    /**
     * Oneofs declared within this namespace, if any.
     * @type {Object.<string,OneOf>}
     */
    this.oneofs = undefined; // toJSON

    /**
     * Extension ranges, if any.
     * @type {number[][]}
     */
    this.extensions = undefined; // toJSON

    /**
     * Reserved ranges, if any.
     * @type {Array.<number[]|string>}
     */
    this.reserved = undefined; // toJSON

    /*?
     * Whether this type is a legacy group.
     * @type {boolean|undefined}
     */
    this.group = undefined; // toJSON

    /**
     * Cached fields by id.
     * @type {Object.<number,Field>|null}
     * @private
     */
    this._fieldsById = null;

    /**
     * Cached fields as an array.
     * @type {Field[]|null}
     * @private
     */
    this._fieldsArray = null;

    /**
     * Cached oneofs as an array.
     * @type {OneOf[]|null}
     * @private
     */
    this._oneofsArray = null;

    /**
     * Cached constructor.
     * @type {Constructor<{}>}
     * @private
     */
    this._ctor = null;
}

Object.defineProperties(Type.prototype, {

    /**
     * Message fields by id.
     * @name Type#fieldsById
     * @type {Object.<number,Field>}
     * @readonly
     */
    fieldsById: {
        get: function() {

            /* istanbul ignore if */
            if (this._fieldsById)
                return this._fieldsById;

            this._fieldsById = {};
            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {
                var field = this.fields[names[i]],
                    id = field.id;

                /* istanbul ignore if */
                if (this._fieldsById[id])
                    throw Error("duplicate id " + id + " in " + this);

                this._fieldsById[id] = field;
            }
            return this._fieldsById;
        }
    },

    /**
     * Fields of this message as an array for iteration.
     * @name Type#fieldsArray
     * @type {Field[]}
     * @readonly
     */
    fieldsArray: {
        get: function() {
            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));
        }
    },

    /**
     * Oneofs of this message as an array for iteration.
     * @name Type#oneofsArray
     * @type {OneOf[]}
     * @readonly
     */
    oneofsArray: {
        get: function() {
            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));
        }
    },

    /**
     * The registered constructor, if any registered, otherwise a generic constructor.
     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.
     * @name Type#ctor
     * @type {Constructor<{}>}
     */
    ctor: {
        get: function() {
            return this._ctor || (this.ctor = Type.generateConstructor(this)());
        },
        set: function(ctor) {

            // Ensure proper prototype
            var prototype = ctor.prototype;
            if (!(prototype instanceof Message)) {
                (ctor.prototype = new Message()).constructor = ctor;
                util.merge(ctor.prototype, prototype);
            }

            // Classes and messages reference their reflected type
            ctor.$type = ctor.prototype.$type = this;

            // Mix in static methods
            util.merge(ctor, Message, true);

            this._ctor = ctor;

            // Messages have non-enumerable default values on their prototype
            var i = 0;
            for (; i < /* initializes */ this.fieldsArray.length; ++i)
                this._fieldsArray[i].resolve(); // ensures a proper value

            // Messages have non-enumerable getters and setters for each virtual oneof field
            var ctorProperties = {};
            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)
                ctorProperties[this._oneofsArray[i].resolve().name] = {
                    get: util.oneOfGetter(this._oneofsArray[i].oneof),
                    set: util.oneOfSetter(this._oneofsArray[i].oneof)
                };
            if (i)
                Object.defineProperties(ctor.prototype, ctorProperties);
        }
    }
});

/**
 * Generates a constructor function for the specified type.
 * @param {Type} mtype Message type
 * @returns {Codegen} Codegen instance
 */
Type.generateConstructor = function generateConstructor(mtype) {
    /* eslint-disable no-unexpected-multiline */
    var gen = util.codegen(["p"], mtype.name);
    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype
    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)
        if ((field = mtype._fieldsArray[i]).map) gen
            ("this%s={}", util.safeProp(field.name));
        else if (field.repeated) gen
            ("this%s=[]", util.safeProp(field.name));
    return gen
    ("if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)") // omit undefined or null
        ("this[ks[i]]=p[ks[i]]");
    /* eslint-enable no-unexpected-multiline */
};

function clearCache(type) {
    type._fieldsById = type._fieldsArray = type._oneofsArray = null;
    delete type.encode;
    delete type.decode;
    delete type.verify;
    return type;
}

/**
 * Message type descriptor.
 * @interface IType
 * @extends INamespace
 * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors
 * @property {Object.<string,IField>} fields Field descriptors
 * @property {number[][]} [extensions] Extension ranges
 * @property {number[][]} [reserved] Reserved ranges
 * @property {boolean} [group=false] Whether a legacy group or not
 */

/**
 * Creates a message type from a message type descriptor.
 * @param {string} name Message name
 * @param {IType} json Message type descriptor
 * @returns {Type} Created message type
 */
Type.fromJSON = function fromJSON(name, json) {
    var type = new Type(name, json.options);
    type.extensions = json.extensions;
    type.reserved = json.reserved;
    var names = Object.keys(json.fields),
        i = 0;
    for (; i < names.length; ++i)
        type.add(
            ( typeof json.fields[names[i]].keyType !== "undefined"
            ? MapField.fromJSON
            : Field.fromJSON )(names[i], json.fields[names[i]])
        );
    if (json.oneofs)
        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)
            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));
    if (json.nested)
        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {
            var nested = json.nested[names[i]];
            type.add( // most to least likely
                ( nested.id !== undefined
                ? Field.fromJSON
                : nested.fields !== undefined
                ? Type.fromJSON
                : nested.values !== undefined
                ? Enum.fromJSON
                : nested.methods !== undefined
                ? Service.fromJSON
                : Namespace.fromJSON )(names[i], nested)
            );
        }
    if (json.extensions && json.extensions.length)
        type.extensions = json.extensions;
    if (json.reserved && json.reserved.length)
        type.reserved = json.reserved;
    if (json.group)
        type.group = true;
    if (json.comment)
        type.comment = json.comment;
    return type;
};

/**
 * Converts this message type to a message type descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {IType} Message type descriptor
 */
Type.prototype.toJSON = function toJSON(toJSONOptions) {
    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);
    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;
    return util.toObject([
        "options"    , inherited && inherited.options || undefined,
        "oneofs"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),
        "fields"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},
        "extensions" , this.extensions && this.extensions.length ? this.extensions : undefined,
        "reserved"   , this.reserved && this.reserved.length ? this.reserved : undefined,
        "group"      , this.group || undefined,
        "nested"     , inherited && inherited.nested || undefined,
        "comment"    , keepComments ? this.comment : undefined
    ]);
};

/**
 * @override
 */
Type.prototype.resolveAll = function resolveAll() {
    var fields = this.fieldsArray, i = 0;
    while (i < fields.length)
        fields[i++].resolve();
    var oneofs = this.oneofsArray; i = 0;
    while (i < oneofs.length)
        oneofs[i++].resolve();
    return Namespace.prototype.resolveAll.call(this);
};

/**
 * @override
 */
Type.prototype.get = function get(name) {
    return this.fields[name]
        || this.oneofs && this.oneofs[name]
        || this.nested && this.nested[name]
        || null;
};

/**
 * Adds a nested object to this type.
 * @param {ReflectionObject} object Nested object to add
 * @returns {Type} `this`
 * @throws {TypeError} If arguments are invalid
 * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id
 */
Type.prototype.add = function add(object) {

    if (this.get(object.name))
        throw Error("duplicate name '" + object.name + "' in " + this);

    if (object instanceof Field && object.extend === undefined) {
        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.
        // The root object takes care of adding distinct sister-fields to the respective extended
        // type instead.

        // avoids calling the getter if not absolutely necessary because it's called quite frequently
        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])
            throw Error("duplicate id " + object.id + " in " + this);
        if (this.isReservedId(object.id))
            throw Error("id " + object.id + " is reserved in " + this);
        if (this.isReservedName(object.name))
            throw Error("name '" + object.name + "' is reserved in " + this);

        if (object.parent)
            object.parent.remove(object);
        this.fields[object.name] = object;
        object.message = this;
        object.onAdd(this);
        return clearCache(this);
    }
    if (object instanceof OneOf) {
        if (!this.oneofs)
            this.oneofs = {};
        this.oneofs[object.name] = object;
        object.onAdd(this);
        return clearCache(this);
    }
    return Namespace.prototype.add.call(this, object);
};

/**
 * Removes a nested object from this type.
 * @param {ReflectionObject} object Nested object to remove
 * @returns {Type} `this`
 * @throws {TypeError} If arguments are invalid
 * @throws {Error} If `object` is not a member of this type
 */
Type.prototype.remove = function remove(object) {
    if (object instanceof Field && object.extend === undefined) {
        // See Type#add for the reason why extension fields are excluded here.

        /* istanbul ignore if */
        if (!this.fields || this.fields[object.name] !== object)
            throw Error(object + " is not a member of " + this);

        delete this.fields[object.name];
        object.parent = null;
        object.onRemove(this);
        return clearCache(this);
    }
    if (object instanceof OneOf) {

        /* istanbul ignore if */
        if (!this.oneofs || this.oneofs[object.name] !== object)
            throw Error(object + " is not a member of " + this);

        delete this.oneofs[object.name];
        object.parent = null;
        object.onRemove(this);
        return clearCache(this);
    }
    return Namespace.prototype.remove.call(this, object);
};

/**
 * Tests if the specified id is reserved.
 * @param {number} id Id to test
 * @returns {boolean} `true` if reserved, otherwise `false`
 */
Type.prototype.isReservedId = function isReservedId(id) {
    return Namespace.isReservedId(this.reserved, id);
};

/**
 * Tests if the specified name is reserved.
 * @param {string} name Name to test
 * @returns {boolean} `true` if reserved, otherwise `false`
 */
Type.prototype.isReservedName = function isReservedName(name) {
    return Namespace.isReservedName(this.reserved, name);
};

/**
 * Creates a new message of this type using the specified properties.
 * @param {Object.<string,*>} [properties] Properties to set
 * @returns {Message<{}>} Message instance
 */
Type.prototype.create = function create(properties) {
    return new this.ctor(properties);
};

/**
 * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.
 * @returns {Type} `this`
 */
Type.prototype.setup = function setup() {
    // Sets up everything at once so that the prototype chain does not have to be re-evaluated
    // multiple times (V8, soft-deopt prototype-check).

    var fullName = this.fullName,
        types    = [];
    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)
        types.push(this._fieldsArray[i].resolve().resolvedType);

    // Replace setup methods with type-specific generated functions
    this.encode = encoder(this)({
        Writer : Writer,
        types  : types,
        util   : util
    });
    this.decode = decoder(this)({
        Reader : Reader,
        types  : types,
        util   : util
    });
    this.verify = verifier(this)({
        types : types,
        util  : util
    });
    this.fromObject = converter.fromObject(this)({
        types : types,
        util  : util
    });
    this.toObject = converter.toObject(this)({
        types : types,
        util  : util
    });

    // Inject custom wrappers for common types
    var wrapper = wrappers[fullName];
    if (wrapper) {
        var originalThis = Object.create(this);
        // if (wrapper.fromObject) {
            originalThis.fromObject = this.fromObject;
            this.fromObject = wrapper.fromObject.bind(originalThis);
        // }
        // if (wrapper.toObject) {
            originalThis.toObject = this.toObject;
            this.toObject = wrapper.toObject.bind(originalThis);
        // }
    }

    return this;
};

/**
 * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.
 * @param {Message<{}>|Object.<string,*>} message Message instance or plain object
 * @param {Writer} [writer] Writer to encode to
 * @returns {Writer} writer
 */
Type.prototype.encode = function encode_setup(message, writer) {
    return this.setup().encode(message, writer); // overrides this method
};

/**
 * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.
 * @param {Message<{}>|Object.<string,*>} message Message instance or plain object
 * @param {Writer} [writer] Writer to encode to
 * @returns {Writer} writer
 */
Type.prototype.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();
};

/**
 * Decodes a message of this type.
 * @param {Reader|Uint8Array} reader Reader or buffer to decode from
 * @param {number} [length] Length of the message, if known beforehand
 * @returns {Message<{}>} Decoded message
 * @throws {Error} If the payload is not a reader or valid buffer
 * @throws {util.ProtocolError<{}>} If required fields are missing
 */
Type.prototype.decode = function decode_setup(reader, length) {
    return this.setup().decode(reader, length); // overrides this method
};

/**
 * Decodes a message of this type preceeded by its byte length as a varint.
 * @param {Reader|Uint8Array} reader Reader or buffer to decode from
 * @returns {Message<{}>} Decoded message
 * @throws {Error} If the payload is not a reader or valid buffer
 * @throws {util.ProtocolError} If required fields are missing
 */
Type.prototype.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof Reader))
        reader = Reader.create(reader);
    return this.decode(reader, reader.uint32());
};

/**
 * Verifies that field values are valid and that required fields are present.
 * @param {Object.<string,*>} message Plain object to verify
 * @returns {null|string} `null` if valid, otherwise the reason why it is not
 */
Type.prototype.verify = function verify_setup(message) {
    return this.setup().verify(message); // overrides this method
};

/**
 * Creates a new message of this type from a plain object. Also converts values to their respective internal types.
 * @param {Object.<string,*>} object Plain object to convert
 * @returns {Message<{}>} Message instance
 */
Type.prototype.fromObject = function fromObject(object) {
    return this.setup().fromObject(object);
};

/**
 * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.
 * @interface IConversionOptions
 * @property {Function} [longs] Long conversion type.
 * Valid values are `String` and `Number` (the global types).
 * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.
 * @property {Function} [enums] Enum value conversion type.
 * Only valid value is `String` (the global type).
 * Defaults to copy the present value, which is the numeric id.
 * @property {Function} [bytes] Bytes value conversion type.
 * Valid values are `Array` and (a base64 encoded) `String` (the global types).
 * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.
 * @property {boolean} [defaults=false] Also sets default values on the resulting object
 * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`
 * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`
 * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any
 * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings
 */

/**
 * Creates a plain object from a message of this type. Also converts values to other types if specified.
 * @param {Message<{}>} message Message instance
 * @param {IConversionOptions} [options] Conversion options
 * @returns {Object.<string,*>} Plain object
 */
Type.prototype.toObject = function toObject(message, options) {
    return this.setup().toObject(message, options);
};

/**
 * Decorator function as returned by {@link Type.d} (TypeScript).
 * @typedef TypeDecorator
 * @type {function}
 * @param {Constructor<T>} target Target constructor
 * @returns {undefined}
 * @template T extends Message<T>
 */

/**
 * Type decorator (TypeScript).
 * @param {string} [typeName] Type name, defaults to the constructor's name
 * @returns {TypeDecorator<T>} Decorator function
 * @template T extends Message<T>
 */
Type.d = function decorateType(typeName) {
    return function typeDecorator(target) {
        util.decorateType(target, typeName);
    };
};


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = Writer;

var util      = __webpack_require__(6);

var BufferWriter; // cyclic

var LongBits  = util.LongBits,
    base64    = util.base64,
    utf8      = util.utf8;

/**
 * Constructs a new writer operation instance.
 * @classdesc Scheduled writer operation.
 * @constructor
 * @param {function(*, Uint8Array, number)} fn Function to call
 * @param {number} len Value byte length
 * @param {*} val Value to write
 * @ignore
 */
function Op(fn, len, val) {

    /**
     * Function to call.
     * @type {function(Uint8Array, number, *)}
     */
    this.fn = fn;

    /**
     * Value byte length.
     * @type {number}
     */
    this.len = len;

    /**
     * Next operation.
     * @type {Writer.Op|undefined}
     */
    this.next = undefined;

    /**
     * Value to write.
     * @type {*}
     */
    this.val = val; // type varies
}

/* istanbul ignore next */
function noop() {} // eslint-disable-line no-empty-function

/**
 * Constructs a new writer state instance.
 * @classdesc Copied writer state.
 * @memberof Writer
 * @constructor
 * @param {Writer} writer Writer to copy state from
 * @ignore
 */
function State(writer) {

    /**
     * Current head.
     * @type {Writer.Op}
     */
    this.head = writer.head;

    /**
     * Current tail.
     * @type {Writer.Op}
     */
    this.tail = writer.tail;

    /**
     * Current buffer length.
     * @type {number}
     */
    this.len = writer.len;

    /**
     * Next state.
     * @type {State|null}
     */
    this.next = writer.states;
}

/**
 * Constructs a new writer instance.
 * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.
 * @constructor
 */
function Writer() {

    /**
     * Current length.
     * @type {number}
     */
    this.len = 0;

    /**
     * Operations head.
     * @type {Object}
     */
    this.head = new Op(noop, 0, 0);

    /**
     * Operations tail
     * @type {Object}
     */
    this.tail = this.head;

    /**
     * Linked forked states.
     * @type {Object|null}
     */
    this.states = null;

    // When a value is written, the writer calculates its byte length and puts it into a linked
    // list of operations to perform when finish() is called. This both allows us to allocate
    // buffers of the exact required size and reduces the amount of work we have to do compared
    // to first calculating over objects and then encoding over objects. In our case, the encoding
    // part is just a linked list walk calling operations with already prepared values.
}

/**
 * Creates a new writer.
 * @function
 * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}
 */
Writer.create = util.Buffer
    ? function create_buffer_setup() {
        return (Writer.create = function create_buffer() {
            return new BufferWriter();
        })();
    }
    /* istanbul ignore next */
    : function create_array() {
        return new Writer();
    };

/**
 * Allocates a buffer of the specified size.
 * @param {number} size Buffer size
 * @returns {Uint8Array} Buffer
 */
Writer.alloc = function alloc(size) {
    return new util.Array(size);
};

// Use Uint8Array buffer pool in the browser, just like node does with buffers
/* istanbul ignore else */
if (util.Array !== Array)
    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);

/**
 * Pushes a new operation to the queue.
 * @param {function(Uint8Array, number, *)} fn Function to call
 * @param {number} len Value byte length
 * @param {number} val Value to write
 * @returns {Writer} `this`
 * @private
 */
Writer.prototype._push = function push(fn, len, val) {
    this.tail = this.tail.next = new Op(fn, len, val);
    this.len += len;
    return this;
};

function writeByte(val, buf, pos) {
    buf[pos] = val & 255;
}

function writeVarint32(val, buf, pos) {
    while (val > 127) {
        buf[pos++] = val & 127 | 128;
        val >>>= 7;
    }
    buf[pos] = val;
}

/**
 * Constructs a new varint writer operation instance.
 * @classdesc Scheduled varint writer operation.
 * @extends Op
 * @constructor
 * @param {number} len Value byte length
 * @param {number} val Value to write
 * @ignore
 */
function VarintOp(len, val) {
    this.len = len;
    this.next = undefined;
    this.val = val;
}

VarintOp.prototype = Object.create(Op.prototype);
VarintOp.prototype.fn = writeVarint32;

/**
 * Writes an unsigned 32 bit value as a varint.
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.uint32 = function write_uint32(value) {
    // here, the call to this.push has been inlined and a varint specific Op subclass is used.
    // uint32 is by far the most frequently used operation and benefits significantly from this.
    this.len += (this.tail = this.tail.next = new VarintOp(
        (value = value >>> 0)
                < 128       ? 1
        : value < 16384     ? 2
        : value < 2097152   ? 3
        : value < 268435456 ? 4
        :                     5,
    value)).len;
    return this;
};

/**
 * Writes a signed 32 bit value as a varint.
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.int32 = function write_int32(value) {
    return value < 0
        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec
        : this.uint32(value);
};

/**
 * Writes a 32 bit value as a varint, zig-zag encoded.
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.sint32 = function write_sint32(value) {
    return this.uint32((value << 1 ^ value >> 31) >>> 0);
};

function writeVarint64(val, buf, pos) {
    while (val.hi) {
        buf[pos++] = val.lo & 127 | 128;
        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;
        val.hi >>>= 7;
    }
    while (val.lo > 127) {
        buf[pos++] = val.lo & 127 | 128;
        val.lo = val.lo >>> 7;
    }
    buf[pos++] = val.lo;
}

/**
 * Writes an unsigned 64 bit value as a varint.
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.uint64 = function write_uint64(value) {
    var bits = LongBits.from(value);
    return this._push(writeVarint64, bits.length(), bits);
};

/**
 * Writes a signed 64 bit value as a varint.
 * @function
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.int64 = Writer.prototype.uint64;

/**
 * Writes a signed 64 bit value as a varint, zig-zag encoded.
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.sint64 = function write_sint64(value) {
    var bits = LongBits.from(value).zzEncode();
    return this._push(writeVarint64, bits.length(), bits);
};

/**
 * Writes a boolish value as a varint.
 * @param {boolean} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.bool = function write_bool(value) {
    return this._push(writeByte, 1, value ? 1 : 0);
};

function writeFixed32(val, buf, pos) {
    buf[pos    ] =  val         & 255;
    buf[pos + 1] =  val >>> 8   & 255;
    buf[pos + 2] =  val >>> 16  & 255;
    buf[pos + 3] =  val >>> 24;
}

/**
 * Writes an unsigned 32 bit value as fixed 32 bits.
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.fixed32 = function write_fixed32(value) {
    return this._push(writeFixed32, 4, value >>> 0);
};

/**
 * Writes a signed 32 bit value as fixed 32 bits.
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.sfixed32 = Writer.prototype.fixed32;

/**
 * Writes an unsigned 64 bit value as fixed 64 bits.
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.fixed64 = function write_fixed64(value) {
    var bits = LongBits.from(value);
    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);
};

/**
 * Writes a signed 64 bit value as fixed 64 bits.
 * @function
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.sfixed64 = Writer.prototype.fixed64;

/**
 * Writes a float (32 bit).
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.float = function write_float(value) {
    return this._push(util.float.writeFloatLE, 4, value);
};

/**
 * Writes a double (64 bit float).
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.double = function write_double(value) {
    return this._push(util.float.writeDoubleLE, 8, value);
};

var writeBytes = util.Array.prototype.set
    ? function writeBytes_set(val, buf, pos) {
        buf.set(val, pos); // also works for plain array values
    }
    /* istanbul ignore next */
    : function writeBytes_for(val, buf, pos) {
        for (var i = 0; i < val.length; ++i)
            buf[pos + i] = val[i];
    };

/**
 * Writes a sequence of bytes.
 * @param {Uint8Array|string} value Buffer or base64 encoded string to write
 * @returns {Writer} `this`
 */
Writer.prototype.bytes = function write_bytes(value) {
    var len = value.length >>> 0;
    if (!len)
        return this._push(writeByte, 1, 0);
    if (util.isString(value)) {
        var buf = Writer.alloc(len = base64.length(value));
        base64.decode(value, buf, 0);
        value = buf;
    }
    return this.uint32(len)._push(writeBytes, len, value);
};

/**
 * Writes a string.
 * @param {string} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.string = function write_string(value) {
    var len = utf8.length(value);
    return len
        ? this.uint32(len)._push(utf8.write, len, value)
        : this._push(writeByte, 1, 0);
};

/**
 * Forks this writer's state by pushing it to a stack.
 * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.
 * @returns {Writer} `this`
 */
Writer.prototype.fork = function fork() {
    this.states = new State(this);
    this.head = this.tail = new Op(noop, 0, 0);
    this.len = 0;
    return this;
};

/**
 * Resets this instance to the last state.
 * @returns {Writer} `this`
 */
Writer.prototype.reset = function reset() {
    if (this.states) {
        this.head   = this.states.head;
        this.tail   = this.states.tail;
        this.len    = this.states.len;
        this.states = this.states.next;
    } else {
        this.head = this.tail = new Op(noop, 0, 0);
        this.len  = 0;
    }
    return this;
};

/**
 * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.
 * @returns {Writer} `this`
 */
Writer.prototype.ldelim = function ldelim() {
    var head = this.head,
        tail = this.tail,
        len  = this.len;
    this.reset().uint32(len);
    if (len) {
        this.tail.next = head.next; // skip noop
        this.tail = tail;
        this.len += len;
    }
    return this;
};

/**
 * Finishes the write operation.
 * @returns {Uint8Array} Finished buffer
 */
Writer.prototype.finish = function finish() {
    var head = this.head.next, // skip noop
        buf  = this.constructor.alloc(this.len),
        pos  = 0;
    while (head) {
        head.fn(head.val, buf, pos);
        pos += head.len;
        head = head.next;
    }
    // this.head = this.tail = null;
    return buf;
};

Writer._configure = function(BufferWriter_) {
    BufferWriter = BufferWriter_;
};


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = nextTick;
} else {
  module.exports = process.nextTick;
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

var Transform = __webpack_require__(191)
  , inherits  = __webpack_require__(1).inherits
  , xtend     = __webpack_require__(26)

function DestroyableTransform(opts) {
  Transform.call(this, opts)
  this._destroyed = false
}

inherits(DestroyableTransform, Transform)

DestroyableTransform.prototype.destroy = function(err) {
  if (this._destroyed) return
  this._destroyed = true
  
  var self = this
  process.nextTick(function() {
    if (err)
      self.emit('error', err)
    self.emit('close')
  })
}

// a noop _transform function
function noop (chunk, enc, callback) {
  callback(null, chunk)
}


// create a new export function, used by both the main export and
// the .ctor export, contains common logic for dealing with arguments
function through2 (construct) {
  return function (options, transform, flush) {
    if (typeof options == 'function') {
      flush     = transform
      transform = options
      options   = {}
    }

    if (typeof transform != 'function')
      transform = noop

    if (typeof flush != 'function')
      flush = null

    return construct(options, transform, flush)
  }
}


// main export, just make me a transform stream!
module.exports = through2(function (options, transform, flush) {
  var t2 = new DestroyableTransform(options)

  t2._transform = transform

  if (flush)
    t2._flush = flush

  return t2
})


// make me a reusable prototype that I can `new`, or implicitly `new`
// with a constructor call
module.exports.ctor = through2(function (options, transform, flush) {
  function Through2 (override) {
    if (!(this instanceof Through2))
      return new Through2(override)

    this.options = xtend(options, override)

    DestroyableTransform.call(this, this.options)
  }

  inherits(Through2, DestroyableTransform)

  Through2.prototype._transform = transform

  if (flush)
    Through2.prototype._flush = flush

  return Through2
})


module.exports.obj = through2(function (options, transform, flush) {
  var t2 = new DestroyableTransform(xtend({ objectMode: true, highWaterMark: 16 }, options))

  t2._transform = transform

  if (flush)
    t2._flush = flush

  return t2
})


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * For Node.js, simply re-export the core `util.deprecate` function.
 */

module.exports = __webpack_require__(1).deprecate;


/***/ }),
/* 45 */
/***/ (function(module, exports) {

module.exports = require("https");

/***/ }),
/* 46 */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = asPromise;

/**
 * Callback as used by {@link util.asPromise}.
 * @typedef asPromiseCallback
 * @type {function}
 * @param {Error|null} error Error, if any
 * @param {...*} params Additional arguments
 * @returns {undefined}
 */

/**
 * Returns a promise from a node-style callback function.
 * @memberof util
 * @param {asPromiseCallback} fn Function to call
 * @param {*} ctx Function context
 * @param {...*} params Function arguments
 * @returns {Promise<*>} Promisified function
 */
function asPromise(fn, ctx/*, varargs */) {
    var params  = new Array(arguments.length - 1),
        offset  = 0,
        index   = 2,
        pending = true;
    while (index < arguments.length)
        params[offset++] = arguments[index++];
    return new Promise(function executor(resolve, reject) {
        params[offset] = function callback(err/*, varargs */) {
            if (pending) {
                pending = false;
                if (err)
                    reject(err);
                else {
                    var params = new Array(arguments.length - 1),
                        offset = 0;
                    while (offset < params.length)
                        params[offset++] = arguments[offset];
                    resolve.apply(null, params);
                }
            }
        };
        try {
            fn.apply(ctx || null, params);
        } catch (err) {
            if (pending) {
                pending = false;
                reject(err);
            }
        }
    });
}


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = inquire;

/**
 * Requires a module only if available.
 * @memberof util
 * @param {string} moduleName Module to require
 * @returns {?Object} Required module if available and not empty, otherwise `null`
 */
function inquire(moduleName) {
    try {
        var mod = eval("quire".replace(/^/,"re"))(moduleName); // eslint-disable-line no-eval
        if (mod && (mod.length || Object.keys(mod).length))
            return mod;
    } catch (e) {} // eslint-disable-line no-empty
    return null;
}


/***/ }),
/* 49 */
/***/ (function(module, exports) {

/* Copyright (c) 2017 Rod Vagg, MIT License */

function AbstractChainedBatch (db) {
  this._db = db
  this._operations = []
  this._written = false
}

AbstractChainedBatch.prototype._serializeKey = function (key) {
  return this._db._serializeKey(key)
}

AbstractChainedBatch.prototype._serializeValue = function (value) {
  return this._db._serializeValue(value)
}

AbstractChainedBatch.prototype._checkWritten = function () {
  if (this._written) {
    throw new Error('write() already called on this batch')
  }
}

AbstractChainedBatch.prototype.put = function (key, value) {
  this._checkWritten()

  var err = this._db._checkKey(key, 'key')
  if (err) { throw err }

  key = this._serializeKey(key)
  value = this._serializeValue(value)

  this._put(key, value)

  return this
}

AbstractChainedBatch.prototype._put = function (key, value) {
  this._operations.push({ type: 'put', key: key, value: value })
}

AbstractChainedBatch.prototype.del = function (key) {
  this._checkWritten()

  var err = this._db._checkKey(key, 'key')
  if (err) { throw err }

  key = this._serializeKey(key)
  this._del(key)

  return this
}

AbstractChainedBatch.prototype._del = function (key) {
  this._operations.push({ type: 'del', key: key })
}

AbstractChainedBatch.prototype.clear = function () {
  this._checkWritten()
  this._operations = []
  this._clear()

  return this
}

AbstractChainedBatch.prototype._clear = function noop () {}

AbstractChainedBatch.prototype.write = function (options, callback) {
  this._checkWritten()

  if (typeof options === 'function') { callback = options }
  if (typeof callback !== 'function') {
    throw new Error('write() requires a callback argument')
  }
  if (typeof options !== 'object') { options = {} }

  this._written = true

  // @ts-ignore
  if (typeof this._write === 'function') { return this._write(callback) }

  if (typeof this._db._batch === 'function') {
    return this._db._batch(this._operations, options, callback)
  }

  process.nextTick(callback)
}

module.exports = AbstractChainedBatch


/***/ }),
/* 50 */
/***/ (function(module, exports) {

/* Copyright (c) 2017 Rod Vagg, MIT License */

function AbstractIterator (db) {
  this.db = db
  this._ended = false
  this._nexting = false
}

AbstractIterator.prototype.next = function (callback) {
  var self = this

  if (typeof callback !== 'function') {
    throw new Error('next() requires a callback argument')
  }

  if (self._ended) {
    process.nextTick(callback, new Error('cannot call next() after end()'))
    return self
  }

  if (self._nexting) {
    process.nextTick(callback, new Error('cannot call next() before previous next() has completed'))
    return self
  }

  self._nexting = true
  self._next(function () {
    self._nexting = false
    callback.apply(null, arguments)
  })

  return self
}

AbstractIterator.prototype._next = function (callback) {
  process.nextTick(callback)
}

AbstractIterator.prototype.end = function (callback) {
  if (typeof callback !== 'function') {
    throw new Error('end() requires a callback argument')
  }

  if (this._ended) {
    return process.nextTick(callback, new Error('end() already called on iterator'))
  }

  this._ended = true
  this._end(callback)
}

AbstractIterator.prototype._end = function (callback) {
  process.nextTick(callback)
}

module.exports = AbstractIterator


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

exports.AbstractLevelDOWN = __webpack_require__(115)
exports.AbstractIterator = __webpack_require__(50)
exports.AbstractChainedBatch = __webpack_require__(49)


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.request = request;
  error.response = response;
  return error;
};


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(31);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  // Note: status is not exposed by XDomainRequest
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      }

      if (!utils.isArray(val)) {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),
/* 58 */
/***/ (function(module, exports) {

function webpackEmptyContext(req) {
	throw new Error("Cannot find module '" + req + "'.");
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
module.exports = webpackEmptyContext;
webpackEmptyContext.id = 58;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(__filename) {
/**
 * Module dependencies.
 */

var fs = __webpack_require__(28)
  , path = __webpack_require__(46)
  , join = path.join
  , dirname = path.dirname
  , exists = ((fs.accessSync && function (path) { try { fs.accessSync(path); } catch (e) { return false; } return true; })
      || fs.existsSync || path.existsSync)
  , defaults = {
        arrow: process.env.NODE_BINDINGS_ARROW || ' → '
      , compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled'
      , platform: process.platform
      , arch: process.arch
      , version: process.versions.node
      , bindings: 'bindings.node'
      , try: [
          // node-gyp's linked version in the "build" dir
          [ 'module_root', 'build', 'bindings' ]
          // node-waf and gyp_addon (a.k.a node-gyp)
        , [ 'module_root', 'build', 'Debug', 'bindings' ]
        , [ 'module_root', 'build', 'Release', 'bindings' ]
          // Debug files, for development (legacy behavior, remove for node v0.9)
        , [ 'module_root', 'out', 'Debug', 'bindings' ]
        , [ 'module_root', 'Debug', 'bindings' ]
          // Release files, but manually compiled (legacy behavior, remove for node v0.9)
        , [ 'module_root', 'out', 'Release', 'bindings' ]
        , [ 'module_root', 'Release', 'bindings' ]
          // Legacy from node-waf, node <= 0.4.x
        , [ 'module_root', 'build', 'default', 'bindings' ]
          // Production "Release" buildtype binary (meh...)
        , [ 'module_root', 'compiled', 'version', 'platform', 'arch', 'bindings' ]
        ]
    }

/**
 * The main `bindings()` function loads the compiled bindings for a given module.
 * It uses V8's Error API to determine the parent filename that this function is
 * being invoked from, which is then used to find the root directory.
 */

function bindings (opts) {

  // Argument surgery
  if (typeof opts == 'string') {
    opts = { bindings: opts }
  } else if (!opts) {
    opts = {}
  }

  // maps `defaults` onto `opts` object
  Object.keys(defaults).map(function(i) {
    if (!(i in opts)) opts[i] = defaults[i];
  });

  // Get the module root
  if (!opts.module_root) {
    opts.module_root = exports.getRoot(exports.getFileName())
  }

  // Ensure the given bindings name ends with .node
  if (path.extname(opts.bindings) != '.node') {
    opts.bindings += '.node'
  }

  var tries = []
    , i = 0
    , l = opts.try.length
    , n
    , b
    , err

  for (; i<l; i++) {
    n = join.apply(null, opts.try[i].map(function (p) {
      return opts[p] || p
    }))
    tries.push(n)
    try {
      b = opts.path ? /*require.resolve*/(!(function webpackMissingModule() { var e = new Error("Cannot find module \".\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())) : !(function webpackMissingModule() { var e = new Error("Cannot find module \".\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())
      if (!opts.path) {
        b.path = n
      }
      return b
    } catch (e) {
      if (!/not find/i.test(e.message)) {
        throw e
      }
    }
  }

  err = new Error('Could not locate the bindings file. Tried:\n'
    + tries.map(function (a) { return opts.arrow + a }).join('\n'))
  err.tries = tries
  throw err
}
module.exports = exports = bindings


/**
 * Gets the filename of the JavaScript file that invokes this function.
 * Used to help find the root directory of a module.
 * Optionally accepts an filename argument to skip when searching for the invoking filename
 */

exports.getFileName = function getFileName (calling_file) {
  var origPST = Error.prepareStackTrace
    , origSTL = Error.stackTraceLimit
    , dummy = {}
    , fileName

  Error.stackTraceLimit = 10

  Error.prepareStackTrace = function (e, st) {
    for (var i=0, l=st.length; i<l; i++) {
      fileName = st[i].getFileName()
      if (fileName !== __filename) {
        if (calling_file) {
            if (fileName !== calling_file) {
              return
            }
        } else {
          return
        }
      }
    }
  }

  // run the 'prepareStackTrace' function above
  Error.captureStackTrace(dummy)
  dummy.stack

  // cleanup
  Error.prepareStackTrace = origPST
  Error.stackTraceLimit = origSTL

  return fileName
}

/**
 * Gets the root directory of a module, given an arbitrary filename
 * somewhere in the module tree. The "root directory" is the directory
 * containing the `package.json` file.
 *
 *   In:  /home/nate/node-native-module/lib/index.js
 *   Out: /home/nate/node-native-module
 */

exports.getRoot = function getRoot (file) {
  var dir = dirname(file)
    , prev
  while (true) {
    if (dir === '.') {
      // Avoids an infinite loop in rare cases, like the REPL
      dir = process.cwd()
    }
    if (exists(join(dir, 'package.json')) || exists(join(dir, 'node_modules'))) {
      // Found the 'package.json' file or 'node_modules' dir; we're done
      return dir
    }
    if (prev === dir) {
      // Got to the top
      throw new Error('Could not find module root given file: "' + file
                    + '". Do you have a `package.json` file? ')
    }
    // Try the parent dir next
    prev = dir
    dir = join(dir, '..')
  }
}

/* WEBPACK VAR INJECTION */}.call(exports, "/index.js"))

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

var stream = __webpack_require__(146)
var eos = __webpack_require__(66)
var inherits = __webpack_require__(0)
var shift = __webpack_require__(186)

var SIGNAL_FLUSH = new Buffer([0])

var onuncork = function(self, fn) {
  if (self._corked) self.once('uncork', fn)
  else fn()
}

var destroyer = function(self, end) {
  return function(err) {
    if (err) self._destroyInterval(err)
    else if (end && !self._ended) self.end()
  }
}

var end = function(ws, fn) {
  if (!ws) return fn()
  if (ws._writableState && ws._writableState.finished) return fn()
  if (ws._writableState) return ws.end(fn)
  ws.end()
  fn()
}

var toStreams2 = function(rs) {
  return new (stream.Readable)({objectMode:true, highWaterMark:16}).wrap(rs)
}

var Duplexify = function(writable, readable, opts) {
  if (!(this instanceof Duplexify)) return new Duplexify(writable, readable, opts)
  stream.Duplex.call(this, opts)

  this._writable = null
  this._readable = null
  this._readable2 = null

  this._forwardDestroy = !opts || opts.destroy !== false
  this._forwardEnd = !opts || opts.end !== false
  this._corked = 1 // start corked
  this._ondrain = null
  this._drained = false
  this._forwarding = false
  this._unwrite = null
  this._unread = null
  this._ended = false
  this._error = null
  this._preferError = false

  this.destroyed = false

  if (writable) this.setWritable(writable)
  if (readable) this.setReadable(readable)
}

inherits(Duplexify, stream.Duplex)

Duplexify.obj = function(writable, readable, opts) {
  if (!opts) opts = {}
  opts.objectMode = true
  opts.highWaterMark = 16
  return new Duplexify(writable, readable, opts)
}

Duplexify.prototype.cork = function() {
  if (++this._corked === 1) this.emit('cork')
}

Duplexify.prototype.uncork = function() {
  if (this._corked && --this._corked === 0) this.emit('uncork')
}

Duplexify.prototype.setWritable = function(writable) {
  if (this._unwrite) this._unwrite()

  if (this.destroyed) {
    if (writable && writable.destroy) writable.destroy()
    return
  }

  if (writable === null || writable === false) {
    this.end()
    return
  }

  var self = this
  var unend = eos(writable, {writable:true, readable:false}, destroyer(this, this._forwardEnd))

  var ondrain = function() {
    var ondrain = self._ondrain
    self._ondrain = null
    if (ondrain) ondrain()
  }

  var clear = function() {
    self._writable.removeListener('drain', ondrain)
    unend()
  }

  if (this._unwrite) process.nextTick(ondrain) // force a drain on stream reset to avoid livelocks

  this._writable = writable
  this._writable.on('drain', ondrain)
  this._unwrite = clear

  this.uncork() // always uncork setWritable
}

Duplexify.prototype.setReadable = function(readable) {
  if (this._unread) this._unread()

  if (this.destroyed) {
    if (readable && readable.destroy) readable.destroy()
    return
  }

  if (readable === null || readable === false) {
    this.push(null)
    this.resume()
    return
  }

  var self = this
  var unend = eos(readable, {writable:false, readable:true}, destroyer(this))

  var onreadable = function() {
    self._forward()
  }

  var onend = function() {
    self.push(null)
  }

  var clear = function() {
    self._readable2.removeListener('readable', onreadable)
    self._readable2.removeListener('end', onend)
    unend()
  }

  this._drained = true
  this._readable = readable
  this._readable2 = readable._readableState ? readable : toStreams2(readable)
  this._readable2.on('readable', onreadable)
  this._readable2.on('end', onend)
  this._unread = clear

  this._forward()
}

Duplexify.prototype._read = function() {
  this._drained = true
  this._forward()
}

Duplexify.prototype._forward = function() {
  if (this._forwarding || !this._readable2 || !this._drained) return
  this._forwarding = true

  var data

  while (this._drained && (data = shift(this._readable2)) !== null) {
    if (this.destroyed) continue
    this._drained = this.push(data)
  }

  this._forwarding = false
}

Duplexify.prototype.destroy = function(err) {
  if (this._preferError && !this._error && err) this._error = err

  if (this.destroyed) return
  this.destroyed = true

  var self = this
  process.nextTick(function() {
    self._destroy(self._preferError ? self._error : err)
  })
}

Duplexify.prototype._destroyInterval = function(err) {
  if (this.destroyed) return
  if (err.message !== 'premature close') return this.destroy(err)
  this._preferError = true
  this.destroy(null)
}

Duplexify.prototype._destroy = function(err) {
  if (err) {
    var ondrain = this._ondrain
    this._ondrain = null
    if (ondrain) ondrain(err)
    else this.emit('error', err)
  }

  if (this._forwardDestroy) {
    if (this._readable && this._readable.destroy) this._readable.destroy()
    if (this._writable && this._writable.destroy) this._writable.destroy()
  }

  this.emit('close')
}

Duplexify.prototype._write = function(data, enc, cb) {
  if (this.destroyed) return cb()
  if (this._corked) return onuncork(this, this._write.bind(this, data, enc, cb))
  if (data === SIGNAL_FLUSH) return this._finish(cb)
  if (!this._writable) return cb()

  if (this._writable.write(data) === false) this._ondrain = cb
  else cb()
}


Duplexify.prototype._finish = function(cb) {
  var self = this
  this.emit('preend')
  onuncork(this, function() {
    end(self._forwardEnd && self._writable, function() {
      // haxx to not emit prefinish twice
      if (self._writableState.prefinished === false) self._writableState.prefinished = true
      self.emit('prefinish')
      onuncork(self, cb)
    })
  })
}

Duplexify.prototype.end = function(data, enc, cb) {
  if (typeof data === 'function') return this.end(null, null, data)
  if (typeof enc === 'function') return this.end(data, null, enc)
  this._ended = true
  if (data) this.write(data)
  if (!this._writableState.ending) this.write(SIGNAL_FLUSH)
  return stream.Writable.prototype.end.call(this, cb)
}

module.exports = Duplexify


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var processNextTick = __webpack_require__(8).nextTick;
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = __webpack_require__(33);
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = __webpack_require__(7).EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(65);
/*</replacement>*/

/*<replacement>*/

var Buffer = __webpack_require__(11).Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

/*<replacement>*/
var debugUtil = __webpack_require__(1);
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = __webpack_require__(145);
var destroyImpl = __webpack_require__(64);
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || __webpack_require__(14);

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = __webpack_require__(24).StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __webpack_require__(14);

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = __webpack_require__(24).StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.



module.exports = Transform;

var Duplex = __webpack_require__(14);

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.



/*<replacement>*/

var processNextTick = __webpack_require__(8).nextTick;
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: __webpack_require__(44)
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(65);
/*</replacement>*/

/*<replacement>*/

var Buffer = __webpack_require__(11).Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

var destroyImpl = __webpack_require__(64);

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || __webpack_require__(14);

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __webpack_require__(14);

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    processNextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    processNextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      processNextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*<replacement>*/

var processNextTick = __webpack_require__(8).nextTick;
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      processNextTick(emitErrorNT, this, err);
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      processNextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(9);


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

var once = __webpack_require__(71);

var noop = function() {};

var isRequest = function(stream) {
	return stream.setHeader && typeof stream.abort === 'function';
};

var isChildProcess = function(stream) {
	return stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3
};

var eos = function(stream, opts, callback) {
	if (typeof opts === 'function') return eos(stream, null, opts);
	if (!opts) opts = {};

	callback = once(callback || noop);

	var ws = stream._writableState;
	var rs = stream._readableState;
	var readable = opts.readable || (opts.readable !== false && stream.readable);
	var writable = opts.writable || (opts.writable !== false && stream.writable);

	var onlegacyfinish = function() {
		if (!stream.writable) onfinish();
	};

	var onfinish = function() {
		writable = false;
		if (!readable) callback.call(stream);
	};

	var onend = function() {
		readable = false;
		if (!writable) callback.call(stream);
	};

	var onexit = function(exitCode) {
		callback.call(stream, exitCode ? new Error('exited with error code: ' + exitCode) : null);
	};

	var onerror = function(err) {
		callback.call(stream, err);
	};

	var onclose = function() {
		if (readable && !(rs && rs.ended)) return callback.call(stream, new Error('premature close'));
		if (writable && !(ws && ws.ended)) return callback.call(stream, new Error('premature close'));
	};

	var onrequest = function() {
		stream.req.on('finish', onfinish);
	};

	if (isRequest(stream)) {
		stream.on('complete', onfinish);
		stream.on('abort', onclose);
		if (stream.req) onrequest();
		else stream.on('request', onrequest);
	} else if (writable && !ws) { // legacy streams
		stream.on('end', onlegacyfinish);
		stream.on('close', onlegacyfinish);
	}

	if (isChildProcess(stream)) stream.on('exit', onexit);

	stream.on('end', onend);
	stream.on('finish', onfinish);
	if (opts.error !== false) stream.on('error', onerror);
	stream.on('close', onclose);

	return function() {
		stream.removeListener('complete', onfinish);
		stream.removeListener('abort', onclose);
		stream.removeListener('request', onrequest);
		if (stream.req) stream.req.removeListener('finish', onfinish);
		stream.removeListener('end', onlegacyfinish);
		stream.removeListener('close', onlegacyfinish);
		stream.removeListener('finish', onfinish);
		stream.removeListener('exit', onexit);
		stream.removeListener('end', onend);
		stream.removeListener('error', onerror);
		stream.removeListener('close', onclose);
	};
};

module.exports = eos;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

var url = __webpack_require__(21);
var http = __webpack_require__(29);
var https = __webpack_require__(45);
var assert = __webpack_require__(102);
var Writable = __webpack_require__(9).Writable;
var debug = __webpack_require__(148)("follow-redirects");

// RFC7231§4.2.1: Of the request methods defined by this specification,
// the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.
var SAFE_METHODS = { GET: true, HEAD: true, OPTIONS: true, TRACE: true };

// Create handlers that pass events from native requests
var eventHandlers = Object.create(null);
["abort", "aborted", "error", "socket", "timeout"].forEach(function (event) {
  eventHandlers[event] = function (arg) {
    this._redirectable.emit(event, arg);
  };
});

// An HTTP(S) request that can be redirected
function RedirectableRequest(options, responseCallback) {
  // Initialize the request
  Writable.call(this);
  options.headers = options.headers || {};
  this._options = options;
  this._redirectCount = 0;
  this._requestBodyLength = 0;
  this._requestBodyBuffers = [];

  // Attach a callback if passed
  if (responseCallback) {
    this.on("response", responseCallback);
  }

  // React to responses of native requests
  var self = this;
  this._onNativeResponse = function (response) {
    self._processResponse(response);
  };

  // Complete the URL object when necessary
  if (!options.pathname && options.path) {
    var searchPos = options.path.indexOf("?");
    if (searchPos < 0) {
      options.pathname = options.path;
    }
    else {
      options.pathname = options.path.substring(0, searchPos);
      options.search = options.path.substring(searchPos);
    }
  }

  // Perform the first request
  this._performRequest();
}
RedirectableRequest.prototype = Object.create(Writable.prototype);

// Writes buffered data to the current native request
RedirectableRequest.prototype.write = function (data, encoding, callback) {
  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {
    this._requestBodyLength += data.length;
    this._requestBodyBuffers.push({ data: data, encoding: encoding });
    this._currentRequest.write(data, encoding, callback);
  }
  else {
    this.emit("error", new Error("Request body larger than maxBodyLength limit"));
    this.abort();
  }
};

// Ends the current native request
RedirectableRequest.prototype.end = function (data, encoding, callback) {
  var currentRequest = this._currentRequest;
  if (!data) {
    currentRequest.end(null, null, callback);
  }
  else {
    this.write(data, encoding, function () {
      currentRequest.end(null, null, callback);
    });
  }
};

// Sets a header value on the current native request
RedirectableRequest.prototype.setHeader = function (name, value) {
  this._options.headers[name] = value;
  this._currentRequest.setHeader(name, value);
};

// Clears a header value on the current native request
RedirectableRequest.prototype.removeHeader = function (name) {
  delete this._options.headers[name];
  this._currentRequest.removeHeader(name);
};

// Proxy all other public ClientRequest methods
[
  "abort", "flushHeaders", "getHeader",
  "setNoDelay", "setSocketKeepAlive", "setTimeout",
].forEach(function (method) {
  RedirectableRequest.prototype[method] = function (a, b) {
    return this._currentRequest[method](a, b);
  };
});

// Proxy all public ClientRequest properties
["aborted", "connection", "socket"].forEach(function (property) {
  Object.defineProperty(RedirectableRequest.prototype, property, {
    get: function () { return this._currentRequest[property]; },
  });
});

// Executes the next native request (initial or redirect)
RedirectableRequest.prototype._performRequest = function () {
  // Load the native protocol
  var protocol = this._options.protocol;
  var nativeProtocol = this._options.nativeProtocols[protocol];

  // If specified, use the agent corresponding to the protocol
  // (HTTP and HTTPS use different types of agents)
  if (this._options.agents) {
    var scheme = protocol.substr(0, protocol.length - 1);
    this._options.agent = this._options.agents[scheme];
  }

  // Create the native request
  var request = this._currentRequest =
        nativeProtocol.request(this._options, this._onNativeResponse);
  this._currentUrl = url.format(this._options);

  // Set up event handlers
  request._redirectable = this;
  for (var event in eventHandlers) {
    /* istanbul ignore else */
    if (event) {
      request.on(event, eventHandlers[event]);
    }
  }

  // End a redirected request
  // (The first request must be ended explicitly with RedirectableRequest#end)
  if (this._isRedirect) {
    // Write the request entity and end.
    var requestBodyBuffers = this._requestBodyBuffers;
    (function writeNext() {
      if (requestBodyBuffers.length !== 0) {
        var buffer = requestBodyBuffers.pop();
        request.write(buffer.data, buffer.encoding, writeNext);
      }
      else {
        request.end();
      }
    }());
  }
};

// Processes a response from the current native request
RedirectableRequest.prototype._processResponse = function (response) {
  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates
  // that further action needs to be taken by the user agent in order to
  // fulfill the request. If a Location header field is provided,
  // the user agent MAY automatically redirect its request to the URI
  // referenced by the Location field value,
  // even if the specific status code is not understood.
  var location = response.headers.location;
  if (location && this._options.followRedirects !== false &&
      response.statusCode >= 300 && response.statusCode < 400) {
    // RFC7231§6.4: A client SHOULD detect and intervene
    // in cyclical redirections (i.e., "infinite" redirection loops).
    if (++this._redirectCount > this._options.maxRedirects) {
      this.emit("error", new Error("Max redirects exceeded."));
      return;
    }

    // RFC7231§6.4: Automatic redirection needs to done with
    // care for methods not known to be safe […],
    // since the user might not wish to redirect an unsafe request.
    // RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates
    // that the target resource resides temporarily under a different URI
    // and the user agent MUST NOT change the request method
    // if it performs an automatic redirection to that URI.
    var header;
    var headers = this._options.headers;
    if (response.statusCode !== 307 && !(this._options.method in SAFE_METHODS)) {
      this._options.method = "GET";
      // Drop a possible entity and headers related to it
      this._requestBodyBuffers = [];
      for (header in headers) {
        if (/^content-/i.test(header)) {
          delete headers[header];
        }
      }
    }

    // Drop the Host header, as the redirect might lead to a different host
    if (!this._isRedirect) {
      for (header in headers) {
        if (/^host$/i.test(header)) {
          delete headers[header];
        }
      }
    }

    // Perform the redirected request
    var redirectUrl = url.resolve(this._currentUrl, location);
    debug("redirecting to", redirectUrl);
    Object.assign(this._options, url.parse(redirectUrl));
    this._isRedirect = true;
    this._performRequest();
  }
  else {
    // The response is not a redirect; return it as-is
    response.responseUrl = this._currentUrl;
    this.emit("response", response);

    // Clean up
    this._requestBodyBuffers = [];
  }
};

// Wraps the key/value object of protocols with redirect functionality
function wrap(protocols) {
  // Default settings
  var exports = {
    maxRedirects: 21,
    maxBodyLength: 10 * 1024 * 1024,
  };

  // Wrap each protocol
  var nativeProtocols = {};
  Object.keys(protocols).forEach(function (scheme) {
    var protocol = scheme + ":";
    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];
    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);

    // Executes a request, following redirects
    wrappedProtocol.request = function (options, callback) {
      if (typeof options === "string") {
        options = url.parse(options);
        options.maxRedirects = exports.maxRedirects;
      }
      else {
        options = Object.assign({
          protocol: protocol,
          maxRedirects: exports.maxRedirects,
          maxBodyLength: exports.maxBodyLength,
        }, options);
      }
      options.nativeProtocols = nativeProtocols;
      assert.equal(options.protocol, protocol, "protocol mismatch");
      debug("options", options);
      return new RedirectableRequest(options, callback);
    };

    // Executes a GET request, following redirects
    wrappedProtocol.get = function (options, callback) {
      var request = wrappedProtocol.request(options, callback);
      request.end();
      return request;
    };
  });
  return exports;
}

// Exports
module.exports = wrap({ http: http, https: https });
module.exports.wrap = wrap;


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = __webpack_require__(150);

/**
 * Active `debug` instances.
 */
exports.instances = [];

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  var prevTime;

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);
  debug.destroy = destroy;

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  exports.instances.push(debug);

  return debug;
}

function destroy () {
  var index = exports.instances.indexOf(this);
  if (index !== -1) {
    exports.instances.splice(index, 1);
    return true;
  } else {
    return false;
  }
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var i;
  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }

  for (i = 0; i < exports.instances.length; i++) {
    var instance = exports.instances[i];
    instance.enabled = exports.enabled(instance.namespace);
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  if (name[name.length - 1] === '*') {
    return true;
  }
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

/* Copyright (c) 2012-2017 LevelUP contributors
 * See list at <https://github.com/rvagg/node-levelup#contributing>
 * MIT License
 * <https://github.com/rvagg/node-levelup/blob/master/LICENSE.md>
 */

var createError = __webpack_require__(157).create
var LevelUPError = createError('LevelUPError')
var NotFoundError = createError('NotFoundError', LevelUPError)

NotFoundError.prototype.notFound = true
NotFoundError.prototype.status = 404

module.exports = {
  LevelUPError: LevelUPError,
  InitializationError: createError('InitializationError', LevelUPError),
  OpenError: createError('OpenError', LevelUPError),
  ReadError: createError('ReadError', LevelUPError),
  WriteError: createError('WriteError', LevelUPError),
  NotFoundError: NotFoundError,
  EncodingError: createError('EncodingError', LevelUPError)
}


/***/ }),
/* 70 */
/***/ (function(module, exports) {

/* Copyright (c) 2012-2018 LevelUP contributors
 * See list at <https://github.com/level/levelup#contributing>
 * MIT License
 * <https://github.com/level/levelup/blob/master/LICENSE.md>
 */

function promisify () {
  var callback
  var promise = new Promise(function (resolve, reject) {
    callback = function callback (err, value) {
      if (err) reject(err)
      else resolve(value)
    }
  })
  callback.promise = promise
  return callback
}

module.exports = promisify


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var wrappy = __webpack_require__(197)
module.exports = wrappy(once)
module.exports.strict = wrappy(onceStrict)

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function () {
      return once(this)
    },
    configurable: true
  })

  Object.defineProperty(Function.prototype, 'onceStrict', {
    value: function () {
      return onceStrict(this)
    },
    configurable: true
  })
})

function once (fn) {
  var f = function () {
    if (f.called) return f.value
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  f.called = false
  return f
}

function onceStrict (fn) {
  var f = function () {
    if (f.called)
      throw new Error(f.onceError)
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  var name = fn.name || 'Function wrapped with `once`'
  f.onceError = name + " shouldn't be called more than once"
  f.called = false
  return f
}


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var fs = __webpack_require__(28);

function Options(defaults) {
  var internalValues = {};
  var values = this.value = {};
  Object.keys(defaults).forEach(function(key) {
    internalValues[key] = defaults[key];
    Object.defineProperty(values, key, {
      get: function() { return internalValues[key]; },
      configurable: false,
      enumerable: true
    });
  });
  this.reset = function() {
    Object.keys(defaults).forEach(function(key) {
      internalValues[key] = defaults[key];
    });
    return this;
  };
  this.merge = function(options, required) {
    options = options || {};
    if (Object.prototype.toString.call(required) === '[object Array]') {
      var missing = [];
      for (var i = 0, l = required.length; i < l; ++i) {
        var key = required[i];
        if (!(key in options)) {
          missing.push(key);
        }
      }
      if (missing.length > 0) {
        if (missing.length > 1) {
          throw new Error('options ' +
            missing.slice(0, missing.length - 1).join(', ') + ' and ' +
            missing[missing.length - 1] + ' must be defined');
        }
        else throw new Error('option ' + missing[0] + ' must be defined');
      }
    }
    Object.keys(options).forEach(function(key) {
      if (key in internalValues) {
        internalValues[key] = options[key];
      }
    });
    return this;
  };
  this.copy = function(keys) {
    var obj = {};
    Object.keys(defaults).forEach(function(key) {
      if (keys.indexOf(key) !== -1) {
        obj[key] = values[key];
      }
    });
    return obj;
  };
  this.read = function(filename, cb) {
    if (typeof cb == 'function') {
      var self = this;
      fs.readFile(filename, function(error, data) {
        if (error) return cb(error);
        var conf = JSON.parse(data);
        self.merge(conf);
        cb();
      });
    }
    else {
      var conf = JSON.parse(fs.readFileSync(filename));
      this.merge(conf);
    }
    return this;
  };
  this.isDefined = function(key) {
    return typeof values[key] != 'undefined';
  };
  this.isDefinedAndNonNull = function(key) {
    return typeof values[key] != 'undefined' && values[key] !== null;
  };
  Object.freeze(values);
  Object.freeze(this);
}

module.exports = Options;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// full library entry point.


module.exports = __webpack_require__(169);


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Runtime message from/to plain object converters.
 * @namespace
 */
var converter = exports;

var Enum = __webpack_require__(5),
    util = __webpack_require__(2);

/**
 * Generates a partial value fromObject conveter.
 * @param {Codegen} gen Codegen instance
 * @param {Field} field Reflected field
 * @param {number} fieldIndex Field index
 * @param {string} prop Property reference
 * @returns {Codegen} Codegen instance
 * @ignore
 */
function genValuePartial_fromObject(gen, field, fieldIndex, prop) {
    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */
    if (field.resolvedType) {
        if (field.resolvedType instanceof Enum) { gen
            ("switch(d%s){", prop);
            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {
                if (field.repeated && values[keys[i]] === field.typeDefault) gen
                ("default:");
                gen
                ("case%j:", keys[i])
                ("case %i:", values[keys[i]])
                    ("m%s=%j", prop, values[keys[i]])
                    ("break");
            } gen
            ("}");
        } else gen
            ("if(typeof d%s!==\"object\")", prop)
                ("throw TypeError(%j)", field.fullName + ": object expected")
            ("m%s=types[%i].fromObject(d%s)", prop, fieldIndex, prop);
    } else {
        var isUnsigned = false;
        switch (field.type) {
            case "double":
            case "float": gen
                ("m%s=Number(d%s)", prop, prop); // also catches "NaN", "Infinity"
                break;
            case "uint32":
            case "fixed32": gen
                ("m%s=d%s>>>0", prop, prop);
                break;
            case "int32":
            case "sint32":
            case "sfixed32": gen
                ("m%s=d%s|0", prop, prop);
                break;
            case "uint64":
                isUnsigned = true;
                // eslint-disable-line no-fallthrough
            case "int64":
            case "sint64":
            case "fixed64":
            case "sfixed64": gen
                ("if(util.Long)")
                    ("(m%s=util.Long.fromValue(d%s)).unsigned=%j", prop, prop, isUnsigned)
                ("else if(typeof d%s===\"string\")", prop)
                    ("m%s=parseInt(d%s,10)", prop, prop)
                ("else if(typeof d%s===\"number\")", prop)
                    ("m%s=d%s", prop, prop)
                ("else if(typeof d%s===\"object\")", prop)
                    ("m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)", prop, prop, prop, isUnsigned ? "true" : "");
                break;
            case "bytes": gen
                ("if(typeof d%s===\"string\")", prop)
                    ("util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)", prop, prop, prop)
                ("else if(d%s.length)", prop)
                    ("m%s=d%s", prop, prop);
                break;
            case "string": gen
                ("m%s=String(d%s)", prop, prop);
                break;
            case "bool": gen
                ("m%s=Boolean(d%s)", prop, prop);
                break;
            /* default: gen
                ("m%s=d%s", prop, prop);
                break; */
        }
    }
    return gen;
    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */
}

/**
 * Generates a plain object to runtime message converter specific to the specified message type.
 * @param {Type} mtype Message type
 * @returns {Codegen} Codegen instance
 */
converter.fromObject = function fromObject(mtype) {
    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */
    var fields = mtype.fieldsArray;
    var gen = util.codegen(["d"], mtype.name + "$fromObject")
    ("if(d instanceof this.ctor)")
        ("return d");
    if (!fields.length) return gen
    ("return new this.ctor");
    gen
    ("var m=new this.ctor");
    for (var i = 0; i < fields.length; ++i) {
        var field  = fields[i].resolve(),
            prop   = util.safeProp(field.name);

        // Map fields
        if (field.map) { gen
    ("if(d%s){", prop)
        ("if(typeof d%s!==\"object\")", prop)
            ("throw TypeError(%j)", field.fullName + ": object expected")
        ("m%s={}", prop)
        ("for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){", prop);
            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + "[ks[i]]")
        ("}")
    ("}");

        // Repeated fields
        } else if (field.repeated) { gen
    ("if(d%s){", prop)
        ("if(!Array.isArray(d%s))", prop)
            ("throw TypeError(%j)", field.fullName + ": array expected")
        ("m%s=[]", prop)
        ("for(var i=0;i<d%s.length;++i){", prop);
            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + "[i]")
        ("}")
    ("}");

        // Non-repeated fields
        } else {
            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)
    ("if(d%s!=null){", prop); // !== undefined && !== null
        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);
            if (!(field.resolvedType instanceof Enum)) gen
    ("}");
        }
    } return gen
    ("return m");
    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */
};

/**
 * Generates a partial value toObject converter.
 * @param {Codegen} gen Codegen instance
 * @param {Field} field Reflected field
 * @param {number} fieldIndex Field index
 * @param {string} prop Property reference
 * @returns {Codegen} Codegen instance
 * @ignore
 */
function genValuePartial_toObject(gen, field, fieldIndex, prop) {
    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */
    if (field.resolvedType) {
        if (field.resolvedType instanceof Enum) gen
            ("d%s=o.enums===String?types[%i].values[m%s]:m%s", prop, fieldIndex, prop, prop);
        else gen
            ("d%s=types[%i].toObject(m%s,o)", prop, fieldIndex, prop);
    } else {
        var isUnsigned = false;
        switch (field.type) {
            case "double":
            case "float": gen
            ("d%s=o.json&&!isFinite(m%s)?String(m%s):m%s", prop, prop, prop, prop);
                break;
            case "uint64":
                isUnsigned = true;
                // eslint-disable-line no-fallthrough
            case "int64":
            case "sint64":
            case "fixed64":
            case "sfixed64": gen
            ("if(typeof m%s===\"number\")", prop)
                ("d%s=o.longs===String?String(m%s):m%s", prop, prop, prop)
            ("else") // Long-like
                ("d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s", prop, prop, prop, prop, isUnsigned ? "true": "", prop);
                break;
            case "bytes": gen
            ("d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s", prop, prop, prop, prop, prop);
                break;
            default: gen
            ("d%s=m%s", prop, prop);
                break;
        }
    }
    return gen;
    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */
}

/**
 * Generates a runtime message to plain object converter specific to the specified message type.
 * @param {Type} mtype Message type
 * @returns {Codegen} Codegen instance
 */
converter.toObject = function toObject(mtype) {
    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */
    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);
    if (!fields.length)
        return util.codegen()("return {}");
    var gen = util.codegen(["m", "o"], mtype.name + "$toObject")
    ("if(!o)")
        ("o={}")
    ("var d={}");

    var repeatedFields = [],
        mapFields = [],
        normalFields = [],
        i = 0;
    for (; i < fields.length; ++i)
        if (!fields[i].partOf)
            ( fields[i].resolve().repeated ? repeatedFields
            : fields[i].map ? mapFields
            : normalFields).push(fields[i]);

    if (repeatedFields.length) { gen
    ("if(o.arrays||o.defaults){");
        for (i = 0; i < repeatedFields.length; ++i) gen
        ("d%s=[]", util.safeProp(repeatedFields[i].name));
        gen
    ("}");
    }

    if (mapFields.length) { gen
    ("if(o.objects||o.defaults){");
        for (i = 0; i < mapFields.length; ++i) gen
        ("d%s={}", util.safeProp(mapFields[i].name));
        gen
    ("}");
    }

    if (normalFields.length) { gen
    ("if(o.defaults){");
        for (i = 0; i < normalFields.length; ++i) {
            var field = normalFields[i],
                prop  = util.safeProp(field.name);
            if (field.resolvedType instanceof Enum) gen
        ("d%s=o.enums===String?%j:%j", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);
            else if (field.long) gen
        ("if(util.Long){")
            ("var n=new util.Long(%i,%i,%j)", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)
            ("d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n", prop)
        ("}else")
            ("d%s=o.longs===String?%j:%i", prop, field.typeDefault.toString(), field.typeDefault.toNumber());
            else if (field.bytes) gen
        ("d%s=o.bytes===String?%j:%s", prop, String.fromCharCode.apply(String, field.typeDefault), "[" + Array.prototype.slice.call(field.typeDefault).join(",") + "]");
            else gen
        ("d%s=%j", prop, field.typeDefault); // also messages (=null)
        } gen
    ("}");
    }
    var hasKs2 = false;
    for (i = 0; i < fields.length; ++i) {
        var field = fields[i],
            index = mtype._fieldsArray.indexOf(field),
            prop  = util.safeProp(field.name);
        if (field.map) {
            if (!hasKs2) { hasKs2 = true; gen
    ("var ks2");
            } gen
    ("if(m%s&&(ks2=Object.keys(m%s)).length){", prop, prop)
        ("d%s={}", prop)
        ("for(var j=0;j<ks2.length;++j){");
            genValuePartial_toObject(gen, field, /* sorted */ index, prop + "[ks2[j]]")
        ("}");
        } else if (field.repeated) { gen
    ("if(m%s&&m%s.length){", prop, prop)
        ("d%s=[]", prop)
        ("for(var j=0;j<m%s.length;++j){", prop);
            genValuePartial_toObject(gen, field, /* sorted */ index, prop + "[j]")
        ("}");
        } else { gen
    ("if(m%s!=null&&m.hasOwnProperty(%j)){", prop, field.name); // !== undefined && !== null
        genValuePartial_toObject(gen, field, /* sorted */ index, prop);
        if (field.partOf) gen
        ("if(o.oneofs)")
            ("d%s=%j", util.safeProp(field.partOf.name), field.name);
        }
        gen
    ("}");
    }
    return gen
    ("return d");
    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */
};


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = decoder;

var Enum    = __webpack_require__(5),
    types   = __webpack_require__(16),
    util    = __webpack_require__(2);

function missing(field) {
    return "missing required '" + field.name + "'";
}

/**
 * Generates a decoder specific to the specified message type.
 * @param {Type} mtype Message type
 * @returns {Codegen} Codegen instance
 */
function decoder(mtype) {
    /* eslint-disable no-unexpected-multiline */
    var gen = util.codegen(["r", "l"], mtype.name + "$decode")
    ("if(!(r instanceof Reader))")
        ("r=Reader.create(r)")
    ("var c=l===undefined?r.len:r.pos+l,m=new this.ctor" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? ",k" : ""))
    ("while(r.pos<c){")
        ("var t=r.uint32()");
    if (mtype.group) gen
        ("if((t&7)===4)")
            ("break");
    gen
        ("switch(t>>>3){");

    var i = 0;
    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {
        var field = mtype._fieldsArray[i].resolve(),
            type  = field.resolvedType instanceof Enum ? "int32" : field.type,
            ref   = "m" + util.safeProp(field.name); gen
            ("case %i:", field.id);

        // Map fields
        if (field.map) { gen
                ("r.skip().pos++") // assumes id 1 + key wireType
                ("if(%s===util.emptyObject)", ref)
                    ("%s={}", ref)
                ("k=r.%s()", field.keyType)
                ("r.pos++"); // assumes id 2 + value wireType
            if (types.long[field.keyType] !== undefined) {
                if (types.basic[type] === undefined) gen
                ("%s[typeof k===\"object\"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())", ref, i); // can't be groups
                else gen
                ("%s[typeof k===\"object\"?util.longToHash(k):k]=r.%s()", ref, type);
            } else {
                if (types.basic[type] === undefined) gen
                ("%s[k]=types[%i].decode(r,r.uint32())", ref, i); // can't be groups
                else gen
                ("%s[k]=r.%s()", ref, type);
            }

        // Repeated fields
        } else if (field.repeated) { gen

                ("if(!(%s&&%s.length))", ref, ref)
                    ("%s=[]", ref);

            // Packable (always check for forward and backward compatiblity)
            if (types.packed[type] !== undefined) gen
                ("if((t&7)===2){")
                    ("var c2=r.uint32()+r.pos")
                    ("while(r.pos<c2)")
                        ("%s.push(r.%s())", ref, type)
                ("}else");

            // Non-packed
            if (types.basic[type] === undefined) gen(field.resolvedType.group
                    ? "%s.push(types[%i].decode(r))"
                    : "%s.push(types[%i].decode(r,r.uint32()))", ref, i);
            else gen
                    ("%s.push(r.%s())", ref, type);

        // Non-repeated
        } else if (types.basic[type] === undefined) gen(field.resolvedType.group
                ? "%s=types[%i].decode(r)"
                : "%s=types[%i].decode(r,r.uint32())", ref, i);
        else gen
                ("%s=r.%s()", ref, type);
        gen
                ("break");
    // Unknown fields
    } gen
            ("default:")
                ("r.skipType(t&7)")
                ("break")

        ("}")
    ("}");

    // Field presence
    for (i = 0; i < mtype._fieldsArray.length; ++i) {
        var rfield = mtype._fieldsArray[i];
        if (rfield.required) gen
    ("if(!m.hasOwnProperty(%j))", rfield.name)
        ("throw util.ProtocolError(%j,{instance:m})", missing(rfield));
    }

    return gen
    ("return m");
    /* eslint-enable no-unexpected-multiline */
}


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = encoder;

var Enum     = __webpack_require__(5),
    types    = __webpack_require__(16),
    util     = __webpack_require__(2);

/**
 * Generates a partial message type encoder.
 * @param {Codegen} gen Codegen instance
 * @param {Field} field Reflected field
 * @param {number} fieldIndex Field index
 * @param {string} ref Variable reference
 * @returns {Codegen} Codegen instance
 * @ignore
 */
function genTypePartial(gen, field, fieldIndex, ref) {
    return field.resolvedType.group
        ? gen("types[%i].encode(%s,w.uint32(%i)).uint32(%i)", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)
        : gen("types[%i].encode(%s,w.uint32(%i).fork()).ldelim()", fieldIndex, ref, (field.id << 3 | 2) >>> 0);
}

/**
 * Generates an encoder specific to the specified message type.
 * @param {Type} mtype Message type
 * @returns {Codegen} Codegen instance
 */
function encoder(mtype) {
    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */
    var gen = util.codegen(["m", "w"], mtype.name + "$encode")
    ("if(!w)")
        ("w=Writer.create()");

    var i, ref;

    // "when a message is serialized its known fields should be written sequentially by field number"
    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);

    for (var i = 0; i < fields.length; ++i) {
        var field    = fields[i].resolve(),
            index    = mtype._fieldsArray.indexOf(field),
            type     = field.resolvedType instanceof Enum ? "int32" : field.type,
            wireType = types.basic[type];
            ref      = "m" + util.safeProp(field.name);

        // Map fields
        if (field.map) {
            gen
    ("if(%s!=null&&m.hasOwnProperty(%j)){", ref, field.name) // !== undefined && !== null
        ("for(var ks=Object.keys(%s),i=0;i<ks.length;++i){", ref)
            ("w.uint32(%i).fork().uint32(%i).%s(ks[i])", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);
            if (wireType === undefined) gen
            ("types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()", index, ref); // can't be groups
            else gen
            (".uint32(%i).%s(%s[ks[i]]).ldelim()", 16 | wireType, type, ref);
            gen
        ("}")
    ("}");

            // Repeated fields
        } else if (field.repeated) { gen
    ("if(%s!=null&&%s.length){", ref, ref); // !== undefined && !== null

            // Packed repeated
            if (field.packed && types.packed[type] !== undefined) { gen

        ("w.uint32(%i).fork()", (field.id << 3 | 2) >>> 0)
        ("for(var i=0;i<%s.length;++i)", ref)
            ("w.%s(%s[i])", type, ref)
        ("w.ldelim()");

            // Non-packed
            } else { gen

        ("for(var i=0;i<%s.length;++i)", ref);
                if (wireType === undefined)
            genTypePartial(gen, field, index, ref + "[i]");
                else gen
            ("w.uint32(%i).%s(%s[i])", (field.id << 3 | wireType) >>> 0, type, ref);

            } gen
    ("}");

        // Non-repeated
        } else {
            if (field.optional) gen
    ("if(%s!=null&&m.hasOwnProperty(%j))", ref, field.name); // !== undefined && !== null

            if (wireType === undefined)
        genTypePartial(gen, field, index, ref);
            else gen
        ("w.uint32(%i).%s(%s)", (field.id << 3 | wireType) >>> 0, type, ref);

        }
    }

    return gen
    ("return w");
    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */
}

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = {};

/**
 * Named roots.
 * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).
 * Can also be used manually to make roots available accross modules.
 * @name roots
 * @type {Object.<string,Root>}
 * @example
 * // pbjs -r myroot -o compiled.js ...
 *
 * // in another module:
 * require("./compiled.js");
 *
 * // in any subsequent module:
 * var root = protobuf.roots["myroot"];
 */


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Streaming RPC helpers.
 * @namespace
 */
var rpc = exports;

/**
 * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.
 * @typedef RPCImpl
 * @type {function}
 * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called
 * @param {Uint8Array} requestData Request data
 * @param {RPCImplCallback} callback Callback function
 * @returns {undefined}
 * @example
 * function rpcImpl(method, requestData, callback) {
 *     if (protobuf.util.lcFirst(method.name) !== "myMethod") // compatible with static code
 *         throw Error("no such method");
 *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {
 *         callback(err, responseData);
 *     });
 * }
 */

/**
 * Node-style callback as used by {@link RPCImpl}.
 * @typedef RPCImplCallback
 * @type {function}
 * @param {Error|null} error Error, if any, otherwise `null`
 * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error
 * @returns {undefined}
 */

rpc.Service = __webpack_require__(172);


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = tokenize;

var delimRe        = /[\s{}=;:[\],'"()<>]/g,
    stringDoubleRe = /(?:"([^"\\]*(?:\\.[^"\\]*)*)")/g,
    stringSingleRe = /(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g;

var setCommentRe = /^ *[*/]+ */,
    setCommentAltRe = /^\s*\*?\/*/,
    setCommentSplitRe = /\n/g,
    whitespaceRe = /\s/,
    unescapeRe = /\\(.?)/g;

var unescapeMap = {
    "0": "\0",
    "r": "\r",
    "n": "\n",
    "t": "\t"
};

/**
 * Unescapes a string.
 * @param {string} str String to unescape
 * @returns {string} Unescaped string
 * @property {Object.<string,string>} map Special characters map
 * @memberof tokenize
 */
function unescape(str) {
    return str.replace(unescapeRe, function($0, $1) {
        switch ($1) {
            case "\\":
            case "":
                return $1;
            default:
                return unescapeMap[$1] || "";
        }
    });
}

tokenize.unescape = unescape;

/**
 * Gets the next token and advances.
 * @typedef TokenizerHandleNext
 * @type {function}
 * @returns {string|null} Next token or `null` on eof
 */

/**
 * Peeks for the next token.
 * @typedef TokenizerHandlePeek
 * @type {function}
 * @returns {string|null} Next token or `null` on eof
 */

/**
 * Pushes a token back to the stack.
 * @typedef TokenizerHandlePush
 * @type {function}
 * @param {string} token Token
 * @returns {undefined}
 */

/**
 * Skips the next token.
 * @typedef TokenizerHandleSkip
 * @type {function}
 * @param {string} expected Expected token
 * @param {boolean} [optional=false] If optional
 * @returns {boolean} Whether the token matched
 * @throws {Error} If the token didn't match and is not optional
 */

/**
 * Gets the comment on the previous line or, alternatively, the line comment on the specified line.
 * @typedef TokenizerHandleCmnt
 * @type {function}
 * @param {number} [line] Line number
 * @returns {string|null} Comment text or `null` if none
 */

/**
 * Handle object returned from {@link tokenize}.
 * @interface ITokenizerHandle
 * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)
 * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)
 * @property {TokenizerHandlePush} push Pushes a token back to the stack
 * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws
 * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any
 * @property {number} line Current line number
 */

/**
 * Tokenizes the given .proto source and returns an object with useful utility functions.
 * @param {string} source Source contents
 * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.
 * @returns {ITokenizerHandle} Tokenizer handle
 */
function tokenize(source, alternateCommentMode) {
    /* eslint-disable callback-return */
    source = source.toString();

    var offset = 0,
        length = source.length,
        line = 1,
        commentType = null,
        commentText = null,
        commentLine = 0,
        commentLineEmpty = false;

    var stack = [];

    var stringDelim = null;

    /* istanbul ignore next */
    /**
     * Creates an error for illegal syntax.
     * @param {string} subject Subject
     * @returns {Error} Error created
     * @inner
     */
    function illegal(subject) {
        return Error("illegal " + subject + " (line " + line + ")");
    }

    /**
     * Reads a string till its end.
     * @returns {string} String read
     * @inner
     */
    function readString() {
        var re = stringDelim === "'" ? stringSingleRe : stringDoubleRe;
        re.lastIndex = offset - 1;
        var match = re.exec(source);
        if (!match)
            throw illegal("string");
        offset = re.lastIndex;
        push(stringDelim);
        stringDelim = null;
        return unescape(match[1]);
    }

    /**
     * Gets the character at `pos` within the source.
     * @param {number} pos Position
     * @returns {string} Character
     * @inner
     */
    function charAt(pos) {
        return source.charAt(pos);
    }

    /**
     * Sets the current comment text.
     * @param {number} start Start offset
     * @param {number} end End offset
     * @returns {undefined}
     * @inner
     */
    function setComment(start, end) {
        commentType = source.charAt(start++);
        commentLine = line;
        commentLineEmpty = false;
        var lookback;
        if (alternateCommentMode) {
            lookback = 2;  // alternate comment parsing: "//" or "/*"
        } else {
            lookback = 3;  // "///" or "/**"
        }
        var commentOffset = start - lookback,
            c;
        do {
            if (--commentOffset < 0 ||
                    (c = source.charAt(commentOffset)) === "\n") {
                commentLineEmpty = true;
                break;
            }
        } while (c === " " || c === "\t");
        var lines = source
            .substring(start, end)
            .split(setCommentSplitRe);
        for (var i = 0; i < lines.length; ++i)
            lines[i] = lines[i]
                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, "")
                .trim();
        commentText = lines
            .join("\n")
            .trim();
    }

    function isDoubleSlashCommentLine(startOffset) {
        var endOffset = findEndOfLine(startOffset);

        // see if remaining line matches comment pattern
        var lineText = source.substring(startOffset, endOffset);
        // look for 1 or 2 slashes since startOffset would already point past
        // the first slash that started the comment.
        var isComment = /^\s*\/{1,2}/.test(lineText);
        return isComment;
    }

    function findEndOfLine(cursor) {
        // find end of cursor's line
        var endOffset = cursor;
        while (endOffset < length && charAt(endOffset) !== "\n") {
            endOffset++;
        }
        return endOffset;
    }

    /**
     * Obtains the next token.
     * @returns {string|null} Next token or `null` on eof
     * @inner
     */
    function next() {
        if (stack.length > 0)
            return stack.shift();
        if (stringDelim)
            return readString();
        var repeat,
            prev,
            curr,
            start,
            isDoc;
        do {
            if (offset === length)
                return null;
            repeat = false;
            while (whitespaceRe.test(curr = charAt(offset))) {
                if (curr === "\n")
                    ++line;
                if (++offset === length)
                    return null;
            }

            if (charAt(offset) === "/") {
                if (++offset === length) {
                    throw illegal("comment");
                }
                if (charAt(offset) === "/") { // Line
                    if (!alternateCommentMode) {
                        // check for triple-slash comment
                        isDoc = charAt(start = offset + 1) === "/";

                        while (charAt(++offset) !== "\n") {
                            if (offset === length) {
                                return null;
                            }
                        }
                        ++offset;
                        if (isDoc) {
                            setComment(start, offset - 1);
                        }
                        ++line;
                        repeat = true;
                    } else {
                        // check for double-slash comments, consolidating consecutive lines
                        start = offset;
                        isDoc = false;
                        if (isDoubleSlashCommentLine(offset)) {
                            isDoc = true;
                            do {
                                offset = findEndOfLine(offset);
                                if (offset === length) {
                                    break;
                                }
                                offset++;
                            } while (isDoubleSlashCommentLine(offset));
                        } else {
                            offset = Math.min(length, findEndOfLine(offset) + 1);
                        }
                        if (isDoc) {
                            setComment(start, offset);
                        }
                        line++;
                        repeat = true;
                    }
                } else if ((curr = charAt(offset)) === "*") { /* Block */
                    // check for /** (regular comment mode) or /* (alternate comment mode)
                    start = offset + 1;
                    isDoc = alternateCommentMode || charAt(start) === "*";
                    do {
                        if (curr === "\n") {
                            ++line;
                        }
                        if (++offset === length) {
                            throw illegal("comment");
                        }
                        prev = curr;
                        curr = charAt(offset);
                    } while (prev !== "*" || curr !== "/");
                    ++offset;
                    if (isDoc) {
                        setComment(start, offset - 2);
                    }
                    repeat = true;
                } else {
                    return "/";
                }
            }
        } while (repeat);

        // offset !== length if we got here

        var end = offset;
        delimRe.lastIndex = 0;
        var delim = delimRe.test(charAt(end++));
        if (!delim)
            while (end < length && !delimRe.test(charAt(end)))
                ++end;
        var token = source.substring(offset, offset = end);
        if (token === "\"" || token === "'")
            stringDelim = token;
        return token;
    }

    /**
     * Pushes a token back to the stack.
     * @param {string} token Token
     * @returns {undefined}
     * @inner
     */
    function push(token) {
        stack.push(token);
    }

    /**
     * Peeks for the next token.
     * @returns {string|null} Token or `null` on eof
     * @inner
     */
    function peek() {
        if (!stack.length) {
            var token = next();
            if (token === null)
                return null;
            push(token);
        }
        return stack[0];
    }

    /**
     * Skips a token.
     * @param {string} expected Expected token
     * @param {boolean} [optional=false] Whether the token is optional
     * @returns {boolean} `true` when skipped, `false` if not
     * @throws {Error} When a required token is not present
     * @inner
     */
    function skip(expected, optional) {
        var actual = peek(),
            equals = actual === expected;
        if (equals) {
            next();
            return true;
        }
        if (!optional)
            throw illegal("token '" + actual + "', '" + expected + "' expected");
        return false;
    }

    /**
     * Gets a comment.
     * @param {number} [trailingLine] Line number if looking for a trailing comment
     * @returns {string|null} Comment text
     * @inner
     */
    function cmnt(trailingLine) {
        var ret = null;
        if (trailingLine === undefined) {
            if (commentLine === line - 1 && (alternateCommentMode || commentType === "*" || commentLineEmpty)) {
                ret = commentText;
            }
        } else {
            /* istanbul ignore else */
            if (commentLine < trailingLine) {
                peek();
            }
            if (commentLine === trailingLine && !commentLineEmpty && (alternateCommentMode || commentType === "/")) {
                ret = commentText;
            }
        }
        return ret;
    }

    return Object.defineProperty({
        next: next,
        peek: peek,
        push: push,
        skip: skip,
        cmnt: cmnt
    }, "line", {
        get: function() { return line; }
    });
    /* eslint-enable callback-return */
}


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = verifier;

var Enum      = __webpack_require__(5),
    util      = __webpack_require__(2);

function invalid(field, expected) {
    return field.name + ": " + expected + (field.repeated && expected !== "array" ? "[]" : field.map && expected !== "object" ? "{k:"+field.keyType+"}" : "") + " expected";
}

/**
 * Generates a partial value verifier.
 * @param {Codegen} gen Codegen instance
 * @param {Field} field Reflected field
 * @param {number} fieldIndex Field index
 * @param {string} ref Variable reference
 * @returns {Codegen} Codegen instance
 * @ignore
 */
function genVerifyValue(gen, field, fieldIndex, ref) {
    /* eslint-disable no-unexpected-multiline */
    if (field.resolvedType) {
        if (field.resolvedType instanceof Enum) { gen
            ("switch(%s){", ref)
                ("default:")
                    ("return%j", invalid(field, "enum value"));
            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen
                ("case %i:", field.resolvedType.values[keys[j]]);
            gen
                    ("break")
            ("}");
        } else {
            gen
            ("{")
                ("var e=types[%i].verify(%s);", fieldIndex, ref)
                ("if(e)")
                    ("return%j+e", field.name + ".")
            ("}");
        }
    } else {
        switch (field.type) {
            case "int32":
            case "uint32":
            case "sint32":
            case "fixed32":
            case "sfixed32": gen
                ("if(!util.isInteger(%s))", ref)
                    ("return%j", invalid(field, "integer"));
                break;
            case "int64":
            case "uint64":
            case "sint64":
            case "fixed64":
            case "sfixed64": gen
                ("if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))", ref, ref, ref, ref)
                    ("return%j", invalid(field, "integer|Long"));
                break;
            case "float":
            case "double": gen
                ("if(typeof %s!==\"number\")", ref)
                    ("return%j", invalid(field, "number"));
                break;
            case "bool": gen
                ("if(typeof %s!==\"boolean\")", ref)
                    ("return%j", invalid(field, "boolean"));
                break;
            case "string": gen
                ("if(!util.isString(%s))", ref)
                    ("return%j", invalid(field, "string"));
                break;
            case "bytes": gen
                ("if(!(%s&&typeof %s.length===\"number\"||util.isString(%s)))", ref, ref, ref)
                    ("return%j", invalid(field, "buffer"));
                break;
        }
    }
    return gen;
    /* eslint-enable no-unexpected-multiline */
}

/**
 * Generates a partial key verifier.
 * @param {Codegen} gen Codegen instance
 * @param {Field} field Reflected field
 * @param {string} ref Variable reference
 * @returns {Codegen} Codegen instance
 * @ignore
 */
function genVerifyKey(gen, field, ref) {
    /* eslint-disable no-unexpected-multiline */
    switch (field.keyType) {
        case "int32":
        case "uint32":
        case "sint32":
        case "fixed32":
        case "sfixed32": gen
            ("if(!util.key32Re.test(%s))", ref)
                ("return%j", invalid(field, "integer key"));
            break;
        case "int64":
        case "uint64":
        case "sint64":
        case "fixed64":
        case "sfixed64": gen
            ("if(!util.key64Re.test(%s))", ref) // see comment above: x is ok, d is not
                ("return%j", invalid(field, "integer|Long key"));
            break;
        case "bool": gen
            ("if(!util.key2Re.test(%s))", ref)
                ("return%j", invalid(field, "boolean key"));
            break;
    }
    return gen;
    /* eslint-enable no-unexpected-multiline */
}

/**
 * Generates a verifier specific to the specified message type.
 * @param {Type} mtype Message type
 * @returns {Codegen} Codegen instance
 */
function verifier(mtype) {
    /* eslint-disable no-unexpected-multiline */

    var gen = util.codegen(["m"], mtype.name + "$verify")
    ("if(typeof m!==\"object\"||m===null)")
        ("return%j", "object expected");
    var oneofs = mtype.oneofsArray,
        seenFirstField = {};
    if (oneofs.length) gen
    ("var p={}");

    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {
        var field = mtype._fieldsArray[i].resolve(),
            ref   = "m" + util.safeProp(field.name);

        if (field.optional) gen
        ("if(%s!=null&&m.hasOwnProperty(%j)){", ref, field.name); // !== undefined && !== null

        // map fields
        if (field.map) { gen
            ("if(!util.isObject(%s))", ref)
                ("return%j", invalid(field, "object"))
            ("var k=Object.keys(%s)", ref)
            ("for(var i=0;i<k.length;++i){");
                genVerifyKey(gen, field, "k[i]");
                genVerifyValue(gen, field, i, ref + "[k[i]]")
            ("}");

        // repeated fields
        } else if (field.repeated) { gen
            ("if(!Array.isArray(%s))", ref)
                ("return%j", invalid(field, "array"))
            ("for(var i=0;i<%s.length;++i){", ref);
                genVerifyValue(gen, field, i, ref + "[i]")
            ("}");

        // required or present fields
        } else {
            if (field.partOf) {
                var oneofProp = util.safeProp(field.partOf.name);
                if (seenFirstField[field.partOf.name] === 1) gen
            ("if(p%s===1)", oneofProp)
                ("return%j", field.partOf.name + ": multiple values");
                seenFirstField[field.partOf.name] = 1;
                gen
            ("p%s=1", oneofProp);
            }
            genVerifyValue(gen, field, i, ref);
        }
        if (field.optional) gen
        ("}");
    }
    return gen
    ("return null");
    /* eslint-enable no-unexpected-multiline */
}

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Wrappers for common types.
 * @type {Object.<string,IWrapper>}
 * @const
 */
var wrappers = exports;

var Message = __webpack_require__(35);

/**
 * From object converter part of an {@link IWrapper}.
 * @typedef WrapperFromObjectConverter
 * @type {function}
 * @param {Object.<string,*>} object Plain object
 * @returns {Message<{}>} Message instance
 * @this Type
 */

/**
 * To object converter part of an {@link IWrapper}.
 * @typedef WrapperToObjectConverter
 * @type {function}
 * @param {Message<{}>} message Message instance
 * @param {IConversionOptions} [options] Conversion options
 * @returns {Object.<string,*>} Plain object
 * @this Type
 */

/**
 * Common type wrapper part of {@link wrappers}.
 * @interface IWrapper
 * @property {WrapperFromObjectConverter} [fromObject] From object converter
 * @property {WrapperToObjectConverter} [toObject] To object converter
 */

// Custom wrapper for Any
wrappers[".google.protobuf.Any"] = {

    fromObject: function(object) {

        // unwrap value type if mapped
        if (object && object["@type"]) {
            var type = this.lookup(object["@type"]);
            /* istanbul ignore else */
            if (type) {
                // type_url does not accept leading "."
                var type_url = object["@type"].charAt(0) === "." ?
                    object["@type"].substr(1) : object["@type"];
                // type_url prefix is optional, but path seperator is required
                return this.create({
                    type_url: "/" + type_url,
                    value: type.encode(type.fromObject(object)).finish()
                });
            }
        }

        return this.fromObject(object);
    },

    toObject: function(message, options) {

        // decode value if requested and unmapped
        if (options && options.json && message.type_url && message.value) {
            // Only use fully qualified type name after the last '/'
            var name = message.type_url.substring(message.type_url.lastIndexOf("/") + 1);
            var type = this.lookup(name);
            /* istanbul ignore else */
            if (type)
                message = type.decode(message.value);
        }

        // wrap value if unmapped
        if (!(message instanceof this.ctor) && message instanceof Message) {
            var object = message.$type.toObject(message, options);
            object["@type"] = message.$type.fullName;
            return object;
        }

        return this.toObject(message, options);
    }
};


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = Readable;

/*<replacement>*/
var processNextTick = __webpack_require__(42);
/*</replacement>*/

/*<replacement>*/
var isArray = __webpack_require__(33);
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = __webpack_require__(7).EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(85);
/*</replacement>*/

var Buffer = __webpack_require__(13).Buffer;
/*<replacement>*/
var bufferShim = __webpack_require__(22);
/*</replacement>*/

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

/*<replacement>*/
var debugUtil = __webpack_require__(1);
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = __webpack_require__(178);
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') {
    return emitter.prependListener(event, fn);
  } else {
    // This is a hack to make sure that our error handler is attached before any
    // userland ones.  NEVER DO THIS. This is here only because this code needs
    // to continue to work with older versions of Node.js that do not include
    // the prependListener() method. The goal is to eventually remove this hack.
    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
  }
}

function ReadableState(options, stream) {
  Duplex = Duplex || __webpack_require__(17);

  options = options || {};

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = __webpack_require__(86).StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __webpack_require__(17);

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options && typeof options.read === 'function') this._read = options.read;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;

  if (!state.objectMode && typeof chunk === 'string') {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = bufferShim.from(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var _e = new Error('stream.unshift() after end event');
      stream.emit('error', _e);
    } else {
      var skipAdd;
      if (state.decoder && !addToFront && !encoding) {
        chunk = state.decoder.write(chunk);
        skipAdd = !state.objectMode && chunk.length === 0;
      }

      if (!addToFront) state.reading = false;

      // Don't add to the buffer if we've decoded to an empty string chunk and
      // we're not in object mode
      if (!skipAdd) {
        // if we want the data now, just emit it.
        if (state.flowing && state.length === 0 && !state.sync) {
          stream.emit('data', chunk);
          stream.read(0);
        } else {
          // update the buffer info.
          state.length += state.objectMode ? 1 : chunk.length;
          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

          if (state.needReadable) emitReadable(stream);
        }
      }

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = __webpack_require__(86).StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    debug('onunpipe');
    if (readable === src) {
      cleanup();
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], self.emit.bind(self, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = bufferShim.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.



module.exports = Transform;

var Duplex = __webpack_require__(17);

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

util.inherits(Transform, Duplex);

function TransformState(stream) {
  this.afterTransform = function (er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
  this.writeencoding = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined) stream.push(data);

  cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(this);

  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.once('prefinish', function () {
    if (typeof this._flush === 'function') this._flush(function (er, data) {
      done(stream, er, data);
    });else done(stream);
  });
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data !== null && data !== undefined) stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length) throw new Error('Calling transform done when ws.length != 0');

  if (ts.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.



module.exports = Writable;

/*<replacement>*/
var processNextTick = __webpack_require__(42);
/*</replacement>*/

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: __webpack_require__(44)
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(85);
/*</replacement>*/

var Buffer = __webpack_require__(13).Buffer;
/*<replacement>*/
var bufferShim = __webpack_require__(22);
/*</replacement>*/

util.inherits(Writable, Stream);

function nop() {}

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

function WritableState(options, stream) {
  Duplex = Duplex || __webpack_require__(17);

  options = options || {};

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __webpack_require__(17);

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = Buffer.isBuffer(chunk);

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = bufferShim.from(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    chunk = decodeChunk(state, chunk, encoding);
    if (Buffer.isBuffer(chunk)) encoding = 'buffer';
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;
  if (sync) processNextTick(cb, er);else cb(er);

  stream._writableState.errorEmitted = true;
  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    while (entry) {
      buffer[count] = entry;
      entry = entry.next;
      count += 1;
    }

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequestCount = 0;
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function prefinish(stream, state) {
  if (!state.prefinished) {
    state.prefinished = true;
    stream.emit('prefinish');
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    if (state.pendingcb === 0) {
      prefinish(stream, state);
      state.finished = true;
      stream.emit('finish');
    } else {
      prefinish(stream, state);
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function (err) {
    var entry = _this.entry;
    _this.entry = null;
    while (entry) {
      var cb = entry.callback;
      state.pendingcb--;
      cb(err);
      entry = entry.next;
    }
    if (state.corkedRequestsFree) {
      state.corkedRequestsFree.next = _this;
    } else {
      state.corkedRequestsFree = _this;
    }
  };
}

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(9);


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Buffer = __webpack_require__(13).Buffer;
var bufferShim = __webpack_require__(22);

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = bufferShim.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return -1;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// UTF-8 replacement characters ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd'.repeat(p);
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd'.repeat(p + 1);
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd'.repeat(p + 2);
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character for each buffered byte of a (partial)
// character needs to be added to the output.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd'.repeat(this.lastTotal - this.lastNeed);
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = __webpack_require__(0)
var Hash = __webpack_require__(18)
var Buffer = __webpack_require__(12).Buffer

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(0)
var Hash = __webpack_require__(18)
var Buffer = __webpack_require__(12).Buffer

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var processNextTick = __webpack_require__(8).nextTick;
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = __webpack_require__(33);
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = __webpack_require__(7).EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(93);
/*</replacement>*/

/*<replacement>*/

var Buffer = __webpack_require__(11).Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

/*<replacement>*/
var debugUtil = __webpack_require__(1);
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = __webpack_require__(189);
var destroyImpl = __webpack_require__(92);
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || __webpack_require__(19);

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = __webpack_require__(24).StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __webpack_require__(19);

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = __webpack_require__(24).StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.



module.exports = Transform;

var Duplex = __webpack_require__(19);

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.



/*<replacement>*/

var processNextTick = __webpack_require__(8).nextTick;
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: __webpack_require__(44)
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(93);
/*</replacement>*/

/*<replacement>*/

var Buffer = __webpack_require__(11).Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

var destroyImpl = __webpack_require__(92);

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || __webpack_require__(19);

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __webpack_require__(19);

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    processNextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    processNextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      processNextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*<replacement>*/

var processNextTick = __webpack_require__(8).nextTick;
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      processNextTick(emitErrorNT, this, err);
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      processNextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(9);


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var through = __webpack_require__(43)
var duplexify = __webpack_require__(60)
var WS = __webpack_require__(95)

module.exports = WebSocketStream

function WebSocketStream(target, protocols, options) {
  var stream, socket

  var isBrowser = process.title === 'browser'
  var isNative = !!global.WebSocket
  var socketWrite = isBrowser ? socketWriteBrowser : socketWriteNode
  var proxy = through.obj(socketWrite, socketEnd)

  if (protocols && !Array.isArray(protocols) && 'object' === typeof protocols) {
    // accept the "options" Object as the 2nd argument
    options = protocols
    protocols = null

    if (typeof options.protocol === 'string' || Array.isArray(options.protocol)) {
      protocols = options.protocol;
    }
  }

  if (!options) options = {}

  // browser only: sets the maximum socket buffer size before throttling
  var bufferSize = options.browserBufferSize || 1024 * 512

  // browser only: how long to wait when throttling
  var bufferTimeout = options.browserBufferTimeout || 1000

  // use existing WebSocket object that was passed in
  if (typeof target === 'object') {
    socket = target
  // otherwise make a new one
  } else {
    // special constructor treatment for native websockets in browsers, see
    // https://github.com/maxogden/websocket-stream/issues/82
    if (isNative && isBrowser) {
      socket = new WS(target, protocols)
    } else {
      socket = new WS(target, protocols, options)
    }

    socket.binaryType = 'arraybuffer'
  }

  // was already open when passed in
  if (socket.readyState === WS.OPEN) {
    stream = proxy
  } else {
    stream = duplexify.obj()
    socket.onopen = onopen
  }

  stream.socket = socket

  socket.onclose = onclose
  socket.onerror = onerror
  socket.onmessage = onmessage

  proxy.on('close', destroy)

  var coerceToBuffer = options.binary || options.binary === undefined

  function socketWriteNode(chunk, enc, next) {
    if (coerceToBuffer && typeof chunk === 'string') {
      chunk = new Buffer(chunk, 'utf8')
    }
    socket.send(chunk, next)
  }

  function socketWriteBrowser(chunk, enc, next) {
    if (socket.bufferedAmount > bufferSize) {
      setTimeout(socketWriteBrowser, bufferTimeout, chunk, enc, next)
      return
    }

    if (coerceToBuffer && typeof chunk === 'string') {
      chunk = new Buffer(chunk, 'utf8')
    }

    try {
      socket.send(chunk)
    } catch(err) {
      return next(err)
    }

    next()
  }

  function socketEnd(done) {
    socket.close()
    done()
  }

  function onopen() {
    stream.setReadable(proxy)
    stream.setWritable(proxy)
    stream.emit('connect')
  }

  function onclose() {
    stream.end()
    stream.destroy()
  }

  function onerror(err) {
    stream.destroy(err)
  }

  function onmessage(event) {
    var data = event.data
    if (data instanceof ArrayBuffer) data = new Buffer(new Uint8Array(data))
    else data = new Buffer(data)
    proxy.push(data)
  }

  function destroy() {
    socket.close()
  }

  return stream
}


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var WS = module.exports = __webpack_require__(101);

WS.Server = __webpack_require__(204);
WS.Sender = __webpack_require__(100);
WS.Receiver = __webpack_require__(99);

/**
 * Create a new WebSocket server.
 *
 * @param {Object} options Server options
 * @param {Function} fn Optional connection listener.
 * @returns {WS.Server}
 * @api public
 */
WS.createServer = function createServer(options, fn) {
  var server = new WS.Server(options);

  if (typeof fn === 'function') {
    server.on('connection', fn);
  }

  return server;
};

/**
 * Create a new WebSocket connection.
 *
 * @param {String} address The URL/address we need to connect to.
 * @param {Function} fn Open listener.
 * @returns {WS}
 * @api public
 */
WS.connect = WS.createConnection = function connect(address, fn) {
  var client = new WS(address);

  if (typeof fn === 'function') {
    client.on('open', fn);
  }

  return client;
};


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var bufferUtil;

try {
  bufferUtil = __webpack_require__(140);
} catch (e) {
  bufferUtil = __webpack_require__(199);
}

module.exports = bufferUtil.BufferUtil || bufferUtil;


/***/ }),
/* 97 */
/***/ (function(module, exports) {

/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

module.exports = {
  isValidErrorCode: function(code) {
    return (code >= 1000 && code <= 1011 && code != 1004 && code != 1005 && code != 1006) ||
         (code >= 3000 && code <= 4999);
  },
  1000: 'normal',
  1001: 'going away',
  1002: 'protocol error',
  1003: 'unsupported data',
  1004: 'reserved',
  1005: 'reserved for extensions',
  1006: 'reserved for extensions',
  1007: 'inconsistent or invalid data',
  1008: 'policy violation',
  1009: 'message too big',
  1010: 'extension handshake missing',
  1011: 'an unexpected condition prevented the request from being fulfilled',
};

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {


var util = __webpack_require__(1);

/**
 * Module exports.
 */

exports.parse = parse;
exports.format = format;

/**
 * Parse extensions header value
 */

function parse(value) {
  value = value || '';

  var extensions = {};

  value.split(',').forEach(function(v) {
    var params = v.split(';');
    var token = params.shift().trim();

    if (extensions[token] === undefined) {
      extensions[token] = [];
    } else if (!extensions.hasOwnProperty(token)) {
      return;
    }

    var parsedParams = {};

    params.forEach(function(param) {
      var parts = param.trim().split('=');
      var key = parts[0];
      var value = parts[1];
      if (typeof value === 'undefined') {
        value = true;
      } else {
        // unquote value
        if (value[0] === '"') {
          value = value.slice(1);
        }
        if (value[value.length - 1] === '"') {
          value = value.slice(0, value.length - 1);
        }
      }

      if (parsedParams[key] === undefined) {
        parsedParams[key] = [value];
      } else if (parsedParams.hasOwnProperty(key)) {
        parsedParams[key].push(value);
      }
    });

    extensions[token].push(parsedParams);
  });

  return extensions;
}

/**
 * Format extensions header value
 */

function format(value) {
  return Object.keys(value).map(function(token) {
    var paramsList = value[token];
    if (!util.isArray(paramsList)) {
      paramsList = [paramsList];
    }
    return paramsList.map(function(params) {
      return [token].concat(Object.keys(params).map(function(k) {
        var p = params[k];
        if (!util.isArray(p)) p = [p];
        return p.map(function(v) {
          return v === true ? k : k + '=' + v;
        }).join('; ');
      })).join('; ');
    }).join(', ');
  }).join(', ');
}


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var util = __webpack_require__(1)
  , isValidUTF8 = __webpack_require__(203)
  , ErrorCodes = __webpack_require__(97)
  , BufferPool = __webpack_require__(198)
  , bufferUtil = __webpack_require__(96)
  , PerMessageDeflate = __webpack_require__(25);

/**
 * HyBi Receiver implementation
 */

function Receiver (extensions,maxPayload) {
  if (this instanceof Receiver === false) {
    throw new TypeError("Classes can't be function-called");
  }
  if(typeof extensions==='number'){
    maxPayload=extensions;
    extensions={};
  }


  // memory pool for fragmented messages
  var fragmentedPoolPrevUsed = -1;
  this.fragmentedBufferPool = new BufferPool(1024, function(db, length) {
    return db.used + length;
  }, function(db) {
    return fragmentedPoolPrevUsed = fragmentedPoolPrevUsed >= 0 ?
      Math.ceil((fragmentedPoolPrevUsed + db.used) / 2) :
      db.used;
  });

  // memory pool for unfragmented messages
  var unfragmentedPoolPrevUsed = -1;
  this.unfragmentedBufferPool = new BufferPool(1024, function(db, length) {
    return db.used + length;
  }, function(db) {
    return unfragmentedPoolPrevUsed = unfragmentedPoolPrevUsed >= 0 ?
      Math.ceil((unfragmentedPoolPrevUsed + db.used) / 2) :
      db.used;
  });
  this.extensions = extensions || {};
  this.maxPayload = maxPayload || 0;
  this.currentPayloadLength = 0;
  this.state = {
    activeFragmentedOperation: null,
    lastFragment: false,
    masked: false,
    opcode: 0,
    fragmentedOperation: false
  };
  this.overflow = [];
  this.headerBuffer = new Buffer(10);
  this.expectOffset = 0;
  this.expectBuffer = null;
  this.expectHandler = null;
  this.currentMessage = [];
  this.currentMessageLength = 0;
  this.messageHandlers = [];
  this.expectHeader(2, this.processPacket);
  this.dead = false;
  this.processing = false;

  this.onerror = function() {};
  this.ontext = function() {};
  this.onbinary = function() {};
  this.onclose = function() {};
  this.onping = function() {};
  this.onpong = function() {};
}

module.exports = Receiver;

/**
 * Add new data to the parser.
 *
 * @api public
 */

Receiver.prototype.add = function(data) {
  if (this.dead) return;
  var dataLength = data.length;
  if (dataLength == 0) return;
  if (this.expectBuffer == null) {
    this.overflow.push(data);
    return;
  }
  var toRead = Math.min(dataLength, this.expectBuffer.length - this.expectOffset);
  fastCopy(toRead, data, this.expectBuffer, this.expectOffset);
  this.expectOffset += toRead;
  if (toRead < dataLength) {
    this.overflow.push(data.slice(toRead));
  }
  while (this.expectBuffer && this.expectOffset == this.expectBuffer.length) {
    var bufferForHandler = this.expectBuffer;
    this.expectBuffer = null;
    this.expectOffset = 0;
    this.expectHandler.call(this, bufferForHandler);
  }
};

/**
 * Releases all resources used by the receiver.
 *
 * @api public
 */

Receiver.prototype.cleanup = function() {
  this.dead = true;
  this.overflow = null;
  this.headerBuffer = null;
  this.expectBuffer = null;
  this.expectHandler = null;
  this.unfragmentedBufferPool = null;
  this.fragmentedBufferPool = null;
  this.state = null;
  this.currentMessage = null;
  this.onerror = null;
  this.ontext = null;
  this.onbinary = null;
  this.onclose = null;
  this.onping = null;
  this.onpong = null;
};

/**
 * Waits for a certain amount of header bytes to be available, then fires a callback.
 *
 * @api private
 */

Receiver.prototype.expectHeader = function(length, handler) {
  if (length == 0) {
    handler(null);
    return;
  }
  this.expectBuffer = this.headerBuffer.slice(this.expectOffset, this.expectOffset + length);
  this.expectHandler = handler;
  var toRead = length;
  while (toRead > 0 && this.overflow.length > 0) {
    var fromOverflow = this.overflow.pop();
    if (toRead < fromOverflow.length) this.overflow.push(fromOverflow.slice(toRead));
    var read = Math.min(fromOverflow.length, toRead);
    fastCopy(read, fromOverflow, this.expectBuffer, this.expectOffset);
    this.expectOffset += read;
    toRead -= read;
  }
};

/**
 * Waits for a certain amount of data bytes to be available, then fires a callback.
 *
 * @api private
 */

Receiver.prototype.expectData = function(length, handler) {
  if (length == 0) {
    handler(null);
    return;
  }
  this.expectBuffer = this.allocateFromPool(length, this.state.fragmentedOperation);
  this.expectHandler = handler;
  var toRead = length;
  while (toRead > 0 && this.overflow.length > 0) {
    var fromOverflow = this.overflow.pop();
    if (toRead < fromOverflow.length) this.overflow.push(fromOverflow.slice(toRead));
    var read = Math.min(fromOverflow.length, toRead);
    fastCopy(read, fromOverflow, this.expectBuffer, this.expectOffset);
    this.expectOffset += read;
    toRead -= read;
  }
};

/**
 * Allocates memory from the buffer pool.
 *
 * @api private
 */

Receiver.prototype.allocateFromPool = function(length, isFragmented) {
  return (isFragmented ? this.fragmentedBufferPool : this.unfragmentedBufferPool).get(length);
};

/**
 * Start processing a new packet.
 *
 * @api private
 */

Receiver.prototype.processPacket = function (data) {
  if (this.extensions[PerMessageDeflate.extensionName]) {
    if ((data[0] & 0x30) != 0) {
      this.error('reserved fields (2, 3) must be empty', 1002);
      return;
    }
  } else {
    if ((data[0] & 0x70) != 0) {
      this.error('reserved fields must be empty', 1002);
      return;
    }
  }
  this.state.lastFragment = (data[0] & 0x80) == 0x80;
  this.state.masked = (data[1] & 0x80) == 0x80;
  var compressed = (data[0] & 0x40) == 0x40;
  var opcode = data[0] & 0xf;
  if (opcode === 0) {
    if (compressed) {
      this.error('continuation frame cannot have the Per-message Compressed bits', 1002);
      return;
    }
    // continuation frame
    this.state.fragmentedOperation = true;
    this.state.opcode = this.state.activeFragmentedOperation;
    if (!(this.state.opcode == 1 || this.state.opcode == 2)) {
      this.error('continuation frame cannot follow current opcode', 1002);
      return;
    }
  }
  else {
    if (opcode < 3 && this.state.activeFragmentedOperation != null) {
      this.error('data frames after the initial data frame must have opcode 0', 1002);
      return;
    }
    if (opcode >= 8 && compressed) {
      this.error('control frames cannot have the Per-message Compressed bits', 1002);
      return;
    }
    this.state.compressed = compressed;
    this.state.opcode = opcode;
    if (this.state.lastFragment === false) {
      this.state.fragmentedOperation = true;
      this.state.activeFragmentedOperation = opcode;
    }
    else this.state.fragmentedOperation = false;
  }
  var handler = opcodes[this.state.opcode];
  if (typeof handler == 'undefined') this.error('no handler for opcode ' + this.state.opcode, 1002);
  else {
    handler.start.call(this, data);
  }
};

/**
 * Endprocessing a packet.
 *
 * @api private
 */

Receiver.prototype.endPacket = function() {
  if (this.dead) return;
  if (!this.state.fragmentedOperation) this.unfragmentedBufferPool.reset(true);
  else if (this.state.lastFragment) this.fragmentedBufferPool.reset(true);
  this.expectOffset = 0;
  this.expectBuffer = null;
  this.expectHandler = null;
  if (this.state.lastFragment && this.state.opcode === this.state.activeFragmentedOperation) {
    // end current fragmented operation
    this.state.activeFragmentedOperation = null;
  }
  this.currentPayloadLength = 0;
  this.state.lastFragment = false;
  this.state.opcode = this.state.activeFragmentedOperation != null ? this.state.activeFragmentedOperation : 0;
  this.state.masked = false;
  this.expectHeader(2, this.processPacket);
};

/**
 * Reset the parser state.
 *
 * @api private
 */

Receiver.prototype.reset = function() {
  if (this.dead) return;
  this.state = {
    activeFragmentedOperation: null,
    lastFragment: false,
    masked: false,
    opcode: 0,
    fragmentedOperation: false
  };
  this.fragmentedBufferPool.reset(true);
  this.unfragmentedBufferPool.reset(true);
  this.expectOffset = 0;
  this.expectBuffer = null;
  this.expectHandler = null;
  this.overflow = [];
  this.currentMessage = [];
  this.currentMessageLength = 0;
  this.messageHandlers = [];
  this.currentPayloadLength = 0;
};

/**
 * Unmask received data.
 *
 * @api private
 */

Receiver.prototype.unmask = function (mask, buf, binary) {
  if (mask != null && buf != null) bufferUtil.unmask(buf, mask);
  if (binary) return buf;
  return buf != null ? buf.toString('utf8') : '';
};

/**
 * Handles an error
 *
 * @api private
 */

Receiver.prototype.error = function (reason, protocolErrorCode) {
  if (this.dead) return;
  this.reset();
  if(typeof reason == 'string'){
    this.onerror(new Error(reason), protocolErrorCode);
  }
  else if(reason.constructor == Error){
    this.onerror(reason, protocolErrorCode);
  }
  else{
    this.onerror(new Error("An error occured"),protocolErrorCode);
  }
  return this;
};

/**
 * Execute message handler buffers
 *
 * @api private
 */

Receiver.prototype.flush = function() {
  if (this.processing || this.dead) return;

  var handler = this.messageHandlers.shift();
  if (!handler) return;

  this.processing = true;
  var self = this;

  handler(function() {
    self.processing = false;
    self.flush();
  });
};

/**
 * Apply extensions to message
 *
 * @api private
 */

Receiver.prototype.applyExtensions = function(messageBuffer, fin, compressed, callback) {
  var self = this;
  if (compressed) {
    this.extensions[PerMessageDeflate.extensionName].decompress(messageBuffer, fin, function(err, buffer) {
      if (self.dead) return;
      if (err) {
        callback(new Error('invalid compressed data'));
        return;
      }
      callback(null, buffer);
    });
  } else {
    callback(null, messageBuffer);
  }
};

/**
* Checks payload size, disconnects socket when it exceeds maxPayload
*
* @api private
*/
Receiver.prototype.maxPayloadExceeded = function(length) {
  if (this.maxPayload=== undefined || this.maxPayload === null || this.maxPayload < 1) {
    return false;
  }
  var fullLength = this.currentPayloadLength + length;
  if (fullLength < this.maxPayload) {
    this.currentPayloadLength = fullLength;
    return false;
  }
  this.error('payload cannot exceed ' + this.maxPayload + ' bytes', 1009);
  this.messageBuffer=[];
  this.cleanup();

  return true;
};

/**
 * Buffer utilities
 */

function readUInt16BE(start) {
  return (this[start]<<8) +
         this[start+1];
}

function readUInt32BE(start) {
  return (this[start]<<24) +
         (this[start+1]<<16) +
         (this[start+2]<<8) +
         this[start+3];
}

function fastCopy(length, srcBuffer, dstBuffer, dstOffset) {
  switch (length) {
    default: srcBuffer.copy(dstBuffer, dstOffset, 0, length); break;
    case 16: dstBuffer[dstOffset+15] = srcBuffer[15];
    case 15: dstBuffer[dstOffset+14] = srcBuffer[14];
    case 14: dstBuffer[dstOffset+13] = srcBuffer[13];
    case 13: dstBuffer[dstOffset+12] = srcBuffer[12];
    case 12: dstBuffer[dstOffset+11] = srcBuffer[11];
    case 11: dstBuffer[dstOffset+10] = srcBuffer[10];
    case 10: dstBuffer[dstOffset+9] = srcBuffer[9];
    case 9: dstBuffer[dstOffset+8] = srcBuffer[8];
    case 8: dstBuffer[dstOffset+7] = srcBuffer[7];
    case 7: dstBuffer[dstOffset+6] = srcBuffer[6];
    case 6: dstBuffer[dstOffset+5] = srcBuffer[5];
    case 5: dstBuffer[dstOffset+4] = srcBuffer[4];
    case 4: dstBuffer[dstOffset+3] = srcBuffer[3];
    case 3: dstBuffer[dstOffset+2] = srcBuffer[2];
    case 2: dstBuffer[dstOffset+1] = srcBuffer[1];
    case 1: dstBuffer[dstOffset] = srcBuffer[0];
  }
}

function clone(obj) {
  var cloned = {};
  for (var k in obj) {
    if (obj.hasOwnProperty(k)) {
      cloned[k] = obj[k];
    }
  }
  return cloned;
}

/**
 * Opcode handlers
 */

var opcodes = {
  // text
  '1': {
    start: function(data) {
      var self = this;
      // decode length
      var firstLength = data[1] & 0x7f;
      if (firstLength < 126) {
        if (self.maxPayloadExceeded(firstLength)){
          self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);
          return;
        }
        opcodes['1'].getData.call(self, firstLength);
      }
      else if (firstLength == 126) {
        self.expectHeader(2, function(data) {
          var length = readUInt16BE.call(data, 0);
          if (self.maxPayloadExceeded(length)){
            self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);
            return;
          }
          opcodes['1'].getData.call(self, length);
        });
      }
      else if (firstLength == 127) {
        self.expectHeader(8, function(data) {
          if (readUInt32BE.call(data, 0) != 0) {
            self.error('packets with length spanning more than 32 bit is currently not supported', 1008);
            return;
          }
          var length = readUInt32BE.call(data, 4);
          if (self.maxPayloadExceeded(length)){
            self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);
            return;
          }
          opcodes['1'].getData.call(self, readUInt32BE.call(data, 4));
        });
      }
    },
    getData: function(length) {
      var self = this;
      if (self.state.masked) {
        self.expectHeader(4, function(data) {
          var mask = data;
          self.expectData(length, function(data) {
            opcodes['1'].finish.call(self, mask, data);
          });
        });
      }
      else {
        self.expectData(length, function(data) {
          opcodes['1'].finish.call(self, null, data);
        });
      }
    },
    finish: function(mask, data) {
      var self = this;
      var packet = this.unmask(mask, data, true) || new Buffer(0);
      var state = clone(this.state);
      this.messageHandlers.push(function(callback) {
        self.applyExtensions(packet, state.lastFragment, state.compressed, function(err, buffer) {
          if (err) {
            if(err.type===1009){
                return self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);
            }
            return self.error(err.message, 1007);
          }
          if (buffer != null) {
            if( self.maxPayload==0 || (self.maxPayload > 0 && (self.currentMessageLength + buffer.length) < self.maxPayload) ){
              self.currentMessage.push(buffer);
            }
            else{
                self.currentMessage=null;
                self.currentMessage = [];
                self.currentMessageLength = 0;
                self.error(new Error('Maximum payload exceeded. maxPayload: '+self.maxPayload), 1009);
                return;
            }
            self.currentMessageLength += buffer.length;
          }
          if (state.lastFragment) {
            var messageBuffer = Buffer.concat(self.currentMessage);
            self.currentMessage = [];
            self.currentMessageLength = 0;
            if (!isValidUTF8(messageBuffer)) {
              self.error('invalid utf8 sequence', 1007);
              return;
            }
            self.ontext(messageBuffer.toString('utf8'), {masked: state.masked, buffer: messageBuffer});
          }
          callback();
        });
      });
      this.flush();
      this.endPacket();
    }
  },
  // binary
  '2': {
    start: function(data) {
      var self = this;
      // decode length
      var firstLength = data[1] & 0x7f;
      if (firstLength < 126) {
          if (self.maxPayloadExceeded(firstLength)){
            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);
            return;
          }
        opcodes['2'].getData.call(self, firstLength);
      }
      else if (firstLength == 126) {
        self.expectHeader(2, function(data) {
          var length = readUInt16BE.call(data, 0);
          if (self.maxPayloadExceeded(length)){
            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);
            return;
          }
          opcodes['2'].getData.call(self, length);
        });
      }
      else if (firstLength == 127) {
        self.expectHeader(8, function(data) {
          if (readUInt32BE.call(data, 0) != 0) {
            self.error('packets with length spanning more than 32 bit is currently not supported', 1008);
            return;
          }
          var length = readUInt32BE.call(data, 4, true);
          if (self.maxPayloadExceeded(length)){
            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);
            return;
          }
          opcodes['2'].getData.call(self, length);
        });
      }
    },
    getData: function(length) {
      var self = this;
      if (self.state.masked) {
        self.expectHeader(4, function(data) {
          var mask = data;
          self.expectData(length, function(data) {
            opcodes['2'].finish.call(self, mask, data);
          });
        });
      }
      else {
        self.expectData(length, function(data) {
          opcodes['2'].finish.call(self, null, data);
        });
      }
    },
    finish: function(mask, data) {
      var self = this;
      var packet = this.unmask(mask, data, true) || new Buffer(0);
      var state = clone(this.state);
      this.messageHandlers.push(function(callback) {
        self.applyExtensions(packet, state.lastFragment, state.compressed, function(err, buffer) {
          if (err) {
            if(err.type===1009){
                return self.error('Max payload exceeded in compressed binary message. Aborting...', 1009);
            }
            return self.error(err.message, 1007);
          }
          if (buffer != null) {
            if( self.maxPayload==0 || (self.maxPayload > 0 && (self.currentMessageLength + buffer.length) < self.maxPayload) ){
              self.currentMessage.push(buffer);
            }
            else{
                self.currentMessage=null;
                self.currentMessage = [];
                self.currentMessageLength = 0;
                self.error(new Error('Maximum payload exceeded'), 1009);
                return;
            }
            self.currentMessageLength += buffer.length;
          }
          if (state.lastFragment) {
            var messageBuffer = Buffer.concat(self.currentMessage);
            self.currentMessage = [];
            self.currentMessageLength = 0;
            self.onbinary(messageBuffer, {masked: state.masked, buffer: messageBuffer});
          }
          callback();
        });
      });
      this.flush();
      this.endPacket();
    }
  },
  // close
  '8': {
    start: function(data) {
      var self = this;
      if (self.state.lastFragment == false) {
        self.error('fragmented close is not supported', 1002);
        return;
      }

      // decode length
      var firstLength = data[1] & 0x7f;
      if (firstLength < 126) {
        opcodes['8'].getData.call(self, firstLength);
      }
      else {
        self.error('control frames cannot have more than 125 bytes of data', 1002);
      }
    },
    getData: function(length) {
      var self = this;
      if (self.state.masked) {
        self.expectHeader(4, function(data) {
          var mask = data;
          self.expectData(length, function(data) {
            opcodes['8'].finish.call(self, mask, data);
          });
        });
      }
      else {
        self.expectData(length, function(data) {
          opcodes['8'].finish.call(self, null, data);
        });
      }
    },
    finish: function(mask, data) {
      var self = this;
      data = self.unmask(mask, data, true);

      var state = clone(this.state);
      this.messageHandlers.push(function() {
        if (data && data.length == 1) {
          self.error('close packets with data must be at least two bytes long', 1002);
          return;
        }
        var code = data && data.length > 1 ? readUInt16BE.call(data, 0) : 1000;
        if (!ErrorCodes.isValidErrorCode(code)) {
          self.error('invalid error code', 1002);
          return;
        }
        var message = '';
        if (data && data.length > 2) {
          var messageBuffer = data.slice(2);
          if (!isValidUTF8(messageBuffer)) {
            self.error('invalid utf8 sequence', 1007);
            return;
          }
          message = messageBuffer.toString('utf8');
        }
        self.onclose(code, message, {masked: state.masked});
        self.reset();
      });
      this.flush();
    },
  },
  // ping
  '9': {
    start: function(data) {
      var self = this;
      if (self.state.lastFragment == false) {
        self.error('fragmented ping is not supported', 1002);
        return;
      }

      // decode length
      var firstLength = data[1] & 0x7f;
      if (firstLength < 126) {
        opcodes['9'].getData.call(self, firstLength);
      }
      else {
        self.error('control frames cannot have more than 125 bytes of data', 1002);
      }
    },
    getData: function(length) {
      var self = this;
      if (self.state.masked) {
        self.expectHeader(4, function(data) {
          var mask = data;
          self.expectData(length, function(data) {
            opcodes['9'].finish.call(self, mask, data);
          });
        });
      }
      else {
        self.expectData(length, function(data) {
          opcodes['9'].finish.call(self, null, data);
        });
      }
    },
    finish: function(mask, data) {
      var self = this;
      data = this.unmask(mask, data, true);
      var state = clone(this.state);
      this.messageHandlers.push(function(callback) {
        self.onping(data, {masked: state.masked, binary: true});
        callback();
      });
      this.flush();
      this.endPacket();
    }
  },
  // pong
  '10': {
    start: function(data) {
      var self = this;
      if (self.state.lastFragment == false) {
        self.error('fragmented pong is not supported', 1002);
        return;
      }

      // decode length
      var firstLength = data[1] & 0x7f;
      if (firstLength < 126) {
        opcodes['10'].getData.call(self, firstLength);
      }
      else {
        self.error('control frames cannot have more than 125 bytes of data', 1002);
      }
    },
    getData: function(length) {
      var self = this;
      if (this.state.masked) {
        this.expectHeader(4, function(data) {
          var mask = data;
          self.expectData(length, function(data) {
            opcodes['10'].finish.call(self, mask, data);
          });
        });
      }
      else {
        this.expectData(length, function(data) {
          opcodes['10'].finish.call(self, null, data);
        });
      }
    },
    finish: function(mask, data) {
      var self = this;
      data = self.unmask(mask, data, true);
      var state = clone(this.state);
      this.messageHandlers.push(function(callback) {
        self.onpong(data, {masked: state.masked, binary: true});
        callback();
      });
      this.flush();
      this.endPacket();
    }
  }
}


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var events = __webpack_require__(7)
  , util = __webpack_require__(1)
  , crypto = __webpack_require__(27)
  , EventEmitter = events.EventEmitter
  , ErrorCodes = __webpack_require__(97)
  , bufferUtil = __webpack_require__(96)
  , PerMessageDeflate = __webpack_require__(25);

/**
 * HyBi Sender implementation
 */

function Sender(socket, extensions) {
  if (this instanceof Sender === false) {
    throw new TypeError("Classes can't be function-called");
  }

  events.EventEmitter.call(this);

  this._socket = socket;
  this.extensions = extensions || {};
  this.firstFragment = true;
  this.compress = false;
  this.messageHandlers = [];
  this.processing = false;
}

/**
 * Inherits from EventEmitter.
 */

util.inherits(Sender, events.EventEmitter);

/**
 * Sends a close instruction to the remote party.
 *
 * @api public
 */

Sender.prototype.close = function(code, data, mask, cb) {
  if (typeof code !== 'undefined') {
    if (typeof code !== 'number' ||
      !ErrorCodes.isValidErrorCode(code)) throw new Error('first argument must be a valid error code number');
  }
  code = code || 1000;
  var dataBuffer = new Buffer(2 + (data ? Buffer.byteLength(data) : 0));
  writeUInt16BE.call(dataBuffer, code, 0);
  if (dataBuffer.length > 2) dataBuffer.write(data, 2);

  var self = this;
  this.messageHandlers.push(function() {
    self.frameAndSend(0x8, dataBuffer, true, mask);
    if (typeof cb == 'function') cb();
  });
  this.flush();
};

/**
 * Sends a ping message to the remote party.
 *
 * @api public
 */

Sender.prototype.ping = function(data, options) {
  var mask = options && options.mask;
  var self = this;
  this.messageHandlers.push(function() {
    self.frameAndSend(0x9, data || '', true, mask);
  });
  this.flush();
};

/**
 * Sends a pong message to the remote party.
 *
 * @api public
 */

Sender.prototype.pong = function(data, options) {
  var mask = options && options.mask;
  var self = this;
  this.messageHandlers.push(function() {
    self.frameAndSend(0xa, data || '', true, mask);
  });
  this.flush();
};

/**
 * Sends text or binary data to the remote party.
 *
 * @api public
 */

Sender.prototype.send = function(data, options, cb) {
  var finalFragment = options && options.fin === false ? false : true;
  var mask = options && options.mask;
  var compress = options && options.compress;
  var opcode = options && options.binary ? 2 : 1;
  if (this.firstFragment === false) {
    opcode = 0;
    compress = false;
  } else {
    this.firstFragment = false;
    this.compress = compress;
  }
  if (finalFragment) this.firstFragment = true

  var compressFragment = this.compress;

  var self = this;
  this.messageHandlers.push(function() {
    if (!data || !compressFragment) {
      self.frameAndSend(opcode, data, finalFragment, mask, compress, cb);
      return;
    }

    self.processing = true;
    self.applyExtensions(data, finalFragment, compressFragment, function(err, data) {
      if (err) {
        if (typeof cb == 'function') cb(err);
        else self.emit('error', err);
        return;
      }
      self.frameAndSend(opcode, data, finalFragment, mask, compress, cb);
      self.processing = false;
      self.flush();
    });
  });
  this.flush();
};

/**
 * Frames and sends a piece of data according to the HyBi WebSocket protocol.
 *
 * @api private
 */

Sender.prototype.frameAndSend = function(opcode, data, finalFragment, maskData, compressed, cb) {
  var canModifyData = false;

  if (!data) {
    try {
      this._socket.write(new Buffer([opcode | (finalFragment ? 0x80 : 0), 0 | (maskData ? 0x80 : 0)].concat(maskData ? [0, 0, 0, 0] : [])), 'binary', cb);
    }
    catch (e) {
      if (typeof cb == 'function') cb(e);
      else this.emit('error', e);
    }
    return;
  }

  if (!Buffer.isBuffer(data)) {
    canModifyData = true;
    if (data && (typeof data.byteLength !== 'undefined' || typeof data.buffer !== 'undefined')) {
      data = getArrayBuffer(data);
    } else {
      //
      // If people want to send a number, this would allocate the number in
      // bytes as memory size instead of storing the number as buffer value. So
      // we need to transform it to string in order to prevent possible
      // vulnerabilities / memory attacks.
      //
      if (typeof data === 'number') data = data.toString();

      data = new Buffer(data);
    }
  }

  var dataLength = data.length
    , dataOffset = maskData ? 6 : 2
    , secondByte = dataLength;

  if (dataLength >= 65536) {
    dataOffset += 8;
    secondByte = 127;
  }
  else if (dataLength > 125) {
    dataOffset += 2;
    secondByte = 126;
  }

  var mergeBuffers = dataLength < 32768 || (maskData && !canModifyData);
  var totalLength = mergeBuffers ? dataLength + dataOffset : dataOffset;
  var outputBuffer = new Buffer(totalLength);
  outputBuffer[0] = finalFragment ? opcode | 0x80 : opcode;
  if (compressed) outputBuffer[0] |= 0x40;

  switch (secondByte) {
    case 126:
      writeUInt16BE.call(outputBuffer, dataLength, 2);
      break;
    case 127:
      writeUInt32BE.call(outputBuffer, 0, 2);
      writeUInt32BE.call(outputBuffer, dataLength, 6);
  }

  if (maskData) {
    outputBuffer[1] = secondByte | 0x80;
    var mask = getRandomMask();
    outputBuffer[dataOffset - 4] = mask[0];
    outputBuffer[dataOffset - 3] = mask[1];
    outputBuffer[dataOffset - 2] = mask[2];
    outputBuffer[dataOffset - 1] = mask[3];
    if (mergeBuffers) {
      bufferUtil.mask(data, mask, outputBuffer, dataOffset, dataLength);
      try {
        this._socket.write(outputBuffer, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
    else {
      bufferUtil.mask(data, mask, data, 0, dataLength);
      try {
        this._socket.write(outputBuffer, 'binary');
        this._socket.write(data, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
  }
  else {
    outputBuffer[1] = secondByte;
    if (mergeBuffers) {
      data.copy(outputBuffer, dataOffset);
      try {
        this._socket.write(outputBuffer, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
    else {
      try {
        this._socket.write(outputBuffer, 'binary');
        this._socket.write(data, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
  }
};

/**
 * Execute message handler buffers
 *
 * @api private
 */

Sender.prototype.flush = function() {
  while (!this.processing && this.messageHandlers.length) {
    this.messageHandlers.shift()();
  }
};

/**
 * Apply extensions to message
 *
 * @api private
 */

Sender.prototype.applyExtensions = function(data, fin, compress, callback) {
  if ((data.buffer || data) instanceof ArrayBuffer) {
    data = getArrayBuffer(data);
  }
  this.extensions[PerMessageDeflate.extensionName].compress(data, fin, callback);
};

module.exports = Sender;

function writeUInt16BE(value, offset) {
  this[offset] = (value & 0xff00)>>8;
  this[offset+1] = value & 0xff;
}

function writeUInt32BE(value, offset) {
  this[offset] = (value & 0xff000000)>>24;
  this[offset+1] = (value & 0xff0000)>>16;
  this[offset+2] = (value & 0xff00)>>8;
  this[offset+3] = value & 0xff;
}

function getArrayBuffer(data) {
  // data is either an ArrayBuffer or ArrayBufferView.
  var array = new Uint8Array(data.buffer || data)
    , l = data.byteLength || data.length
    , o = data.byteOffset || 0
    , buffer = new Buffer(l);
  for (var i = 0; i < l; ++i) {
    buffer[i] = array[o+i];
  }
  return buffer;
}

function getRandomMask() {
  return crypto.randomBytes(4);
}


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var url = __webpack_require__(21)
  , util = __webpack_require__(1)
  , http = __webpack_require__(29)
  , https = __webpack_require__(45)
  , crypto = __webpack_require__(27)
  , stream = __webpack_require__(9)
  , Ultron = __webpack_require__(192)
  , Options = __webpack_require__(72)
  , Sender = __webpack_require__(100)
  , Receiver = __webpack_require__(99)
  , SenderHixie = __webpack_require__(201)
  , ReceiverHixie = __webpack_require__(200)
  , Extensions = __webpack_require__(98)
  , PerMessageDeflate = __webpack_require__(25)
  , EventEmitter = __webpack_require__(7).EventEmitter;

/**
 * Constants
 */

// Default protocol version

var protocolVersion = 13;

// Close timeout

var closeTimeout = 30 * 1000; // Allow 30 seconds to terminate the connection cleanly

/**
 * WebSocket implementation
 *
 * @constructor
 * @param {String} address Connection address.
 * @param {String|Array} protocols WebSocket protocols.
 * @param {Object} options Additional connection options.
 * @api public
 */
function WebSocket(address, protocols, options) {
  if (this instanceof WebSocket === false) {
    return new WebSocket(address, protocols, options);
  }

  EventEmitter.call(this);

  if (protocols && !Array.isArray(protocols) && 'object' === typeof protocols) {
    // accept the "options" Object as the 2nd argument
    options = protocols;
    protocols = null;
  }

  if ('string' === typeof protocols) {
    protocols = [ protocols ];
  }

  if (!Array.isArray(protocols)) {
    protocols = [];
  }

  this._socket = null;
  this._ultron = null;
  this._closeReceived = false;
  this.bytesReceived = 0;
  this.readyState = null;
  this.supports = {};
  this.extensions = {};
  this._binaryType = 'nodebuffer';

  if (Array.isArray(address)) {
    initAsServerClient.apply(this, address.concat(options));
  } else {
    initAsClient.apply(this, [address, protocols, options]);
  }
}

/**
 * Inherits from EventEmitter.
 */
util.inherits(WebSocket, EventEmitter);

/**
 * Ready States
 */
["CONNECTING", "OPEN", "CLOSING", "CLOSED"].forEach(function each(state, index) {
    WebSocket.prototype[state] = WebSocket[state] = index;
});

/**
 * Gracefully closes the connection, after sending a description message to the server
 *
 * @param {Object} data to be sent to the server
 * @api public
 */
WebSocket.prototype.close = function close(code, data) {
  if (this.readyState === WebSocket.CLOSED) return;

  if (this.readyState === WebSocket.CONNECTING) {
    this.readyState = WebSocket.CLOSED;
    return;
  }

  if (this.readyState === WebSocket.CLOSING) {
    if (this._closeReceived && this._isServer) {
      this.terminate();
    }
    return;
  }

  var self = this;
  try {
    this.readyState = WebSocket.CLOSING;
    this._closeCode = code;
    this._closeMessage = data;
    var mask = !this._isServer;
    this._sender.close(code, data, mask, function(err) {
      if (err) self.emit('error', err);

      if (self._closeReceived && self._isServer) {
        self.terminate();
      } else {
        // ensure that the connection is cleaned up even when no response of closing handshake.
        clearTimeout(self._closeTimer);
        self._closeTimer = setTimeout(cleanupWebsocketResources.bind(self, true), closeTimeout);
      }
    });
  } catch (e) {
    this.emit('error', e);
  }
};

/**
 * Pause the client stream
 *
 * @api public
 */
WebSocket.prototype.pause = function pauser() {
  if (this.readyState !== WebSocket.OPEN) throw new Error('not opened');

  return this._socket.pause();
};

/**
 * Sends a ping
 *
 * @param {Object} data to be sent to the server
 * @param {Object} Members - mask: boolean, binary: boolean
 * @param {boolean} dontFailWhenClosed indicates whether or not to throw if the connection isnt open
 * @api public
 */
WebSocket.prototype.ping = function ping(data, options, dontFailWhenClosed) {
  if (this.readyState !== WebSocket.OPEN) {
    if (dontFailWhenClosed === true) return;
    throw new Error('not opened');
  }

  options = options || {};

  if (typeof options.mask === 'undefined') options.mask = !this._isServer;

  this._sender.ping(data, options);
};

/**
 * Sends a pong
 *
 * @param {Object} data to be sent to the server
 * @param {Object} Members - mask: boolean, binary: boolean
 * @param {boolean} dontFailWhenClosed indicates whether or not to throw if the connection isnt open
 * @api public
 */
WebSocket.prototype.pong = function(data, options, dontFailWhenClosed) {
  if (this.readyState !== WebSocket.OPEN) {
    if (dontFailWhenClosed === true) return;
    throw new Error('not opened');
  }

  options = options || {};

  if (typeof options.mask === 'undefined') options.mask = !this._isServer;

  this._sender.pong(data, options);
};

/**
 * Resume the client stream
 *
 * @api public
 */
WebSocket.prototype.resume = function resume() {
  if (this.readyState !== WebSocket.OPEN) throw new Error('not opened');

  return this._socket.resume();
};

/**
 * Sends a piece of data
 *
 * @param {Object} data to be sent to the server
 * @param {Object} Members - mask: boolean, binary: boolean, compress: boolean
 * @param {function} Optional callback which is executed after the send completes
 * @api public
 */

WebSocket.prototype.send = function send(data, options, cb) {
  if (typeof options === 'function') {
    cb = options;
    options = {};
  }

  if (this.readyState !== WebSocket.OPEN) {
    if (typeof cb === 'function') cb(new Error('not opened'));
    else throw new Error('not opened');
    return;
  }

  if (!data) data = '';
  if (this._queue) {
    var self = this;
    this._queue.push(function() { self.send(data, options, cb); });
    return;
  }

  options = options || {};
  options.fin = true;

  if (typeof options.binary === 'undefined') {
    options.binary = (data instanceof ArrayBuffer || data instanceof Buffer ||
      data instanceof Uint8Array ||
      data instanceof Uint16Array ||
      data instanceof Uint32Array ||
      data instanceof Int8Array ||
      data instanceof Int16Array ||
      data instanceof Int32Array ||
      data instanceof Float32Array ||
      data instanceof Float64Array);
  }

  if (typeof options.mask === 'undefined') options.mask = !this._isServer;
  if (typeof options.compress === 'undefined') options.compress = true;
  if (!this.extensions[PerMessageDeflate.extensionName]) {
    options.compress = false;
  }

  var readable = typeof stream.Readable === 'function'
    ? stream.Readable
    : stream.Stream;

  if (data instanceof readable) {
    startQueue(this);
    var self = this;

    sendStream(this, data, options, function send(error) {
      process.nextTick(function tock() {
        executeQueueSends(self);
      });

      if (typeof cb === 'function') cb(error);
    });
  } else {
    this._sender.send(data, options, cb);
  }
};

/**
 * Streams data through calls to a user supplied function
 *
 * @param {Object} Members - mask: boolean, binary: boolean, compress: boolean
 * @param {function} 'function (error, send)' which is executed on successive ticks of which send is 'function (data, final)'.
 * @api public
 */
WebSocket.prototype.stream = function stream(options, cb) {
  if (typeof options === 'function') {
    cb = options;
    options = {};
  }

  var self = this;

  if (typeof cb !== 'function') throw new Error('callback must be provided');

  if (this.readyState !== WebSocket.OPEN) {
    if (typeof cb === 'function') cb(new Error('not opened'));
    else throw new Error('not opened');
    return;
  }

  if (this._queue) {
    this._queue.push(function () { self.stream(options, cb); });
    return;
  }

  options = options || {};

  if (typeof options.mask === 'undefined') options.mask = !this._isServer;
  if (typeof options.compress === 'undefined') options.compress = true;
  if (!this.extensions[PerMessageDeflate.extensionName]) {
    options.compress = false;
  }

  startQueue(this);

  function send(data, final) {
    try {
      if (self.readyState !== WebSocket.OPEN) throw new Error('not opened');
      options.fin = final === true;
      self._sender.send(data, options);
      if (!final) process.nextTick(cb.bind(null, null, send));
      else executeQueueSends(self);
    } catch (e) {
      if (typeof cb === 'function') cb(e);
      else {
        delete self._queue;
        self.emit('error', e);
      }
    }
  }

  process.nextTick(cb.bind(null, null, send));
};

/**
 * Immediately shuts down the connection
 *
 * @api public
 */
WebSocket.prototype.terminate = function terminate() {
  if (this.readyState === WebSocket.CLOSED) return;

  if (this._socket) {
    this.readyState = WebSocket.CLOSING;

    // End the connection
    try { this._socket.end(); }
    catch (e) {
      // Socket error during end() call, so just destroy it right now
      cleanupWebsocketResources.call(this, true);
      return;
    }

    // Add a timeout to ensure that the connection is completely
    // cleaned up within 30 seconds, even if the clean close procedure
    // fails for whatever reason
    // First cleanup any pre-existing timeout from an earlier "terminate" call,
    // if one exists.  Otherwise terminate calls in quick succession will leak timeouts
    // and hold the program open for `closeTimout` time.
    if (this._closeTimer) { clearTimeout(this._closeTimer); }
    this._closeTimer = setTimeout(cleanupWebsocketResources.bind(this, true), closeTimeout);
  } else if (this.readyState === WebSocket.CONNECTING) {
    cleanupWebsocketResources.call(this, true);
  }
};

/**
 * Expose bufferedAmount
 *
 * @api public
 */
Object.defineProperty(WebSocket.prototype, 'bufferedAmount', {
  get: function get() {
    var amount = 0;
    if (this._socket) {
      amount = this._socket.bufferSize || 0;
    }
    return amount;
  }
});

/**
 * Expose binaryType
 *
 * This deviates from the W3C interface since ws doesn't support the required
 * default "blob" type (instead we define a custom "nodebuffer" type).
 *
 * @see http://dev.w3.org/html5/websockets/#the-websocket-interface
 * @api public
 */
Object.defineProperty(WebSocket.prototype, 'binaryType', {
  get: function get() {
    return this._binaryType;
  },
  set: function set(type) {
    if (type === 'arraybuffer' || type === 'nodebuffer')
      this._binaryType = type;
    else
      throw new SyntaxError('unsupported binaryType: must be either "nodebuffer" or "arraybuffer"');
  }
});

/**
 * Emulates the W3C Browser based WebSocket interface using function members.
 *
 * @see http://dev.w3.org/html5/websockets/#the-websocket-interface
 * @api public
 */
['open', 'error', 'close', 'message'].forEach(function(method) {
  Object.defineProperty(WebSocket.prototype, 'on' + method, {
    /**
     * Returns the current listener
     *
     * @returns {Mixed} the set function or undefined
     * @api public
     */
    get: function get() {
      var listener = this.listeners(method)[0];
      return listener ? (listener._listener ? listener._listener : listener) : undefined;
    },

    /**
     * Start listening for events
     *
     * @param {Function} listener the listener
     * @returns {Mixed} the set function or undefined
     * @api public
     */
    set: function set(listener) {
      this.removeAllListeners(method);
      this.addEventListener(method, listener);
    }
  });
});

/**
 * Emulates the W3C Browser based WebSocket interface using addEventListener.
 *
 * @see https://developer.mozilla.org/en/DOM/element.addEventListener
 * @see http://dev.w3.org/html5/websockets/#the-websocket-interface
 * @api public
 */
WebSocket.prototype.addEventListener = function(method, listener) {
  var target = this;

  function onMessage (data, flags) {
    if (flags.binary && this.binaryType === 'arraybuffer')
        data = new Uint8Array(data).buffer;
    listener.call(target, new MessageEvent(data, !!flags.binary, target));
  }

  function onClose (code, message) {
    listener.call(target, new CloseEvent(code, message, target));
  }

  function onError (event) {
    event.type = 'error';
    event.target = target;
    listener.call(target, event);
  }

  function onOpen () {
    listener.call(target, new OpenEvent(target));
  }

  if (typeof listener === 'function') {
    if (method === 'message') {
      // store a reference so we can return the original function from the
      // addEventListener hook
      onMessage._listener = listener;
      this.on(method, onMessage);
    } else if (method === 'close') {
      // store a reference so we can return the original function from the
      // addEventListener hook
      onClose._listener = listener;
      this.on(method, onClose);
    } else if (method === 'error') {
      // store a reference so we can return the original function from the
      // addEventListener hook
      onError._listener = listener;
      this.on(method, onError);
    } else if (method === 'open') {
      // store a reference so we can return the original function from the
      // addEventListener hook
      onOpen._listener = listener;
      this.on(method, onOpen);
    } else {
      this.on(method, listener);
    }
  }
};

module.exports = WebSocket;
module.exports.buildHostHeader = buildHostHeader

/**
 * W3C MessageEvent
 *
 * @see http://www.w3.org/TR/html5/comms.html
 * @constructor
 * @api private
 */
function MessageEvent(dataArg, isBinary, target) {
  this.type = 'message';
  this.data = dataArg;
  this.target = target;
  this.binary = isBinary; // non-standard.
}

/**
 * W3C CloseEvent
 *
 * @see http://www.w3.org/TR/html5/comms.html
 * @constructor
 * @api private
 */
function CloseEvent(code, reason, target) {
  this.type = 'close';
  this.wasClean = (typeof code === 'undefined' || code === 1000);
  this.code = code;
  this.reason = reason;
  this.target = target;
}

/**
 * W3C OpenEvent
 *
 * @see http://www.w3.org/TR/html5/comms.html
 * @constructor
 * @api private
 */
function OpenEvent(target) {
  this.type = 'open';
  this.target = target;
}

// Append port number to Host header, only if specified in the url
// and non-default
function buildHostHeader(isSecure, hostname, port) {
  var headerHost = hostname;
  if (hostname) {
    if ((isSecure && (port != 443)) || (!isSecure && (port != 80))){
      headerHost = headerHost + ':' + port;
    }
  }
  return headerHost;
}

/**
 * Entirely private apis,
 * which may or may not be bound to a sepcific WebSocket instance.
 */
function initAsServerClient(req, socket, upgradeHead, options) {
  options = new Options({
    protocolVersion: protocolVersion,
    protocol: null,
    extensions: {},
    maxPayload: 0
  }).merge(options);

  // expose state properties
  this.protocol = options.value.protocol;
  this.protocolVersion = options.value.protocolVersion;
  this.extensions = options.value.extensions;
  this.supports.binary = (this.protocolVersion !== 'hixie-76');
  this.upgradeReq = req;
  this.readyState = WebSocket.CONNECTING;
  this._isServer = true;
  this.maxPayload = options.value.maxPayload;
  // establish connection
  if (options.value.protocolVersion === 'hixie-76') {
    establishConnection.call(this, ReceiverHixie, SenderHixie, socket, upgradeHead);
  } else {
    establishConnection.call(this, Receiver, Sender, socket, upgradeHead);
  }
}

function initAsClient(address, protocols, options) {
  options = new Options({
    origin: null,
    protocolVersion: protocolVersion,
    host: null,
    headers: null,
    protocol: protocols.join(','),
    agent: null,

    // ssl-related options
    pfx: null,
    key: null,
    passphrase: null,
    cert: null,
    ca: null,
    ciphers: null,
    rejectUnauthorized: null,
    perMessageDeflate: true,
    localAddress: null
  }).merge(options);

  if (options.value.protocolVersion !== 8 && options.value.protocolVersion !== 13) {
    throw new Error('unsupported protocol version');
  }

  // verify URL and establish http class
  var serverUrl = url.parse(address);
  var isUnixSocket = serverUrl.protocol === 'ws+unix:';
  if (!serverUrl.host && !isUnixSocket) throw new Error('invalid url');
  var isSecure = serverUrl.protocol === 'wss:' || serverUrl.protocol === 'https:';
  var httpObj = isSecure ? https : http;
  var port = serverUrl.port || (isSecure ? 443 : 80);
  var auth = serverUrl.auth;

  // prepare extensions
  var extensionsOffer = {};
  var perMessageDeflate;
  if (options.value.perMessageDeflate) {
    perMessageDeflate = new PerMessageDeflate(typeof options.value.perMessageDeflate !== true ? options.value.perMessageDeflate : {}, false);
    extensionsOffer[PerMessageDeflate.extensionName] = perMessageDeflate.offer();
  }

  // expose state properties
  this._isServer = false;
  this.url = address;
  this.protocolVersion = options.value.protocolVersion;
  this.supports.binary = (this.protocolVersion !== 'hixie-76');

  // begin handshake
  var key = new Buffer(options.value.protocolVersion + '-' + Date.now()).toString('base64');
  var shasum = crypto.createHash('sha1');
  shasum.update(key + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11');
  var expectedServerKey = shasum.digest('base64');

  var agent = options.value.agent;

  var headerHost = buildHostHeader(isSecure, serverUrl.hostname, port)

  var requestOptions = {
    port: port,
    host: serverUrl.hostname,
    headers: {
      'Connection': 'Upgrade',
      'Upgrade': 'websocket',
      'Host': headerHost,
      'Sec-WebSocket-Version': options.value.protocolVersion,
      'Sec-WebSocket-Key': key
    }
  };

  // If we have basic auth.
  if (auth) {
    requestOptions.headers.Authorization = 'Basic ' + new Buffer(auth).toString('base64');
  }

  if (options.value.protocol) {
    requestOptions.headers['Sec-WebSocket-Protocol'] = options.value.protocol;
  }

  if (options.value.host) {
    requestOptions.headers.Host = options.value.host;
  }

  if (options.value.headers) {
    for (var header in options.value.headers) {
       if (options.value.headers.hasOwnProperty(header)) {
        requestOptions.headers[header] = options.value.headers[header];
       }
    }
  }

  if (Object.keys(extensionsOffer).length) {
    requestOptions.headers['Sec-WebSocket-Extensions'] = Extensions.format(extensionsOffer);
  }

  if (options.isDefinedAndNonNull('pfx')
   || options.isDefinedAndNonNull('key')
   || options.isDefinedAndNonNull('passphrase')
   || options.isDefinedAndNonNull('cert')
   || options.isDefinedAndNonNull('ca')
   || options.isDefinedAndNonNull('ciphers')
   || options.isDefinedAndNonNull('rejectUnauthorized')) {

    if (options.isDefinedAndNonNull('pfx')) requestOptions.pfx = options.value.pfx;
    if (options.isDefinedAndNonNull('key')) requestOptions.key = options.value.key;
    if (options.isDefinedAndNonNull('passphrase')) requestOptions.passphrase = options.value.passphrase;
    if (options.isDefinedAndNonNull('cert')) requestOptions.cert = options.value.cert;
    if (options.isDefinedAndNonNull('ca')) requestOptions.ca = options.value.ca;
    if (options.isDefinedAndNonNull('ciphers')) requestOptions.ciphers = options.value.ciphers;
    if (options.isDefinedAndNonNull('rejectUnauthorized')) requestOptions.rejectUnauthorized = options.value.rejectUnauthorized;

    if (!agent) {
        // global agent ignores client side certificates
        agent = new httpObj.Agent(requestOptions);
    }
  }

  requestOptions.path = serverUrl.path || '/';

  if (agent) {
    requestOptions.agent = agent;
  }

  if (isUnixSocket) {
    requestOptions.socketPath = serverUrl.pathname;
  }

  if (options.value.localAddress) {
    requestOptions.localAddress = options.value.localAddress;
  }

  if (options.value.origin) {
    if (options.value.protocolVersion < 13) requestOptions.headers['Sec-WebSocket-Origin'] = options.value.origin;
    else requestOptions.headers.Origin = options.value.origin;
  }

  var self = this;
  var req = httpObj.request(requestOptions);

  req.on('error', function onerror(error) {
    self.emit('error', error);
    cleanupWebsocketResources.call(self, error);
  });

  req.once('response', function response(res) {
    var error;

    if (!self.emit('unexpected-response', req, res)) {
      error = new Error('unexpected server response (' + res.statusCode + ')');
      req.abort();
      self.emit('error', error);
    }

    cleanupWebsocketResources.call(self, error);
  });

  req.once('upgrade', function upgrade(res, socket, upgradeHead) {
    if (self.readyState === WebSocket.CLOSED) {
      // client closed before server accepted connection
      self.emit('close');
      self.removeAllListeners();
      socket.end();
      return;
    }

    var serverKey = res.headers['sec-websocket-accept'];
    if (typeof serverKey === 'undefined' || serverKey !== expectedServerKey) {
      self.emit('error', 'invalid server key');
      self.removeAllListeners();
      socket.end();
      return;
    }

    var serverProt = res.headers['sec-websocket-protocol'];
    var protList = (options.value.protocol || "").split(/, */);
    var protError = null;

    if (!options.value.protocol && serverProt) {
      protError = 'server sent a subprotocol even though none requested';
    } else if (options.value.protocol && !serverProt) {
      protError = 'server sent no subprotocol even though requested';
    } else if (serverProt && protList.indexOf(serverProt) === -1) {
      protError = 'server responded with an invalid protocol';
    }

    if (protError) {
      self.emit('error', protError);
      self.removeAllListeners();
      socket.end();
      return;
    } else if (serverProt) {
      self.protocol = serverProt;
    }

    var serverExtensions = Extensions.parse(res.headers['sec-websocket-extensions']);
    if (perMessageDeflate && serverExtensions[PerMessageDeflate.extensionName]) {
      try {
        perMessageDeflate.accept(serverExtensions[PerMessageDeflate.extensionName]);
      } catch (err) {
        self.emit('error', 'invalid extension parameter');
        self.removeAllListeners();
        socket.end();
        return;
      }
      self.extensions[PerMessageDeflate.extensionName] = perMessageDeflate;
    }

    establishConnection.call(self, Receiver, Sender, socket, upgradeHead);

    // perform cleanup on http resources
    req.removeAllListeners();
    req = null;
    agent = null;
  });

  req.end();
  this.readyState = WebSocket.CONNECTING;
}

function establishConnection(ReceiverClass, SenderClass, socket, upgradeHead) {
  var ultron = this._ultron = new Ultron(socket)
    , called = false
    , self = this;

  socket.setTimeout(0);
  socket.setNoDelay(true);

  this._receiver = new ReceiverClass(this.extensions,this.maxPayload);
  this._socket = socket;

  // socket cleanup handlers
  ultron.on('end', cleanupWebsocketResources.bind(this));
  ultron.on('close', cleanupWebsocketResources.bind(this));
  ultron.on('error', cleanupWebsocketResources.bind(this));

  // ensure that the upgradeHead is added to the receiver
  function firstHandler(data) {
    if (called || self.readyState === WebSocket.CLOSED) return;

    called = true;
    socket.removeListener('data', firstHandler);
    ultron.on('data', realHandler);

    if (upgradeHead && upgradeHead.length > 0) {
      realHandler(upgradeHead);
      upgradeHead = null;
    }

    if (data) realHandler(data);
  }

  // subsequent packets are pushed straight to the receiver
  function realHandler(data) {
    self.bytesReceived += data.length;
    self._receiver.add(data);
  }

  ultron.on('data', firstHandler);

  // if data was passed along with the http upgrade,
  // this will schedule a push of that on to the receiver.
  // this has to be done on next tick, since the caller
  // hasn't had a chance to set event handlers on this client
  // object yet.
  process.nextTick(firstHandler);

  // receiver event handlers
  self._receiver.ontext = function ontext(data, flags) {
    flags = flags || {};

    self.emit('message', data, flags);
  };

  self._receiver.onbinary = function onbinary(data, flags) {
    flags = flags || {};

    flags.binary = true;
    self.emit('message', data, flags);
  };

  self._receiver.onping = function onping(data, flags) {
    flags = flags || {};

    self.pong(data, {
      mask: !self._isServer,
      binary: flags.binary === true
    }, true);

    self.emit('ping', data, flags);
  };

  self._receiver.onpong = function onpong(data, flags) {
    self.emit('pong', data, flags || {});
  };

  self._receiver.onclose = function onclose(code, data, flags) {
    flags = flags || {};

    self._closeReceived = true;
    self.close(code, data);
  };

  self._receiver.onerror = function onerror(reason, errorCode) {
    // close the connection when the receiver reports a HyBi error code
    self.close(typeof errorCode !== 'undefined' ? errorCode : 1002, '');
    self.emit('error', (reason instanceof Error) ? reason : (new Error(reason)));
  };

  // finalize the client
  this._sender = new SenderClass(socket, this.extensions);
  this._sender.on('error', function onerror(error) {
    self.close(1002, '');
    self.emit('error', error);
  });

  this.readyState = WebSocket.OPEN;
  this.emit('open');
}

function startQueue(instance) {
  instance._queue = instance._queue || [];
}

function executeQueueSends(instance) {
  var queue = instance._queue;
  if (typeof queue === 'undefined') return;

  delete instance._queue;
  for (var i = 0, l = queue.length; i < l; ++i) {
    queue[i]();
  }
}

function sendStream(instance, stream, options, cb) {
  stream.on('data', function incoming(data) {
    if (instance.readyState !== WebSocket.OPEN) {
      if (typeof cb === 'function') cb(new Error('not opened'));
      else {
        delete instance._queue;
        instance.emit('error', new Error('not opened'));
      }
      return;
    }

    options.fin = false;
    instance._sender.send(data, options);
  });

  stream.on('end', function end() {
    if (instance.readyState !== WebSocket.OPEN) {
      if (typeof cb === 'function') cb(new Error('not opened'));
      else {
        delete instance._queue;
        instance.emit('error', new Error('not opened'));
      }
      return;
    }

    options.fin = true;
    instance._sender.send(null, options);

    if (typeof cb === 'function') cb(null);
  });
}

function cleanupWebsocketResources(error) {
  if (this.readyState === WebSocket.CLOSED) return;

  this.readyState = WebSocket.CLOSED;

  clearTimeout(this._closeTimer);
  this._closeTimer = null;

  // If the connection was closed abnormally (with an error), or if
  // the close control frame was not received then the close code
  // must default to 1006.
  if (error || !this._closeReceived) {
    this._closeCode = 1006;
  }
  this.emit('close', this._closeCode || 1000, this._closeMessage || '');

  if (this._socket) {
    if (this._ultron) this._ultron.destroy();
    this._socket.on('error', function onerror() {
      try { this.destroy(); }
      catch (e) {}
    });

    try {
      if (!error) this._socket.end();
      else this._socket.destroy();
    } catch (e) { /* Ignore termination errors */ }

    this._socket = null;
    this._ultron = null;
  }

  if (this._sender) {
    this._sender.removeAllListeners();
    this._sender = null;
  }

  if (this._receiver) {
    this._receiver.cleanup();
    this._receiver = null;
  }

  if (this.extensions[PerMessageDeflate.extensionName]) {
    this.extensions[PerMessageDeflate.extensionName].cleanup();
  }

  this.extensions = null;

  this.removeAllListeners();
  this.on('error', function onerror() {}); // catch all errors after this
  delete this._queue;
}


/***/ }),
/* 102 */
/***/ (function(module, exports) {

module.exports = require("assert");

/***/ }),
/* 103 */
/***/ (function(module, exports) {

module.exports = require("zlib");

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Client = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* jshint esversion: 6 */

var _protobufjs = __webpack_require__(73);

var _protobufjs2 = _interopRequireDefault(_protobufjs);

var _tendermint = __webpack_require__(136);

var _proto = __webpack_require__(30);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ResultSet = _proto.weave.app.ResultSet;

function parseResultSet(data) {
    if (typeof data === 'string') {
        data = new Buffer(data, 'base64');
    }
    return ResultSet.decode(data).results;
}

// let DefaultURI = "http://localhost:46657";
var DefaultURI = "ws://localhost:46657";

var sleep = function sleep(ms) {
    return new Promise(function (res) {
        return setTimeout(res, ms);
    });
};

var defaultKeyMap = function defaultKeyMap(key) {
    return { _key: key };
};

var perr = function perr(o) {
    return Error(JSON.stringify(o, null, 2));
};

var Client = exports.Client = function () {
    function Client(uri) {
        _classCallCheck(this, Client);

        uri = uri || DefaultURI;
        this.client = (0, _tendermint.RpcClient)(uri);
        this.closed = false;
        // need to handle error somehow, only care if it is not us closing it...
        this.client.on('error', function (err) {
            // if (!this.closed) console.log("connection:", err);
            console.log("connection:", err);
        });
        // load the ResultSet protobuf
    }

    _createClass(Client, [{
        key: "close",
        value: function close() {
            this.closed = true;
            return this.client.close();
        }
    }, {
        key: "status",
        value: function status() {
            return this.client.status();
        }
    }, {
        key: "chainID",
        value: function chainID() {
            return this.client.status().then(function (status) {
                return status.node_info.network;
            });
        }
    }, {
        key: "height",
        value: function height() {
            return this.client.status().then(function (status) {
                return status.sync_info.latest_block_height;
            });
        }
    }, {
        key: "headers",
        value: function headers(minHeight, maxHeight) {
            return this.client.blockchain({ minHeight: minHeight, maxHeight: maxHeight });
        }
    }, {
        key: "header",
        value: function header(height) {
            return this.headers(height, height).then(function (head) {
                return head.block_metas[0];
            });
        }
    }, {
        key: "block",
        value: function block(height) {
            return this.client.block({ height: height });
        }
    }, {
        key: "sendTx",
        value: async function sendTx(tx) {
            if (typeof tx !== 'string') {
                tx = tx.toString('base64');
            }
            var resp = await this.client.broadcastTxCommit({ tx: tx });
            if (resp.check_tx.code) {
                throw perr(resp.check_tx);
            }
            if (resp.deliver_tx.code) {
                throw perr(resp.deliver_tx);
            }
            return { hash: resp.hash, height: resp.height, deliver_tx: resp.deliver_tx };
        }

        // search constructs a /tx_search query.
        // bucket is a prefix, appended with ":", and hex decoded key
        // the whole reconstructed key is converted into upper-case
        // hex...
        //
        // This makes the api usable and I hope in the future I can use
        // bucket=<hex key> format (when tendermint supports multiple
        // tags with same key)

    }, {
        key: "search",
        value: function search(bucket, key, value) {
            var query = tagToQuery(bucket, key, value);
            // console.log("search: " + query);
            // TODO: we will have to paginate when there are more than enough to fit on one page....
            return this.client.txSearch({ query: query, per_page: 100 }).catch(function (err) {
                return console.log(err);
            });
        }

        // searchParse will call search and extract all Tx bytes into proper Tx
        // if Data is provided, it will parse the tx result as a protobuf message,
        // otherwise treat it as raw bytes.
        //
        // all bytes are left as unencoded buffers for later manipulation,
        // you must encode them as hex/base64 for json output
        //
        // TODO: do we want to do something like this???
        // Buffer.prototype.toJSON = function () {return this.toString("hex")};

    }, {
        key: "searchParse",
        value: async function searchParse(bucket, key, Tx, value, opts) {
            if (opts === undefined) {
                opts = { longs: Number };
            }

            var _ref = await this.search(bucket, key, value),
                txs = _ref.txs;

            if (!txs || txs.length === 0) {
                return [];
            }
            var parsed = txs.map(function (_ref2) {
                var height = _ref2.height,
                    tx_result = _ref2.tx_result,
                    tx = _ref2.tx;

                // parse the tx into shape
                tx = (0, _proto.pbToObj)(Tx, Buffer.from(tx, 'base64'), opts);
                // data is just a raw buffer
                var data = Buffer.from(tx_result.data || "", 'base64');
                return { height: height, tx: tx, data: data };
            });
            return parsed;
        }

        // waitForBlock will return when block h is reached

    }, {
        key: "waitForBlock",
        value: async function waitForBlock(goal) {
            var height = await this.height();
            while (height < goal) {
                await sleep(1000);
                height = await this.height();
            }
            return height;
        }

        // queryRaw returns the direct response as a promise

    }, {
        key: "queryRaw",
        value: function queryRaw(data, path) {
            path = path || "/"; // default path literal key
            if (typeof data !== 'string') {
                data = data.toString('hex');
            }
            return this.client.abciQuery({ path: path, data: data });
        }

        // query returns an array of {key, value} models (raw bytes)
        //  or throws an error on invalid code

    }, {
        key: "query",
        value: async function query(data, path) {
            var q = await this.queryRaw(data, path);
            q = q.response;
            if (q.code) {
                throw Error("Query (" + q.code + "): " + q.log);
            }

            // TODO: return
            var height = parseInt(q.height, 10);

            // no response, empty array, done
            if (!q.key) {
                return { height: height, results: [] };
            }

            // now parse them both and join....
            var keys = parseResultSet(q.key);
            var values = parseResultSet(q.value);
            if (keys.length !== values.length) {
                throw Error("Got " + keys.length + " keys but " + values.length + " values");
            }

            var results = keys.map(function (key, i) {
                return { key: key, value: values[i] };
            });
            return { height: height, results: results };
        }

        // queryParse takes a protobuf `model` to decode the raw bytes,
        // and an optional keyMap function that creates an object with one element
        // from the key. If no keyMap given, then key is returned unmodified under _key

    }, {
        key: "queryParse",
        value: async function queryParse(data, path, model, keyMap) {
            keyMap = keyMap || defaultKeyMap;
            var parse = function parse(val) {
                return model.toObject(model.decode(val), { longs: Number });
            };

            var _ref3 = await this.query(data, path),
                height = _ref3.height,
                results = _ref3.results;

            var parsed = results.map(function (res) {
                var k = keyMap(res.key);
                var v = parse(res.value);
                return Object.assign(k, v);
            });
            return { height: height, parsed: parsed };
        }

        // queryParseOne calls query parse and returns the first element of
        // the parsed set, or null if no set.

    }, {
        key: "queryParseOne",
        value: async function queryParseOne(data, path, model, keyMap) {
            var _ref4 = await this.queryParse(data, path, model, keyMap),
                height = _ref4.height,
                parsed = _ref4.parsed;

            if (parsed.length === 0) {
                return { height: height, parsed: null };
            }
            return { height: height, parsed: parsed[0] };
        }

        //// subscriptions /////

    }, {
        key: "unsubscribe",
        value: function unsubscribe(query) {
            if (query) {
                // TODO: support per-query....
                console.log("per-query unsubscribe unclear in tendermint");
            }
            return this.client.unsubscribeAll();
        }
    }, {
        key: "subscribeHeaders",
        value: function subscribeHeaders(cb) {
            var query = "tm.event = 'NewBlock'";
            return this.client.subscribe({ query: query }, cb);
        }
    }, {
        key: "subscribeTx",
        value: function subscribeTx(bucket, key, cb) {
            // doc: subscribeTx accepts arsg like search,
            // doc: will trigger cb on each incoming tx that matches
            // doc: search for any tx that matches these tags
            var match = tagToQuery(bucket, key);
            var query = "tm.event = 'Tx' AND " + match;
            // console.log("subscribe: " + query);
            return this.client.subscribe({ query: query }, cb);
        }
    }, {
        key: "subscribeAllTx",
        value: function subscribeAllTx(cb) {
            var query = "tm.event = 'Tx'";
            // console.log("subscribe: " + query);
            return this.client.subscribe({ query: query }, cb);
        }
    }]);

    return Client;
}();

function tagToQuery(bucket, key) {
    var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 's';

    var b = Buffer.from(bucket);
    var k = Buffer.from(key, 'hex');
    var sep = Buffer.from(":");
    var tag = Buffer.concat([b, sep, k]);
    tag = tag.toString('hex').toUpperCase();
    var query = tag + "='" + value + "'";
    return query;
}

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.open = open;

var _levelup = __webpack_require__(161);

var _levelup2 = _interopRequireDefault(_levelup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// open will take a abstract-leveldown db and options and return
// a promise to an opened levelup db
function open(db, opts) {
    return new Promise(function (res, rej) {
        (0, _levelup2.default)(db, opts, function (err, db) {
            if (err) {
                rej(err);
            } else {
                res(db);
            }
        });
    });
}

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.KeyBase = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* jshint esversion: 6 */

var _proto = __webpack_require__(30);

var _crypto = __webpack_require__(134);

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Signature = _proto.weave.crypto.Signature;
var PublicKey = _proto.weave.crypto.PublicKey;
var PrivateKey = _proto.weave.crypto.PrivateKey;

// KeyPair contains PrivateKey, PublicKey protobuf Messages
// right now only supports ed25519, but should be more generally compatible

var KeyPair = function () {
    function KeyPair(algo, pubkey, secret) {
        _classCallCheck(this, KeyPair);

        this.algo = algo;
        this.pubkey = pubkey;
        this.secret = secret;
        this.sequence = {};
    }

    _createClass(KeyPair, [{
        key: 'pubBytes',
        value: function pubBytes() {
            return this.pubkey[this.algo];
        }
    }, {
        key: 'secBytes',
        value: function secBytes() {
            return this.secret[this.algo];
        }
    }, {
        key: 'address',
        value: function address() {
            return (0, _crypto.getAddress)(this.pubBytes());
        }
    }, {
        key: 'addressBytes',
        value: function addressBytes() {
            return new Buffer(this.address(), 'hex');
        }
    }, {
        key: 'identifier',
        value: function identifier() {
            return (0, _crypto.getIdentifier)(this.pubBytes());
        }

        // sign returns the signature as well as the sequence number
        // it signed with

    }, {
        key: 'sign',
        value: function sign(msg, chainID) {
            var seq = this.sequence[chainID] || 0;
            this.sequence[chainID] = seq + 1;
            var bz = (0, _crypto.signBytes)(msg, chainID, seq);
            var sig = (0, _crypto.sign)(bz, this.secBytes());
            var wrap = Signature.create();
            wrap[this.algo] = sig;
            return { sig: wrap, seq: seq };
        }
    }, {
        key: 'verify',
        value: function verify(msg, sig, chainID, seq) {
            var bz = (0, _crypto.signBytes)(msg, chainID, seq);
            return (0, _crypto.verify)(bz, sig[this.algo], this.pubBytes());
        }
    }, {
        key: 'stringify',
        value: function stringify() {
            var value = { pub: this.pubkey, sec: this.secret, seq: this.sequence };
            return JSON.stringify(value);
        }
    }]);

    return KeyPair;
}();

var KeyBase = exports.KeyBase = function () {
    function KeyBase() {
        _classCallCheck(this, KeyBase);

        this.keys = {};
        this.db = null;
    }

    // setup will init all modules
    // protoPath is the name of the .proto file and packageName used inside of it
    // db must be levelup compliant


    _createClass(KeyBase, [{
        key: 'makePair',
        value: function makePair(algo, pubkey, secret) {
            var pub = PublicKey.create();
            pub[algo] = Buffer.from(pubkey);
            var priv = PrivateKey.create();
            priv[algo] = Buffer.from(secret);
            return new KeyPair(algo, pub, priv);
        }
    }, {
        key: 'list',
        value: function list() {
            // if only there were a nicer mapper on objects....
            return Object.entries(this.keys).map(function (_ref) {
                var _ref2 = _slicedToArray(_ref, 2),
                    k = _ref2[0],
                    v = _ref2[1];

                return _defineProperty({}, k, v.address());
            }).reduce(function (acc, o) {
                return Object.assign(acc, o);
            }, {});
        }

        // TODO: support multiple algorithms, not just ed25519

    }, {
        key: 'add',
        value: function add(name) {
            if (this.keys[name]) {
                throw Error("Cannot overwrite key " + name);
            }
            var kp = (0, _crypto.generateKeyPair)();
            var res = this.makePair("ed25519", kp.pubkey, kp.secret);
            this.keys[name] = res;
            return res;
        }

        // TODO: support multiple algorithms, not just ed25519
        // call with properly formatted protobuf Messages as pubkey and secret

    }, {
        key: 'set',
        value: function set(name, pubkey, secret, sequence) {
            if (this.keys[name]) {
                throw Error("Cannot overwrite key " + name);
            }
            sequence = sequence || {};
            // if they are raw bytes...
            // let res = this.makePair("ed25519", pubkey, secret);
            // if they are already protobuf objects
            var res = new KeyPair("ed25519", pubkey, secret);
            res.sequence = sequence;
            this.keys[name] = res;
            return res;
        }
    }, {
        key: 'get',
        value: function get(name) {
            return this.keys[name];
        }
    }, {
        key: 'save',


        // db should be local storage??? node-localstorage
        // returns a promise that is resolved when all data writen
        // TODO: this only adds keys, doesn't remove
        value: function save(db) {
            if (db) {
                this.db = db;
            }
            if (!this.db) {
                throw Error("must set db in save or previous load");
            }
            var batch = this.db.batch();
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = Object.keys(this.keys)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var name = _step.value;

                    var pair = this.get(name);
                    batch.put(name, pair.stringify());
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            return batch.write();
        }

        // db must be a levelup db or falsy
        // returns a promise that resolves to the filled keybase

    }, {
        key: 'load',
        value: function load(db) {
            var _this = this;

            // short-circuit, nothing to do
            if (!db) {
                return new Promise(function (res, rej) {
                    return res(_this);
                });
            }
            this.db = db;
            return new Promise(function (res, rej) {
                _this.db.createReadStream().on('data', function (data) {
                    var name = data.key.toString();

                    var _parse = _this.parse(data.value),
                        pub = _parse.pub,
                        sec = _parse.sec,
                        seq = _parse.seq;

                    _this.set(name, pub, sec, seq);
                }).on('error', function (err) {
                    return rej(err);
                }).on('close', function () {
                    return res(_this);
                }).on('end', function () {
                    return res(_this);
                });
            });
        }

        // parse takes a json serialized KeyPair and reconstructs is

    }, {
        key: 'parse',
        value: function parse(pair) {
            var _JSON$parse = JSON.parse(pair),
                pub = _JSON$parse.pub,
                sec = _JSON$parse.sec,
                seq = _JSON$parse.seq;

            pub = PublicKey.fromObject(pub);
            sec = PrivateKey.fromObject(sec);
            return { pub: pub, sec: sec, seq: seq };
        }
    }, {
        key: 'length',
        get: function get() {
            return Object.keys(this.keys).length;
        }
    }], [{
        key: 'setup',
        value: function setup(db) {
            return (0, _crypto.initNacl)().then(function () {
                return new KeyBase().load(db);
            });
        }
    }]);

    return KeyBase;
}();

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A minimal base64 implementation for number arrays.
 * @memberof util
 * @namespace
 */
var base64 = exports;

/**
 * Calculates the byte length of a base64 encoded string.
 * @param {string} string Base64 encoded string
 * @returns {number} Byte length
 */
base64.length = function length(string) {
    var p = string.length;
    if (!p)
        return 0;
    var n = 0;
    while (--p % 4 > 1 && string.charAt(p) === "=")
        ++n;
    return Math.ceil(string.length * 3) / 4 - n;
};

// Base64 encoding table
var b64 = new Array(64);

// Base64 decoding table
var s64 = new Array(123);

// 65..90, 97..122, 48..57, 43, 47
for (var i = 0; i < 64;)
    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;

/**
 * Encodes a buffer to a base64 encoded string.
 * @param {Uint8Array} buffer Source buffer
 * @param {number} start Source start
 * @param {number} end Source end
 * @returns {string} Base64 encoded string
 */
base64.encode = function encode(buffer, start, end) {
    var parts = null,
        chunk = [];
    var i = 0, // output index
        j = 0, // goto index
        t;     // temporary
    while (start < end) {
        var b = buffer[start++];
        switch (j) {
            case 0:
                chunk[i++] = b64[b >> 2];
                t = (b & 3) << 4;
                j = 1;
                break;
            case 1:
                chunk[i++] = b64[t | b >> 4];
                t = (b & 15) << 2;
                j = 2;
                break;
            case 2:
                chunk[i++] = b64[t | b >> 6];
                chunk[i++] = b64[b & 63];
                j = 0;
                break;
        }
        if (i > 8191) {
            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));
            i = 0;
        }
    }
    if (j) {
        chunk[i++] = b64[t];
        chunk[i++] = 61;
        if (j === 1)
            chunk[i++] = 61;
    }
    if (parts) {
        if (i)
            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
        return parts.join("");
    }
    return String.fromCharCode.apply(String, chunk.slice(0, i));
};

var invalidEncoding = "invalid encoding";

/**
 * Decodes a base64 encoded string to a buffer.
 * @param {string} string Source string
 * @param {Uint8Array} buffer Destination buffer
 * @param {number} offset Destination offset
 * @returns {number} Number of bytes written
 * @throws {Error} If encoding is invalid
 */
base64.decode = function decode(string, buffer, offset) {
    var start = offset;
    var j = 0, // goto index
        t;     // temporary
    for (var i = 0; i < string.length;) {
        var c = string.charCodeAt(i++);
        if (c === 61 && j > 1)
            break;
        if ((c = s64[c]) === undefined)
            throw Error(invalidEncoding);
        switch (j) {
            case 0:
                t = c;
                j = 1;
                break;
            case 1:
                buffer[offset++] = t << 2 | (c & 48) >> 4;
                t = c;
                j = 2;
                break;
            case 2:
                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;
                t = c;
                j = 3;
                break;
            case 3:
                buffer[offset++] = (t & 3) << 6 | c;
                j = 0;
                break;
        }
    }
    if (j === 1)
        throw Error(invalidEncoding);
    return offset - start;
};

/**
 * Tests if the specified string appears to be base64 encoded.
 * @param {string} string String to test
 * @returns {boolean} `true` if probably base64 encoded, otherwise false
 */
base64.test = function test(string) {
    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);
};


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = codegen;

/**
 * Begins generating a function.
 * @memberof util
 * @param {string[]} functionParams Function parameter names
 * @param {string} [functionName] Function name if not anonymous
 * @returns {Codegen} Appender that appends code to the function's body
 */
function codegen(functionParams, functionName) {

    /* istanbul ignore if */
    if (typeof functionParams === "string") {
        functionName = functionParams;
        functionParams = undefined;
    }

    var body = [];

    /**
     * Appends code to the function's body or finishes generation.
     * @typedef Codegen
     * @type {function}
     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any
     * @param {...*} [formatParams] Format parameters
     * @returns {Codegen|Function} Itself or the generated function if finished
     * @throws {Error} If format parameter counts do not match
     */

    function Codegen(formatStringOrScope) {
        // note that explicit array handling below makes this ~50% faster

        // finish the function
        if (typeof formatStringOrScope !== "string") {
            var source = toString();
            if (codegen.verbose)
                console.log("codegen: " + source); // eslint-disable-line no-console
            source = "return " + source;
            if (formatStringOrScope) {
                var scopeKeys   = Object.keys(formatStringOrScope),
                    scopeParams = new Array(scopeKeys.length + 1),
                    scopeValues = new Array(scopeKeys.length),
                    scopeOffset = 0;
                while (scopeOffset < scopeKeys.length) {
                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];
                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];
                }
                scopeParams[scopeOffset] = source;
                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func
            }
            return Function(source)(); // eslint-disable-line no-new-func
        }

        // otherwise append to body
        var formatParams = new Array(arguments.length - 1),
            formatOffset = 0;
        while (formatOffset < formatParams.length)
            formatParams[formatOffset] = arguments[++formatOffset];
        formatOffset = 0;
        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {
            var value = formatParams[formatOffset++];
            switch ($1) {
                case "d": case "f": return String(Number(value));
                case "i": return String(Math.floor(value));
                case "j": return JSON.stringify(value);
                case "s": return String(value);
            }
            return "%";
        });
        if (formatOffset !== formatParams.length)
            throw Error("parameter count mismatch");
        body.push(formatStringOrScope);
        return Codegen;
    }

    function toString(functionNameOverride) {
        return "function " + (functionNameOverride || functionName || "") + "(" + (functionParams && functionParams.join(",") || "") + "){\n  " + body.join("\n  ") + "\n}";
    }

    Codegen.toString = toString;
    return Codegen;
}

/**
 * Begins generating a function.
 * @memberof util
 * @function codegen
 * @param {string} [functionName] Function name if not anonymous
 * @returns {Codegen} Appender that appends code to the function's body
 * @variation 2
 */

/**
 * When set to `true`, codegen will log generated code to console. Useful for debugging.
 * @name util.codegen.verbose
 * @type {boolean}
 */
codegen.verbose = false;


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = EventEmitter;

/**
 * Constructs a new event emitter instance.
 * @classdesc A minimal event emitter.
 * @memberof util
 * @constructor
 */
function EventEmitter() {

    /**
     * Registered listeners.
     * @type {Object.<string,*>}
     * @private
     */
    this._listeners = {};
}

/**
 * Registers an event listener.
 * @param {string} evt Event name
 * @param {function} fn Listener
 * @param {*} [ctx] Listener context
 * @returns {util.EventEmitter} `this`
 */
EventEmitter.prototype.on = function on(evt, fn, ctx) {
    (this._listeners[evt] || (this._listeners[evt] = [])).push({
        fn  : fn,
        ctx : ctx || this
    });
    return this;
};

/**
 * Removes an event listener or any matching listeners if arguments are omitted.
 * @param {string} [evt] Event name. Removes all listeners if omitted.
 * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.
 * @returns {util.EventEmitter} `this`
 */
EventEmitter.prototype.off = function off(evt, fn) {
    if (evt === undefined)
        this._listeners = {};
    else {
        if (fn === undefined)
            this._listeners[evt] = [];
        else {
            var listeners = this._listeners[evt];
            for (var i = 0; i < listeners.length;)
                if (listeners[i].fn === fn)
                    listeners.splice(i, 1);
                else
                    ++i;
        }
    }
    return this;
};

/**
 * Emits an event by calling its listeners with the specified arguments.
 * @param {string} evt Event name
 * @param {...*} args Arguments
 * @returns {util.EventEmitter} `this`
 */
EventEmitter.prototype.emit = function emit(evt) {
    var listeners = this._listeners[evt];
    if (listeners) {
        var args = [],
            i = 1;
        for (; i < arguments.length;)
            args.push(arguments[i++]);
        for (i = 0; i < listeners.length;)
            listeners[i].fn.apply(listeners[i++].ctx, args);
    }
    return this;
};


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = fetch;

var asPromise = __webpack_require__(47),
    inquire   = __webpack_require__(48);

var fs = inquire("fs");

/**
 * Node-style callback as used by {@link util.fetch}.
 * @typedef FetchCallback
 * @type {function}
 * @param {?Error} error Error, if any, otherwise `null`
 * @param {string} [contents] File contents, if there hasn't been an error
 * @returns {undefined}
 */

/**
 * Options as used by {@link util.fetch}.
 * @typedef FetchOptions
 * @type {Object}
 * @property {boolean} [binary=false] Whether expecting a binary response
 * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest
 */

/**
 * Fetches the contents of a file.
 * @memberof util
 * @param {string} filename File path or url
 * @param {FetchOptions} options Fetch options
 * @param {FetchCallback} callback Callback function
 * @returns {undefined}
 */
function fetch(filename, options, callback) {
    if (typeof options === "function") {
        callback = options;
        options = {};
    } else if (!options)
        options = {};

    if (!callback)
        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this

    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.
    if (!options.xhr && fs && fs.readFile)
        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {
            return err && typeof XMLHttpRequest !== "undefined"
                ? fetch.xhr(filename, options, callback)
                : err
                ? callback(err)
                : callback(null, options.binary ? contents : contents.toString("utf8"));
        });

    // use the XHR version otherwise.
    return fetch.xhr(filename, options, callback);
}

/**
 * Fetches the contents of a file.
 * @name util.fetch
 * @function
 * @param {string} path File path or url
 * @param {FetchCallback} callback Callback function
 * @returns {undefined}
 * @variation 2
 */

/**
 * Fetches the contents of a file.
 * @name util.fetch
 * @function
 * @param {string} path File path or url
 * @param {FetchOptions} [options] Fetch options
 * @returns {Promise<string|Uint8Array>} Promise
 * @variation 3
 */

/**/
fetch.xhr = function fetch_xhr(filename, options, callback) {
    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {

        if (xhr.readyState !== 4)
            return undefined;

        // local cors security errors return status 0 / empty string, too. afaik this cannot be
        // reliably distinguished from an actually empty file for security reasons. feel free
        // to send a pull request if you are aware of a solution.
        if (xhr.status !== 0 && xhr.status !== 200)
            return callback(Error("status " + xhr.status));

        // if binary data is expected, make sure that some sort of array is returned, even if
        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.
        if (options.binary) {
            var buffer = xhr.response;
            if (!buffer) {
                buffer = [];
                for (var i = 0; i < xhr.responseText.length; ++i)
                    buffer.push(xhr.responseText.charCodeAt(i) & 255);
            }
            return callback(null, typeof Uint8Array !== "undefined" ? new Uint8Array(buffer) : buffer);
        }
        return callback(null, xhr.responseText);
    };

    if (options.binary) {
        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers
        if ("overrideMimeType" in xhr)
            xhr.overrideMimeType("text/plain; charset=x-user-defined");
        xhr.responseType = "arraybuffer";
    }

    xhr.open("GET", filename);
    xhr.send();
};


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = factory(factory);

/**
 * Reads / writes floats / doubles from / to buffers.
 * @name util.float
 * @namespace
 */

/**
 * Writes a 32 bit float to a buffer using little endian byte order.
 * @name util.float.writeFloatLE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Writes a 32 bit float to a buffer using big endian byte order.
 * @name util.float.writeFloatBE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Reads a 32 bit float from a buffer using little endian byte order.
 * @name util.float.readFloatLE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

/**
 * Reads a 32 bit float from a buffer using big endian byte order.
 * @name util.float.readFloatBE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

/**
 * Writes a 64 bit double to a buffer using little endian byte order.
 * @name util.float.writeDoubleLE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Writes a 64 bit double to a buffer using big endian byte order.
 * @name util.float.writeDoubleBE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Reads a 64 bit double from a buffer using little endian byte order.
 * @name util.float.readDoubleLE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

/**
 * Reads a 64 bit double from a buffer using big endian byte order.
 * @name util.float.readDoubleBE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

// Factory function for the purpose of node-based testing in modified global environments
function factory(exports) {

    // float: typed array
    if (typeof Float32Array !== "undefined") (function() {

        var f32 = new Float32Array([ -0 ]),
            f8b = new Uint8Array(f32.buffer),
            le  = f8b[3] === 128;

        function writeFloat_f32_cpy(val, buf, pos) {
            f32[0] = val;
            buf[pos    ] = f8b[0];
            buf[pos + 1] = f8b[1];
            buf[pos + 2] = f8b[2];
            buf[pos + 3] = f8b[3];
        }

        function writeFloat_f32_rev(val, buf, pos) {
            f32[0] = val;
            buf[pos    ] = f8b[3];
            buf[pos + 1] = f8b[2];
            buf[pos + 2] = f8b[1];
            buf[pos + 3] = f8b[0];
        }

        /* istanbul ignore next */
        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;
        /* istanbul ignore next */
        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;

        function readFloat_f32_cpy(buf, pos) {
            f8b[0] = buf[pos    ];
            f8b[1] = buf[pos + 1];
            f8b[2] = buf[pos + 2];
            f8b[3] = buf[pos + 3];
            return f32[0];
        }

        function readFloat_f32_rev(buf, pos) {
            f8b[3] = buf[pos    ];
            f8b[2] = buf[pos + 1];
            f8b[1] = buf[pos + 2];
            f8b[0] = buf[pos + 3];
            return f32[0];
        }

        /* istanbul ignore next */
        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;
        /* istanbul ignore next */
        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;

    // float: ieee754
    })(); else (function() {

        function writeFloat_ieee754(writeUint, val, buf, pos) {
            var sign = val < 0 ? 1 : 0;
            if (sign)
                val = -val;
            if (val === 0)
                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);
            else if (isNaN(val))
                writeUint(2143289344, buf, pos);
            else if (val > 3.4028234663852886e+38) // +-Infinity
                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);
            else if (val < 1.1754943508222875e-38) // denormal
                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);
            else {
                var exponent = Math.floor(Math.log(val) / Math.LN2),
                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;
                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);
            }
        }

        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);
        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);

        function readFloat_ieee754(readUint, buf, pos) {
            var uint = readUint(buf, pos),
                sign = (uint >> 31) * 2 + 1,
                exponent = uint >>> 23 & 255,
                mantissa = uint & 8388607;
            return exponent === 255
                ? mantissa
                ? NaN
                : sign * Infinity
                : exponent === 0 // denormal
                ? sign * 1.401298464324817e-45 * mantissa
                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);
        }

        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);
        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);

    })();

    // double: typed array
    if (typeof Float64Array !== "undefined") (function() {

        var f64 = new Float64Array([-0]),
            f8b = new Uint8Array(f64.buffer),
            le  = f8b[7] === 128;

        function writeDouble_f64_cpy(val, buf, pos) {
            f64[0] = val;
            buf[pos    ] = f8b[0];
            buf[pos + 1] = f8b[1];
            buf[pos + 2] = f8b[2];
            buf[pos + 3] = f8b[3];
            buf[pos + 4] = f8b[4];
            buf[pos + 5] = f8b[5];
            buf[pos + 6] = f8b[6];
            buf[pos + 7] = f8b[7];
        }

        function writeDouble_f64_rev(val, buf, pos) {
            f64[0] = val;
            buf[pos    ] = f8b[7];
            buf[pos + 1] = f8b[6];
            buf[pos + 2] = f8b[5];
            buf[pos + 3] = f8b[4];
            buf[pos + 4] = f8b[3];
            buf[pos + 5] = f8b[2];
            buf[pos + 6] = f8b[1];
            buf[pos + 7] = f8b[0];
        }

        /* istanbul ignore next */
        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;
        /* istanbul ignore next */
        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;

        function readDouble_f64_cpy(buf, pos) {
            f8b[0] = buf[pos    ];
            f8b[1] = buf[pos + 1];
            f8b[2] = buf[pos + 2];
            f8b[3] = buf[pos + 3];
            f8b[4] = buf[pos + 4];
            f8b[5] = buf[pos + 5];
            f8b[6] = buf[pos + 6];
            f8b[7] = buf[pos + 7];
            return f64[0];
        }

        function readDouble_f64_rev(buf, pos) {
            f8b[7] = buf[pos    ];
            f8b[6] = buf[pos + 1];
            f8b[5] = buf[pos + 2];
            f8b[4] = buf[pos + 3];
            f8b[3] = buf[pos + 4];
            f8b[2] = buf[pos + 5];
            f8b[1] = buf[pos + 6];
            f8b[0] = buf[pos + 7];
            return f64[0];
        }

        /* istanbul ignore next */
        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;
        /* istanbul ignore next */
        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;

    // double: ieee754
    })(); else (function() {

        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {
            var sign = val < 0 ? 1 : 0;
            if (sign)
                val = -val;
            if (val === 0) {
                writeUint(0, buf, pos + off0);
                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);
            } else if (isNaN(val)) {
                writeUint(0, buf, pos + off0);
                writeUint(2146959360, buf, pos + off1);
            } else if (val > 1.7976931348623157e+308) { // +-Infinity
                writeUint(0, buf, pos + off0);
                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);
            } else {
                var mantissa;
                if (val < 2.2250738585072014e-308) { // denormal
                    mantissa = val / 5e-324;
                    writeUint(mantissa >>> 0, buf, pos + off0);
                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);
                } else {
                    var exponent = Math.floor(Math.log(val) / Math.LN2);
                    if (exponent === 1024)
                        exponent = 1023;
                    mantissa = val * Math.pow(2, -exponent);
                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);
                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);
                }
            }
        }

        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);
        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);

        function readDouble_ieee754(readUint, off0, off1, buf, pos) {
            var lo = readUint(buf, pos + off0),
                hi = readUint(buf, pos + off1);
            var sign = (hi >> 31) * 2 + 1,
                exponent = hi >>> 20 & 2047,
                mantissa = 4294967296 * (hi & 1048575) + lo;
            return exponent === 2047
                ? mantissa
                ? NaN
                : sign * Infinity
                : exponent === 0 // denormal
                ? sign * 5e-324 * mantissa
                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);
        }

        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);
        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);

    })();

    return exports;
}

// uint helpers

function writeUintLE(val, buf, pos) {
    buf[pos    ] =  val        & 255;
    buf[pos + 1] =  val >>> 8  & 255;
    buf[pos + 2] =  val >>> 16 & 255;
    buf[pos + 3] =  val >>> 24;
}

function writeUintBE(val, buf, pos) {
    buf[pos    ] =  val >>> 24;
    buf[pos + 1] =  val >>> 16 & 255;
    buf[pos + 2] =  val >>> 8  & 255;
    buf[pos + 3] =  val        & 255;
}

function readUintLE(buf, pos) {
    return (buf[pos    ]
          | buf[pos + 1] << 8
          | buf[pos + 2] << 16
          | buf[pos + 3] << 24) >>> 0;
}

function readUintBE(buf, pos) {
    return (buf[pos    ] << 24
          | buf[pos + 1] << 16
          | buf[pos + 2] << 8
          | buf[pos + 3]) >>> 0;
}


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A minimal path module to resolve Unix, Windows and URL paths alike.
 * @memberof util
 * @namespace
 */
var path = exports;

var isAbsolute =
/**
 * Tests if the specified path is absolute.
 * @param {string} path Path to test
 * @returns {boolean} `true` if path is absolute
 */
path.isAbsolute = function isAbsolute(path) {
    return /^(?:\/|\w+:)/.test(path);
};

var normalize =
/**
 * Normalizes the specified path.
 * @param {string} path Path to normalize
 * @returns {string} Normalized path
 */
path.normalize = function normalize(path) {
    path = path.replace(/\\/g, "/")
               .replace(/\/{2,}/g, "/");
    var parts    = path.split("/"),
        absolute = isAbsolute(path),
        prefix   = "";
    if (absolute)
        prefix = parts.shift() + "/";
    for (var i = 0; i < parts.length;) {
        if (parts[i] === "..") {
            if (i > 0 && parts[i - 1] !== "..")
                parts.splice(--i, 2);
            else if (absolute)
                parts.splice(i, 1);
            else
                ++i;
        } else if (parts[i] === ".")
            parts.splice(i, 1);
        else
            ++i;
    }
    return prefix + parts.join("/");
};

/**
 * Resolves the specified include path against the specified origin path.
 * @param {string} originPath Path to the origin file
 * @param {string} includePath Include path relative to origin path
 * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized
 * @returns {string} Path to the include file
 */
path.resolve = function resolve(originPath, includePath, alreadyNormalized) {
    if (!alreadyNormalized)
        includePath = normalize(includePath);
    if (isAbsolute(includePath))
        return includePath;
    if (!alreadyNormalized)
        originPath = normalize(originPath);
    return (originPath = originPath.replace(/(?:\/|^)[^/]+$/, "")).length ? normalize(originPath + "/" + includePath) : includePath;
};


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = pool;

/**
 * An allocator as used by {@link util.pool}.
 * @typedef PoolAllocator
 * @type {function}
 * @param {number} size Buffer size
 * @returns {Uint8Array} Buffer
 */

/**
 * A slicer as used by {@link util.pool}.
 * @typedef PoolSlicer
 * @type {function}
 * @param {number} start Start offset
 * @param {number} end End offset
 * @returns {Uint8Array} Buffer slice
 * @this {Uint8Array}
 */

/**
 * A general purpose buffer pool.
 * @memberof util
 * @function
 * @param {PoolAllocator} alloc Allocator
 * @param {PoolSlicer} slice Slicer
 * @param {number} [size=8192] Slab size
 * @returns {PoolAllocator} Pooled allocator
 */
function pool(alloc, slice, size) {
    var SIZE   = size || 8192;
    var MAX    = SIZE >>> 1;
    var slab   = null;
    var offset = SIZE;
    return function pool_alloc(size) {
        if (size < 1 || size > MAX)
            return alloc(size);
        if (offset + size > SIZE) {
            slab = alloc(SIZE);
            offset = 0;
        }
        var buf = slice.call(slab, offset, offset += size);
        if (offset & 7) // align to 32 bit
            offset = (offset | 7) + 1;
        return buf;
    };
}


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A minimal UTF8 implementation for number arrays.
 * @memberof util
 * @namespace
 */
var utf8 = exports;

/**
 * Calculates the UTF8 byte length of a string.
 * @param {string} string String
 * @returns {number} Byte length
 */
utf8.length = function utf8_length(string) {
    var len = 0,
        c = 0;
    for (var i = 0; i < string.length; ++i) {
        c = string.charCodeAt(i);
        if (c < 128)
            len += 1;
        else if (c < 2048)
            len += 2;
        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {
            ++i;
            len += 4;
        } else
            len += 3;
    }
    return len;
};

/**
 * Reads UTF8 bytes as a string.
 * @param {Uint8Array} buffer Source buffer
 * @param {number} start Source start
 * @param {number} end Source end
 * @returns {string} String read
 */
utf8.read = function utf8_read(buffer, start, end) {
    var len = end - start;
    if (len < 1)
        return "";
    var parts = null,
        chunk = [],
        i = 0, // char offset
        t;     // temporary
    while (start < end) {
        t = buffer[start++];
        if (t < 128)
            chunk[i++] = t;
        else if (t > 191 && t < 224)
            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;
        else if (t > 239 && t < 365) {
            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;
            chunk[i++] = 0xD800 + (t >> 10);
            chunk[i++] = 0xDC00 + (t & 1023);
        } else
            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;
        if (i > 8191) {
            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));
            i = 0;
        }
    }
    if (parts) {
        if (i)
            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
        return parts.join("");
    }
    return String.fromCharCode.apply(String, chunk.slice(0, i));
};

/**
 * Writes a string as UTF8 bytes.
 * @param {string} string Source string
 * @param {Uint8Array} buffer Destination buffer
 * @param {number} offset Destination offset
 * @returns {number} Bytes written
 */
utf8.write = function utf8_write(string, buffer, offset) {
    var start = offset,
        c1, // character 1
        c2; // character 2
    for (var i = 0; i < string.length; ++i) {
        c1 = string.charCodeAt(i);
        if (c1 < 128) {
            buffer[offset++] = c1;
        } else if (c1 < 2048) {
            buffer[offset++] = c1 >> 6       | 192;
            buffer[offset++] = c1       & 63 | 128;
        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {
            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);
            ++i;
            buffer[offset++] = c1 >> 18      | 240;
            buffer[offset++] = c1 >> 12 & 63 | 128;
            buffer[offset++] = c1 >> 6  & 63 | 128;
            buffer[offset++] = c1       & 63 | 128;
        } else {
            buffer[offset++] = c1 >> 12      | 224;
            buffer[offset++] = c1 >> 6  & 63 | 128;
            buffer[offset++] = c1       & 63 | 128;
        }
    }
    return offset - start;
};


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

/* Copyright (c) 2017 Rod Vagg, MIT License */

const xtend = __webpack_require__(26)
const AbstractIterator = __webpack_require__(50)
const AbstractChainedBatch = __webpack_require__(49)
const hasOwnProperty = Object.prototype.hasOwnProperty
const rangeOptions = 'start end gt gte lt lte'.split(' ')

function AbstractLevelDOWN (location) {
  if (!arguments.length || location === undefined) {
    throw new Error('constructor requires at least a location argument')
  }

  if (typeof location !== 'string') {
    throw new Error('constructor requires a location string argument')
  }

  this.location = location
  this.status = 'new'
}

AbstractLevelDOWN.prototype.open = function (options, callback) {
  var self = this
  var oldStatus = this.status

  if (typeof options === 'function') { callback = options }

  if (typeof callback !== 'function') {
    throw new Error('open() requires a callback argument')
  }

  if (typeof options !== 'object') { options = {} }

  options.createIfMissing = options.createIfMissing !== false
  options.errorIfExists = !!options.errorIfExists

  this.status = 'opening'
  this._open(options, function (err) {
    if (err) {
      self.status = oldStatus
      return callback(err)
    }
    self.status = 'open'
    callback()
  })
}

AbstractLevelDOWN.prototype._open = function (options, callback) {
  process.nextTick(callback)
}

AbstractLevelDOWN.prototype.close = function (callback) {
  var self = this
  var oldStatus = this.status

  if (typeof callback !== 'function') {
    throw new Error('close() requires a callback argument')
  }

  this.status = 'closing'
  this._close(function (err) {
    if (err) {
      self.status = oldStatus
      return callback(err)
    }
    self.status = 'closed'
    callback()
  })
}

AbstractLevelDOWN.prototype._close = function (callback) {
  process.nextTick(callback)
}

AbstractLevelDOWN.prototype.get = function (key, options, callback) {
  if (typeof options === 'function') { callback = options }

  if (typeof callback !== 'function') {
    throw new Error('get() requires a callback argument')
  }

  var err = this._checkKey(key, 'key')
  if (err) return process.nextTick(callback, err)

  key = this._serializeKey(key)

  if (typeof options !== 'object') { options = {} }

  options.asBuffer = options.asBuffer !== false

  this._get(key, options, callback)
}

AbstractLevelDOWN.prototype._get = function (key, options, callback) {
  process.nextTick(function () { callback(new Error('NotFound')) })
}

AbstractLevelDOWN.prototype.put = function (key, value, options, callback) {
  if (typeof options === 'function') { callback = options }

  if (typeof callback !== 'function') {
    throw new Error('put() requires a callback argument')
  }

  var err = this._checkKey(key, 'key')
  if (err) return process.nextTick(callback, err)

  key = this._serializeKey(key)
  value = this._serializeValue(value)

  if (typeof options !== 'object') { options = {} }

  this._put(key, value, options, callback)
}

AbstractLevelDOWN.prototype._put = function (key, value, options, callback) {
  process.nextTick(callback)
}

AbstractLevelDOWN.prototype.del = function (key, options, callback) {
  if (typeof options === 'function') { callback = options }

  if (typeof callback !== 'function') {
    throw new Error('del() requires a callback argument')
  }

  var err = this._checkKey(key, 'key')
  if (err) return process.nextTick(callback, err)

  key = this._serializeKey(key)

  if (typeof options !== 'object') { options = {} }

  this._del(key, options, callback)
}

AbstractLevelDOWN.prototype._del = function (key, options, callback) {
  process.nextTick(callback)
}

AbstractLevelDOWN.prototype.batch = function (array, options, callback) {
  if (!arguments.length) { return this._chainedBatch() }

  if (typeof options === 'function') { callback = options }

  if (typeof array === 'function') { callback = array }

  if (typeof callback !== 'function') {
    throw new Error('batch(array) requires a callback argument')
  }

  if (!Array.isArray(array)) {
    return process.nextTick(callback, new Error('batch(array) requires an array argument'))
  }

  if (!options || typeof options !== 'object') { options = {} }

  var serialized = new Array(array.length)

  for (var i = 0; i < array.length; i++) {
    if (typeof array[i] !== 'object' || array[i] === null) {
      return process.nextTick(callback, new Error('batch(array) element must be an object and not `null`'))
    }

    var e = xtend(array[i])

    if (e.type !== 'put' && e.type !== 'del') {
      return process.nextTick(callback, new Error("`type` must be 'put' or 'del'"))
    }

    var err = this._checkKey(e.key, 'key')
    if (err) return process.nextTick(callback, err)

    e.key = this._serializeKey(e.key)

    if (e.type === 'put') { e.value = this._serializeValue(e.value) }

    serialized[i] = e
  }

  this._batch(serialized, options, callback)
}

AbstractLevelDOWN.prototype._batch = function (array, options, callback) {
  process.nextTick(callback)
}

AbstractLevelDOWN.prototype._setupIteratorOptions = function (options) {
  options = cleanRangeOptions(options)

  options.reverse = !!options.reverse
  options.keys = options.keys !== false
  options.values = options.values !== false
  options.limit = 'limit' in options ? options.limit : -1
  options.keyAsBuffer = options.keyAsBuffer !== false
  options.valueAsBuffer = options.valueAsBuffer !== false

  return options
}

function cleanRangeOptions (options) {
  var result = {}

  for (var k in options) {
    if (!hasOwnProperty.call(options, k)) continue
    if (isRangeOption(k) && isEmptyRangeOption(options[k])) continue

    result[k] = options[k]
  }

  return result
}

function isRangeOption (k) {
  return rangeOptions.indexOf(k) !== -1
}

function isEmptyRangeOption (v) {
  return v === '' || v == null || isEmptyBuffer(v)
}

function isEmptyBuffer (v) {
  return Buffer.isBuffer(v) && v.length === 0
}

AbstractLevelDOWN.prototype.iterator = function (options) {
  if (typeof options !== 'object') { options = {} }
  options = this._setupIteratorOptions(options)
  return this._iterator(options)
}

AbstractLevelDOWN.prototype._iterator = function (options) {
  return new AbstractIterator(this)
}

AbstractLevelDOWN.prototype._chainedBatch = function () {
  return new AbstractChainedBatch(this)
}

AbstractLevelDOWN.prototype._serializeKey = function (key) {
  return Buffer.isBuffer(key) ? key : String(key)
}

AbstractLevelDOWN.prototype._serializeValue = function (value) {
  if (value == null) return ''
  return Buffer.isBuffer(value) || process.browser ? value : String(value)
}

AbstractLevelDOWN.prototype._checkKey = function (obj, type) {
  if (obj === null || obj === undefined) {
    return new Error(type + ' cannot be `null` or `undefined`')
  }

  if (Buffer.isBuffer(obj) && obj.length === 0) {
    return new Error(type + ' cannot be an empty Buffer')
  }

  if (String(obj) === '') {
    return new Error(type + ' cannot be an empty String')
  }
}

module.exports = AbstractLevelDOWN


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(119);

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);
var settle = __webpack_require__(55);
var buildURL = __webpack_require__(57);
var http = __webpack_require__(29);
var https = __webpack_require__(45);
var httpFollow = __webpack_require__(67).http;
var httpsFollow = __webpack_require__(67).https;
var url = __webpack_require__(21);
var zlib = __webpack_require__(103);
var pkg = __webpack_require__(133);
var createError = __webpack_require__(31);
var enhanceError = __webpack_require__(54);

/*eslint consistent-return:0*/
module.exports = function httpAdapter(config) {
  return new Promise(function dispatchHttpRequest(resolve, reject) {
    var data = config.data;
    var headers = config.headers;
    var timer;

    // Set User-Agent (required by some servers)
    // Only set header if it hasn't been set in config
    // See https://github.com/axios/axios/issues/69
    if (!headers['User-Agent'] && !headers['user-agent']) {
      headers['User-Agent'] = 'axios/' + pkg.version;
    }

    if (data && !utils.isStream(data)) {
      if (Buffer.isBuffer(data)) {
        // Nothing to do...
      } else if (utils.isArrayBuffer(data)) {
        data = new Buffer(new Uint8Array(data));
      } else if (utils.isString(data)) {
        data = new Buffer(data, 'utf-8');
      } else {
        return reject(createError(
          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',
          config
        ));
      }

      // Add Content-Length header if data exists
      headers['Content-Length'] = data.length;
    }

    // HTTP basic authentication
    var auth = undefined;
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      auth = username + ':' + password;
    }

    // Parse url
    var parsed = url.parse(config.url);
    var protocol = parsed.protocol || 'http:';

    if (!auth && parsed.auth) {
      var urlAuth = parsed.auth.split(':');
      var urlUsername = urlAuth[0] || '';
      var urlPassword = urlAuth[1] || '';
      auth = urlUsername + ':' + urlPassword;
    }

    if (auth) {
      delete headers.Authorization;
    }

    var isHttps = protocol === 'https:';
    var agent = isHttps ? config.httpsAgent : config.httpAgent;

    var options = {
      hostname: parsed.hostname,
      port: parsed.port,
      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\?/, ''),
      method: config.method,
      headers: headers,
      agent: agent,
      auth: auth
    };

    var proxy = config.proxy;
    if (!proxy && proxy !== false) {
      var proxyEnv = protocol.slice(0, -1) + '_proxy';
      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];
      if (proxyUrl) {
        var parsedProxyUrl = url.parse(proxyUrl);
        proxy = {
          host: parsedProxyUrl.hostname,
          port: parsedProxyUrl.port
        };

        if (parsedProxyUrl.auth) {
          var proxyUrlAuth = parsedProxyUrl.auth.split(':');
          proxy.auth = {
            username: proxyUrlAuth[0],
            password: proxyUrlAuth[1]
          };
        }
      }
    }

    if (proxy) {
      options.hostname = proxy.host;
      options.host = proxy.host;
      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');
      options.port = proxy.port;
      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;

      // Basic proxy authorization
      if (proxy.auth) {
        var base64 = new Buffer(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');
        options.headers['Proxy-Authorization'] = 'Basic ' + base64;
      }
    }

    var transport;
    if (config.transport) {
      transport = config.transport;
    } else if (config.maxRedirects === 0) {
      transport = isHttps ? https : http;
    } else {
      if (config.maxRedirects) {
        options.maxRedirects = config.maxRedirects;
      }
      transport = isHttps ? httpsFollow : httpFollow;
    }

    // Create the request
    var req = transport.request(options, function handleResponse(res) {
      if (req.aborted) return;

      // Response has been received so kill timer that handles request timeout
      clearTimeout(timer);
      timer = null;

      // uncompress the response body transparently if required
      var stream = res;
      switch (res.headers['content-encoding']) {
      /*eslint default-case:0*/
      case 'gzip':
      case 'compress':
      case 'deflate':
        // add the unzipper to the body stream processing pipeline
        stream = stream.pipe(zlib.createUnzip());

        // remove the content-encoding in order to not confuse downstream operations
        delete res.headers['content-encoding'];
        break;
      }

      // return the last request in case of redirects
      var lastRequest = res.req || req;

      var response = {
        status: res.statusCode,
        statusText: res.statusMessage,
        headers: res.headers,
        config: config,
        request: lastRequest
      };

      if (config.responseType === 'stream') {
        response.data = stream;
        settle(resolve, reject, response);
      } else {
        var responseBuffer = [];
        stream.on('data', function handleStreamData(chunk) {
          responseBuffer.push(chunk);

          // make sure the content length is not over the maxContentLength if specified
          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {
            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',
              config, null, lastRequest));
          }
        });

        stream.on('error', function handleStreamError(err) {
          if (req.aborted) return;
          reject(enhanceError(err, config, null, lastRequest));
        });

        stream.on('end', function handleStreamEnd() {
          var responseData = Buffer.concat(responseBuffer);
          if (config.responseType !== 'arraybuffer') {
            responseData = responseData.toString('utf8');
          }

          response.data = responseData;
          settle(resolve, reject, response);
        });
      }
    });

    // Handle errors
    req.on('error', function handleRequestError(err) {
      if (req.aborted) return;
      reject(enhanceError(err, config, null, req));
    });

    // Handle request timeout
    if (config.timeout && !timer) {
      timer = setTimeout(function handleRequestTimeout() {
        req.abort();
        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));
      }, config.timeout);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (req.aborted) return;

        req.abort();
        reject(cancel);
      });
    }

    // Send the request
    if (utils.isStream(data)) {
      data.pipe(req);
    } else {
      req.end(data);
    }
  });
};


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);
var settle = __webpack_require__(55);
var buildURL = __webpack_require__(57);
var parseHeaders = __webpack_require__(131);
var isURLSameOrigin = __webpack_require__(129);
var createError = __webpack_require__(31);
var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(125);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    // For IE 8/9 CORS support
    // Only supports POST and GET calls and doesn't returns the response headers.
    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
    if (process.env.NODE_ENV !== 'test' &&
        typeof window !== 'undefined' &&
        window.XDomainRequest && !('withCredentials' in request) &&
        !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request[loadEvent] = function handleLoad() {
      if (!request || (request.readyState !== 4 && !xDomain)) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)
        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(127);

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
          cookies.read(config.xsrfCookieName) :
          undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (config.withCredentials) {
      request.withCredentials = true;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);
var bind = __webpack_require__(56);
var Axios = __webpack_require__(121);
var defaults = __webpack_require__(32);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(52);
axios.CancelToken = __webpack_require__(120);
axios.isCancel = __webpack_require__(53);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(132);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(52);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(32);
var utils = __webpack_require__(4);
var InterceptorManager = __webpack_require__(122);
var dispatchRequest = __webpack_require__(123);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);
  config.method = config.method.toLowerCase();

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);
var transformData = __webpack_require__(124);
var isCancel = __webpack_require__(53);
var defaults = __webpack_require__(32);
var isAbsoluteURL = __webpack_require__(128);
var combineURLs = __webpack_require__(126);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Support baseURL config
  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers || {}
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error;
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (
    // initialize result and counter
    var block, charCode, idx = 0, map = chars;
    // if the next str index does not exist:
    //   change the mapping table to "="
    //   check if d has no fractional digits
    str.charAt(idx | 0) || (map = '=', idx % 1);
    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
  ) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
  (function standardBrowserEnv() {
    return {
      write: function write(name, value, expires, path, domain, secure) {
        var cookie = [];
        cookie.push(name + '=' + encodeURIComponent(value));

        if (utils.isNumber(expires)) {
          cookie.push('expires=' + new Date(expires).toGMTString());
        }

        if (utils.isString(path)) {
          cookie.push('path=' + path);
        }

        if (utils.isString(domain)) {
          cookie.push('domain=' + domain);
        }

        if (secure === true) {
          cookie.push('secure');
        }

        document.cookie = cookie.join('; ');
      },

      read: function read(name) {
        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
        return (match ? decodeURIComponent(match[3]) : null);
      },

      remove: function remove(name) {
        this.write(name, '', Date.now() - 86400000);
      }
    };
  })() :

  // Non standard browser env (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return {
      write: function write() {},
      read: function read() { return null; },
      remove: function remove() {}
    };
  })()
);


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;

    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      var href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                  urlParsingNode.pathname :
                  '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })()
);


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),
/* 133 */
/***/ (function(module, exports) {

module.exports = {
	"name": "axios",
	"version": "0.17.1",
	"description": "Promise based HTTP client for the browser and node.js",
	"main": "index.js",
	"scripts": {
		"test": "grunt test && bundlesize",
		"start": "node ./sandbox/server.js",
		"build": "NODE_ENV=production grunt build",
		"preversion": "npm test",
		"version": "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
		"postversion": "git push && git push --tags",
		"examples": "node ./examples/server.js",
		"coveralls": "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/axios/axios.git"
	},
	"keywords": [
		"xhr",
		"http",
		"ajax",
		"promise",
		"node"
	],
	"author": "Matt Zabriskie",
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/axios/axios/issues"
	},
	"homepage": "https://github.com/axios/axios",
	"devDependencies": {
		"bundlesize": "^0.5.7",
		"coveralls": "^2.11.9",
		"es6-promise": "^4.0.5",
		"grunt": "^1.0.1",
		"grunt-banner": "^0.6.0",
		"grunt-cli": "^1.2.0",
		"grunt-contrib-clean": "^1.0.0",
		"grunt-contrib-nodeunit": "^1.0.0",
		"grunt-contrib-watch": "^1.0.0",
		"grunt-eslint": "^19.0.0",
		"grunt-karma": "^2.0.0",
		"grunt-ts": "^6.0.0-beta.3",
		"grunt-webpack": "^1.0.18",
		"istanbul-instrumenter-loader": "^1.0.0",
		"jasmine-core": "^2.4.1",
		"karma": "^1.3.0",
		"karma-chrome-launcher": "^2.0.0",
		"karma-coverage": "^1.0.0",
		"karma-firefox-launcher": "^1.0.0",
		"karma-jasmine": "^1.0.2",
		"karma-jasmine-ajax": "^0.1.13",
		"karma-opera-launcher": "^1.0.0",
		"karma-phantomjs-launcher": "^1.0.0",
		"karma-safari-launcher": "^1.0.0",
		"karma-sauce-launcher": "^1.1.0",
		"karma-sinon": "^1.0.5",
		"karma-sourcemap-loader": "^0.3.7",
		"karma-webpack": "^1.7.0",
		"load-grunt-tasks": "^3.5.2",
		"minimist": "^1.2.0",
		"phantomjs-prebuilt": "^2.1.7",
		"sinon": "^1.17.4",
		"webpack": "^1.13.1",
		"webpack-dev-server": "^1.14.1",
		"url-search-params": "^0.6.1",
		"typescript": "^2.0.3"
	},
	"browser": {
		"./lib/adapters/http.js": "./lib/adapters/xhr.js"
	},
	"typings": "./index.d.ts",
	"dependencies": {
		"follow-redirects": "^1.2.5",
		"is-buffer": "^1.1.5"
	},
	"bundlesize": [
		{
			"path": "./dist/axios.min.js",
			"threshold": "5kB"
		}
	]
};

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.initNacl = initNacl;
exports.getAddress = getAddress;
exports.getIdentifier = getIdentifier;
exports.generateKeyPair = generateKeyPair;
exports.signBytes = signBytes;
exports.sign = sign;
exports.verify = verify;

var _sha = __webpack_require__(180);

var _sha2 = _interopRequireDefault(_sha);

var _jsNacl = __webpack_require__(154);

var _jsNacl2 = _interopRequireDefault(_jsNacl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* jshint esversion: 6 */

var ed25519 = null;

// init must be called and the promise resolved before any other functions are called
function initNacl(opts) {
    return new Promise(function (res, rej) {
        var setup = function setup(nacl) {
            ed25519 = nacl;res(nacl);
        };
        _jsNacl2.default.instantiate(setup, opts);
    });
}

// getAddress accepts pubkey as a hex-formatted string or a Buffer
// returns the address as a hex string
function getAddress(pubkey) {
    var hash = (0, _sha2.default)('sha256');
    // this is a prefix for all pubkey signatures
    var id = getIdentifier(pubkey);
    hash.update(id);
    return hash.digest('hex').slice(0, 40); // 20 bytes
}

// getAddress accepts pubkey as a hex-formatted string or a Buffer
// returns the identifier as a Buffer
function getIdentifier(pubkey) {
    var prefix = Buffer.from('sigs/ed25519/');
    pubkey = Buffer.from(pubkey, 'hex');
    return Buffer.concat([prefix, pubkey]);
}

// generateKeyPair creates a private/public key pair
function generateKeyPair() {
    var keypair = ed25519.crypto_sign_keypair();
    return {
        pubkey: keypair.signPk,
        secret: keypair.signSk
    };
}

var signCodeV1 = Buffer.from([0, 0xca, 0xfe, 0]);

// signBytes takes raw message byters and append replay-protection info
// to determine the bytes we need to sign.
// returns a Buffer with the bytes to sign
//
// As specified in https://github.com/confio/weave/issues/70,
// we use the following format:
//
// version | len(chainID) | chainID      | nonce             | signBytes
// 4bytes  | uint8        | ascii string | int64 (bigendian) | serialized transaction
function signBytes(msg, chainID, seq) {
    // split the nonce (seq) into two uint32 to be writen
    var thirtyTwo = 2 ** 32;
    var highNonce = Math.floor(seq / thirtyTwo);
    var lowNonce = seq % thirtyTwo;

    var extra = Buffer.alloc(chainID.length + 8 + 1);

    extra.writeUInt8(chainID.length % 256, 0);
    extra.write(chainID, 1);
    extra.writeUInt32BE(highNonce, chainID.length + 1);
    extra.writeUInt32BE(lowNonce, chainID.length + 5);

    // ensure Buffer type
    var msgBuf = Buffer.from(msg);
    var total = msgBuf.length + extra.length + 4;
    var res = Buffer.concat([signCodeV1, extra, msgBuf], total);
    return res;
}

function sign(msg, secret) {
    return ed25519.crypto_sign_detached(msg, secret);
}

function verify(msg, sig, pubkey) {
    return ed25519.crypto_sign_verify_detached(sig, msg, pubkey);
}

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _keybase = __webpack_require__(106);

var _db = __webpack_require__(105);

var _client = __webpack_require__(104);

var _proto = __webpack_require__(30);

// makeSignatures signs the bytes and builds a proper StdSignature to append to a tx
/* jshint esversion:6 */

function makeSignatures(sender, bz, chainID) {
    var _sender$sign = sender.sign(bz, chainID),
        sig = _sender$sign.sig,
        seq = _sender$sign.seq;

    var std = _proto.weave.sigs.StdSignature.create({
        pubKey: sender.pubkey,
        signature: sig,
        sequence: seq
    });
    return [std];
}

// calculates sign bytes, creates a signature and returns serialized tx (as buffer)
// TODO: handle multi-sigs
function signTx(Tx, tx, sender, chainID) {
    var bz = Tx.encode(tx).finish();
    tx.signatures = makeSignatures(sender, bz, chainID);
    return Tx.encode(tx).finish();
}

// buildSendTx constructs a sendMsg to move tokens from the sender to rcpt
// Tx - the app-specific Tx wrapper. We assume they use StdSignature, 
//      and support sendMsg, but are quite flexible about the rest
// sender - KeyPair (from KeyBase) to send and sign the tx
// rcpt - address to receive the message
// amount - number of tokens to send (whole amount)
// currency - ticker of the tokens to send
// chainID - chainID to send on (included in tx signature)
function buildSendTx(Tx, sender, rcpt, amount, currency, chainID) {
    rcpt = Buffer.from(rcpt, 'hex'); // may be bytes or a hex string
    var msg = _proto.weave.cash.SendMsg.create({
        src: sender.addressBytes(),
        dest: rcpt,
        amount: _proto.weave.x.Coin.create({ whole: amount, ticker: currency })
    });
    var tx = Tx.create({
        sendMsg: msg
    });
    return signTx(Tx, tx, sender, chainID);
}

exports.KeyBase = _keybase.KeyBase;
exports.Client = _client.Client;
exports.openDB = _db.open;
exports.pbToObj = _proto.pbToObj;
exports.weave = _proto.weave;
exports.loadJSON = _proto.loadJSON;
exports.buildSendTx = buildSendTx;
exports.signTx = signTx;

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
Just the peices we need to use out of tendermint...
supercop.js was breaking webpack build.
*/
module.exports.RpcClient = __webpack_require__(138);

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = ['subscribe', 'unsubscribe', 'unsubscribe_all', 'status', 'net_info', 'dial_seeds', 'blockchain', 'genesis', 'block', 'validators', 'dump_consensus_state', 'broadcast_tx_commit', 'broadcast_tx_sync', 'broadcast_tx_async', 'unconfirmed_txs', 'num_unconfirmed_txs', 'commit', 'tx', 'tx_search', 'abci_query', 'abci_info', 'abci_proof', 'unsafe_flush_mempool', 'unsafe_set_config', 'unsafe_start_cpu_profiler', 'unsafe_stop_cpu_profiler', 'unsafe_write_heap_profile'];

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* jshint esversion: 6 */

var EventEmitter = __webpack_require__(7);
var axios = __webpack_require__(116);
var url = __webpack_require__(21);
var old = __webpack_require__(164);
var camel = __webpack_require__(141);
var websocket = __webpack_require__(195);
var ndjson = __webpack_require__(162);
var pumpify = __webpack_require__(175).obj;
var tendermintMethods = __webpack_require__(137);

function convertArgs(args) {
  args = args || {};
  for (var k in args) {
    var v = args[k];
    if (Buffer.isBuffer(v)) {
      args[k] = '0x' + v.toString('hex');
    } else if (v instanceof Uint8Array) {
      args[k] = '0x' + Buffer.from(v).toString('hex');
    }
  }
  return args;
}

var Client = function (_EventEmitter) {
  _inherits(Client, _EventEmitter);

  function Client() {
    var uriString = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'localhost:46657';

    _classCallCheck(this, Client);

    var _this = _possibleConstructorReturn(this, (Client.__proto__ || Object.getPrototypeOf(Client)).call(this));

    var uri = url.parse(uriString);
    if (uri.protocol === '') {
      uri = url.parse('http://' + uriString);
    }
    if (uri.protocol === 'ws:' || uri.protocol === 'wss:') {
      var port = uri.port || (uri.protocol === 'ws:' ? 80 : 443);
      _this.websocket = true;
      _this.uri = uri.protocol + '//' + uri.hostname + ':' + port + '/websocket';
      _this.call = _this.callWs;
      _this.connectWs();
    } else if (uri.protocol === 'http:' || uri.protocol === 'https:') {
      var _port = uri.port || (uri.protocol === 'http:' ? 80 : 443);
      _this.uri = uri.protocol + '//' + uri.hostname + ':' + _port + '/';
      _this.call = _this.callHttp;
    } else {
      throw new Error('unknown protocol: ' + uriString);
    }
    return _this;
  }

  _createClass(Client, [{
    key: 'connectWs',
    value: function connectWs() {
      var _this2 = this;

      this.ws = pumpify(ndjson.stringify(), websocket(this.uri));
      this.ws.on('error', function (err) {
        return _this2.emit('error', err);
      });
      this.ws.on('close', function () {
        return _this2.emit('error', Error('websocket disconnected'));
      });
      this.ws.on('data', function (data) {
        // console.log("data: " + data);
        data = JSON.parse(data);
        if (!data.id) {
          return;
        }
        _this2.emit(data.id, data.error, data.result);
      });
    }
  }, {
    key: 'callHttp',
    value: function callHttp(method, args) {
      return axios({
        url: this.uri + method,
        params: args
      }).then(function (_ref) {
        var data = _ref.data;

        if (data.error) throw Error(data.error);
        return data;
      }, function (err) {
        throw Error(err);
      });
    }
  }, {
    key: 'callWs',
    value: function callWs(method, args, listener) {
      var _this3 = this;

      var self = this;
      return new Promise(function (resolve, reject) {
        var id = Math.random().toString(36);
        var params = convertArgs(args);

        if (method === 'subscribe') {
          // events get passed to listener
          _this3.on(id + '#event', function (err, res) {
            if (err) return self.emit('error', err);
            if (res.data.data) {
              listener(res.data.data);
            } else {
              listener(res.data.value);
            }
          });

          // promise resolves on successful subscription or error
          _this3.on(id, function (err) {
            if (err) return reject(err);
            resolve();
          });
        } else {
          // response goes to promise
          _this3.once(id, function (err, res) {
            if (err) return reject(err);
            resolve(res);
          });
        }

        _this3.ws.write({ jsonrpc: '2.0', id: id, method: method, params: params });
      });
    }
  }, {
    key: 'close',
    value: function close() {
      if (!this.ws) return;
      this.ws.destroy();
    }
  }]);

  return Client;
}(EventEmitter);

// add methods to Client class based on methods defined in './methods.js'


var _iteratorNormalCompletion = true;
var _didIteratorError = false;
var _iteratorError = undefined;

try {
  var _loop = function _loop() {
    var name = _step.value;

    Client.prototype[camel(name)] = function (args, listener) {
      return this.call(name, args, listener);
    };
  };

  for (var _iterator = tendermintMethods[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
    _loop();
  }
} catch (err) {
  _didIteratorError = true;
  _iteratorError = err;
} finally {
  try {
    if (!_iteratorNormalCompletion && _iterator.return) {
      _iterator.return();
    }
  } finally {
    if (_didIteratorError) {
      throw _iteratorError;
    }
  }
}

module.exports = old(Client);

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * bufferutil: WebSocket buffer utils
 * Copyright(c) 2015 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */



/**
 * Masks a buffer using the given mask.
 *
 * @param {Buffer} source The buffer to mask
 * @param {Buffer} mask The mask to use
 * @param {Buffer} output The buffer where to store the result
 * @param {Number} offset The offset at which to start writing
 * @param {Number} length The number of bytes to mask.
 * @public
 */
const mask = (source, mask, output, offset, length) => {
  for (var i = 0; i < length; i++) {
    output[offset + i] = source[i] ^ mask[i & 3];
  }
};

/**
 * Unmasks a buffer using the given mask.
 *
 * @param {Buffer} buffer The buffer to unmask
 * @param {Buffer} mask The mask to use
 * @public
 */
const unmask = (buffer, mask) => {
  // Required until https://github.com/nodejs/node/issues/9006 is resolved.
  const length = buffer.length;
  for (var i = 0; i < length; i++) {
    buffer[i] ^= mask[i & 3];
  }
};

module.exports = { mask, unmask };


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


try {
  module.exports = __webpack_require__(59)('bufferutil');
} catch (e) {
  module.exports = __webpack_require__(139);
}


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function preserveCamelCase(str) {
	var isLastCharLower = false;

	for (var i = 0; i < str.length; i++) {
		var c = str.charAt(i);

		if (isLastCharLower && (/[a-zA-Z]/).test(c) && c.toUpperCase() === c) {
			str = str.substr(0, i) + '-' + str.substr(i);
			isLastCharLower = false;
			i++;
		} else {
			isLastCharLower = (c.toLowerCase() === c);
		}
	}

	return str;
}

module.exports = function () {
	var str = [].map.call(arguments, function (str) {
		return str.trim();
	}).filter(function (str) {
		return str.length;
	}).join('-');

	if (!str.length) {
		return '';
	}

	if (str.length === 1) {
		return str.toLowerCase();
	}

	if (!(/[_.\- ]+/).test(str)) {
		if (str === str.toUpperCase()) {
			return str.toLowerCase();
		}

		if (str[0] !== str[0].toLowerCase()) {
			return str[0].toLowerCase() + str.slice(1);
		}

		return str;
	}

	str = preserveCamelCase(str);

	return str
	.replace(/^[_.\- ]+/, '')
	.toLowerCase()
	.replace(/[_.\- ]+(\w|$)/g, function (m, p1) {
		return p1.toUpperCase();
	});
};


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

var util = __webpack_require__(1)
var AbstractIterator = __webpack_require__(51).AbstractIterator

function DeferredIterator (options) {
  AbstractIterator.call(this, options)

  this._options = options
  this._iterator = null
  this._operations = []
}

util.inherits(DeferredIterator, AbstractIterator)

DeferredIterator.prototype.setDb = function (db) {
  var it = this._iterator = db.iterator(this._options)
  this._operations.forEach(function (op) {
    it[op.method].apply(it, op.args)
  })
}

DeferredIterator.prototype._operation = function (method, args) {
  if (this._iterator) return this._iterator[method].apply(this._iterator, args)
  this._operations.push({ method: method, args: args })
}

'next end'.split(' ').forEach(function (m) {
  DeferredIterator.prototype['_' + m] = function () {
    this._operation(m, arguments)
  }
})

module.exports = DeferredIterator


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

var util = __webpack_require__(1)
var AbstractLevelDOWN = __webpack_require__(51).AbstractLevelDOWN
var DeferredIterator = __webpack_require__(142)
var deferrables = 'put get del batch'.split(' ')

function DeferredLevelDOWN (db) {
  AbstractLevelDOWN.call(this, '')
  this._db = db
  this._operations = []
  this._iterators = []
  closed(this)
}

util.inherits(DeferredLevelDOWN, AbstractLevelDOWN)

DeferredLevelDOWN.prototype._open = function (options, callback) {
  var self = this

  this._db.open(options, function (err) {
    if (err) return callback(err)

    self._operations.forEach(function (op) {
      self._db[op.method].apply(self._db, op.args)
    })
    self._operations = []
    self._iterators.forEach(function (it) {
      it.setDb(self._db)
    })
    self._iterators = []
    open(self)
    callback()
  })
}

DeferredLevelDOWN.prototype._close = function (callback) {
  var self = this

  this._db.close(function (err) {
    if (err) return callback(err)
    closed(self)
    callback()
  })
}

function open (self) {
  deferrables.concat('iterator').forEach(function (m) {
    self['_' + m] = function () {
      return this._db[m].apply(this._db, arguments)
    }
  })
  if (self._db.approximateSize) {
    self.approximateSize = function () {
      return this._db.approximateSize.apply(this._db, arguments)
    }
  }
}

function closed (self) {
  deferrables.forEach(function (m) {
    self['_' + m] = function () {
      this._operations.push({ method: m, args: arguments })
    }
  })
  if (typeof self._db.approximateSize === 'function') {
    self.approximateSize = function () {
      this._operations.push({
        method: 'approximateSize',
        args: arguments
      })
    }
  }
  self._iterator = function (options) {
    var it = new DeferredIterator(options)
    this._iterators.push(it)
    return it
  }
}

DeferredLevelDOWN.prototype._serializeKey = function (key) {
  return key
}

DeferredLevelDOWN.prototype._serializeValue = function (value) {
  return value
}

module.exports = DeferredLevelDOWN
module.exports.DeferredIterator = DeferredIterator


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.



module.exports = PassThrough;

var Transform = __webpack_require__(62);

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = __webpack_require__(11).Buffer;
var util = __webpack_require__(1);

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

var Stream = __webpack_require__(9);
if (process.env.READABLE_STREAM === 'disable' && Stream) {
  module.exports = Stream;
  exports = module.exports = Stream.Readable;
  exports.Readable = Stream.Readable;
  exports.Writable = Stream.Writable;
  exports.Duplex = Stream.Duplex;
  exports.Transform = Stream.Transform;
  exports.PassThrough = Stream.PassThrough;
  exports.Stream = Stream;
} else {
  exports = module.exports = __webpack_require__(61);
  exports.Stream = Stream || exports;
  exports.Readable = exports;
  exports.Writable = __webpack_require__(63);
  exports.Duplex = __webpack_require__(14);
  exports.Transform = __webpack_require__(62);
  exports.PassThrough = __webpack_require__(144);
}


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(68);
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // Internet Explorer and Edge do not support colors.
  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Detect Electron renderer process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer') {
  module.exports = __webpack_require__(147);
} else {
  module.exports = __webpack_require__(149);
}


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var tty = __webpack_require__(209);
var util = __webpack_require__(1);

/**
 * This is the Node.js implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(68);
exports.init = init;
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;

/**
 * Colors.
 */

exports.colors = [ 6, 2, 3, 4, 5, 1 ];

try {
  var supportsColor = __webpack_require__(187);
  if (supportsColor && supportsColor.level >= 2) {
    exports.colors = [
      20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68,
      69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134,
      135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
      172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204,
      205, 206, 207, 208, 209, 214, 215, 220, 221
    ];
  }
} catch (err) {
  // swallow - we only care if `supports-color` is available; it doesn't have to be.
}

/**
 * Build up the default `inspectOpts` object from the environment variables.
 *
 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
 */

exports.inspectOpts = Object.keys(process.env).filter(function (key) {
  return /^debug_/i.test(key);
}).reduce(function (obj, key) {
  // camel-case
  var prop = key
    .substring(6)
    .toLowerCase()
    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });

  // coerce string value into JS value
  var val = process.env[key];
  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;
  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;
  else if (val === 'null') val = null;
  else val = Number(val);

  obj[prop] = val;
  return obj;
}, {});

/**
 * Is stdout a TTY? Colored output is enabled when `true`.
 */

function useColors() {
  return 'colors' in exports.inspectOpts
    ? Boolean(exports.inspectOpts.colors)
    : tty.isatty(process.stderr.fd);
}

/**
 * Map %o to `util.inspect()`, all on a single line.
 */

exports.formatters.o = function(v) {
  this.inspectOpts.colors = this.useColors;
  return util.inspect(v, this.inspectOpts)
    .split('\n').map(function(str) {
      return str.trim()
    }).join(' ');
};

/**
 * Map %o to `util.inspect()`, allowing multiple lines if needed.
 */

exports.formatters.O = function(v) {
  this.inspectOpts.colors = this.useColors;
  return util.inspect(v, this.inspectOpts);
};

/**
 * Adds ANSI color escape codes if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var name = this.namespace;
  var useColors = this.useColors;

  if (useColors) {
    var c = this.color;
    var colorCode = '\u001b[3' + (c < 8 ? c : '8;5;' + c);
    var prefix = '  ' + colorCode + ';1m' + name + ' ' + '\u001b[0m';

    args[0] = prefix + args[0].split('\n').join('\n' + prefix);
    args.push(colorCode + 'm+' + exports.humanize(this.diff) + '\u001b[0m');
  } else {
    args[0] = getDate() + name + ' ' + args[0];
  }
}

function getDate() {
  if (exports.inspectOpts.hideDate) {
    return '';
  } else {
    return new Date().toISOString() + ' ';
  }
}

/**
 * Invokes `util.format()` with the specified arguments and writes to stderr.
 */

function log() {
  return process.stderr.write(util.format.apply(util, arguments) + '\n');
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  if (null == namespaces) {
    // If you set a process.env field to null or undefined, it gets cast to the
    // string 'null' or 'undefined'. Just delete instead.
    delete process.env.DEBUG;
  } else {
    process.env.DEBUG = namespaces;
  }
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  return process.env.DEBUG;
}

/**
 * Init logic for `debug` instances.
 *
 * Create a new `inspectOpts` object in case `useColors` is set
 * differently for a particular `debug` instance.
 */

function init (debug) {
  debug.inspectOpts = {};

  var keys = Object.keys(exports.inspectOpts);
  for (var i = 0; i < keys.length; i++) {
    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
  }
}

/**
 * Enable namespaces listed in `process.env.DEBUG` initially.
 */

exports.enable(load());


/***/ }),
/* 150 */
/***/ (function(module, exports) {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  if (ms >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (ms >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (ms >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (ms >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  return plural(ms, d, 'day') ||
    plural(ms, h, 'hour') ||
    plural(ms, m, 'minute') ||
    plural(ms, s, 'second') ||
    ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) {
    return;
  }
  if (ms < n * 1.5) {
    return Math.floor(ms / n) + ' ' + name;
  }
  return Math.ceil(ms / n) + ' ' + name + 's';
}


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function (flag, argv) {
	argv = argv || process.argv;

	var terminatorPos = argv.indexOf('--');
	var prefix = /^--/.test(flag) ? '' : '--';
	var pos = argv.indexOf(prefix + flag);

	return pos !== -1 && (terminatorPos !== -1 ? pos < terminatorPos : true);
};


/***/ }),
/* 152 */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),
/* 153 */
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

var nacl_factory = {
  instantiate: function (on_ready, optionsOpt) {
    var options = optionsOpt || {};
    var requested_total_memory = options.requested_total_memory || 33554432;
    var undefined_reference_value = (function (v) { return v; })();

    if (typeof on_ready !== 'function') {
      throw new Error("nacl_factory: Expects on_ready callback as first argument. New in v1.1.0.");
    }

    return (function (window, document) {
      var on_ready_call_needed = false;
      var Module = {
        TOTAL_MEMORY: requested_total_memory,
        onRuntimeInitialized: function () {
          if (nacl) {
            on_ready(nacl);
          } else {
            on_ready_call_needed = true;
          }
        }
      };
      if (options.memoryInitializerPrefixURL) {
        Module.memoryInitializerPrefixURL = options.memoryInitializerPrefixURL;
      }
      var nacl_raw = Module;
var Module;if(!Module)Module=(typeof Module!=="undefined"?Module:null)||{};var moduleOverrides={};for(var key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module["ENVIRONMENT"]){if(Module["ENVIRONMENT"]==="WEB"){ENVIRONMENT_IS_WEB=true}else if(Module["ENVIRONMENT"]==="WORKER"){ENVIRONMENT_IS_WORKER=true}else if(Module["ENVIRONMENT"]==="NODE"){ENVIRONMENT_IS_NODE=true}else if(Module["ENVIRONMENT"]==="SHELL"){ENVIRONMENT_IS_SHELL=true}else{throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.")}}else{ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&"function"==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){if(!Module["print"])Module["print"]=console.log;if(!Module["printErr"])Module["printErr"]=console.warn;var nodeFS;var nodePath;Module["read"]=function read(filename,binary){if(!nodeFS)nodeFS=__webpack_require__(28);if(!nodePath)nodePath=__webpack_require__(46);filename=nodePath["normalize"](filename);var ret=nodeFS["readFileSync"](filename);return binary?ret:ret.toString()};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};Module["load"]=function load(f){globalEval(read(f))};if(!Module["thisProgram"]){if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}else{Module["thisProgram"]="unknown-program"}}Module["arguments"]=process["argv"].slice(2);if(true){module["exports"]=Module}process["on"]("uncaughtException",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));Module["inspect"]=(function(){return"[Emscripten Module object]"})}else if(ENVIRONMENT_IS_SHELL){if(!Module["print"])Module["print"]=print;if(typeof printErr!="undefined")Module["printErr"]=printErr;if(typeof read!="undefined"){Module["read"]=read}else{Module["read"]=function read(){throw"no read() available"}}Module["readBinary"]=function readBinary(f){if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}var data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module["read"]=function read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response)}else{onerror()}};xhr.onerror=onerror;xhr.send(null)};if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof console!=="undefined"){if(!Module["print"])Module["print"]=function print(x){console.log(x)};if(!Module["printErr"])Module["printErr"]=function printErr(x){console.warn(x)}}else{var TRY_USE_DUMP=false;if(!Module["print"])Module["print"]=TRY_USE_DUMP&&typeof dump!=="undefined"?(function(x){dump(x)}):(function(x){})}if(ENVIRONMENT_IS_WORKER){Module["load"]=importScripts}if(typeof Module["setWindowTitle"]==="undefined"){Module["setWindowTitle"]=(function(title){document.title=title})}}else{throw"Unknown runtime environment. Where are we?"}function globalEval(x){abort("NO_DYNAMIC_EXECUTION=1 was set, cannot eval")}if(!Module["load"]&&Module["read"]){Module["load"]=function load(f){globalEval(Module["read"](f))}}if(!Module["print"]){Module["print"]=(function(){})}if(!Module["printErr"]){Module["printErr"]=Module["print"]}if(!Module["arguments"]){Module["arguments"]=[]}if(!Module["thisProgram"]){Module["thisProgram"]="./this.program"}Module.print=Module["print"];Module.printErr=Module["printErr"];Module["preRun"]=[];Module["postRun"]=[];for(var key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var Runtime={setTempRet0:(function(value){tempRet0=value}),getTempRet0:(function(){return tempRet0}),stackSave:(function(){return STACKTOP}),stackRestore:(function(stackTop){STACKTOP=stackTop}),getNativeTypeSize:(function(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return Runtime.QUANTUM_SIZE}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}),getNativeFieldSize:(function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)}),STACK_ALIGN:16,prepVararg:(function(ptr,type){if(type==="double"||type==="i64"){if(ptr&7){assert((ptr&7)===4);ptr+=4}}else{assert((ptr&3)===0)}return ptr}),getAlignSize:(function(type,size,vararg){if(!vararg&&(type=="i64"||type=="double"))return 8;if(!type)return Math.min(size,8);return Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)}),dynCall:(function(sig,ptr,args){if(args&&args.length){return Module["dynCall_"+sig].apply(null,[ptr].concat(args))}else{return Module["dynCall_"+sig].call(null,ptr)}}),functionPointers:[null,null,null,null,null,null,null,null],addFunction:(function(func){for(var i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return 1*(1+i)}}throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."}),removeFunction:(function(index){Runtime.functionPointers[(index-1)/1]=null}),warnOnce:(function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text)}}),funcWrappers:{},getFuncWrapper:(function(func,sig){assert(sig);if(!Runtime.funcWrappers[sig]){Runtime.funcWrappers[sig]={}}var sigCache=Runtime.funcWrappers[sig];if(!sigCache[func]){if(sig.length===1){sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func)}}else if(sig.length===2){sigCache[func]=function dynCall_wrapper(arg){return Runtime.dynCall(sig,func,[arg])}}else{sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func,Array.prototype.slice.call(arguments))}}}return sigCache[func]}),getCompilerSetting:(function(name){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work"}),stackAlloc:(function(size){var ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+15&-16;return ret}),staticAlloc:(function(size){var ret=STATICTOP;STATICTOP=STATICTOP+size|0;STATICTOP=STATICTOP+15&-16;return ret}),dynamicAlloc:(function(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=(ret+size+15|0)&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}),alignMemory:(function(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:16))*(quantum?quantum:16);return ret}),makeBigInt:(function(low,high,unsigned){var ret=unsigned?+(low>>>0)+ +(high>>>0)*+4294967296:+(low>>>0)+ +(high|0)*+4294967296;return ret}),GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0};Module["Runtime"]=Runtime;var ABORT=0;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function getCFunc(ident){var func=Module["_"+ident];if(!func){abort("NO_DYNAMIC_EXECUTION=1 was set, cannot eval")}assert(func,"Cannot call unknown function "+ident+" (perhaps LLVM optimizations or closure removed it?)");return func}var cwrap,ccall;((function(){var JSfuncs={"stackSave":(function(){Runtime.stackSave()}),"stackRestore":(function(){Runtime.stackRestore()}),"arrayToC":(function(arr){var ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),"stringToC":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=Runtime.stackAlloc(len);stringToUTF8(str,ret,len)}return ret})};var toC={"string":JSfuncs["stringToC"],"array":JSfuncs["arrayToC"]};ccall=function ccallFunc(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType==="string")ret=Pointer_stringify(ret);if(stack!==0){if(opts&&opts.async){EmterpreterAsync.asyncFinalizers.push((function(){Runtime.stackRestore(stack)}));return}Runtime.stackRestore(stack)}return ret};cwrap=function cwrap(ident,returnType,argTypes){return(function(){return ccall(ident,returnType,argTypes,arguments)})}}))();Module["ccall"]=ccall;Module["cwrap"]=cwrap;function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}Module["setValue"]=setValue;function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for setValue: "+type)}return null}Module["getValue"]=getValue;var ALLOC_NORMAL=0;var ALLOC_STACK=1;var ALLOC_STATIC=2;var ALLOC_DYNAMIC=3;var ALLOC_NONE=4;Module["ALLOC_NORMAL"]=ALLOC_NORMAL;Module["ALLOC_STACK"]=ALLOC_STACK;Module["ALLOC_STATIC"]=ALLOC_STATIC;Module["ALLOC_DYNAMIC"]=ALLOC_DYNAMIC;Module["ALLOC_NONE"]=ALLOC_NONE;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc==="function"?_malloc:Runtime.staticAlloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];if(typeof curr==="function"){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}Module["allocate"]=allocate;function getMemory(size){if(!staticSealed)return Runtime.staticAlloc(size);if(!runtimeInitialized)return Runtime.dynamicAlloc(size);return _malloc(size)}Module["getMemory"]=getMemory;function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return Module["UTF8ToString"](ptr)}Module["Pointer_stringify"]=Pointer_stringify;function AsciiToString(ptr){var str="";while(1){var ch=HEAP8[ptr++>>0];if(!ch)return str;str+=String.fromCharCode(ch)}}Module["AsciiToString"]=AsciiToString;function stringToAscii(str,outPtr){return writeAsciiToMemory(str,outPtr,false)}Module["stringToAscii"]=stringToAscii;var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}Module["UTF8ArrayToString"]=UTF8ArrayToString;function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}Module["UTF8ToString"]=UTF8ToString;function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}Module["stringToUTF8Array"]=stringToUTF8Array;function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}Module["stringToUTF8"]=stringToUTF8;function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}Module["lengthBytesUTF8"]=lengthBytesUTF8;var UTF16Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf-16le"):undefined;function demangle(func){var hasLibcxxabi=!!Module["___cxa_demangle"];if(hasLibcxxabi){try{var s=func.substr(1);var len=lengthBytesUTF8(s)+1;var buf=_malloc(len);stringToUTF8(s,buf,len);var status=_malloc(4);var ret=Module["___cxa_demangle"](buf,0,0,status);if(getValue(status,"i32")===0&&ret){return Pointer_stringify(ret)}}catch(e){}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret)}return func}Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return func}function demangleAll(text){return text.replace(/__Z[\w\d_]+/g,(function(x){var y=demangle(x);return x===y?x:x+" ["+y+"]"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module["extraStackTrace"])js+="\n"+Module["extraStackTrace"]();return demangleAll(js)}Module["stackTrace"]=stackTrace;var PAGE_SIZE=4096;var HEAP;var buffer;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+TOTAL_MEMORY+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}function enlargeMemory(){abortOnCannotGrowMemory()}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||35e6;var WASM_PAGE_SIZE=64*1024;var totalMemory=WASM_PAGE_SIZE;while(totalMemory<TOTAL_MEMORY||totalMemory<2*TOTAL_STACK){if(totalMemory<16*1024*1024){totalMemory*=2}else{totalMemory+=16*1024*1024}}if(totalMemory!==TOTAL_MEMORY){TOTAL_MEMORY=totalMemory}if(Module["buffer"]){buffer=Module["buffer"]}else{{buffer=new ArrayBuffer(TOTAL_MEMORY)}}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw"Runtime error: expected the system to be little-endian!";Module["HEAP"]=HEAP;Module["buffer"]=buffer;Module["HEAP8"]=HEAP8;Module["HEAP16"]=HEAP16;Module["HEAP32"]=HEAP32;Module["HEAPU8"]=HEAPU8;Module["HEAPU16"]=HEAPU16;Module["HEAPU32"]=HEAPU32;Module["HEAPF32"]=HEAPF32;Module["HEAPF64"]=HEAPF64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Runtime.dynCall("v",func)}else{Runtime.dynCall("vi",func,[callback.arg])}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}Module["addOnPreRun"]=addOnPreRun;function addOnInit(cb){__ATINIT__.unshift(cb)}Module["addOnInit"]=addOnInit;function addOnPreMain(cb){__ATMAIN__.unshift(cb)}Module["addOnPreMain"]=addOnPreMain;function addOnExit(cb){__ATEXIT__.unshift(cb)}Module["addOnExit"]=addOnExit;function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}Module["addOnPostRun"]=addOnPostRun;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module["intArrayFromString"]=intArrayFromString;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){chr&=255}ret.push(String.fromCharCode(chr))}return ret.join("")}Module["intArrayToString"]=intArrayToString;function writeStringToMemory(string,buffer,dontAddNull){Runtime.warnOnce("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!");var lastChar,end;if(dontAddNull){end=buffer+lengthBytesUTF8(string);lastChar=HEAP8[end]}stringToUTF8(string,buffer,Infinity);if(dontAddNull)HEAP8[end]=lastChar}Module["writeStringToMemory"]=writeStringToMemory;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}Module["writeArrayToMemory"]=writeArrayToMemory;function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}Module["writeAsciiToMemory"]=writeAsciiToMemory;if(!Math["imul"]||Math["imul"](4294967295,5)!==-5)Math["imul"]=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math["imul"];if(!Math["clz32"])Math["clz32"]=(function(x){x=x>>>0;for(var i=0;i<32;i++){if(x&1<<31-i)return i}return 32});Math.clz32=Math["clz32"];if(!Math["trunc"])Math["trunc"]=(function(x){return x<0?Math.ceil(x):Math.floor(x)});Math.trunc=Math["trunc"];var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_round=Math.round;var Math_min=Math.min;var Math_clz32=Math.clz32;var Math_trunc=Math.trunc;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}Module["addRunDependency"]=addRunDependency;function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["removeRunDependency"]=removeRunDependency;Module["preloadedImages"]={};Module["preloadedAudios"]={};var ASM_CONSTS=[(function(){{return Module.getRandomValue()}}),(function(){{if(Module.getRandomValue===undefined){try{var window_="object"===typeof window?window:self,crypto_=typeof window_.crypto!=="undefined"?window_.crypto:window_.msCrypto,randomValuesStandard=(function(){var buf=new Uint32Array(1);crypto_.getRandomValues(buf);return buf[0]>>>0});randomValuesStandard();Module.getRandomValue=randomValuesStandard}catch(e){try{var crypto=__webpack_require__(27),randomValueNodeJS=(function(){var buf=crypto.randomBytes(4);return(buf[0]<<24|buf[1]<<16|buf[2]<<8|buf[3])>>>0});randomValueNodeJS();Module.getRandomValue=randomValueNodeJS}catch(e){throw"No secure random number generator found"}}}}})];function _emscripten_asm_const_i(code){return ASM_CONSTS[code]()}function _emscripten_asm_const_v(code){return ASM_CONSTS[code]()}STATIC_BASE=8;STATICTOP=STATIC_BASE+34544;__ATINIT__.push();allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,232,149,143,194,178,39,176,69,195,244,137,242,239,152,240,213,223,172,5,211,198,51,57,177,56,2,136,109,83,252,5,199,23,106,112,61,77,216,79,186,60,11,118,13,16,103,15,42,32,83,250,44,57,204,198,78,199,253,119,146,172,3,122,19,232,149,143,194,178,39,176,69,195,244,137,242,239,152,240,213,223,172,5,211,198,51,57,177,56,2,136,109,83,252,133,180,23,106,112,61,77,216,79,186,60,11,118,13,16,103,15,42,32,83,250,44,57,204,198,78,199,253,119,146,172,3,250,236,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,237,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,238,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,217,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,218,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,219,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,8,201,188,243,103,230,9,106,59,167,202,132,133,174,103,187,43,248,148,254,114,243,110,60,241,54,29,95,58,245,79,165,209,130,230,173,127,82,14,81,31,108,62,43,140,104,5,155,107,189,65,251,171,217,131,31,121,33,126,19,25,205,224,91,182,120,89,255,133,114,211,0,189,110,21,255,15,10,106,0,41,192,1,0,152,232,121,255,188,60,160,255,153,113,206,255,0,183,226,254,180,13,72,255,176,160,14,254,211,201,134,255,158,24,143,0,127,105,53,0,96,12,189,0,167,215,251,255,159,76,128,254,106,101,225,255,30,252,4,0,146,12,174,0,89,241,178,254,10,229,166,255,123,221,42,254,30,20,212,0,82,128,3,0,48,209,243,0,119,121,64,255,50,227,156,255,0,110,197,1,103,27,144,0,133,59,140,1,189,241,36,255,248,37,195,1,96,220,55,0,183,76,62,255,195,66,61,0,50,76,164,1,225,164,76,255,76,61,163,255,117,62,31,0,81,145,64,255,118,65,14,0,162,115,214,255,6,138,46,0,124,230,244,255,10,138,143,0,52,26,194,0,184,244,76,0,129,143,41,1,190,244,19,255,123,170,122,255,98,129,68,0,121,213,147,0,86,101,30,255,161,103,155,0,140,89,67,255,239,229,190,1,67,11,181,0,198,240,137,254,238,69,188,255,67,151,238,0,19,42,108,255,229,85,113,1,50,68,135,255,17,106,9,0,50,103,1,255,80,1,168,1,35,152,30,255,16,168,185,1,56,89,232,255,101,210,252,0,41,250,71,0,204,170,79,255,14,46,239,255,80,77,239,0,189,214,75,255,17,141,249,0,38,80,76,255,190,85,117,0,86,228,170,0,156,216,208,1,195,207,164,255,150,66,76,255,175,225,16,255,141,80,98,1,76,219,242,0,198,162,114,0,46,218,152,0,155,43,241,254,155,160,104,255,51,187,165,0,2,17,175,0,66,84,160,1,247,58,30,0,35,65,53,254,69,236,191,0,45,134,245,1,163,123,221,0,32,110,20,255,52,23,165,0,186,214,71,0,233,176,96,0,242,239,54,1,57,89,138,0,83,0,84,255,136,160,100,0,92,142,120,254,104,124,190,0,181,177,62,255,250,41,85,0,152,130,42,1,96,252,246,0,151,151,63,254,239,133,62,0,32,56,156,0,45,167,189,255,142,133,179,1,131,86,211,0,187,179,150,254,250,170,14,255,210,163,78,0,37,52,151,0,99,77,26,0,238,156,213,255,213,192,209,1,73,46,84,0,20,65,41,1,54,206,79,0,201,131,146,254,170,111,24,255,177,33,50,254,171,38,203,255,78,247,116,0,209,221,153,0,133,128,178,1,58,44,25,0,201,39,59,1,189,19,252,0,49,229,210,1,117,187,117,0,181,179,184,1,0,114,219,0,48,94,147,0,245,41,56,0,125,13,204,254,244,173,119,0,44,221,32,254,84,234,20,0,249,160,198,1,236,126,234,255,47,99,168,254,170,226,153,255,102,179,216,0,226,141,122,255,122,66,153,254,182,245,134,0,227,228,25,1,214,57,235,255,216,173,56,255,181,231,210,0,119,128,157,255,129,95,136,255,110,126,51,0,2,169,183,255,7,130,98,254,69,176,94,255,116,4,227,1,217,242,145,255,202,173,31,1,105,1,39,255,46,175,69,0,228,47,58,255,215,224,69,254,207,56,69,255,16,254,139,255,23,207,212,255,202,20,126,255,95,213,96,255,9,176,33,0,200,5,207,255,241,42,128,254,35,33,192,255,248,229,196,1,129,17,120,0,251,103,151,255,7,52,112,255,140,56,66,255,40,226,245,255,217,70,37,254,172,214,9,255,72,67,134,1,146,192,214,255,44,38,112,0,68,184,75,255,206,90,251,0,149,235,141,0,181,170,58,0,116,244,239,0,92,157,2,0,102,173,98,0,233,137,96,1,127,49,203,0,5,155,148,0,23,148,9,255,211,122,12,0,34,134,26,255,219,204,136,0,134,8,41,255,224,83,43,254,85,25,247,0,109,127,0,254,169,136,48,0,238,119,219,255,231,173,213,0,206,18,254,254,8,186,7,255,126,9,7,1,111,42,72,0,111,52,236,254,96,63,141,0,147,191,127,254,205,78,192,255,14,106,237,1,187,219,76,0,175,243,187,254,105,89,173,0,85,25,89,1,162,243,148,0,2,118,209,254,33,158,9,0,139,163,46,255,93,70,40,0,108,42,142,254,111,252,142,255,155,223,144,0,51,229,167,255,73,252,155,255,94,116,12,255,152,160,218,255,156,238,37,255,179,234,207,255,197,0,179,255,154,164,141,0,225,196,104,0,10,35,25,254,209,212,242,255,97,253,222,254,184,101,229,0,222,18,127,1,164,136,135,255,30,207,140,254,146,97,243,0,129,192,26,254,201,84,33,255,111,10,78,255,147,81,178,255,4,4,24,0,161,238,215,255,6,141,33,0,53,215,14,255,41,181,208,255,231,139,157,0,179,203,221,255,255,185,113,0,189,226,172,255,113,66,214,255,202,62,45,255,102,64,8,255,78,174,16,254,133,117,68,255,133,59,140,1,189,241,36,255,248,37,195,1,96,220,55,0,183,76,62,255,195,66,61,0,50,76,164,1,225,164,76,255,76,61,163,255,117,62,31,0,81,145,64,255,118,65,14,0,162,115,214,255,6,138,46,0,124,230,244,255,10,138,143,0,52,26,194,0,184,244,76,0,129,143,41,1,190,244,19,255,123,170,122,255,98,129,68,0,121,213,147,0,86,101,30,255,161,103,155,0,140,89,67,255,239,229,190,1,67,11,181,0,198,240,137,254,238,69,188,255,234,113,60,255,37,255,57,255,69,178,182,254,128,208,179,0,118,26,125,254,3,7,214,255,241,50,77,255,85,203,197,255,211,135,250,255,25,48,100,255,187,213,180,254,17,88,105,0,83,209,158,1,5,115,98,0,4,174,60,254,171,55,110,255,217,181,17,255,20,188,170,0,146,156,102,254,87,214,174,255,114,122,155,1,233,44,170,0,127,8,239,1,214,236,234,0,175,5,219,0,49,106,61,255,6,66,208,255,2,106,110,255,81,234,19,255,215,107,192,255,67,151,238,0,19,42,108,255,229,85,113,1,50,68,135,255,17,106,9,0,50,103,1,255,80,1,168,1,35,152,30,255,16,168,185,1,56,89,232,255,101,210,252,0,41,250,71,0,204,170,79,255,14,46,239,255,80,77,239,0,189,214,75,255,17,141,249,0,38,80,76,255,190,85,117,0,86,228,170,0,156,216,208,1,195,207,164,255,150,66,76,255,175,225,16,255,141,80,98,1,76,219,242,0,198,162,114,0,46,218,152,0,155,43,241,254,155,160,104,255,178,9,252,254,100,110,212,0,14,5,167,0,233,239,163,255,28,151,157,1,101,146,10,255,254,158,70,254,71,249,228,0,88,30,50,0,68,58,160,255,191,24,104,1,129,66,129,255,192,50,85,255,8,179,138,255,38,250,201,0,115,80,160,0,131,230,113,0,125,88,147,0,90,68,199,0,253,76,158,0,28,255,118,0,113,250,254,0,66,75,46,0,230,218,43,0,229,120,186,1,148,68,43,0,136,124,238,1,187,107,197,255,84,53,246,255,51,116,254,255,51,187,165,0,2,17,175,0,66,84,160,1,247,58,30,0,35,65,53,254,69,236,191,0,45,134,245,1,163,123,221,0,32,110,20,255,52,23,165,0,186,214,71,0,233,176,96,0,242,239,54,1,57,89,138,0,83,0,84,255,136,160,100,0,92,142,120,254,104,124,190,0,181,177,62,255,250,41,85,0,152,130,42,1,96,252,246,0,151,151,63,254,239,133,62,0,32,56,156,0,45,167,189,255,142,133,179,1,131,86,211,0,187,179,150,254,250,170,14,255,68,113,21,255,222,186,59,255,66,7,241,1,69,6,72,0,86,156,108,254,55,167,89,0,109,52,219,254,13,176,23,255,196,44,106,255,239,149,71,255,164,140,125,255,159,173,1,0,51,41,231,0,145,62,33,0,138,111,93,1,185,83,69,0,144,115,46,0,97,151,16,255,24,228,26,0,49,217,226,0,113,75,234,254,193,153,12,255,182,48,96,255,14,13,26,0,128,195,249,254,69,193,59,0,132,37,81,254,125,106,60,0,214,240,169,1,164,227,66,0,210,163,78,0,37,52,151,0,99,77,26,0,238,156,213,255,213,192,209,1,73,46,84,0,20,65,41,1,54,206,79,0,201,131,146,254,170,111,24,255,177,33,50,254,171,38,203,255,78,247,116,0,209,221,153,0,133,128,178,1,58,44,25,0,201,39,59,1,189,19,252,0,49,229,210,1,117,187,117,0,181,179,184,1,0,114,219,0,48,94,147,0,245,41,56,0,125,13,204,254,244,173,119,0,44,221,32,254,84,234,20,0,249,160,198,1,236,126,234,255,143,62,221,0,129,89,214,255,55,139,5,254,68,20,191,255,14,204,178,1,35,195,217,0,47,51,206,1,38,246,165,0,206,27,6,254,158,87,36,0,217,52,146,255,125,123,215,255,85,60,31,255,171,13,7,0,218,245,88,254,252,35,60,0,55,214,160,255,133,101,56,0,224,32,19,254,147,64,234,0,26,145,162,1,114,118,125,0,248,252,250,0,101,94,196,255,198,141,226,254,51,42,182,0,135,12,9,254,109,172,210,255,197,236,194,1,241,65,154,0,48,156,47,255,153,67,55,255,218,165,34,254,74,180,179,0,218,66,71,1,88,122,99,0,212,181,219,255,92,42,231,255,239,0,154,0,245,77,183,255,94,81,170,1,18,213,216,0,171,93,71,0,52,94,248,0,18,151,161,254,197,209,66,255,174,244,15,254,162,48,183,0,49,61,240,254,182,93,195,0,199,228,6,1,200,5,17,255,137,45,237,255,108,148,4,0,90,79,237,255,39,63,77,255,53,82,207,1,142,22,118,255,101,232,18,1,92,26,67,0,5,200,88,255,33,168,138,255,149,225,72,0,2,209,27,255,44,245,168,1,220,237,17,255,30,211,105,254,141,238,221,0,128,80,245,254,111,254,14,0,222,95,190,1,223,9,241,0,146,76,212,255,108,205,104,255,63,117,153,0,144,69,48,0,35,228,111,0,192,33,193,255,112,214,190,254,115,152,151,0,23,102,88,0,51,74,248,0,226,199,143,254,204,162,101,255,208,97,189,1,245,104,18,0,230,246,30,255,23,148,69,0,110,88,52,254,226,181,89,255,208,47,90,254,114,161,80,255,33,116,248,0,179,152,87,255,69,144,177,1,88,238,26,255,58,32,113,1,1,77,69,0,59,121,52,255,152,238,83,0,52,8,193,0,231,39,233,255,199,34,138,0,222,68,173,0,91,57,242,254,220,210,127,255,192,7,246,254,151,35,187,0,195,236,165,0,111,93,206,0,212,247,133,1,154,133,209,255,155,231,10,0,64,78,38,0,122,249,100,1,30,19,97,255,62,91,249,1,248,133,77,0,197,63,168,254,116,10,82,0,184,236,113,254,212,203,194,255,61,100,252,254,36,5,202,255,119,91,153,255,129,79,29,0,103,103,171,254,237,215,111,255,216,53,69,0,239,240,23,0,194,149,221,255,38,225,222,0,232,255,180,254,118,82,133,255,57,209,177,1,139,232,133,0,158,176,46,254,194,115,46,0,88,247,229,1,28,103,191,0,221,222,175,254,149,235,44,0,151,228,25,254,218,105,103,0,142,85,210,0,149,129,190,255,213,65,94,254,117,134,224,255,82,198,117,0,157,221,220,0,163,101,36,0,197,114,37,0,104,172,166,254,11,182,0,0,81,72,188,255,97,188,16,255,69,6,10,0,199,147,145,255,8,9,115,1,65,214,175,255,217,173,209,0,80,127,166,0,247,229,4,254,167,183,124,255,90,28,204,254,175,59,240,255,11,41,248,1,108,40,51,255,144,177,195,254,150,250,126,0,138,91,65,1,120,60,222,255,245,193,239,0,29,214,189,255,128,2,25,0,80,154,162,0,77,220,107,1,234,205,74,255,54,166,103,255,116,72,9,0,228,94,47,255,30,200,25,255,35,214,89,255,61,176,140,255,83,226,163,255,75,130,172,0,128,38,17,0,95,137,152,255,215,124,159,1,79,93,0,0,148,82,157,254,195,130,251,255,40,202,76,255,251,126,224,0,157,99,62,254,207,7,225,255,96,68,195,0,140,186,157,255,131,19,231,255,42,128,254,0,52,219,61,254,102,203,72,0,141,7,11,255,186,164,213,0,31,122,119,0,133,242,145,0,208,252,232,255,91,213,182,255,143,4,250,254,249,215,74,0,165,30,111,1,171,9,223,0,229,123,34,1,92,130,26,255,77,155,45,1,195,139,28,255,59,224,78,0,136,17,247,0,108,121,32,0,79,250,189,255,96,227,252,254,38,241,62,0,62,174,125,255,155,111,93,255,10,230,206,1,97,197,40,255,0,49,57,254,65,250,13,0,18,251,150,255,220,109,210,255,5,174,166,254,44,129,189,0,235,35,147,255,37,247,141,255,72,141,4,255,103,107,255,0,247,90,4,0,53,44,42,0,2,30,240,0,4,59,63,0,88,78,36,0,113,167,180,0,190,71,193,255,199,158,164,255,58,8,172,0,77,33,12,0,65,63,3,0,153,77,33,255,172,254,102,1,228,221,4,255,87,30,254,1,146,41,86,255,138,204,239,254,108,141,17,255,187,242,135,0,210,208,127,0,68,45,14,254,73,96,62,0,81,60,24,255,170,6,36,255,3,249,26,0,35,213,109,0,22,129,54,255,21,35,225,255,234,61,56,255,58,217,6,0,143,124,88,0,236,126,66,0,209,38,183,255,34,238,6,255,174,145,102,0,95,22,211,0,196,15,153,254,46,84,232,255,117,34,146,1,231,250,74,255,27,134,100,1,92,187,195,255,170,198,112,0,120,28,42,0,209,70,67,0,29,81,31,0,29,168,100,1,169,173,160,0,107,35,117,0,62,96,59,255,81,12,69,1,135,239,190,255,220,252,18,0,163,220,58,255,137,137,188,255,83,102,109,0,96,6,76,0,234,222,210,255,185,174,205,1,60,158,213,255,13,241,214,0,172,129,140,0,93,104,242,0,192,156,251,0,43,117,30,0,225,81,158,0,127,232,218,0,226,28,203,0,233,27,151,255,117,43,5,255,242,14,47,255,33,20,6,0,137,251,44,254,27,31,245,255,183,214,125,254,40,121,149,0,186,158,213,255,89,8,227,0,69,88,0,254,203,135,225,0,201,174,203,0,147,71,184,0,18,121,41,254,94,5,78,0,224,214,240,254,36,5,180,0,251,135,231,1,163,138,212,0,210,249,116,254,88,129,187,0,19,8,49,254,62,14,144,255,159,76,211,0,214,51,82,0,109,117,228,254,103,223,203,255,75,252,15,1,154,71,220,255,23,13,91,1,141,168,96,255,181,182,133,0,250,51,55,0,234,234,212,254,175,63,158,0,39,240,52,1,158,189,36,255,213,40,85,1,32,180,247,255,19,102,26,1,84,24,97,255,69,21,222,0,148,139,122,255,220,213,235,1,232,203,255,0,121,57,147,0,227,7,154,0,53,22,147,1,72,1,225,0,82,134,48,254,83,60,157,255,145,72,169,0,34,103,239,0,198,233,47,0,116,19,4,255,184,106,9,255,183,129,83,0,36,176,230,1,34,103,72,0,219,162,134,0,245,42,158,0,32,149,96,254,165,44,144,0,202,239,72,254,215,150,5,0,42,66,36,1,132,215,175,0,86,174,86,255,26,197,156,255,49,232,135,254,103,182,82,0,253,128,176,1,153,178,122,0,245,250,10,0,236,24,178,0,137,106,132,0,40,29,41,0,50,30,152,255,124,105,38,0,230,191,75,0,143,43,170,0,44,131,20,255,44,13,23,255,237,255,155,1,159,109,100,255,112,181,24,255,104,220,108,0,55,211,131,0,99,12,213,255,152,151,145,255,238,5,159,0,97,155,8,0,33,108,81,0,1,3,103,0,62,109,34,255,250,155,180,0,32,71,195,255,38,70,145,1,159,95,245,0,69,229,101,1,136,28,240,0,79,224,25,0,78,110,121,255,248,168,124,0,187,128,247,0,2,147,235,254,79,11,132,0,70,58,12,1,181,8,163,255,79,137,133,255,37,170,11,255,141,243,85,255,176,231,215,255,204,150,164,255,239,215,39,255,46,87,156,254,8,163,88,255,172,34,232,0,66,44,102,255,27,54,41,254,236,99,87,255,41,123,169,1,52,114,43,0,117,134,40,0,155,134,26,0,231,207,91,254,35,132,38,255,19,102,125,254,36,227,133,255,118,3,113,255,29,13,124,0,152,96,74,1,88,146,206,255,167,191,220,254,162,18,88,255,182,100,23,0,31,117,52,0,81,46,106,1,12,2,7,0,69,80,201,1,209,246,172,0,12,48,141,1,224,211,88,0,116,226,159,0,122,98,130,0,65,236,234,1,225,226,9,255,207,226,123,1,89,214,59,0,112,135,88,1,90,244,203,255,49,11,38,1,129,108,186,0,89,112,15,1,101,46,204,255,127,204,45,254,79,255,221,255,51,73,18,255,127,42,101,255,241,21,202,0,160,227,7,0,105,50,236,0,79,52,197,255,104,202,208,1,180,15,16,0,101,197,78,255,98,77,203,0,41,185,241,1,35,193,124,0,35,155,23,255,207,53,192,0,11,125,163,1,249,158,185,255,4,131,48,0,21,93,111,255,61,121,231,1,69,200,36,255,185,48,185,255,111,238,21,255,39,50,25,255,99,215,163,255,87,212,30,255,164,147,5,255,128,6,35,1,108,223,110,255,194,76,178,0,74,101,180,0,243,47,48,0,174,25,43,255,82,173,253,1,54,114,192,255,40,55,91,0,215,108,176,255,11,56,7,0,224,233,76,0,209,98,202,254,242,25,125,0,44,193,93,254,203,8,177,0,135,176,19,0,112,71,213,255,206,59,176,1,4,67,26,0,14,143,213,254,42,55,208,255,60,67,120,0,193,21,163,0,99,164,115,0,10,20,118,0,156,212,222,254,160,7,217,255,114,245,76,1,117,59,123,0,176,194,86,254,213,15,176,0,78,206,207,254,213,129,59,0,233,251,22,1,96,55,152,255,236,255,15,255,197,89,84,255,93,149,133,0,174,160,113,0,234,99,169,255,152,116,88,0,144,164,83,255,95,29,198,255,34,47,15,255,99,120,134,255,5,236,193,0,249,247,126,255,147,187,30,0,50,230,117,255,108,217,219,255,163,81,166,255,72,25,169,254,155,121,79,255,28,155,89,254,7,126,17,0,147,65,33,1,47,234,253,0,26,51,18,0,105,83,199,255,163,196,230,0,113,248,164,0,226,254,218,0,189,209,203,255,164,247,222,254,255,35,165,0,4,188,243,1,127,179,71,0,37,237,254,255,100,186,240,0,5,57,71,254,103,72,73,255,244,18,81,254,229,210,132,255,238,6,180,255,11,229,174,255,227,221,192,1,17,49,28,0,163,215,196,254,9,118,4,255,51,240,71,0,113,129,109,255,76,240,231,0,188,177,127,0,125,71,44,1,26,175,243,0,94,169,25,254,27,230,29,0,15,139,119,1,168,170,186,255,172,197,76,255,252,75,188,0,137,124,196,0,72,22,96,255,45,151,249,1,220,145,100,0,64,192,159,255,120,239,226,0,129,178,146,0,0,192,125,0,235,138,234,0,183,157,146,0,83,199,192,255,184,172,72,255,73,225,128,0,77,6,250,255,186,65,67,0,104,246,207,0,188,32,138,255,218,24,242,0,67,138,81,254,237,129,121,255,20,207,150,1,41,199,16,255,6,20,128,0,159,118,5,0,181,16,143,255,220,38,15,0,23,64,147,254,73,26,13,0,87,228,57,1,204,124,128,0,43,24,223,0,219,99,199,0,22,75,20,255,19,27,126,0,157,62,215,0,110,29,230,0,179,167,255,1,54,252,190,0,221,204,182,254,179,158,65,255,81,157,3,0,194,218,159,0,170,223,0,0,224,11,32,255,38,197,98,0,168,164,37,0,23,88,7,1,164,186,110,0,96,36,134,0,234,242,229,0,250,121,19,0,242,254,112,255,3,47,94,1,9,239,6,255,81,134,153,254,214,253,168,255,67,124,224,0,245,95,74,0,28,30,44,254,1,109,220,255,178,89,89,0,252,36,76,0,24,198,46,255,76,77,111,0,134,234,136,255,39,94,29,0,185,72,234,255,70,68,135,255,231,102,7,254,77,231,140,0,167,47,58,1,148,97,118,255,16,27,225,1,166,206,143,255,110,178,214,255,180,131,162,0,143,141,225,1,13,218,78,255,114,153,33,1,98,104,204,0,175,114,117,1,167,206,75,0,202,196,83,1,58,64,67,0,138,47,111,1,196,247,128,255,137,224,224,254,158,112,207,0,154,100,255,1,134,37,107,0,198,128,79,255,127,209,155,255,163,254,185,254,60,14,243,0,31,219,112,254,29,217,65,0,200,13,116,254,123,60,196,255,224,59,184,254,242,89,196,0,123,16,75,254,149,16,206,0,69,254,48,1,231,116,223,255,209,160,65,1,200,80,98,0,37,194,184,254,148,63,34,0,139,240,65,255,217,144,132,255,56,38,45,254,199,120,210,0,108,177,166,255,160,222,4,0,220,126,119,254,165,107,160,255,82,220,248,1,241,175,136,0,144,141,23,255,169,138,84,0,160,137,78,255,226,118,80,255,52,27,132,255,63,96,139,255,152,250,39,0,188,155,15,0,232,51,150,254,40,15,232,255,240,229,9,255,137,175,27,255,75,73,97,1,218,212,11,0,135,5,162,1,107,185,213,0,2,249,107,255,40,242,70,0,219,200,25,0,25,157,13,0,67,82,80,255,196,249,23,255,145,20,149,0,50,72,146,0,94,76,148,1,24,251,65,0,31,192,23,0,184,212,201,255,123,233,162,1,247,173,72,0,162,87,219,254,126,134,89,0,159,11,12,254,166,105,29,0,73,27,228,1,113,120,183,255,66,163,109,1,212,143,11,255,159,231,168,1,255,128,90,0,57,14,58,254,89,52,10,255,253,8,163,1,0,145,210,255,10,129,85,1,46,181,27,0,103,136,160,254,126,188,209,255,34,35,111,0,215,219,24,255,212,11,214,254,101,5,118,0,232,197,133,255,223,167,109,255,237,80,86,255,70,139,94,0,158,193,191,1,155,15,51,255,15,190,115,0,78,135,207,255,249,10,27,1,181,125,233,0,95,172,13,254,170,213,161,255,39,236,138,255,95,93,87,255,190,128,95,0,125,15,206,0,166,150,159,0,227,15,158,255,206,158,120,255,42,141,128,0,101,178,120,1,156,109,131,0,218,14,44,254,247,168,206,255,212,112,28,0,112,17,228,255,90,16,37,1,197,222,108,0,254,207,83,255,9,90,243,255,243,244,172,0,26,88,115,255,205,116,122,0,191,230,193,0,180,100,11,1,217,37,96,255,154,78,156,0,235,234,31,255,206,178,178,255,149,192,251,0,182,250,135,0,246,22,105,0,124,193,109,255,2,210,149,255,169,17,170,0,0,96,110,255,117,9,8,1,50,123,40,255,193,189,99,0,34,227,160,0,48,80,70,254,211,51,236,0,45,122,245,254,44,174,8,0,173,37,233,255,158,65,171,0,122,69,215,255,90,80,2,255,131,106,96,254,227,114,135,0,205,49,119,254,176,62,64,255,82,51,17,255,241,20,243,255,130,13,8,254,128,217,243,255,162,27,1,254,90,118,241,0,246,198,246,255,55,16,118,255,200,159,157,0,163,17,1,0,140,107,121,0,85,161,118,255,38,0,149,0,156,47,238,0,9,166,166,1,75,98,181,255,50,74,25,0,66,15,47,0,139,225,159,0,76,3,142,255,14,238,184,0,11,207,53,255,183,192,186,1,171,32,174,255,191,76,221,1,247,170,219,0,25,172,50,254,217,9,233,0,203,126,68,255,183,92,48,0,127,167,183,1,65,49,254,0,16,63,127,1,254,21,170,255,59,224,127,254,22,48,63,255,27,78,130,254,40,195,29,0,250,132,112,254,35,203,144,0,104,169,168,0,207,253,30,255,104,40,38,254,94,228,88,0,206,16,128,255,212,55,122,255,223,22,234,0,223,197,127,0,253,181,181,1,145,102,118,0,236,153,36,255,212,217,72,255,20,38,24,254,138,62,62,0,152,140,4,0,230,220,99,255,1,21,212,255,148,201,231,0,244,123,9,254,0,171,210,0,51,58,37,255,1,255,14,255,244,183,145,254,0,242,166,0,22,74,132,0,121,216,41,0,95,195,114,254,133,24,151,255,156,226,231,255,247,5,77,255,246,148,115,254,225,92,81,255,222,80,246,254,170,123,89,255,74,199,141,0,29,20,8,255,138,136,70,255,93,75,92,0,221,147,49,254,52,126,226,0,229,124,23,0,46,9,181,0,205,64,52,1,131,254,28,0,151,158,212,0,131,64,78,0,206,25,171,0,0,230,139,0,191,253,110,254,103,247,167,0,64,40,40,1,42,165,241,255,59,75,228,254,124,243,189,255,196,92,178,255,130,140,86,255,141,89,56,1,147,198,5,255,203,248,158,254,144,162,141,0,11,172,226,0,130,42,21,255,1,167,143,255,144,36,36,255,48,88,164,254,168,170,220,0,98,71,214,0,91,208,79,0,159,76,201,1,166,42,214,255,69,255,0,255,6,128,125,255,190,1,140,0,146,83,218,255,215,238,72,1,122,127,53,0,189,116,165,255,84,8,66,255,214,3,208,255,213,110,133,0,195,168,44,1,158,231,69,0,162,64,200,254,91,58,104,0,182,58,187,254,249,228,136,0,203,134,76,254,99,221,233,0,75,254,214,254,80,69,154,0,64,152,248,254,236,136,202,255,157,105,153,254,149,175,20,0,22,35,19,255,124,121,233,0,186,250,198,254,132,229,139,0,137,80,174,255,165,125,68,0,144,202,148,254,235,239,248,0,135,184,118,0,101,94,17,255,122,72,70,254,69,130,146,0,127,222,248,1,69,127,118,255,30,82,215,254,188,74,19,255,229,167,194,254,117,25,66,255,65,234,56,254,213,22,156,0,151,59,93,254,45,28,27,255,186,126,164,255,32,6,239,0,127,114,99,1,219,52,2,255,99,96,166,254,62,190,126,255,108,222,168,1,75,226,174,0,230,226,199,0,60,117,218,255,252,248,20,1,214,188,204,0,31,194,134,254,123,69,192,255,169,173,36,254,55,98,91,0,223,42,102,254,137,1,102,0,157,90,25,0,239,122,64,255,252,6,233,0,7,54,20,255,82,116,174,0,135,37,54,255,15,186,125,0,227,112,175,255,100,180,225,255,42,237,244,255,244,173,226,254,248,18,33,0,171,99,150,255,74,235,50,255,117,82,32,254,106,168,237,0,207,109,208,1,228,9,186,0,135,60,169,254,179,92,143,0,244,170,104,255,235,45,124,255,70,99,186,0,117,137,183,0,224,31,215,0,40,9,100,0,26,16,95,1,68,217,87,0,8,151,20,255,26,100,58,255,176,165,203,1,52,118,70,0,7,32,254,254,244,254,245,255,167,144,194,255,125,113,23,255,176,121,181,0,136,84,209,0,138,6,30,255,89,48,28,0,33,155,14,255,25,240,154,0,141,205,109,1,70,115,62,255,20,40,107,254,138,154,199,255,94,223,226,255,157,171,38,0,163,177,25,254,45,118,3,255,14,222,23,1,209,190,81,255,118,123,232,1,13,213,101,255,123,55,123,254,27,246,165,0,50,99,76,255,140,214,32,255,97,65,67,255,24,12,28,0,174,86,78,1,64,247,96,0,160,135,67,0,66,55,243,255,147,204,96,255,26,6,33,255,98,51,83,1,153,213,208,255,2,184,54,255,25,218,11,0,49,67,246,254,18,149,72,255,13,25,72,0,42,79,214,0,42,4,38,1,27,139,144,255,149,187,23,0,18,164,132,0,245,84,184,254,120,198,104,255,126,218,96,0,56,117,234,255,13,29,214,254,68,47,10,255,167,154,132,254,152,38,198,0,66,178,89,255,200,46,171,255,13,99,83,255,210,187,253,255,170,45,42,1,138,209,124,0,214,162,141,0,12,230,156,0,102,36,112,254,3,147,67,0,52,215,123,255,233,171,54,255,98,137,62,0,247,218,39,255,231,218,236,0,247,191,127,0,195,146,84,0,165,176,92,255,19,212,94,255,17,74,227,0,88,40,153,1,198,147,1,255,206,67,245,254,240,3,218,255,61,141,213,255,97,183,106,0,195,232,235,254,95,86,154,0,209,48,205,254,118,209,241,255,240,120,223,1,213,29,159,0,163,127,147,255,13,218,93,0,85,24,68,254,70,20,80,255,189,5,140,1,82,97,254,255,99,99,191,255,132,84,133,255,107,218,116,255,112,122,46,0,105,17,32,0,194,160,63,255,68,222,39,1,216,253,92,0,177,105,205,255,149,201,195,0,42,225,11,255,40,162,115,0,9,7,81,0,165,218,219,0,180,22,0,254,29,146,252,255,146,207,225,1,180,135,96,0,31,163,112,0,177,11,219,255,133,12,193,254,43,78,50,0,65,113,121,1,59,217,6,255,110,94,24,1,112,172,111,0,7,15,96,0,36,85,123,0,71,150,21,255,208,73,188,0,192,11,167,1,213,245,34,0,9,230,92,0,162,142,39,255,215,90,27,0,98,97,89,0,94,79,211,0,90,157,240,0,95,220,126,1,102,176,226,0,36,30,224,254,35,31,127,0,231,232,115,1,85,83,130,0,210,73,245,255,47,143,114,255,68,65,197,0,59,72,62,255,183,133,173,254,93,121,118,255,59,177,81,255,234,69,173,255,205,128,177,0,220,244,51,0,26,244,209,1,73,222,77,255,163,8,96,254,150,149,211,0,158,254,203,1,54,127,139,0,161,224,59,0,4,109,22,255,222,42,45,255,208,146,102,255,236,142,187,0,50,205,245,255,10,74,89,254,48,79,142,0,222,76,130,255,30,166,63,0,236,12,13,255,49,184,244,0,187,113,102,0,218,101,253,0,153,57,182,254,32,150,42,0,25,198,146,1,237,241,56,0,140,68,5,0,91,164,172,255,78,145,186,254,67,52,205,0,219,207,129,1,109,115,17,0,54,143,58,1,21,248,120,255,179,255,30,0,193,236,66,255,1,255,7,255,253,192,48,255,19,69,217,1,3,214,0,255,64,101,146,1,223,125,35,255,235,73,179,255,249,167,226,0,225,175,10,1,97,162,58,0,106,112,171,1,84,172,5,255,133,140,178,255,134,245,142,0,97,90,125,255,186,203,185,255,223,77,23,255,192,92,106,0,15,198,115,255,217,152,248,0,171,178,120,255,228,134,53,0,176,54,193,1,250,251,53,0,213,10,100,1,34,199,106,0,151,31,244,254,172,224,87,255,14,237,23,255,253,85,26,255,127,39,116,255,172,104,100,0,251,14,70,255,212,208,138,255,253,211,250,0,176,49,165,0,15,76,123,255,37,218,160,255,92,135,16,1,10,126,114,255,70,5,224,255,247,249,141,0,68,20,60,1,241,210,189,255,195,217,187,1,151,3,113,0,151,92,174,0,231,62,178,255,219,183,225,0,23,23,33,255,205,181,80,0,57,184,248,255,67,180,1,255,90,123,93,255,39,0,162,255,96,248,52,255,84,66,140,0,34,127,228,255,194,138,7,1,166,110,188,0,21,17,155,1,154,190,198,255,214,80,59,255,18,7,143,0,72,29,226,1,199,217,249,0,232,161,71,1,149,190,201,0,217,175,95,254,113,147,67,255,138,143,199,255,127,204,1,0,29,182,83,1,206,230,155,255,186,204,60,0,10,125,85,255,232,96,25,255,255,89,247,255,213,254,175,1,232,193,81,0,28,43,156,254,12,69,8,0,147,24,248,0,18,198,49,0,134,60,35,0,118,246,18,255,49,88,254,254,228,21,186,255,182,65,112,1,219,22,1,255,22,126,52,255,189,53,49,255,112,25,143,0,38,127,55,255,226,101,163,254,208,133,61,255,137,69,174,1,190,118,145,255,60,98,219,255,217,13,245,255,250,136,10,0,84,254,226,0,201,31,125,1,240,51,251,255,31,131,130,255,2,138,50,255,215,215,177,1,223,12,238,255,252,149,56,255,124,91,68,255,72,126,170,254,119,255,100,0,130,135,232,255,14,79,178,0,250,131,197,0,138,198,208,0,121,216,139,254,119,18,36,255,29,193,122,0,16,42,45,255,213,240,235,1,230,190,169,255,198,35,228,254,110,173,72,0,214,221,241,255,56,148,135,0,192,117,78,254,141,93,207,255,143,65,149,0,21,18,98,255,95,44,244,1,106,191,77,0,254,85,8,254,214,110,176,255,73,173,19,254,160,196,199,255,237,90,144,0,193,172,113,255,200,155,136,254,228,90,221,0,137,49,74,1,164,221,215,255,209,189,5,255,105,236,55,255,42,31,129,1,193,255,236,0,46,217,60,0,138,88,187,255,226,82,236,255,81,69,151,255,142,190,16,1,13,134,8,0,127,122,48,255,81,64,156,0,171,243,139,0,237,35,246,0,122,143,193,254,212,122,146,0,95,41,255,1,87,132,77,0,4,212,31,0,17,31,78,0,39,45,173,254,24,142,217,255,95,9,6,255,227,83,6,0,98,59,130,254,62,30,33,0,8,115,211,1,162,97,128,255,7,184,23,254,116,28,168,255,248,138,151,255,98,244,240,0,186,118,130,0,114,248,235,255,105,173,200,1,160,124,71,255,94,36,164,1,175,65,146,255,238,241,170,254,202,198,197,0,228,71,138,254,45,246,109,255,194,52,158,0,133,187,176,0,83,252,154,254,89,189,221,255,170,73,252,0,148,58,125,0,36,68,51,254,42,69,177,255,168,76,86,255,38,100,204,255,38,53,35,0,175,19,97,0,225,238,253,255,81,81,135,0,210,27,255,254,235,73,107,0,8,207,115,0,82,127,136,0,84,99,21,254,207,19,136,0,100,164,101,0,80,208,77,255,132,207,237,255,15,3,15,255,33,166,110,0,156,95,85,255,37,185,111,1,150,106,35,255,166,151,76,0,114,87,135,255,159,194,64,0,12,122,31,255,232,7,101,254,173,119,98,0,154,71,220,254,191,57,53,255,168,232,160,255,224,32,99,255,218,156,165,0,151,153,163,0,217,13,148,1,197,113,89,0,149,28,161,254,207,23,30,0,105,132,227,255,54,230,94,255,133,173,204,255,92,183,157,255,88,144,252,254,102,33,90,0,159,97,3,0,181,218,155,255,240,114,119,0,106,214,53,255,165,190,115,1,152,91,225,255,88,106,44,255,208,61,113,0,151,52,124,0,191,27,156,255,110,54,236,1,14,30,166,255,39,127,207,1,229,199,28,0,188,228,188,254,100,157,235,0,246,218,183,1,107,22,193,255,206,160,95,0,76,239,147,0,207,161,117,0,51,166,2,255,52,117,10,254,73,56,227,255,152,193,225,0,132,94,136,255,101,191,209,0,32,107,229,255,198,43,180,1,100,210,118,0,114,67,153,255,23,88,26,255,89,154,92,1,220,120,140,255,144,114,207,255,252,115,250,255,34,206,72,0,138,133,127,255,8,178,124,1,87,75,97,0,15,229,92,254,240,67,131,255,118,123,227,254,146,120,104,255,145,213,255,1,129,187,70,255,219,119,54,0,1,19,173,0,45,150,148,1,248,83,72,0,203,233,169,1,142,107,56,0,247,249,38,1,45,242,80,255,30,233,103,0,96,82,70,0,23,201,111,0,81,39,30,255,161,183,78,255,194,234,33,255,68,227,140,254,216,206,116,0,70,27,235,255,104,144,79,0,164,230,93,254,214,135,156,0,154,187,242,254,188,20,131,255,36,109,174,0,159,112,241,0,5,110,149,1,36,165,218,0,166,29,19,1,178,46,73,0,93,43,32,254,248,189,237,0,102,155,141,0,201,93,195,255,241,139,253,255,15,111,98,255,108,65,163,254,155,79,190,255,73,174,193,254,246,40,48,255,107,88,11,254,202,97,85,255,253,204,18,255,113,242,66,0,110,160,194,254,208,18,186,0,81,21,60,0,188,104,167,255,124,166,97,254,210,133,142,0,56,242,137,254,41,111,130,0,111,151,58,1,111,213,141,255,183,172,241,255,38,6,196,255,185,7,123,255,46,11,246,0,245,105,119,1,15,2,161,255,8,206,45,255,18,202,74,255,83,124,115,1,212,141,157,0,83,8,209,254,139,15,232,255,172,54,173,254,50,247,132,0,214,189,213,0,144,184,105,0,223,254,248,0,255,147,240,255,23,188,72,0,7,51,54,0,188,25,180,254,220,180,0,255,83,160,20,0,163,189,243,255,58,209,194,255,87,73,60,0,106,24,49,0,245,249,220,0,22,173,167,0,118,11,195,255,19,126,237,0,110,159,37,255,59,82,47,0,180,187,86,0,188,148,208,1,100,37,133,255,7,112,193,0,129,188,156,255,84,106,129,255,133,225,202,0,14,236,111,255,40,20,101,0,172,172,49,254,51,54,74,255,251,185,184,255,93,155,224,255,180,249,224,1,230,178,146,0,72,57,54,254,178,62,184,0,119,205,72,0,185,239,253,255,61,15,218,0,196,67,56,255,234,32,171,1,46,219,228,0,208,108,234,255,20,63,232,255,165,53,199,1,133,228,5,255,52,205,107,0,74,238,140,255,150,156,219,254,239,172,178,255,251,189,223,254,32,142,211,255,218,15,138,1,241,196,80,0,28,36,98,254,22,234,199,0,61,237,220,255,246,57,37,0,142,17,142,255,157,62,26,0,43,238,95,254,3,217,6,255,213,25,240,1,39,220,174,255,154,205,48,254,19,13,192,255,244,34,54,254,140,16,155,0,240,181,5,254,155,193,60,0,166,128,4,255,36,145,56,255,150,240,219,0,120,51,145,0,82,153,42,1,140,236,146,0,107,92,248,1,189,10,3,0,63,136,242,0,211,39,24,0,19,202,161,1,173,27,186,255,210,204,239,254,41,209,162,255,182,254,159,255,172,116,52,0,195,103,222,254,205,69,59,0,53,22,41,1,218,48,194,0,80,210,242,0,210,188,207,0,187,161,161,254,216,17,1,0,136,225,113,0,250,184,63,0,223,30,98,254,77,168,162,0,59,53,175,0,19,201,10,255,139,224,194,0,147,193,154,255,212,189,12,254,1,200,174,255,50,133,113,1,94,179,90,0,173,182,135,0,94,177,113,0,43,89,215,255,136,252,106,255,123,134,83,254,5,245,66,255,82,49,39,1,220,2,224,0,97,129,177,0,77,59,89,0,61,29,155,1,203,171,220,255,92,78,139,0,145,33,181,255,169,24,141,1,55,150,179,0,139,60,80,255,218,39,97,0,2,147,107,255,60,248,72,0,173,230,47,1,6,83,182,255,16,105,162,254,137,212,81,255,180,184,134,1,39,222,164,255,221,105,251,1,239,112,125,0,63,7,97,0,63,104,227,255,148,58,12,0,90,60,224,255,84,212,252,0,79,215,168,0,248,221,199,1,115,121,1,0,36,172,120,0,32,162,187,255,57,107,49,255,147,42,21,0,106,198,43,1,57,74,87,0,126,203,81,255,129,135,195,0,140,31,177,0,221,139,194,0,3,222,215,0,131,68,231,0,177,86,178,254,124,151,180,0,184,124,38,1,70,163,17,0,249,251,181,1,42,55,227,0,226,161,44,0,23,236,110,0,51,149,142,1,93,5,236,0,218,183,106,254,67,24,77,0,40,245,209,255,222,121,153,0,165,57,30,0,83,125,60,0,70,38,82,1,229,6,188,0,109,222,157,255,55,118,63,255,205,151,186,0,227,33,149,255,254,176,246,1,227,177,227,0,34,106,163,254,176,43,79,0,106,95,78,1,185,241,122,255,185,14,61,0,36,1,202,0,13,178,162,255,247,11,132,0,161,230,92,1,65,1,185,255,212,50,165,1,141,146,64,255,158,242,218,0,21,164,125,0,213,139,122,1,67,71,87,0,203,158,178,1,151,92,43,0,152,111,5,255,39,3,239,255,217,255,250,255,176,63,71,255,74,245,77,1,250,174,18,255,34,49,227,255,246,46,251,255,154,35,48,1,125,157,61,255,106,36,78,255,97,236,153,0,136,187,120,255,113,134,171,255,19,213,217,254,216,94,209,255,252,5,61,0,94,3,202,0,3,26,183,255,64,191,43,255,30,23,21,0,129,141,77,255,102,120,7,1,194,76,140,0,188,175,52,255,17,81,148,0,232,86,55,1,225,48,172,0,134,42,42,255,238,50,47,0,169,18,254,0,20,147,87,255,14,195,239,255,69,247,23,0,238,229,128,255,177,49,112,0,168,98,251,255,121,71,248,0,243,8,145,254,246,227,153,255,219,169,177,254,251,139,165,255,12,163,185,255,164,40,171,255,153,159,27,254,243,109,91,255,222,24,112,1,18,214,231,0,107,157,181,254,195,147,0,255,194,99,104,255,89,140,190,255,177,66,126,254,106,185,66,0,49,218,31,0,252,174,158,0,188,79,230,1,238,41,224,0,212,234,8,1,136,11,181,0,166,117,83,255,68,195,94,0,46,132,201,0,240,152,88,0,164,57,69,254,160,224,42,255,59,215,67,255,119,195,141,255,36,180,121,254,207,47,8,255,174,210,223,0,101,197,68,255,255,82,141,1,250,137,233,0,97,86,133,1,16,80,69,0,132,131,159,0,116,93,100,0,45,141,139,0,152,172,157,255,90,43,91,0,71,153,46,0,39,16,112,255,217,136,97,255,220,198,25,254,177,53,49,0,222,88,134,255,128,15,60,0,207,192,169,255,192,116,209,255,106,78,211,1,200,213,183,255,7,12,122,254,222,203,60,255,33,110,199,254,251,106,117,0,228,225,4,1,120,58,7,255,221,193,84,254,112,133,27,0,189,200,201,255,139,135,150,0,234,55,176,255,61,50,65,0,152,108,169,255,220,85,1,255,112,135,227,0,162,26,186,0,207,96,185,254,244,136,107,0,93,153,50,1,198,97,151,0,110,11,86,255,143,117,174,255,115,212,200,0,5,202,183,0,237,164,10,254,185,239,62,0,236,120,18,254,98,123,99,255,168,201,194,254,46,234,214,0,191,133,49,255,99,169,119,0,190,187,35,1,115,21,45,255,249,131,72,0,112,6,123,255,214,49,181,254,166,233,34,0,92,197,102,254,253,228,205,255,3,59,201,1,42,98,46,0,219,37,35,255,169,195,38,0,94,124,193,1,156,43,223,0,95,72,133,254,120,206,191,0,122,197,239,255,177,187,79,255,254,46,2,1,250,167,190,0,84,129,19,0,203,113,166,255,249,31,189,254,72,157,202,255,208,71,73,255,207,24,72,0,10,16,18,1,210,81,76,255,88,208,192,255,126,243,107,255,238,141,120,255,199,121,234,255,137,12,59,255,36,220,123,255,148,179,60,254,240,12,29,0,66,0,97,1,36,30,38,255,115,1,93,255,96,103,231,255,197,158,59,1,192,164,240,0,202,202,57,255,24,174,48,0,89,77,155,1,42,76,215,0,244,151,233,0,23,48,81,0,239,127,52,254,227,130,37,255,248,116,93,1,124,132,118,0,173,254,192,1,6,235,83,255,110,175,231,1,251,28,182,0,129,249,93,254,84,184,128,0,76,181,62,0,175,128,186,0,100,53,136,254,109,29,226,0,221,233,58,1,20,99,74,0,0,22,160,0,134,13,21,0,9,52,55,255,17,89,140,0,175,34,59,0,84,165,119,255,224,226,234,255,7,72,166,255,123,115,255,1,18,214,246,0,250,7,71,1,217,220,185,0,212,35,76,255,38,125,175,0,189,97,210,0,114,238,44,255,41,188,169,254,45,186,154,0,81,92,22,0,132,160,193,0,121,208,98,255,13,81,44,255,203,156,82,0,71,58,21,255,208,114,191,254,50,38,147,0,154,216,195,0,101,25,18,0,60,250,215,255,233,132,235,255,103,175,142,1,16,14,92,0,141,31,110,254,238,241,45,255,153,217,239,1,97,168,47,255,249,85,16,1,28,175,62,255],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE);allocate([57,254,54,0,222,231,126,0,166,45,117,254,18,189,96,255,228,76,50,0,200,244,94,0,198,152,120,1,68,34,69,255,12,65,160,254,101,19,90,0,167,197,120,255,68,54,185,255,41,218,188,0,113,168,48,0,88,105,189,1,26,82,32,255,185,93,164,1,228,240,237,255,66,182,53,0,171,197,92,255,107,9,233,1,199,120,144,255,78,49,10,255,109,170,105,255,90,4,31,255,28,244,113,255,74,58,11,0,62,220,246,255,121,154,200,254,144,210,178,255,126,57,129,1,43,250,14,255,101,111,28,1,47,86,241,255,61,70,150,255,53,73,5,255,30,26,158,0,209,26,86,0,138,237,74,0,164,95,188,0,142,60,29,254,162,116,248,255,187,175,160,0,151,18,16,0,209,111,65,254,203,134,39,255,88,108,49,255,131,26,71,255,221,27,215,254,104,105,93,255,31,236,31,254,135,0,211,255,143,127,110,1,212,73,229,0,233,67,167,254,195,1,208,255,132,17,221,255,51,217,90,0,67,235,50,255,223,210,143,0,179,53,130,1,233,106,198,0,217,173,220,255,112,229,24,255,175,154,93,254,71,203,246,255,48,66,133,255,3,136,230,255,23,221,113,254,235,111,213,0,170,120,95,254,251,221,2,0,45,130,158,254,105,94,217,255,242,52,180,254,213,68,45,255,104,38,28,0,244,158,76,0,161,200,96,255,207,53,13,255,187,67,148,0,170,54,248,0,119,162,178,255,83,20,11,0,42,42,192,1,146,159,163,255,183,232,111,0,77,229,21,255,71,53,143,0,27,76,34,0,246,136,47,255,219,39,182,255,92,224,201,1,19,142,14,255,69,182,241,255,163,118,245,0,9,109,106,1,170,181,247,255,78,47,238,255,84,210,176,255,213,107,139,0,39,38,11,0,72,21,150,0,72,130,69,0,205,77,155,254,142,133,21,0,71,111,172,254,226,42,59,255,179,0,215,1,33,128,241,0,234,252,13,1,184,79,8,0,110,30,73,255,246,141,189,0,170,207,218,1,74,154,69,255,138,246,49,255,155,32,100,0,125,74,105,255,90,85,61,255,35,229,177,255,62,125,193,255,153,86,188,1,73,120,212,0,209,123,246,254,135,209,38,255,151,58,44,1,92,69,214,255,14,12,88,255,252,153,166,255,253,207,112,255,60,78,83,255,227,124,110,0,180,96,252,255,53,117,33,254,164,220,82,255,41,1,27,255,38,164,166,255,164,99,169,254,61,144,70,255,192,166,18,0,107,250,66,0,197,65,50,0,1,179,18,255,255,104,1,255,43,153,35,255,80,111,168,0,110,175,168,0,41,105,45,255,219,14,205,255,164,233,140,254,43,1,118,0,233,67,195,0,178,82,159,255,138,87,122,255,212,238,90,255,144,35,124,254,25,140,164,0,251,215,44,254,133,70,107,255,101,227,80,254,92,169,55,0,215,42,49,0,114,180,85,255,33,232,27,1,172,213,25,0,62,176,123,254,32,133,24,255,225,191,62,0,93,70,153,0,181,42,104,1,22,191,224,255,200,200,140,255,249,234,37,0,149,57,141,0,195,56,208,255,254,130,70,255,32,173,240,255,29,220,199,0,110,100,115,255,132,229,249,0,228,233,223,255,37,216,209,254,178,177,209,255,183,45,165,254,224,97,114,0,137,97,168,255,225,222,172,0,165,13,49,1,210,235,204,255,252,4,28,254,70,160,151,0,232,190,52,254,83,248,93,255,62,215,77,1,175,175,179,255,160,50,66,0,121,48,208,0,63,169,209,255,0,210,200,0,224,187,44,1,73,162,82,0,9,176,143,255,19,76,193,255,29,59,167,1,24,43,154,0,28,190,190,0,141,188,129,0,232,235,203,255,234,0,109,255,54,65,159,0,60,88,232,255,121,253,150,254,252,233,131,255,198,110,41,1,83,77,71,255,200,22,59,254,106,253,242,255,21,12,207,255,237,66,189,0,90,198,202,1,225,172,127,0,53,22,202,0,56,230,132,0,1,86,183,0,109,190,42,0,243,68,174,1,109,228,154,0,200,177,122,1,35,160,183,255,177,48,85,255,90,218,169,255,248,152,78,0,202,254,110,0,6,52,43,0,142,98,65,255,63,145,22,0,70,106,93,0,232,138,107,1,110,179,61,255,211,129,218,1,242,209,92,0,35,90,217,1,182,143,106,255,116,101,217,255,114,250,221,255,173,204,6,0,60,150,163,0,73,172,44,255,239,110,80,255,237,76,153,254,161,140,249,0,149,232,229,0,133,31,40,255,174,164,119,0,113,51,214,0,129,228,2,254,64,34,243,0,107,227,244,255,174,106,200,255,84,153,70,1,50,35,16,0,250,74,216,254,236,189,66,255,153,249,13,0,230,178,4,255,221,41,238,0,118,227,121,255,94,87,140,254,254,119,92,0,73,239,246,254,117,87,128,0,19,211,145,255,177,46,252,0,229,91,246,1,69,128,247,255,202,77,54,1,8,11,9,255,153,96,166,0,217,214,173,255,134,192,2,1,0,207,0,0,189,174,107,1,140,134,100,0,158,193,243,1,182,102,171,0,235,154,51,0,142,5,123,255,60,168,89,1,217,14,92,255,19,214,5,1,211,167,254,0,44,6,202,254,120,18,236,255,15,113,184,255,184,223,139,0,40,177,119,254,182,123,90,255,176,165,176,0,247,77,194,0,27,234,120,0,231,0,214,255,59,39,30,0,125,99,145,255,150,68,68,1,141,222,248,0,153,123,210,255,110,127,152,255,229,33,214,1,135,221,197,0,137,97,2,0,12,143,204,255,81,41,188,0,115,79,130,255,94,3,132,0,152,175,187,255,124,141,10,255,126,192,179,255,11,103,198,0,149,6,45,0,219,85,187,1,230,18,178,255,72,182,152,0,3,198,184,255,128,112,224,1,97,161,230,0,254,99,38,255,58,159,197,0,151,66,219,0,59,69,143,255,185,112,249,0,119,136,47,255,123,130,132,0,168,71,95,255,113,176,40,1,232,185,173,0,207,93,117,1,68,157,108,255,102,5,147,254,49,97,33,0,89,65,111,254,247,30,163,255,124,217,221,1,102,250,216,0,198,174,75,254,57,55,18,0,227,5,236,1,229,213,173,0,201,109,218,1,49,233,239,0,30,55,158,1,25,178,106,0,155,111,188,1,94,126,140,0,215,31,238,1,77,240,16,0,213,242,25,1,38,71,168,0,205,186,93,254,49,211,140,255,219,0,180,255,134,118,165,0,160,147,134,255,110,186,35,255,198,243,42,0,243,146,119,0,134,235,163,1,4,241,135,255,193,46,193,254,103,180,79,255,225,4,184,254,242,118,130,0,146,135,176,1,234,111,30,0,69,66,213,254,41,96,123,0,121,94,42,255,178,191,195,255,46,130,42,0,117,84,8,255,233,49,214,254,238,122,109,0,6,71,89,1,236,211,123,0,244,13,48,254,119,148,14,0,114,28,86,255,75,237,25,255,145,229,16,254,129,100,53,255,134,150,120,254,168,157,50,0,23,72,104,255,224,49,14,0,255,123,22,255,151,185,151,255,170,80,184,1,134,182,20,0,41,100,101,1,153,33,16,0,76,154,111,1,86,206,234,255,192,160,164,254,165,123,93,255,1,216,164,254,67,17,175,255,169,11,59,255,158,41,61,255,73,188,14,255,195,6,137,255,22,147,29,255,20,103,3,255,246,130,227,255,122,40,128,0,226,47,24,254,35,36,32,0,152,186,183,255,69,202,20,0,195,133,195,0,222,51,247,0,169,171,94,1,183,0,160,255,64,205,18,1,156,83,15,255,197,58,249,254,251,89,110,255,50,10,88,254,51,43,216,0,98,242,198,1,245,151,113,0,171,236,194,1,197,31,199,255,229,81,38,1,41,59,20,0,253,104,230,0,152,93,14,255,246,242,146,254,214,169,240,255,240,102,108,254,160,167,236,0,154,218,188,0,150,233,202,255,27,19,250,1,2,71,133,255,175,12,63,1,145,183,198,0,104,120,115,255,130,251,247,0,17,212,167,255,62,123,132,255,247,100,189,0,155,223,152,0,143,197,33,0,155,59,44,255,150,93,240,1,127,3,87,255,95,71,207,1,167,85,1,255,188,152,116,255,10,23,23,0,137,195,93,1,54,98,97,0,240,0,168,255,148,188,127,0,134,107,151,0,76,253,171,0,90,132,192,0,146,22,54,0,224,66,54,254,230,186,229,255,39,182,196,0,148,251,130,255,65,131,108,254,128,1,160,0,169,49,167,254,199,254,148,255,251,6,131,0,187,254,129,255,85,82,62,0,178,23,58,255,254,132,5,0,164,213,39,0,134,252,146,254,37,53,81,255,155,134,82,0,205,167,238,255,94,45,180,255,132,40,161,0,254,111,112,1,54,75,217,0,179,230,221,1,235,94,191,255,23,243,48,1,202,145,203,255,39,118,42,255,117,141,253,0,254,0,222,0,43,251,50,0,54,169,234,1,80,68,208,0,148,203,243,254,145,7,135,0,6,254,0,0,252,185,127,0,98,8,129,255,38,35,72,255,211,36,220,1,40,26,89,0,168,64,197,254,3,222,239,255,2,83,215,254,180,159,105,0,58,115,194,0,186,116,106,255,229,247,219,255,129,118,193,0,202,174,183,1,166,161,72,0,201,107,147,254,237,136,74,0,233,230,106,1,105,111,168,0,64,224,30,1,1,229,3,0,102,151,175,255,194,238,228,255,254,250,212,0,187,237,121,0,67,251,96,1,197,30,11,0,183,95,204,0,205,89,138,0,64,221,37,1,255,223,30,255,178,48,211,255,241,200,90,255,167,209,96,255,57,130,221,0,46,114,200,255,61,184,66,0,55,182,24,254,110,182,33,0,171,190,232,255,114,94,31,0,18,221,8,0,47,231,254,0,255,112,83,0,118,15,215,255,173,25,40,254,192,193,31,255,238,21,146,255,171,193,118,255,101,234,53,254,131,212,112,0,89,192,107,1,8,208,27,0,181,217,15,255,231,149,232,0,140,236,126,0,144,9,199,255,12,79,181,254,147,182,202,255,19,109,182,255,49,212,225,0,74,163,203,0,175,233,148,0,26,112,51,0,193,193,9,255,15,135,249,0,150,227,130,0,204,0,219,1,24,242,205,0,238,208,117,255,22,244,112,0,26,229,34,0,37,80,188,255,38,45,206,254,240,90,225,255,29,3,47,255,42,224,76,0,186,243,167,0,32,132,15,255,5,51,125,0,139,135,24,0,6,241,219,0,172,229,133,255,246,214,50,0,231,11,207,255,191,126,83,1,180,163,170,255,245,56,24,1,178,164,211,255,3,16,202,1,98,57,118,255,141,131,89,254,33,51,24,0,243,149,91,255,253,52,14,0,35,169,67,254,49,30,88,255,179,27,36,255,165,140,183,0,58,189,151,0,88,31,0,0,75,169,66,0,66,101,199,255,24,216,199,1,121,196,26,255,14,79,203,254,240,226,81,255,94,28,10,255,83,193,240,255,204,193,131,255,94,15,86,0,218,40,157,0,51,193,209,0,0,242,177,0,102,185,247,0,158,109,116,0,38,135,91,0,223,175,149,0,220,66,1,255,86,60,232,0,25,96,37,255,225,122,162,1,215,187,168,255,158,157,46,0,56,171,162,0,232,240,101,1,122,22,9,0,51,9,21,255,53,25,238,255,217,30,232,254,125,169,148,0,13,232,102,0,148,9,37,0,165,97,141,1,228,131,41,0,222,15,243,255,254,18,17,0,6,60,237,1,106,3,113,0,59,132,189,0,92,112,30,0,105,208,213,0,48,84,179,255,187,121,231,254,27,216,109,255,162,221,107,254,73,239,195,255,250,31,57,255,149,135,89,255,185,23,115,1,3,163,157,255,18,112,250,0,25,57,187,255,161,96,164,0,47,16,243,0,12,141,251,254,67,234,184,255,41,18,161,0,175,6,96,255,160,172,52,254,24,176,183,255,198,193,85,1,124,121,137,255,151,50,114,255,220,203,60,255,207,239,5,1,0,38,107,255,55,238,94,254,70,152,94,0,213,220,77,1,120,17,69,255,85,164,190,255,203,234,81,0,38,49,37,254,61,144,124,0,137,78,49,254,168,247,48,0,95,164,252,0,105,169,135,0,253,228,134,0,64,166,75,0,81,73,20,255,207,210,10,0,234,106,150,255,94,34,90,255,254,159,57,254,220,133,99,0,139,147,180,254,24,23,185,0,41,57,30,255,189,97,76,0,65,187,223,255,224,172,37,255,34,62,95,1,231,144,240,0,77,106,126,254,64,152,91,0,29,98,155,0,226,251,53,255,234,211,5,255,144,203,222,255,164,176,221,254,5,231,24,0,179,122,205,0,36,1,134,255,125,70,151,254,97,228,252,0,172,129,23,254,48,90,209,255,150,224,82,1,84,134,30,0,241,196,46,0,103,113,234,255,46,101,121,254,40,124,250,255,135,45,242,254,9,249,168,255,140,108,131,255,143,163,171,0,50,173,199,255,88,222,142,255,200,95,158,0,142,192,163,255,7,117,135,0,111,124,22,0,236,12,65,254,68,38,65,255,227,174,254,0,244,245,38,0,240,50,208,255,161,63,250,0,60,209,239,0,122,35,19,0,14,33,230,254,2,159,113,0,106,20,127,255,228,205,96,0,137,210,174,254,180,212,144,255,89,98,154,1,34,88,139,0,167,162,112,1,65,110,197,0,241,37,169,0,66,56,131,255,10,201,83,254,133,253,187,255,177,112,45,254,196,251,0,0,196,250,151,255,238,232,214,255,150,209,205,0,28,240,118,0,71,76,83,1,236,99,91,0,42,250,131,1,96,18,64,255,118,222,35,0,113,214,203,255,122,119,184,255,66,19,36,0,204,64,249,0,146,89,139,0,134,62,135,1,104,233,101,0,188,84,26,0,49,249,129,0,208,214,75,255,207,130,77,255,115,175,235,0,171,2,137,255,175,145,186,1,55,245,135,255,154,86,181,1,100,58,246,255,109,199,60,255,82,204,134,255,215,49,230,1,140,229,192,255,222,193,251,255,81,136,15,255,179,149,162,255,23,39,29,255,7,95,75,254,191,81,222,0,241,81,90,255,107,49,201,255,244,211,157,0,222,140,149,255,65,219,56,254,189,246,90,255,178,59,157,1,48,219,52,0,98,34,215,0,28,17,187,255,175,169,24,0,92,79,161,255,236,200,194,1,147,143,234,0,229,225,7,1,197,168,14,0,235,51,53,1,253,120,174,0,197,6,168,255,202,117,171,0,163,21,206,0,114,85,90,255,15,41,10,255,194,19,99,0,65,55,216,254,162,146,116,0,50,206,212,255,64,146,29,255,158,158,131,1,100,165,130,255,172,23,129,255,125,53,9,255,15,193,18,1,26,49,11,255,181,174,201,1,135,201,14,255,100,19,149,0,219,98,79,0,42,99,143,254,96,0,48,255,197,249,83,254,104,149,79,255,235,110,136,254,82,128,44,255,65,41,36,254,88,211,10,0,187,121,187,0,98,134,199,0,171,188,179,254,210,11,238,255,66,123,130,254,52,234,61,0,48,113,23,254,6,86,120,255,119,178,245,0,87,129,201,0,242,141,209,0,202,114,85,0,148,22,161,0,103,195,48,0,25,49,171,255,138,67,130,0,182,73,122,254,148,24,130,0,211,229,154,0,32,155,158,0,84,105,61,0,177,194,9,255,166,89,86,1,54,83,187,0,249,40,117,255,109,3,215,255,53,146,44,1,63,47,179,0,194,216,3,254,14,84,136,0,136,177,13,255,72,243,186,255,117,17,125,255,211,58,211,255,93,79,223,0,90,88,245,255,139,209,111,255,70,222,47,0,10,246,79,255,198,217,178,0,227,225,11,1,78,126,179,255,62,43,126,0,103,148,35,0,129,8,165,254,245,240,148,0,61,51,142,0,81,208,134,0,15,137,115,255,211,119,236,255,159,245,248,255,2,134,136,255,230,139,58,1,160,164,254,0,114,85,141,255,49,166,182,255,144,70,84,1,85,182,7,0,46,53,93,0,9,166,161,255,55,162,178,255,45,184,188,0,146,28,44,254,169,90,49,0,120,178,241,1,14,123,127,255,7,241,199,1,189,66,50,255,198,143,101,254,189,243,135,255,141,24,24,254,75,97,87,0,118,251,154,1,237,54,156,0,171,146,207,255,131,196,246,255,136,64,113,1,151,232,57,0,240,218,115,0,49,61,27,255,64,129,73,1,252,169,27,255,40,132,10,1,90,201,193,255,252,121,240,1,186,206,41,0,43,198,97,0,145,100,183,0,204,216,80,254,172,150,65,0,249,229,196,254,104,123,73,255,77,104,96,254,130,180,8,0,104,123,57,0,220,202,229,255,102,249,211,0,86,14,232,255,182,78,209,0,239,225,164,0,106,13,32,255,120,73,17,255,134,67,233,0,83,254,181,0,183,236,112,1,48,64,131,255,241,216,243,255,65,193,226,0,206,241,100,254,100,134,166,255,237,202,197,0,55,13,81,0,32,124,102,255,40,228,177,0,118,181,31,1,231,160,134,255,119,187,202,0,0,142,60,255,128,38,189,255,166,201,150,0,207,120,26,1,54,184,172,0,12,242,204,254,133,66,230,0,34,38,31,1,184,112,80,0,32,51,165,254,191,243,55,0,58,73,146,254,155,167,205,255,100,104,152,255,197,254,207,255,173,19,247,0,238,10,202,0,239,151,242,0,94,59,39,255,240,29,102,255,10,92,154,255,229,84,219,255,161,129,80,0,208,90,204,1,240,219,174,255,158,102,145,1,53,178,76,255,52,108,168,1,83,222,107,0,211,36,109,0,118,58,56,0,8,29,22,0,237,160,199,0,170,209,157,0,137,71,47,0,143,86,32,0,198,242,2,0,212,48,136,1,92,172,186,0,230,151,105,1,96,191,229,0,138,80,191,254,240,216,130,255,98,43,6,254,168,196,49,0,253,18,91,1,144,73,121,0,61,146,39,1,63,104,24,255,184,165,112,254,126,235,98,0,80,213,98,255,123,60,87,255,82,140,245,1,223,120,173,255,15,198,134,1,206,60,239,0,231,234,92,255,33,238,19,255,165,113,142,1,176,119,38,0,160,43,166,254,239,91,105,0,107,61,194,1,25,4,68,0,15,139,51,0,164,132,106,255,34,116,46,254,168,95,197,0,137,212,23,0,72,156,58,0,137,112,69,254,150,105,154,255,236,201,157,0,23,212,154,255,136,82,227,254,226,59,221,255,95,149,192,0,81,118,52,255,33,43,215,1,14,147,75,255,89,156,121,254,14,18,79,0,147,208,139,1,151,218,62,255,156,88,8,1,210,184,98,255,20,175,123,255,102,83,229,0,220,65,116,1,150,250,4,255,92,142,220,255,34,247,66,255,204,225,179,254,151,81,151,0,71,40,236,255,138,63,62,0,6,79,240,255,183,185,181,0,118,50,27,0,63,227,192,0,123,99,58,1,50,224,155,255,17,225,223,254,220,224,77,255,14,44,123,1,141,128,175,0,248,212,200,0,150,59,183,255,147,97,29,0,150,204,181,0,253,37,71,0,145,85,119,0,154,200,186,0,2,128,249,255,83,24,124,0,14,87,143,0,168,51,245,1,124,151,231,255,208,240,197,1,124,190,185,0,48,58,246,0,20,233,232,0,125,18,98,255,13,254,31,255,245,177,130,255,108,142,35,0,171,125,242,254,140,12,34,255,165,161,162,0,206,205,101,0,247,25,34,1,100,145,57,0,39,70,57,0,118,204,203,255,242,0,162,0,165,244,30,0,198,116,226,0,128,111,153,255,140,54,182,1,60,122,15,255,155,58,57,1,54,50,198,0,171,211,29,255,107,138,167,255,173,107,199,255,109,161,193,0,89,72,242,255,206,115,89,255,250,254,142,254,177,202,94,255,81,89,50,0,7,105,66,255,25,254,255,254,203,64,23,255,79,222,108,255,39,249,75,0,241,124,50,0,239,152,133,0,221,241,105,0,147,151,98,0,213,161,121,254,242,49,137,0,233,37,249,254,42,183,27,0,184,119,230,255,217,32,163,255,208,251,228,1,137,62,131,255,79,64,9,254,94,48,113,0,17,138,50,254,193,255,22,0,247,18,197,1,67,55,104,0,16,205,95,255,48,37,66,0,55,156,63,1,64,82,74,255,200,53,71,254,239,67,125,0,26,224,222,0,223,137,93,255,30,224,202,255,9,220,132,0,198,38,235,1,102,141,86,0,60,43,81,1,136,28,26,0,233,36,8,254,207,242,148,0,164,162,63,0,51,46,224,255,114,48,79,255,9,175,226,0,222,3,193,255,47,160,232,255,255,93,105,254,14,42,230,0,26,138,82,1,208,43,244,0,27,39,38,255,98,208,127,255,64,149,182,255,5,250,209,0,187,60,28,254,49,25,218,255,169,116,205,255,119,18,120,0,156,116,147,255,132,53,109,255,13,10,202,0,110,83,167,0,157,219,137,255,6,3,130,255,50,167,30,255,60,159,47,255,129,128,157,254,94,3,189,0,3,166,68,0,83,223,215,0,150,90,194,1,15,168,65,0,227,83,51,255,205,171,66,255,54,187,60,1,152,102,45,255,119,154,225,0,240,247,136,0,100,197,178,255,139,71,223,255,204,82,16,1,41,206,42,255,156,192,221,255,216,123,244,255,218,218,185,255,187,186,239,255,252,172,160,255,195,52,22,0,144,174,181,254,187,100,115,255,211,78,176,255,27,7,193,0,147,213,104,255,90,201,10,255,80,123,66,1,22,33,186,0,1,7,99,254,30,206,10,0,229,234,5,0,53,30,210,0,138,8,220,254,71,55,167,0,72,225,86,1,118,190,188,0,254,193,101,1,171,249,172,255,94,158,183,254,93,2,108,255,176,93,76,255,73,99,79,255,74,64,129,254,246,46,65,0,99,241,127,254,246,151,102,255,44,53,208,254,59,102,234,0,154,175,164,255,88,242,32,0,111,38,1,0,255,182,190,255,115,176,15,254,169,60,129,0,122,237,241,0,90,76,63,0,62,74,120,255,122,195,110,0,119,4,178,0,222,242,210,0,130,33,46,254,156,40,41,0,167,146,112,1,49,163,111,255,121,176,235,0,76,207,14,255,3,25,198,1,41,235,213,0,85,36,214,1,49,92,109,255,200,24,30,254,168,236,195,0,145,39,124,1,236,195,149,0,90,36,184,255,67,85,170,255,38,35,26,254,131,124,68,255,239,155,35,255,54,201,164,0,196,22,117,255,49,15,205,0,24,224,29,1,126,113,144,0,117,21,182,0,203,159,141,0,223,135,77,0,176,230,176,255,190,229,215,255,99,37,181,255,51,21,138,255,25,189,89,255,49,48,165,254,152,45,247,0,170,108,222,0,80,202,5,0,27,69,103,254,204,22,129,255,180,252,62,254,210,1,91,255,146,110,254,255,219,162,28,0,223,252,213,1,59,8,33,0,206,16,244,0,129,211,48,0,107,160,208,0,112,59,209,0,109,77,216,254,34,21,185,255,246,99,56,255,179,139,19,255,185,29,50,255,84,89,19,0,74,250,98,255,225,42,200,255,192,217,205,255,210,16,167,0,99,132,95,1,43,230,57,0,254,11,203,255,99,188,63,255,119,193,251,254,80,105,54,0,232,181,189,1,183,69,112,255,208,171,165,255,47,109,180,255,123,83,165,0,146,162,52,255,154,11,4,255,151,227,90,255,146,137,97,254,61,233,41,255,94,42,55,255,108,164,236,0,152,68,254,0,10,140,131,255,10,106,79,254,243,158,137,0,67,178,66,254,177,123,198,255,15,62,34,0,197,88,42,255,149,95,177,255,152,0,198,255,149,254,113,255,225,90,163,255,125,217,247,0,18,17,224,0,128,66,120,254,192,25,9,255,50,221,205,0,49,212,70,0,233,255,164,0,2,209,9,0,221,52,219,254,172,224,244,255,94,56,206,1,242,179,2,255,31,91,164,1,230,46,138,255,189,230,220,0,57,47,61,255,111,11,157,0,177,91,152,0,28,230,98,0,97,87,126,0,198,89,145,255,167,79,107,0,249,77,160,1,29,233,230,255,150,21,86,254,60,11,193,0,151,37,36,254,185,150,243,255,228,212,83,1,172,151,180,0,201,169,155,0,244,60,234,0,142,235,4,1,67,218,60,0,192,113,75,1,116,243,207,255,65,172,155,0,81,30,156,255,80,72,33,254,18,231,109,255,142,107,21,254,125,26,132,255,176,16,59,255,150,201,58,0,206,169,201,0,208,121,226,0,40,172,14,255,150,61,94,255,56,57,156,255,141,60,145,255,45,108,149,255,238,145,155,255,209,85,31,254,192,12,210,0,99,98,93,254,152,16,151,0,225,185,220,0,141,235,44,255,160,172,21,254,71,26,31,255,13,64,93,254,28,56,198,0,177,62,248,1,182,8,241,0,166,101,148,255,78,81,133,255,129,222,215,1,188,169,129,255,232,7,97,0,49,112,60,255,217,229,251,0,119,108,138,0,39,19,123,254,131,49,235,0,132,84,145,0,130,230,148,255,25,74,187,0,5,245,54,255,185,219,241,1,18,194,228,255,241,202,102,0,105,113,202,0,155,235,79,0,21,9,178,255,156,1,239,0,200,148,61,0,115,247,210,255,49,221,135,0,58,189,8,1,35,46,9,0,81,65,5,255,52,158,185,255,125,116,46,255,74,140,13,255,210,92,172,254,147,23,71,0,217,224,253,254,115,108,180,255,145,58,48,254,219,177,24,255,156,255,60,1,154,147,242,0,253,134,87,0,53,75,229,0,48,195,222,255,31,175,50,255,156,210,120,255,208,35,222,255,18,248,179,1,2,10,101,255,157,194,248,255,158,204,101,255,104,254,197,255,79,62,4,0,178,172,101,1,96,146,251,255,65,10,156,0,2,137,165,255,116,4,231,0,242,215,1,0,19,35,29,255,43,161,79,0,59,149,246,1,251,66,176,0,200,33,3,255,80,110,142,255,195,161,17,1,228,56,66,255,123,47,145,254,132,4,164,0,67,174,172,0,25,253,114,0,87,97,87,1,250,220,84,0,96,91,200,255,37,125,59,0,19,65,118,0,161,52,241,255,237,172,6,255,176,191,255,255,1,65,130,254,223,190,230,0,101,253,231,255,146,35,109,0,250,29,77,1,49,0,19,0,123,90,155,1,22,86,32,255,218,213,65,0,111,93,127,0,60,93,169,255,8,127,182,0,17,186,14,254,253,137,246,255,213,25,48,254,76,238,0,255,248,92,70,255,99,224,139,0,184,9,255,1,7,164,208,0,205,131,198,1,87,214,199,0,130,214,95,0,221,149,222,0,23,38,171,254,197,110,213,0,43,115,140,254,215,177,118,0,96,52,66,1,117,158,237,0,14,64,182,255,46,63,174,255,158,95,190,255,225,205,177,255,43,5,142,255,172,99,212,255,244,187,147,0,29,51,153,255,228,116,24,254,30,101,207,0,19,246,150,255,134,231,5,0,125,134,226,1,77,65,98,0,236,130,33,255,5,110,62,0,69,108,127,255,7,113,22,0,145,20,83,254,194,161,231,255,131,181,60,0,217,209,177,255,229,148,212,254,3,131,184,0,117,177,187,1,28,14,31,255,176,102,80,0,50,84,151,255,125,31,54,255,21,157,133,255,19,179,139,1,224,232,26,0,34,117,170,255,167,252,171,255,73,141,206,254,129,250,35,0,72,79,236,1,220,229,20,255,41,202,173,255,99,76,238,255,198,22,224,255,108,198,195,255,36,141,96,1,236,158,59,255,106,100,87,0,110,226,2,0,227,234,222,0,154,93,119,255,74,112,164,255,67,91,2,255,21,145,33,255,102,214,137,255,175,230,103,254,163,246,166,0,93,247,116,254,167,224,28,255,220,2,57,1,171,206,84,0,123,228,17,255,27,120,119,0,119,11,147,1,180,47,225,255,104,200,185,254,165,2,114,0,77,78,212,0,45,154,177,255,24,196,121,254,82,157,182,0,90,16,190,1,12,147,197,0,95,239,152,255,11,235,71,0,86,146,119,255,172,134,214,0,60,131,196,0,161,225,129,0,31,130,120,254,95,200,51,0,105,231,210,255,58,9,148,255,43,168,221,255,124,237,142,0,198,211,50,254,46,245,103,0,164,248,84,0,152,70,208,255,180,117,177,0,70,79,185,0,243,74,32,0,149,156,207,0,197,196,161,1,245,53,239,0,15,93,246,254,139,240,49,255,196,88,36,255,162,38,123,0,128,200,157,1,174,76,103,255,173,169,34,254,216,1,171,255,114,51,17,0,136,228,194,0,110,150,56,254,106,246,159,0,19,184,79,255,150,77,240,255,155,80,162,0,0,53,169,255,29,151,86,0,68,94,16,0,92,7,110,254,98,117,149,255,249,77,230,255,253,10,140,0,214,124,92,254,35,118,235,0,89,48,57,1,22,53,166,0,184,144,61,255,179,255,194,0,214,248,61,254,59,110,246,0,121,21,81,254,166,3,228,0,106,64,26,255,69,232,134,255,242,220,53,254,46,220,85,0,113,149,247,255,97,179,103,255,190,127,11,0,135,209,182,0,95,52,129,1,170,144,206,255,122,200,204,255,168,100,146,0,60,144,149,254,70,60,40,0,122,52,177,255,246,211,101,255,174,237,8,0,7,51,120,0,19,31,173,0,126,239,156,255,143,189,203,0,196,128,88,255,233,133,226,255,30,125,173,255,201,108,50,0,123,100,59,255,254,163,3,1,221,148,181,255,214,136,57,254,222,180,137,255,207,88,54,255,28,33,251,255,67,214,52,1,210,208,100,0,81,170,94,0,145,40,53,0,224,111,231,254,35,28,244,255,226,199,195,254,238,17,230,0,217,217,164,254,169,157,221,0,218,46,162,1,199,207,163,255,108,115,162,1,14,96,187,255,118,60,76,0,184,159,152,0,209,231,71,254,42,164,186,255,186,153,51,254,221,171,182,255,162,142,173,0,235,47,193,0,7,139,16,1,95,164,64,255,16,221,166,0,219,197,16,0,132,29,44,255,100,69,117,255,60,235,88,254,40,81,173,0,71,190,61,255,187,88,157,0,231,11,23,0,237,117,164,0,225,168,223,255,154,114,116,255,163,152,242,1,24,32,170,0,125,98,113,254,168,19,76,0,17,157,220,254,155,52,5,0,19,111,161,255,71,90,252,255,173,110,240,0,10,198,121,255,253,255,240,255,66,123,210,0,221,194,215,254,121,163,17,255,225,7,99,0,190,49,182,0,115,9,133,1,232,26,138,255,213,68,132,0,44,119,122,255,179,98,51,0,149,90,106,0,71,50,230,255,10,153,118,255,177,70,25,0,165,87,205,0,55,138,234,0,238,30,97,0,113,155,207,0,98,153,127,0,34,107,219,254,117,114,172,255,76,180,255,254,242,57,179,255,221,34,172,254,56,162,49,255,83,3,255,255,113,221,189,255,188,25,228,254,16,88,89,255,71,28,198,254,22,17,149,255,243,121,254,255,107,202,99,255,9,206,14,1,220,47,153,0,107,137,39,1,97,49,194,255,149,51,197,254,186,58,11,255,107,43,232,1,200,6,14,255,181,133,65,254,221,228,171,255,123,62,231,1,227,234,179,255,34,189,212,254,244,187,249,0,190,13,80,1,130,89,1,0,223,133,173,0,9,222,198,255,66,127,74,0,167,216,93,255,155,168,198,1,66,145,0,0,68,102,46,1,172,90,154,0,216,128,75,255,160,40,51,0,158,17,27,1,124,240,49,0,236,202,176,255,151,124,192,255,38,193,190,0,95,182,61,0,163,147,124,255,255,165,51,255,28,40,17,254,215,96,78,0,86,145,218,254,31,36,202,255,86,9,5,0,111,41,200,255,237,108,97,0,57,62,44,0,117,184,15,1,45,241,116,0,152,1,220,255,157,165,188,0,250,15,131,1,60,44,125,255,65,220,251,255,75,50,184,0,53,90,128,255,231,80,194,255,136,129,127,1,21,18,187,255,45,58,161,255,71,147,34,0,174,249,11,254,35,141,29,0,239,68,177,255,115,110,58,0,238,190,177,1,87,245,166,255,190,49,247,255,146,83,184,255,173,14,39,255,146,215,104,0,142,223,120,0,149,200,155,255,212,207,145,1,16,181,217,0,173,32,87,255,255,35,181,0,119,223,161,1,200,223,94,255,70,6,186,255,192,67,85,255,50,169,152,0,144,26,123,255,56,243,179,254,20,68,136,0,39,140,188,254,253,208,5,255,200,115,135,1,43,172,229,255,156,104,187,0,151,251,167,0,52,135,23,0,151,153,72,0,147,197,107,254,148,158,5,255,238,143,206,0,126,153,137,255,88,152,197,254,7,68,167,0,252,159,165,255,239,78,54,255,24,63,55,255,38,222,94,0,237,183,12,255,206,204,210,0,19,39,246,254,30,74,231,0,135,108,29,1,179,115,0,0,117,118,116,1,132,6,252,255,145,129,161,1,105,67,141,0,82,37,226,255,238,226,228,255,204,214,129,254,162,123,100,255,185,121,234,0,45,108,231,0,66,8,56,255,132,136,128,0,172,224,66,254,175,157,188,0,230,223,226,254,242,219,69,0,184,14,119,1,82,162,56,0,114,123,20,0,162,103,85,255,49,239,99,254,156,135,215,0,111,255,167,254,39,196,214,0,144,38,79,1,249,168,125,0,155,97,156,255,23,52,219,255,150,22,144,0,44,149,165,255,40,127,183,0,196,77,233,255,118,129,210,255,170,135,230,255,214,119,198,0,233,240,35,0,253,52,7,255,117,102,48,255,21,204,154,255,179,136,177,255,23,2,3,1,149,130,89,255,252,17,159,1,70,60,26,0,144,107,17,0,180,190,60,255,56,182,59,255,110,71,54,255,198,18,129,255,149,224,87,255,223,21,152,255,138,22,182,255,250,156,205,0,236,45,208,255,79,148,242,1,101,70,209,0,103,78,174,0,101,144,172,255,152,136,237,1,191,194,136,0,113,80,125,1,152,4,141,0,155,150,53,255,196,116,245,0,239,114,73,254,19,82,17,255,124,125,234,255,40,52,191,0,42,210,158,255,155,132,165,0,178,5,42,1,64,92,40,255,36,85,77,255,178,228,118,0,137,66,96,254,115,226,66,0,110,240,69,254,151,111,80,0,167,174,236,255,227,108,107,255,188,242,65,255,183,81,255,0,57,206,181,255,47,34,181,255,213,240,158,1,71,75,95,0,156,40,24,255,102,210,81,0,171,199,228,255,154,34,41,0,227,175,75,0,21,239,195,0,138,229,95,1,76,192,49,0,117,123,87,1,227,225,130,0,125,62,63,255,2,198,171,0,254,36,13,254,145,186,206,0,148,255,244,255,35,0,166,0,30,150,219,1,92,228,212,0,92,198,60,254,62,133,200,255,201,41,59,0,125,238,109,255,180,163,238,1,140,122,82,0,9,22,88,255,197,157,47,255,153,94,57,0,88,30,182,0,84,161,85,0,178,146,124,0,166,166,7,255,21,208,223,0,156,182,242,0,155,121,185,0,83,156,174,254,154,16,118,255,186,83,232,1,223,58,121,255,29,23,88,0,35,125,127,255,170,5,149,254,164,12,130,255,155,196,29,0,161,96,136,0,7,35,29,1,162,37,251,0,3,46,242,255,0,217,188,0,57,174,226,1,206,233,2,0,57,187,136,254,123,189,9,255,201,117,127,255,186,36,204,0,231,25,216,0,80,78,105,0,19,134,129,255,148,203,68,0,141,81,125,254,248,165,200,255,214,144,135,0,151,55,166,255,38,235,91,0,21,46,154,0,223,254,150,255,35,153,180,255,125,176,29,1,43,98,30,255,216,122,230,255,233,160,12,0,57,185,12,254,240,113,7,255,5,9,16,254,26,91,108,0,109,198,203,0,8,147,40,0,129,134,228,255,124,186,40,255,114,98,132,254,166,132,23,0,99,69,44,0,9,242,238,255,184,53,59,0,132,129,102,255,52,32,243,254,147,223,200,255,123,83,179,254,135,144,201,255,141,37,56,1,151,60,227,255,90,73,156,1,203,172,187,0,80,151,47,255,94,137,231,255,36,191,59,255,225,209,181,255,74,215,213,254,6,118,179,255,153,54,193,1,50,0,231,0,104,157,72,1,140,227,154,255,182,226,16,254,96,225,92,255,115,20,170,254,6,250,78,0,248,75,173,255,53,89,6,255,0,180,118,0,72,173,1,0,64,8,206,1,174,133,223,0,185,62,133,255,214,11,98,0,197,31,208,0,171,167,244,255,22,231,181,1,150,218,185,0,247,169,97,1,165,139,247,255,47,120,149,1,103,248,51,0,60,69,28,254,25,179,196,0,124,7,218,254,58,107,81,0,184,233,156,255,252,74,36,0,118,188,67,0,141,95,53,255,222,94,165,254,46,61,53,0,206,59,115,255,47,236,250,255,74,5,32,1,129,154,238,255,106,32,226,0,121,187,61,255,3,166,241,254,67,170,172,255,29,216,178,255,23,201,252,0,253,110,243,0,200,125,57,0,109,192,96,255,52,115,238,0,38,121,243,255,201,56,33,0,194,118,130,0,75,96,25,255,170,30,230,254,39,63,253,0,36,45,250,255,251,1,239,0,160,212,92,1,45,209,237,0,243,33,87,254,237,84,201,255,212,18,157,254,212,99,127,255,217,98,16,254,139,172,239,0,168,201,130,255,143,193,169,255,238,151,193,1,215,104,41,0,239,61,165,254,2,3,242,0,22,203,177,254,177,204,22,0,149,129,213,254,31,11,41,255,0,159,121,254,160,25,114,255,162,80,200,0,157,151,11,0,154,134,78,1,216,54,252,0,48,103,133,0,105,220,197,0,253,168,77,254,53,179,23,0,24,121,240,1,255,46,96,255,107,60,135,254,98,205,249,255,63,249,119,255,120,59,211,255,114,180,55,254,91,85,237,0,149,212,77,1,56,73,49,0,86,198,150,0,93,209,160,0,69,205,182,255,244,90,43,0,20,36,176,0,122,116,221,0,51,167,39,1,231,1,63,255,13,197,134,0,3,209,34,255,135,59,202,0,167,100,78,0,47,223,76,0,185,60,62,0,178,166,123,1,132,12,161,255,61,174,43,0,195,69,144,0,127,47,191,1,34,44,78,0,57,234,52,1,255,22,40,255,246,94,146,0,83,228,128,0,60,78,224,255,0,96,210,255,153,175,236,0,159,21,73,0,180,115,196,254,131,225,106,0,255,167,134,0,159,8,112,255,120,68,194,255,176,196,198,255,118,48,168,255,93,169,1,0,112,200,102,1,74,24,254,0,19,141,4,254,142,62,63,0,131,179,187,255,77,156,155,255,119,86,164,0,170,208,146,255,208,133,154,255,148,155,58,255,162,120,232,254,252,213,155,0,241,13,42,0,94,50,131,0,179,170,112,0,140,83,151,255,55,119,84,1,140,35,239,255,153,45,67,1,236,175,39,0,54,151,103,255,158,42,65,255,196,239,135,254,86,53,203,0,149,97,47,254,216,35,17,255,70,3,70,1,103,36,90,255,40,26,173,0,184,48,13,0,163,219,217,255,81,6,1,255,221,170,108,254,233,208,93,0,100,201,249,254,86,36,35,255,209,154,30,1,227,201,251,255,2,189,167,254,100,57,3,0,13,128,41,0,197,100,75,0,150,204,235,255,145,174,59,0,120,248,149,255,85,55,225,0,114,210,53,254,199,204,119,0,14,247,74,1,63,251,129,0,67,104,151,1,135,130,80,0,79,89,55,255,117,230,157,255,25,96,143,0,213,145,5,0,69,241,120,1,149,243,95,255,114,42,20,0,131,72,2,0,154,53,20,255,73,62,109,0,196,102,152,0,41,12,204,255,122,38,11,1,250,10,145,0,207,125,148,0,246,244,222,255,41,32,85,1,112,213,126,0,162,249,86,1,71,198,127,255,81,9,21,1,98,39,4,255,204,71,45,1,75,111,137,0,234,59,231,0,32,48,95,255,204,31,114,1,29,196,181,255,51,241,167,254,93,109,142,0,104,144,45,0,235,12,181,255,52,112,164,0,76,254,202,255,174,14,162,0,61,235,147,255,43,64,185,254,233,125,217,0,243,88,167,254,74,49,8,0,156,204,66,0,124,214,123,0,38,221,118,1,146,112,236,0,114,98,177,0,151,89,199,0,87,197,112,0,185,149,161,0,44,96,165,0,248,179,20,255,188,219,216,254,40,62,13,0,243,142,141,0,229,227,206,255,172,202,35,255,117,176,225,255,82,110,38,1,42,245,14,255,20,83,97,0,49,171,10,0,242,119,120,0,25,232,61,0,212,240,147,255,4,115,56,255,145,17,239,254,202,17,251,255,249,18,245,255,99,117,239,0,184,4,179,255,246,237,51,255,37,239,137,255,166,112,166,255,81,188,33,255,185,250,142,255,54,187,173,0,208,112,201,0,246,43,228,1,104,184,88,255,212,52,196,255,51,117,108,255,254,117,155,0,46,91,15,255,87,14,144,255,87,227,204,0,83,26,83,1,159,76,227,0,159,27,213,1,24,151,108,0,117,144,179,254,137,209,82,0,38,159,10,0,115,133,201,0,223,182,156,1,110,196,93,255,57,60,233,0,5,167,105,255,154,197,164,0,96,34,186,255,147,133,37,1,220,99,190,0,1,167,84,255,20,145,171,0,194,197,251,254,95,78,133,255,252,248,243,255,225,93,131,255,187,134,196,255,216,153,170,0,20,118,158,254,140,1,118,0,86,158,15,1,45,211,41,255,147,1,100,254,113,116,76,255,211,127,108,1,103,15,48,0,193,16,102,1,69,51,95,255,107,128,157,0,137,171,233,0,90,124,144,1,106,161,182,0,175,76,236,1,200,141,172,255,163,58,104,0,233,180,52,255,240,253,14,255,162,113,254,255,38,239,138,254,52,46,166,0,241,101,33,254,131,186,156,0,111,208,62,255,124,94,160,255,31,172,254,0,112,174,56,255,188,99,27,255,67,138,251,0,125,58,128,1,156,152,174,255,178,12,247,255,252,84,158,0,82,197,14,254,172,200,83,255,37,39,46,1,106,207,167,0,24,189,34,0,131,178,144,0,206,213,4,0,161,226,210,0,72,51,105,255,97,45,187,255,78,184,223,255,176,29,251,0,79,160,86,255,116,37,178,0,82,77,213,1,82,84,141,255,226,101,212,1,175,88,199,255,245,94,247,1,172,118,109,255,166,185,190,0,131,181,120,0,87,254,93,255,134,240,73,255,32,245,143,255,139,162,103,255,179,98,18,254,217,204,112,0,147,223,120,255,53,10,243,0,166,140,150,0,125,80,200,255,14,109,219,255,91,218,1,255,252,252,47,254,109,156,116,255,115,49,127,1,204,87,211,255,148,202,217,255,26,85,249,255,14,245,134,1,76,89,169,255,242,45,230,0,59,98,172,255,114,73,132,254,78,155,49,255,158,126,84,0,49,175,43,255,16,182,84,255,157,103,35,0,104,193,109,255,67,221,154,0,201,172,1,254,8,162,88,0,165,1,29,255,125,155,229,255,30,154,220,1,103,239,92,0,220,1,109,255,202,198,1,0,94,2,142,1,36,54,44,0,235,226,158,255,170,251,214,255,185,77,9,0,97,74,242,0,219,163,149,255,240,35,118,255,223,114,88,254,192,199,3,0,106,37,24,255,201,161,118,255,97,89,99,1,224,58,103,255,101,199,147,254,222,60,99,0,234,25,59,1,52,135,27,0,102,3,91,254,168,216,235,0,229,232,136,0,104,60,129,0,46,168,238,0,39,191,67,0,75,163,47,0,143,97,98,255,56,216,168,1,168,233,252,255,35,111,22,255,92,84,43,0,26,200,87,1,91,253,152,0,202,56,70,0,142,8,77,0,80,10,175,1,252,199,76,0,22,110,82,255,129,1,194,0,11,128,61,1,87,14,145,255,253,222,190,1,15,72,174,0,85,163,86,254,58,99,44,255,45,24,188,254,26,205,15,0,19,229,210,254,248,67,195,0,99,71,184,0,154,199,37,255,151,243,121,255,38,51,75,255,201,85,130,254,44,65,250,0,57,147,243,254,146,43,59,255,89,28,53,0,33,84,24,255,179,51,18,254,189,70,83,0,11,156,179,1,98,134,119,0,158,111,111,0,119,154,73,255,200,63,140,254,45,13,13,255,154,192,2,254,81,72,42,0,46,160,185,254,44,112,6,0,146,215,149,1,26,176,104,0,68,28,87,1,236,50,153,255,179,128,250,254,206,193,191,255,166,92,137,254,53,40,239,0,210,1,204,254,168,173,35,0,141,243,45,1,36,50,109,255,15,242,194,255,227,159,122,255,176,175,202,254,70,57,72,0,40,223,56,0,208,162,58,255,183,98,93,0,15,111,12,0,30,8,76,255,132,127,246,255,45,242,103,0,69,181,15,255,10,209,30,0,3,179,121,0,241,232,218,1,123,199,88,255,2,210,202,1,188,130,81,255,94,101,208,1,103,36,45,0,76,193,24,1,95,26,241,255,165,162,187,0,36,114,140,0,202,66,5,255,37,56,147,0,152,11,243,1,127,85,232,255,250,135,212,1,185,177,113,0,90,220,75,255,69,248,146,0,50,111,50,0,92,22,80,0,244,36,115,254,163,100,82,255,25,193,6,1,127,61,36,0,253,67,30,254,65,236,170,255,161,17,215,254,63,175,140,0,55,127,4,0,79,112,233,0,109,160,40,0,143,83,7,255,65,26,238,255,217,169,140,255,78,94,189,255,0,147,190,255,147,71,186,254,106,77,127,255,233,157,233,1,135,87,237,255,208,13,236,1,155,109,36,255,180,100,218,0,180,163,18,0,190,110,9,1,17,63,123,255,179,136,180,255,165,123,123,255,144,188,81,254,71,240,108,255,25,112,11,255,227,218,51,255,167,50,234,255,114,79,108,255,31,19,115,255,183,240,99,0,227,87,143,255,72,217,248,255,102,169,95,1,129,149,149,0,238,133,12,1,227,204,35,0,208,115,26,1,102,8,234,0,112,88,143,1,144,249,14,0,240,158,172,254,100,112,119],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+10240);allocate([194,141,153,254,40,56,83,255,121,176,46,0,42,53,76,255,158,191,154,0,91,209,92,0,173,13,16,1,5,72,226,255,204,254,149,0,80,184,207,0,100,9,122,254,118,101,171,255,252,203,0,254,160,207,54,0,56,72,249,1,56,140,13,255,10,64,107,254,91,101,52,255,225,181,248,1,139,255,132,0,230,145,17,0,233,56,23,0,119,1,241,255,213,169,151,255,99,99,9,254,185,15,191,255,173,103,109,1,174,13,251,255,178,88,7,254,27,59,68,255,10,33,2,255,248,97,59,0,26,30,146,1,176,147,10,0,95,121,207,1,188,88,24,0,185,94,254,254,115,55,201,0,24,50,70,0,120,53,6,0,142,66,146,0,228,226,249,255,104,192,222,1,173,68,219,0,162,184,36,255,143,102,137,255,157,11,23,0,125,45,98,0,235,93,225,254,56,112,160,255,70,116,243,1,153,249,55,255,129,39,17,1,241,80,244,0,87,69,21,1,94,228,73,255,78,66,65,255,194,227,231,0,61,146,87,255,173,155,23,255,112,116,219,254,216,38,11,255,131,186,133,0,94,212,187,0,100,47,91,0,204,254,175,255,222,18,215,254,173,68,108,255,227,228,79,255,38,221,213,0,163,227,150,254,31,190,18,0,160,179,11,1,10,90,94,255,220,174,88,0,163,211,229,255,199,136,52,0,130,95,221,255,140,188,231,254,139,113,128,255,117,171,236,254,49,220,20,255,59,20,171,255,228,109,188,0,20,225,32,254,195,16,174,0,227,254,136,1,135,39,105,0,150,77,206,255,210,238,226,0,55,212,132,254,239,57,124,0,170,194,93,255,249,16,247,255,24,151,62,255,10,151,10,0,79,139,178,255,120,242,202,0,26,219,213,0,62,125,35,255,144,2,108,255,230,33,83,255,81,45,216,1,224,62,17,0,214,217,125,0,98,153,153,255,179,176,106,254,131,93,138,255,109,62,36,255,178,121,32,255,120,252,70,0,220,248,37,0,204,88,103,1,128,220,251,255,236,227,7,1,106,49,198,255,60,56,107,0,99,114,238,0,220,204,94,1,73,187,1,0,89,154,34,0,78,217,165,255,14,195,249,255,9,230,253,255,205,135,245,0,26,252,7,255,84,205,27,1,134,2,112,0,37,158,32,0,231,91,237,255,191,170,204,255,152,7,222,0,109,192,49,0,193,166,146,255,232,19,181,255,105,142,52,255,103,16,27,1,253,200,165,0,195,217,4,255,52,189,144,255,123,155,160,254,87,130,54,255,78,120,61,255,14,56,41,0,25,41,125,255,87,168,245,0,214,165,70,0,212,169,6,255,219,211,194,254,72,93,164,255,197,33,103,255,43,142,141,0,131,225,172,0,244,105,28,0,68,68,225,0,136,84,13,255,130,57,40,254,139,77,56,0,84,150,53,0,54,95,157,0,144,13,177,254,95,115,186,0,117,23,118,255,244,166,241,255,11,186,135,0,178,106,203,255,97,218,93,0,43,253,45,0,164,152,4,0,139,118,239,0,96,1,24,254,235,153,211,255,168,110,20,255,50,239,176,0,114,41,232,0,193,250,53,0,254,160,111,254,136,122,41,255,97,108,67,0,215,152,23,255,140,209,212,0,42,189,163,0,202,42,50,255,106,106,189,255,190,68,217,255,233,58,117,0,229,220,243,1,197,3,4,0,37,120,54,254,4,156,134,255,36,61,171,254,165,136,100,255,212,232,14,0,90,174,10,0,216,198,65,255,12,3,64,0,116,113,115,255,248,103,8,0,231,125,18,255,160,28,197,0,30,184,35,1,223,73,249,255,123,20,46,254,135,56,37,255,173,13,229,1,119,161,34,255,245,61,73,0,205,125,112,0,137,104,134,0,217,246,30,255,237,142,143,0,65,159,102,255,108,164,190,0,219,117,173,255,34,37,120,254,200,69,80,0,31,124,218,254,74,27,160,255,186,154,199,255,71,199,252,0,104,81,159,1,17,200,39,0,211,61,192,1,26,238,91,0,148,217,12,0,59,91,213,255,11,81,183,255,129,230,122,255,114,203,145,1,119,180,66,255,72,138,180,0,224,149,106,0,119,82,104,255,208,140,43,0,98,9,182,255,205,101,134,255,18,101,38,0,95,197,166,255,203,241,147,0,62,208,145,255,133,246,251,0,2,169,14,0,13,247,184,0,142,7,254,0,36,200,23,255,88,205,223,0,91,129,52,255,21,186,30,0,143,228,210,1,247,234,248,255,230,69,31,254,176,186,135,255,238,205,52,1,139,79,43,0,17,176,217,254,32,243,67,0,242,111,233,0,44,35,9,255,227,114,81,1,4,71,12,255,38,105,191,0,7,117,50,255,81,79,16,0,63,68,65,255,157,36,110,255,77,241,3,255,226,45,251,1,142,25,206,0,120,123,209,1,28,254,238,255,5,128,126,255,91,222,215,255,162,15,191,0,86,240,73,0,135,185,81,254,44,241,163,0,212,219,210,255,112,162,155,0,207,101,118,0,168,72,56,255,196,5,52,0,72,172,242,255,126,22,157,255,146,96,59,255,162,121,152,254,140,16,95,0,195,254,200,254,82,150,162,0,119,43,145,254,204,172,78,255,166,224,159,0,104,19,237,255,245,126,208,255,226,59,213,0,117,217,197,0,152,72,237,0,220,31,23,254,14,90,231,255,188,212,64,1,60,101,246,255,85,24,86,0,1,177,109,0,146,83,32,1,75,182,192,0,119,241,224,0,185,237,27,255,184,101,82,1,235,37,77,255,253,134,19,0,232,246,122,0,60,106,179,0,195,11,12,0,109,66,235,1,125,113,59,0,61,40,164,0,175,104,240,0,2,47,187,255,50,12,141,0,194,139,181,255,135,250,104,0,97,92,222,255,217,149,201,255,203,241,118,255,79,151,67,0,122,142,218,255,149,245,239,0,138,42,200,254,80,37,97,255,124,112,167,255,36,138,87,255,130,29,147,255,241,87,78,255,204,97,19,1,177,209,22,255,247,227,127,254,99,119,83,255,212,25,198,1,16,179,179,0,145,77,172,254,89,153,14,255,218,189,167,0,107,233,59,255,35,33,243,254,44,112,112,255,161,127,79,1,204,175,10,0,40,21,138,254,104,116,228,0,199,95,137,255,133,190,168,255,146,165,234,1,183,99,39,0,183,220,54,254,255,222,133,0,162,219,121,254,63,239,6,0,225,102,54,255,251,18,246,0,4,34,129,1,135,36,131,0,206,50,59,1,15,97,183,0,171,216,135,255,101,152,43,255,150,251,91,0,38,145,95,0,34,204,38,254,178,140,83,255,25,129,243,255,76,144,37,0,106,36,26,254,118,144,172,255,68,186,229,255,107,161,213,255,46,163,68,255,149,170,253,0,187,17,15,0,218,160,165,255,171,35,246,1,96,13,19,0,165,203,117,0,214,107,192,255,244,123,177,1,100,3,104,0,178,242,97,255,251,76,130,255,211,77,42,1,250,79,70,255,63,244,80,1,105,101,246,0,61,136,58,1,238,91,213,0,14,59,98,255,167,84,77,0,17,132,46,254,57,175,197,255,185,62,184,0,76,64,207,0,172,175,208,254,175,74,37,0,138,27,211,254,148,125,194,0,10,89,81,0,168,203,101,255,43,213,209,1,235,245,54,0,30,35,226,255,9,126,70,0,226,125,94,254,156,117,20,255,57,248,112,1,230,48,64,255,164,92,166,1,224,214,230,255,36,120,143,0,55,8,43,255,251,1,245,1,106,98,165,0,74,107,106,254,53,4,54,255,90,178,150,1,3,120,123,255,244,5,89,1,114,250,61,255,254,153,82,1,77,15,17,0,57,238,90,1,95,223,230,0,236,52,47,254,103,148,164,255,121,207,36,1,18,16,185,255,75,20,74,0,187,11,101,0,46,48,129,255,22,239,210,255,77,236,129,255,111,77,204,255,61,72,97,255,199,217,251,255,42,215,204,0,133,145,201,255,57,230,146,1,235,100,198,0,146,73,35,254,108,198,20,255,182,79,210,255,82,103,136,0,246,108,176,0,34,17,60,255,19,74,114,254,168,170,78,255,157,239,20,255,149,41,168,0,58,121,28,0,79,179,134,255,231,121,135,255,174,209,98,255,243,122,190,0,171,166,205,0,212,116,48,0,29,108,66,255,162,222,182,1,14,119,21,0,213,39,249,255,254,223,228,255,183,165,198,0,133,190,48,0,124,208,109,255,119,175,85,255,9,209,121,1,48,171,189,255,195,71,134,1,136,219,51,255,182,91,141,254,49,159,72,0,35,118,245,255,112,186,227,255,59,137,31,0,137,44,163,0,114,103,60,254,8,213,150,0,162,10,113,255,194,104,72,0,220,131,116,255,178,79,92,0,203,250,213,254,93,193,189,255,130,255,34,254,212,188,151,0,136,17,20,255,20,101,83,255,212,206,166,0,229,238,73,255,151,74,3,255,168,87,215,0,155,188,133,255,166,129,73,0,240,79,133,255,178,211,81,255,203,72,163,254,193,168,165,0,14,164,199,254,30,255,204,0,65,72,91,1,166,74,102,255,200,42,0,255,194,113,227,255,66,23,208,0,229,216,100,255,24,239,26,0,10,233,62,255,123,10,178,1,26,36,174,255,119,219,199,1,45,163,190,0,16,168,42,0,166,57,198,255,28,26,26,0,126,165,231,0,251,108,100,255,61,229,121,255,58,118,138,0,76,207,17,0,13,34,112,254,89,16,168,0,37,208,105,255,35,201,215,255,40,106,101,254,6,239,114,0,40,103,226,254,246,127,110,255,63,167,58,0,132,240,142,0,5,158,88,255,129,73,158,255,94,89,146,0,230,54,146,0,8,45,173,0,79,169,1,0,115,186,247,0,84,64,131,0,67,224,253,255,207,189,64,0,154,28,81,1,45,184,54,255,87,212,224,255,0,96,73,255,129,33,235,1,52,66,80,255,251,174,155,255,4,179,37,0,234,164,93,254,93,175,253,0,198,69,87,255,224,106,46,0,99,29,210,0,62,188,114,255,44,234,8,0,169,175,247,255,23,109,137,255,229,182,39,0,192,165,94,254,245,101,217,0,191,88,96,0,196,94,99,255,106,238,11,254,53,126,243,0,94,1,101,255,46,147,2,0,201,124,124,255,141,12,218,0,13,166,157,1,48,251,237,255,155,250,124,255,106,148,146,255,182,13,202,0,28,61,167,0,217,152,8,254,220,130,45,255,200,230,255,1,55,65,87,255,93,191,97,254,114,251,14,0,32,105,92,1,26,207,141,0,24,207,13,254,21,50,48,255,186,148,116,255,211,43,225,0,37,34,162,254,164,210,42,255,68,23,96,255,182,214,8,255,245,117,137,255,66,195,50,0,75,12,83,254,80,140,164,0,9,165,36,1,228,110,227,0,241,17,90,1,25,52,212,0,6,223,12,255,139,243,57,0,12,113,75,1,246,183,191,255,213,191,69,255,230,15,142,0,1,195,196,255,138,171,47,255,64,63,106,1,16,169,214,255,207,174,56,1,88,73,133,255,182,133,140,0,177,14,25,255,147,184,53,255,10,227,161,255,120,216,244,255,73,77,233,0,157,238,139,1,59,65,233,0,70,251,216,1,41,184,153,255,32,203,112,0,146,147,253,0,87,101,109,1,44,82,133,255,244,150,53,255,94,152,232,255,59,93,39,255,88,147,220,255,78,81,13,1,32,47,252,255,160,19,114,255,93,107,39,255,118,16,211,1,185,119,209,255,227,219,127,254,88,105,236,255,162,110,23,255,36,166,110,255,91,236,221,255,66,234,116,0,111,19,244,254,10,233,26,0,32,183,6,254,2,191,242,0,218,156,53,254,41,60,70,255,168,236,111,0,121,185,126,255,238,142,207,255,55,126,52,0,220,129,208,254,80,204,164,255,67,23,144,254,218,40,108,255,127,202,164,0,203,33,3,255,2,158,0,0,37,96,188,255,192,49,74,0,109,4,0,0,111,167,10,254,91,218,135,255,203,66,173,255,150,194,226,0,201,253,6,255,174,102,121,0,205,191,110,0,53,194,4,0,81,40,45,254,35,102,143,255,12,108,198,255,16,27,232,255,252,71,186,1,176,110,114,0,142,3,117,1,113,77,142,0,19,156,197,1,92,47,252,0,53,232,22,1,54,18,235,0,46,35,189,255,236,212,129,0,2,96,208,254,200,238,199,255,59,175,164,255,146,43,231,0,194,217,52,255,3,223,12,0,138,54,178,254,85,235,207,0,232,207,34,0,49,52,50,255,166,113,89,255,10,45,216,255,62,173,28,0,111,165,246,0,118,115,91,255,128,84,60,0,167,144,203,0,87,13,243,0,22,30,228,1,177,113,146,255,129,170,230,254,252,153,129,255,145,225,43,0,70,231,5,255,122,105,126,254,86,246,148,255,110,37,154,254,209,3,91,0,68,145,62,0,228,16,165,255,55,221,249,254,178,210,91,0,83,146,226,254,69,146,186,0,93,210,104,254,16,25,173,0,231,186,38,0,189,122,140,255,251,13,112,255,105,110,93,0,251,72,170,0,192,23,223,255,24,3,202,1,225,93,228,0,153,147,199,254,109,170,22,0,248,101,246,255,178,124,12,255,178,254,102,254,55,4,65,0,125,214,180,0,183,96,147,0,45,117,23,254,132,191,249,0,143,176,203,254,136,183,54,255,146,234,177,0,146,101,86,255,44,123,143,1,33,209,152,0,192,90,41,254,83,15,125,255,213,172,82,0,215,169,144,0,16,13,34,0,32,209,100,255,84,18,249,1,197,17,236,255,217,186,230,0,49,160,176,255,111,118,97,255,237,104,235,0,79,59,92,254,69,249,11,255,35,172,74,1,19,118,68,0,222,124,165,255,180,66,35,255,86,174,246,0,43,74,111,255,126,144,86,255,228,234,91,0,242,213,24,254,69,44,235,255,220,180,35,0,8,248,7,255,102,47,92,255,240,205,102,255,113,230,171,1,31,185,201,255,194,246,70,255,122,17,187,0,134,70,199,255,149,3,150,255,117,63,103,0,65,104,123,255,212,54,19,1,6,141,88,0,83,134,243,255,136,53,103,0,169,27,180,0,177,49,24,0,111,54,167,0,195,61,215,255,31,1,108,1,60,42,70,0,185,3,162,255,194,149,40,255,246,127,38,254,190,119,38,255,61,119,8,1,96,161,219,255,42,203,221,1,177,242,164,255,245,159,10,0,116,196,0,0,5,93,205,254,128,127,179,0,125,237,246,255,149,162,217,255,87,37,20,254,140,238,192,0,9,9,193,0,97,1,226,0,29,38,10,0,0,136,63,255,229,72,210,254,38,134,92,255,78,218,208,1,104,36,84,255,12,5,193,255,242,175,61,255,191,169,46,1,179,147,147,255,113,190,139,254,125,172,31,0,3,75,252,254,215,36,15,0,193,27,24,1,255,69,149,255,110,129,118,0,203,93,249,0,138,137,64,254,38,70,6,0,153,116,222,0,161,74,123,0,193,99,79,255,118,59,94,255,61,12,43,1,146,177,157,0,46,147,191,0,16,255,38,0,11,51,31,1,60,58,98,255,111,194,77,1,154,91,244,0,140,40,144,1,173,10,251,0,203,209,50,254,108,130,78,0,228,180,90,0,174,7,250,0,31,174,60,0,41,171,30,0,116,99,82,255,118,193,139,255,187,173,198,254,218,111,56,0,185,123,216,0,249,158,52,0,52,180,93,255,201,9,91,255,56,45,166,254,132,155,203,255,58,232,110,0,52,211,89,255,253,0,162,1,9,87,183,0,145,136,44,1,94,122,245,0,85,188,171,1,147,92,198,0,0,8,104,0,30,95,174,0,221,230,52,1,247,247,235,255,137,174,53,255,35,21,204,255,71,227,214,1,232,82,194,0,11,48,227,255,170,73,184,255,198,251,252,254,44,112,34,0,131,101,131,255,72,168,187,0,132,135,125,255,138,104,97,255,238,184,168,255,243,104,84,255,135,216,226,255,139,144,237,0,188,137,150,1,80,56,140,255,86,169,167,255,194,78,25,255,220,17,180,255,17,13,193,0,117,137,212,255,141,224,151,0,49,244,175,0,193,99,175,255,19,99,154,1,255,65,62,255,156,210,55,255,242,244,3,255,250,14,149,0,158,88,217,255,157,207,134,254,251,232,28,0,46,156,251,255,171,56,184,255,239,51,234,0,142,138,131,255,25,254,243,1,10,201,194,0,63,97,75,0,210,239,162,0,192,200,31,1,117,214,243,0,24,71,222,254,54,40,232,255,76,183,111,254,144,14,87,255,214,79,136,255,216,196,212,0,132,27,140,254,131,5,253,0,124,108,19,255,28,215,75,0,76,222,55,254,233,182,63,0,68,171,191,254,52,111,222,255,10,105,77,255,80,170,235,0,143,24,88,255,45,231,121,0,148,129,224,1,61,246,84,0,253,46,219,255,239,76,33,0,49,148,18,254,230,37,69,0,67,134,22,254,142,155,94,0,31,157,211,254,213,42,30,255,4,228,247,254,252,176,13,255,39,0,31,254,241,244,255,255,170,45,10,254,253,222,249,0,222,114,132,0,255,47,6,255,180,163,179,1,84,94,151,255,89,209,82,254,229,52,169,255,213,236,0,1,214,56,228,255,135,119,151,255,112,201,193,0,83,160,53,254,6,151,66,0,18,162,17,0,233,97,91,0,131,5,78,1,181,120,53,255,117,95,63,255,237,117,185,0,191,126,136,255,144,119,233,0,183,57,97,1,47,201,187,255,167,165,119,1,45,100,126,0,21,98,6,254,145,150,95,255,120,54,152,0,209,98,104,0,143,111,30,254,184,148,249,0,235,216,46,0,248,202,148,255,57,95,22,0,242,225,163,0,233,247,232,255,71,171,19,255,103,244,49,255,84,103,93,255,68,121,244,1,82,224,13,0,41,79,43,255,249,206,167,255,215,52,21,254,192,32,22,255,247,111,60,0,101,74,38,255,22,91,84,254,29,28,13,255,198,231,215,254,244,154,200,0,223,137,237,0,211,132,14,0,95,64,206,255,17,62,247,255,233,131,121,1,93,23,77,0,205,204,52,254,81,189,136,0,180,219,138,1,143,18,94,0,204,43,140,254,188,175,219,0,111,98,143,255,151,63,162,255,211,50,71,254,19,146,53,0,146,45,83,254,178,82,238,255,16,133,84,255,226,198,93,255,201,97,20,255,120,118,35,255,114,50,231,255,162,229,156,255,211,26,12,0,114,39,115,255,206,212,134,0,197,217,160,255,116,129,94,254,199,215,219,255,75,223,249,1,253,116,181,255,232,215,104,255,228,130,246,255,185,117,86,0,14,5,8,0,239,29,61,1,237,87,133,255,125,146,137,254,204,168,223,0,46,168,245,0,154,105,22,0,220,212,161,255,107,69,24,255,137,218,181,255,241,84,198,255,130,122,211,255,141,8,153,255,190,177,118,0,96,89,178,0,255,16,48,254,122,96,105,255,117,54,232,255,34,126,105,255,204,67,166,0,232,52,138,255,211,147,12,0,25,54,7,0,44,15,215,254,51,236,45,0,190,68,129,1,106,147,225,0,28,93,45,254,236,141,15,255,17,61,161,0,220,115,192,0,236,145,24,254,111,168,169,0,224,58,63,255,127,164,188,0,82,234,75,1,224,158,134,0,209,68,110,1,217,166,217,0,70,225,166,1,187,193,143,255,16,7,88,255,10,205,140,0,117,192,156,1,17,56,38,0,27,124,108,1,171,215,55,255,95,253,212,0,155,135,168,255,246,178,153,254,154,68,74,0,232,61,96,254,105,132,59,0,33,76,199,1,189,176,130,255,9,104,25,254,75,198,102,255,233,1,112,0,108,220,20,255,114,230,70,0,140,194,133,255,57,158,164,254,146,6,80,255,169,196,97,1,85,183,130,0,70,158,222,1,59,237,234,255,96,25,26,255,232,175,97,255,11,121,248,254,88,35,194,0,219,180,252,254,74,8,227,0,195,227,73,1,184,110,161,255,49,233,164,1,128,53,47,0,82,14,121,255,193,190,58,0,48,174,117,255,132,23,32,0,40,10,134,1,22,51,25,255,240,11,176,255,110,57,146,0,117,143,239,1,157,101,118,255,54,84,76,0,205,184,18,255,47,4,72,255,78,112,85,255,193,50,66,1,93,16,52,255,8,105,134,0,12,109,72,255,58,156,251,0,144,35,204,0,44,160,117,254,50,107,194,0,1,68,165,255,111,110,162,0,158,83,40,254,76,214,234,0,58,216,205,255,171,96,147,255,40,227,114,1,176,227,241,0,70,249,183,1,136,84,139,255,60,122,247,254,143,9,117,255,177,174,137,254,73,247,143,0,236,185,126,255,62,25,247,255,45,64,56,255,161,244,6,0,34,57,56,1,105,202,83,0,128,147,208,0,6,103,10,255,74,138,65,255,97,80,100,255,214,174,33,255,50,134,74,255,110,151,130,254,111,84,172,0,84,199,75,254,248,59,112,255,8,216,178,1,9,183,95,0,238,27,8,254,170,205,220,0,195,229,135,0,98,76,237,255,226,91,26,1,82,219,39,255,225,190,199,1,217,200,121,255,81,179,8,255,140,65,206,0,178,207,87,254,250,252,46,255,104,89,110,1,253,189,158,255,144,214,158,255,160,245,54,255,53,183,92,1,21,200,194,255,146,33,113,1,209,1,255,0,235,106,43,255,167,52,232,0,157,229,221,0,51,30,25,0,250,221,27,1,65,147,87,255,79,123,196,0,65,196,223,255,76,44,17,1,85,241,68,0,202,183,249,255,65,212,212,255,9,33,154,1,71,59,80,0,175,194,59,255,141,72,9,0,100,160,244,0,230,208,56,0,59,25,75,254,80,194,194,0,18,3,200,254,160,159,115,0,132,143,247,1,111,93,57,255,58,237,11,1,134,222,135,255,122,163,108,1,123,43,190,255,251,189,206,254,80,182,72,255,208,246,224,1,17,60,9,0,161,207,38,0,141,109,91,0,216,15,211,255,136,78,110,0,98,163,104,255,21,80,121,255,173,178,183,1,127,143,4,0,104,60,82,254,214,16,13,255,96,238,33,1,158,148,230,255,127,129,62,255,51,255,210,255,62,141,236,254,157,55,224,255,114,39,244,0,192,188,250,255,228,76,53,0,98,84,81,255,173,203,61,254,147,50,55,255,204,235,191,0,52,197,244,0,88,43,211,254,27,191,119,0,188,231,154,0,66,81,161,0,92,193,160,1,250,227,120,0,123,55,226,0,184,17,72,0,133,168,10,254,22,135,156,255,41,25,103,255,48,202,58,0,186,149,81,255,188,134,239,0,235,181,189,254,217,139,188,255,74,48,82,0,46,218,229,0,189,253,251,0,50,229,12,255,211,141,191,1,128,244,25,255,169,231,122,254,86,47,189,255,132,183,23,255,37,178,150,255,51,137,253,0,200,78,31,0,22,105,50,0,130,60,0,0,132,163,91,254,23,231,187,0,192,79,239,0,157,102,164,255,192,82,20,1,24,181,103,255,240,9,234,0,1,123,164,255,133,233,0,255,202,242,242,0,60,186,245,0,241,16,199,255,224,116,158,254,191,125,91,255,224,86,207,0,121,37,231,255,227,9,198,255,15,153,239,255,121,232,217,254,75,112,82,0,95,12,57,254,51,214,105,255,148,220,97,1,199,98,36,0,156,209,12,254,10,212,52,0,217,180,55,254,212,170,232,255,216,20,84,255,157,250,135,0,157,99,127,254,1,206,41,0,149,36,70,1,54,196,201,255,87,116,0,254,235,171,150,0,27,163,234,0,202,135,180,0,208,95,0,254,123,156,93,0,183,62,75,0,137,235,182,0,204,225,255,255,214,139,210,255,2,115,8,255,29,12,111,0,52,156,1,0,253,21,251,255,37,165,31,254,12,130,211,0,106,18,53,254,42,99,154,0,14,217,61,254,216,11,92,255,200,197,112,254,147,38,199,0,36,252,120,254,107,169,77,0,1,123,159,255,207,75,102,0,163,175,196,0,44,1,240,0,120,186,176,254,13,98,76,255,237,124,241,255,232,146,188,255,200,96,224,0,204,31,41,0,208,200,13,0,21,225,96,255,175,156,196,0,247,208,126,0,62,184,244,254,2,171,81,0,85,115,158,0,54,64,45,255,19,138,114,0,135,71,205,0,227,47,147,1,218,231,66,0,253,209,28,0,244,15,173,255,6,15,118,254,16,150,208,255,185,22,50,255,86,112,207,255,75,113,215,1,63,146,43,255,4,225,19,254,227,23,62,255,14,255,214,254,45,8,205,255,87,197,151,254,210,82,215,255,245,248,247,255,128,248,70,0,225,247,87,0,90,120,70,0,213,245,92,0,13,133,226,0,47,181,5,1,92,163,105,255,6,30,133,254,232,178,61,255,230,149,24,255,18,49,158,0,228,100,61,254,116,243,251,255,77,75,92,1,81,219,147,255,76,163,254,254,141,213,246,0,232,37,152,254,97,44,100,0,201,37,50,1,212,244,57,0,174,171,183,255,249,74,112,0,166,156,30,0,222,221,97,255,243,93,73,254,251,101,100,255,216,217,93,255,254,138,187,255,142,190,52,255,59,203,177,255,200,94,52,0,115,114,158,255,165,152,104,1,126,99,226,255,118,157,244,1,107,200,16,0,193,90,229,0,121,6,88,0,156,32,93,254,125,241,211,255,14,237,157,255,165,154,21,255,184,224,22,255,250,24,152,255,113,77,31,0,247,171,23,255,237,177,204,255,52,137,145,255,194,182,114,0,224,234,149,0,10,111,103,1,201,129,4,0,238,142,78,0,52,6,40,255,110,213,165,254,60,207,253,0,62,215,69,0,96,97,0,255,49,45,202,0,120,121,22,255,235,139,48,1,198,45,34,255,182,50,27,1,131,210,91,255,46,54,128,0,175,123,105,255,198,141,78,254,67,244,239,255,245,54,103,254,78,38,242,255,2,92,249,254,251,174,87,255,139,63,144,0,24,108,27,255,34,102,18,1,34,22,152,0,66,229,118,254,50,143,99,0,144,169,149,1,118,30,152,0,178,8,121,1,8,159,18,0,90,101,230,255,129,29,119,0,68,36,11,1,232,183,55,0,23,255,96,255,161,41,193,255,63,139,222,0,15,179,243,0,255,100,15,255,82,53,135,0,137,57,149,1,99,240,170,255,22,230,228,254,49,180,82,255,61,82,43,0,110,245,217,0,199,125,61,0,46,253,52,0,141,197,219,0,211,159,193,0,55,121,105,254,183,20,129,0,169,119,170,255,203,178,139,255,135,40,182,255,172,13,202,255,65,178,148,0,8,207,43,0,122,53,127,1,74,161,48,0,227,214,128,254,86,11,243,255,100,86,7,1,245,68,134,255,61,43,21,1,152,84,94,255,190,60,250,254,239,118,232,255,214,136,37,1,113,76,107,255,93,104,100,1,144,206,23,255,110,150,154,1,228,103,185,0,218,49,50,254,135,77,139,255,185,1,78,0,0,161,148,255,97,29,233,255,207,148,149,255,160,168,0,0,91,128,171,255,6,28,19,254,11,111,247,0,39,187,150,255,138,232,149,0,117,62,68,255,63,216,188,255,235,234,32,254,29,57,160,255,25,12,241,1,169,60,191,0,32,131,141,255,237,159,123,255,94,197,94,254,116,254,3,255,92,179,97,254,121,97,92,255,170,112,14,0,21,149,248,0,248,227,3,0,80,96,109,0,75,192,74,1,12,90,226,255,161,106,68,1,208,114,127,255,114,42,255,254,74,26,74,255,247,179,150,254,121,140,60,0,147,70,200,255,214,40,161,255,161,188,201,255,141,65,135,255,242,115,252,0,62,47,202,0,180,149,255,254,130,55,237,0,165,17,186,255,10,169,194,0,156,109,218,255,112,140,123,255,104,128,223,254,177,142,108,255,121,37,219,255,128,77,18,255,111,108,23,1,91,192,75,0,174,245,22,255,4,236,62,255,43,64,153,1,227,173,254,0,237,122,132,1,127,89,186,255,142,82,128,254,252,84,174,0,90,179,177,1,243,214,87,255,103,60,162,255,208,130,14,255,11,130,139,0,206,129,219,255,94,217,157,255,239,230,230,255,116,115,159,254,164,107,95,0,51,218,2,1,216,125,198,255,140,202,128,254,11,95,68,255,55,9,93,254,174,153,6,255,204,172,96,0,69,160,110,0,213,38,49,254,27,80,213,0,118,125,114,0,70,70,67,255,15,142,73,255,131,122,185,255,243,20,50,254,130,237,40,0,210,159,140,1,197,151,65,255,84,153,66,0,195,126,90,0,16,238,236,1,118,187,102,255,3,24,133,255,187,69,230,0,56,197,92,1,213,69,94,255,80,138,229,1,206,7,230,0,222,111,230,1,91,233,119,255,9,89,7,1,2,98,1,0,148,74,133,255,51,246,180,255,228,177,112,1,58,189,108,255,194,203,237,254,21,209,195,0,147,10,35,1,86,157,226,0,31,163,139,254,56,7,75,255,62,90,116,0,181,60,169,0,138,162,212,254,81,167,31,0,205,90,112,255,33,112,227,0,83,151,117,1,177,224,73,255,174,144,217,255,230,204,79,255,22,77,232,255,114,78,234,0,224,57,126,254,9,49,141,0,242,147,165,1,104,182,140,255,167,132,12,1,123,68,127,0,225,87,39,1,251,108,8,0,198,193,143,1,121,135,207,255,172,22,70,0,50,68,116,255,101,175,40,255,248,105,233,0,166,203,7,0,110,197,218,0,215,254,26,254,168,226,253,0,31,143,96,0,11,103,41,0,183,129,203,254,100,247,74,255,213,126,132,0,210,147,44,0,199,234,27,1,148,47,181,0,155,91,158,1,54,105,175,255,2,78,145,254,102,154,95,0,128,207,127,254,52,124,236,255,130,84,71,0,221,243,211,0,152,170,207,0,222,106,199,0,183,84,94,254,92,200,56,255,138,182,115,1,142,96,146,0,133,136,228,0,97,18,150,0,55,251,66,0,140,102,4,0,202,103,151,0,30,19,248,255,51,184,207,0,202,198,89,0,55,197,225,254,169,95,249,255,66,65,68,255,188,234,126,0,166,223,100,1,112,239,244,0,144,23,194,0,58,39,182,0,244,44,24,254,175,68,179,255,152,118,154,1,176,162,130,0,217,114,204,254,173,126,78,255,33,222,30,255,36,2,91,255,2,143,243,0,9,235,215,0,3,171,151,1,24,215,245,255,168,47,164,254,241,146,207,0,69,129,180,0,68,243,113,0,144,53,72,254,251,45,14,0,23,110,168,0,68,68,79,255,110,70,95,254,174,91,144,255,33,206,95,255,137,41,7,255,19,187,153,254,35,255,112,255,9,145,185,254,50,157,37,0,11,112,49,1,102,8,190,255,234,243,169,1,60,85,23,0,74,39,189,0,116,49,239,0,173,213,210,0,46,161,108,255,159,150,37,0,196,120,185,255,34,98,6,255,153,195,62,255,97,230,71,255,102,61,76,0,26,212,236,255,164,97,16,0,198,59,146,0,163,23,196,0,56,24,61,0,181,98,193,0,251,147,229,255,98,189,24,255,46,54,206,255,234,82,246,0,183,103,38,1,109,62,204,0,10,240,224,0,146,22,117,255,142,154,120,0,69,212,35,0,208,99,118,1,121,255,3,255,72,6,194,0,117,17,197,255,125,15,23,0,154,79,153,0,214,94,197,255,185,55,147,255,62,254,78,254,127,82,153,0,110,102,63,255,108,82,161,255,105,187,212,1,80,138,39,0,60,255,93,255,72,12,186,0,210,251,31,1,190,167,144,255,228,44,19,254,128,67,232,0,214,249,107,254,136,145,86,255,132,46,176,0,189,187,227,255,208,22,140,0,217,211,116,0,50,81,186,254,139,250,31,0,30,64,198,1,135,155,100,0,160,206,23,254,187,162,211,255,16,188,63,0,254,208,49,0,85,84,191,0,241,192,242,255,153,126,145,1,234,162,162,255,230,97,216,1,64,135,126,0,190,148,223,1,52,0,43,255,28,39,189,1,64,136,238,0,175,196,185,0,98,226,213,255,127,159,244,1,226,175,60,0,160,233,142,1,180,243,207,255,69,152,89,1,31,101,21,0,144,25,164,254,139,191,209,0,91,25,121,0,32,147,5,0,39,186,123,255,63,115,230,255,93,167,198,255,143,213,220,255,179,156,19,255,25,66,122,0,214,160,217,255,2,45,62,255,106,79,146,254,51,137,99,255,87,100,231,255,175,145,232,255,101,184,1,255,174,9,125,0,82,37,161,1,36,114,141,255,48,222,142,255,245,186,154,0,5,174,221,254,63,114,155,255,135,55,160,1,80,31,135,0,126,250,179,1,236,218,45,0,20,28,145,1,16,147,73,0,249,189,132,1,17,189,192,255,223,142,198,255,72,20,15,255,250,53,237,254,15,11,18,0,27,211,113,254,213,107,56,255,174,147,146,255,96,126,48,0,23,193,109,1,37,162,94,0,199,157,249,254,24,128,187,255,205,49,178,254,93,164,42,255,43,119,235,1,88,183,237,255,218,210,1,255,107,254,42,0,230,10,99,255,162,0,226,0,219,237,91,0,129,178,203,0,208,50,95,254,206,208,95,255,247,191,89,254,110,234,79,255,165,61,243,0,20,122,112,255,246,246,185,254,103,4,123,0,233,99,230,1,219,91,252,255,199,222,22,255,179,245,233,255,211,241,234,0,111,250,192,255,85,84,136,0,101,58,50,255,131,173,156,254,119,45,51,255,118,233,16,254,242,90,214,0,94,159,219,1,3,3,234,255,98,76,92,254,80,54,230,0,5,228,231,254,53,24,223,255,113,56,118,1,20,132,1,255,171,210,236,0,56,241,158,255,186,115,19,255,8,229,174,0,48,44,0,1,114,114,166,255,6,73,226,255,205,89,244,0,137,227,75,1,248,173,56,0,74,120,246,254,119,3,11,255,81,120,198,255,136,122,98,255,146,241,221,1,109,194,78,255,223,241,70,1,214,200,169,255,97,190,47,255,47,103,174,255,99,92,72,254,118,233,180,255,193,35,233,254,26,229,32,255,222,252,198,0,204,43,71,255,199,84,172,0,134,102,190,0,111,238,97,254,230,40,230,0,227,205,64,254,200,12,225,0,166,25,222,0,113,69,51,255,143,159,24,0,167,184,74,0,29,224,116,254,158,208,233,0,193,116,126,255,212,11,133,255,22,58,140,1,204,36,51,255,232,30,43,0,235,70,181,255,64,56,146,254,169,18,84,255,226,1,13,255,200,50,176,255,52,213,245,254,168,209,97,0,191,71,55,0,34,78,156,0,232,144,58,1,185,74,189,0,186,142,149,254,64,69,127,255,161,203,147,255,176,151,191,0,136,231,203,254,163,182,137,0,161,126,251,254,233,32,66,0,68,207,66,0,30,28,37,0,93,114,96,1,254,92,247,255,44,171,69,0,202,119,11,255,188,118,50,1,255,83,136,255,71,82,26,0,70,227,2,0,32,235,121,1,181,41,154,0,71,134,229,254,202,255,36,0,41,152,5,0,154,63,73,255,34,182,124,0,121,221,150,255,26,204,213,1,41,172,87,0,90,157,146,255,109,130,20,0,71,107,200,255,243,102,189,0,1,195,145,254,46,88,117,0,8,206,227,0,191,110,253,255,109,128,20,254,134,85,51,255,137,177,112,1,216,34,22,255,131,16,208,255,121,149,170,0,114,19,23,1,166,80,31,255,113,240,122,0,232,179,250,0,68,110,180,254,210,170,119,0,223,108,164,255,207,79,233,255,27,229,226,254,209,98,81,255,79,68,7,0,131,185,100,0,170,29,162,255,17,162,107,255,57,21,11,1,100,200,181,255,127,65,166,1,165,134,204,0,104,167,168,0,1,164,79,0,146,135,59,1,70,50,128,255,102,119,13,254,227,6,135,0,162,142,179,255,160,100,222,0,27,224,219,1,158,93,195,255,234,141,137,0,16,24,125,255,238,206,47,255,97,17,98,255,116,110,12,255,96,115,77,0,91,227,232,255,248,254,79,255,92,229,6,254,88,198,139,0,206,75,129,0,250,77,206,255,141,244,123,1,138,69,220,0,32,151,6,1,131,167,22,255,237,68,167,254,199,189,150,0,163,171,138,255,51,188,6,255,95,29,137,254,148,226,179,0,181,107,208,255,134,31,82,255,151,101,45,255,129,202,225,0,224,72,147,0,48,138,151,255,195,64,206,254,237,218,158,0,106,29,137,254,253,189,233,255,103,15,17,255,194,97,255,0,178,45,169,254,198,225,155,0,39,48,117,255,135,106,115,0,97,38,181,0,150,47,65,255,83,130,229,254,246,38,129,0,92,239,154,254,91,99,127,0,161,111,33,255,238,217,242,255,131,185,195,255,213,191,158,255,41,150,218,0,132,169,131,0,89,84,252,1,171,70,128,255,163,248,203,254,1,50,180,255,124,76,85,1,251,111,80,0,99,66,239,255,154,237,182,255,221,126,133,254,74,204,99,255,65,147,119,255,99,56,167,255,79,248,149,255,116,155,228,255,237,43,14,254,69,137,11,255,22,250,241,1,91,122,143,255,205,249,243,0,212,26,60,255,48,182,176,1,48,23,191,255,203,121,152,254,45,74,213,255,62,90,18,254,245,163,230,255,185,106,116,255,83,35,159,0,12,33,2,255,80,34,62,0,16,87,174,255,173,101,85,0,202,36,81,254,160,69,204,255,64,225,187,0,58,206,94,0,86,144,47,0,229,86,245,0,63,145,190,1,37,5,39,0,109,251,26,0,137,147,234,0,162,121,145,255,144,116,206,255,197,232,185,255,183,190,140,255,73,12,254,255,139,20,242,255,170,90,239,255,97,66,187,255,245,181,135,254,222,136,52,0,245,5,51,254,203,47,78,0,152,101,216,0,73,23,125,0,254,96,33,1,235,210,73,255,43,209,88,1,7,129,109,0,122,104,228,254,170,242,203,0,242,204,135,255,202,28,233,255,65,6,127,0,159,144,71,0,100,140,95,0,78,150,13,0,251,107,118,1,182,58,125,255,1,38,108,255,141,189,209,255,8,155,125,1,113,163,91,255,121,79,190,255,134,239,108,255,76,47,248,0,163,228,239,0,17,111,10,0,88,149,75,255,215,235,239,0,167,159,24,255,47,151,108,255,107,209,188,0,233,231,99,254,28,202,148,255,174,35,138,255,110,24,68,255,2,69,181,0,107,102,82,0,102,237,7,0,92,36,237,255,221,162,83,1,55,202,6,255,135,234,135,255,24,250,222,0,65,94,168,254,245,248,210,255,167,108,201,254,255,161,111,0,205,8,254,0,136,13,116,0,100,176,132,255,43,215,126,255,177,133,130,255,158,79,148,0,67,224,37,1,12,206,21,255,62,34,110,1,237,104,175,255,80,132,111,255,142,174,72,0,84,229,180,254,105,179,140,0,64,248,15,255,233,138,16,0,245,67,123,254,218,121,212,255,63,95,218,1,213,133,137,255,143,182,82,255,48,28,11,0,244,114,141,1,209,175,76,255,157,181,150,255,186,229,3,255,164,157,111,1,231,189,139,0,119,202,190,255,218,106,64,255,68,235,63,254,96,26,172,255,187,47,11,1,215,18,251,255,81,84,89,0,68,58,128,0,94,113,5,1,92,129,208,255,97,15,83,254,9,28,188,0,239,9,164,0,60,205,152,0,192,163,98,255,184,18,60,0,217,182,139,0,109,59,120,255,4,192,251,0,169,210,240,255,37,172,92,254,148,211,245,255,179,65,52,0,253,13,115,0,185,174,206,1,114,188,149,255,237,90,173,0,43,199,192,255,88,108,113,0,52,35,76,0,66,25,148,255,221,4,7,255,151,241,114,255,190,209,232,0,98,50,199,0,151,150,213,255,18,74,36,1,53,40,7,0,19,135,65,255,26,172,69,0,174,237,85,0,99,95,41,0,3,56,16,0,39,160,177,255,200,106,218,254,185,68,84,255,91,186,61,254,67,143,141,255,13,244,166,255,99,114,198,0,199,110,163,255,193,18,186,0,124,239,246,1,110,68,22,0,2,235,46,1,212,60,107,0,105,42,105,1,14,230,152,0,7,5,131,0,141,104,154,255,213,3,6,0,131,228,162,255,179,100,28,1,231,123,85,255,206,14,223,1,253,96,230,0,38,152,149,1,98,137,122,0,214,205,3,255,226,152,179,255,6,133,137,0,158,69,140,255,113,162,154,255,180,243,172,255,27,189,115,255,143,46,220,255,213,134,225,255,126,29,69,0,188,43,137,1,242,70,9,0,90,204,255,255,231,170,147,0,23,56,19,254,56,125,157,255,48,179,218,255,79,182,253,255,38,212,191,1,41,235,124,0,96,151,28,0,135,148,190,0,205,249,39,254,52,96,136,255,212,44,136,255,67,209,131,255,252,130,23,255,219,128,20,255,198,129,118,0,108,101,11,0,178,5,146,1,62,7,100,255,181,236,94,254,28,26,164,0,76,22,112,255,120,102,79,0,202,192,229,1,200,176,215,0,41,64,244,255,206,184,78,0,167,45,63,1,160,35,0,255,59,12,142,255,204,9,144,255,219,94,229,1,122,27,112,0,189,105,109,255,64,208,74,255,251,127,55,1,2,226,198,0,44,76,209,0,151,152,77,255,210,23,46,1,201,171,69,255,44,211,231,0,190,37,224,255,245,196,62,255,169,181,222,255,34,211,17,0,119,241,197,255,229,35,152,1,21,69,40,255,178,226,161,0,148,179,193,0,219,194,254,1,40,206,51,255,231,92,250,1,67,153,170,0,21,148,241,0,170,69,82,255,121,18,231,255,92,114,3,0,184,62,230,0,225,201,87,255,146,96,162,255,181,242,220,0,173,187,221,1,226,62,170,255,56,126,217,1,117,13,227,255,179,44,239,0,157,141,155,255,144,221,83,0,235,209,208,0,42,17,165,1,251,81,133,0,124,245,201,254,97,211,24,255,83,214,166,0,154,36,9,255,248,47,127,0,90,219,140,255,161,217,38,254,212,147,63,255,66,84,148,1,207,3,1,0,230,134,89,1,127,78,122,255,224,155,1,255,82,136,74,0,178,156,208,255,186,25,49,255,222,3,210,1,229,150,190,255,85,162,52,255,41,84,141,255,73,123,84,254,93,17,150,0,119,19,28,1,32,22,215,255,28,23,204,255,142,241,52,255,228,52,125,0,29,76,207,0,215,167,250,254,175,164,230,0,55,207,105,1,109,187,245,255,161,44,220,1,41,101,128,255,167,16,94,0,93,214,107,255,118,72,0,254,80,61,234,255,121,175,125,0,139,169,251,0,97,39,147,254,250,196,49,255,165,179,110,254,223,70,187,255,22,142,125,1,154,179,138,255,118,176,42,1,10,174,153,0,156,92,102,0,168,13,161,255,143,16,32,0,250,197,180,255,203,163,44,1,87,32,36,0,161,153,20,255,123,252,15,0,25,227,80,0,60,88,142,0,17,22,201,1,154,205,77,255,39,63,47,0,8,122,141,0,128,23,182,254,204,39,19,255,4,112,29,255,23,36,140,255,210,234,116,254,53,50,63,255,121,171,104,255,160,219,94,0,87,82,14,254,231,42,5,0,165,139,127,254,86,78,38,0,130,60,66,254,203,30,45,255,46,196,122,1,249,53,162,255,136,143,103,254,215,210,114,0,231,7,160,254,169,152,42,255,111,45,246,0,142,131,135,255,131,71,204,255,36,226,11,0,0,28,242,255,225,138,213,255,247,46,216,254,245,3,183,0,108,252,74,1,206,26,48,255,205,54,246,255,211,198,36,255,121,35,50,0,52,216,202,255,38,139,129,254,242,73,148,0,67,231,141,255,42,47,204,0,78,116,25,1,4,225,191,255,6,147,228,0,58,88,177,0,122,165,229,255,252,83,201,255,224,167,96,1,177,184,158,255,242,105,179,1,248,198,240,0,133,66,203,1,254,36,47,0,45,24,115,255,119,62,254,0,196,225,186,254,123,141,172,0,26,85,41,255,226,111,183,0,213,231,151,0,4,59,7,255,238,138,148,0,66,147,33,255,31,246,141,255,209,141,116,255,104,112,31,0,88,161,172,0,83,215,230,254,47,111,151,0,45,38,52,1,132,45,204,0,138,128,109,254,233,117,134,255,243,190,173,254,241,236,240,0,82,127,236,254,40,223,161,255,110,182,225,255,123,174,239,0,135,242,145,1,51,209,154,0,150,3,115,254,217,164,252,255,55,156,69,1,84,94,255,255,232,73,45,1,20,19,212,255,96,197,59,254,96,251,33,0,38,199,73,1,64,172,247,255,117,116,56,255,228,17,18,0,62,138,103,1,246,229,164,255,244,118,201,254,86,32,159,255,109,34,137,1,85,211,186,0,10,193,193,254,122,194,177,0,122,238,102,255,162,218,171,0,108,217,161,1,158,170,34,0,176,47,155,1,181,228,11,255,8,156,0,0,16,75,93,0,206,98,255,1,58,154,35,0,12,243,184,254,67,117,66,255,230,229,123,0,201,42,110,0,134,228,178,254,186,108,118,255,58,19,154,255,82,169,62,255,114,143,115,1,239,196,50,255,173,48,193,255,147,2,84,255,150,134,147,254,95,232,73,0,109,227,52,254,191,137,10,0,40,204,30,254,76,52,97,255,164,235,126,0,254,124,188,0,74,182,21,1,121,29,35,255,241,30,7,254,85,218,214,255,7,84,150,254,81,27,117,255,160,159,152,254,66,24,221,255,227,10,60,1,141,135,102,0,208,189,150,1,117,179,92,0,132,22,136,255,120,199,28,0,21,129,79,254,182,9,65,0,218,163,169,0,246,147,198,255,107,38,144,1,78,175,205,255,214,5,250,254,47,88,29,255,164,47,204,255,43,55,6,255,131,134,207,254,116,100,214,0,96,140,75,1,106,220,144,0,195,32,28,1,172,81,5,255,199,179,52,255,37,84,203,0,170,112,174,0,11,4,91,0,69,244,27,1,117,131,92,0,33,152,175,255,140,153,107,255,251,135,43,254,87,138,4,255,198,234,147,254,121,152,84,255,205,101,155,1,157,9,25,0,72,106,17,254,108,153,0,255],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+20480);allocate([189,229,186,0,193,8,176,255,174,149,209,0,238,130,29,0,233,214,126,1,61,226,102,0,57,163,4,1,198,111,51,255,45,79,78,1,115,210,10,255,218,9,25,255,158,139,198,255,211,82,187,254,80,133,83,0,157,129,230,1,243,133,134,255,40,136,16,0,77,107,79,255,183,85,92,1,177,204,202,0,163,71,147,255,152,69,190,0,172,51,188,1,250,210,172,255,211,242,113,1,89,89,26,255,64,66,111,254,116,152,42,0,161,39,27,255,54,80,254,0,106,209,115,1,103,124,97,0,221,230,98,255,31,231,6,0,178,192,120,254,15,217,203,255,124,158,79,0,112,145,247,0,92,250,48,1,163,181,193,255,37,47,142,254,144,189,165,255,46,146,240,0,6,75,128,0,41,157,200,254,87,121,213,0,1,113,236,0,5,45,250,0,144,12,82,0,31,108,231,0,225,239,119,255,167,7,189,255,187,228,132,255,110,189,34,0,94,44,204,1,162,52,197,0,78,188,241,254,57,20,141,0,244,146,47,1,206,100,51,0,125,107,148,254,27,195,77,0,152,253,90,1,7,143,144,255,51,37,31,0,34,119,38,255,7,197,118,0,153,188,211,0,151,20,116,254,245,65,52,255,180,253,110,1,47,177,209,0,161,99,17,255,118,222,202,0,125,179,252,1,123,54,126,255,145,57,191,0,55,186,121,0,10,243,138,0,205,211,229,255,125,156,241,254,148,156,185,255,227,19,188,255,124,41,32,255,31,34,206,254,17,57,83,0,204,22,37,255,42,96,98,0,119,102,184,1,3,190,28,0,110,82,218,255,200,204,192,255,201,145,118,0,117,204,146,0,132,32,98,1,192,194,121,0,106,161,248,1,237,88,124,0,23,212,26,0,205,171,90,255,248,48,216,1,141,37,230,255,124,203,0,254,158,168,30,255,214,248,21,0,112,187,7,255,75,133,239,255,74,227,243,255,250,147,70,0,214,120,162,0,167,9,179,255,22,158,18,0,218,77,209,1,97,109,81,255,244,33,179,255,57,52,57,255,65,172,210,255,249,71,209,255,142,169,238,0,158,189,153,255,174,254,103,254,98,33,14,0,141,76,230,255,113,139,52,255,15,58,212,0,168,215,201,255,248,204,215,1,223,68,160,255,57,154,183,254,47,231,121,0,106,166,137,0,81,136,138,0,165,43,51,0,231,139,61,0,57,95,59,254,118,98,25,255,151,63,236,1,94,190,250,255,169,185,114,1,5,250,58,255,75,105,97,1,215,223,134,0,113,99,163,1,128,62,112,0,99,106,147,0,163,195,10,0,33,205,182,0,214,14,174,255,129,38,231,255,53,182,223,0,98,42,159,255,247,13,40,0,188,210,177,1,6,21,0,255,255,61,148,254,137,45,129,255,89,26,116,254,126,38,114,0,251,50,242,254,121,134,128,255,204,249,167,254,165,235,215,0,202,177,243,0,133,141,62,0,240,130,190,1,110,175,255,0,0,20,146,1,37,210,121,255,7,39,130,0,142,250,84,255,141,200,207,0,9,95,104,255,11,244,174,0,134,232,126,0,167,1,123,254,16,193,149,255,232,233,239,1,213,70,112,255,252,116,160,254,242,222,220,255,205,85,227,0,7,185,58,0,118,247,63,1,116,77,177,255,62,245,200,254,63,18,37,255,107,53,232,254,50,221,211,0,162,219,7,254,2,94,43,0,182,62,182,254,160,78,200,255,135,140,170,0,235,184,228,0,175,53,138,254,80,58,77,255,152,201,2,1,63,196,34,0,5,30,184,0,171,176,154,0,121,59,206,0,38,99,39,0,172,80,77,254,0,134,151,0,186,33,241,254,94,253,223,255,44,114,252,0,108,126,57,255,201,40,13,255,39,229,27,255,39,239,23,1,151,121,51,255,153,150,248,0,10,234,174,255,118,246,4,254,200,245,38,0,69,161,242,1,16,178,150,0,113,56,130,0,171,31,105,0,26,88,108,255,49,42,106,0,251,169,66,0,69,93,149,0,20,57,254,0,164,25,111,0,90,188,90,255,204,4,197,0,40,213,50,1,212,96,132,255,88,138,180,254,228,146,124,255,184,246,247,0,65,117,86,255,253,102,210,254,254,121,36,0,137,115,3,255,60,24,216,0,134,18,29,0,59,226,97,0,176,142,71,0,7,209,161,0,189,84,51,254,155,250,72,0,213,84,235,255,45,222,224,0,238,148,143,255,170,42,53,255,78,167,117,0,186,0,40,255,125,177,103,255,69,225,66,0,227,7,88,1,75,172,6,0,169,45,227,1,16,36,70,255,50,2,9,255,139,193,22,0,143,183,231,254,218,69,50,0,236,56,161,1,213,131,42,0,138,145,44,254,136,229,40,255,49,63,35,255,61,145,245,255,101,192,2,254,232,167,113,0,152,104,38,1,121,185,218,0,121,139,211,254,119,240,35,0,65,189,217,254,187,179,162,255,160,187,230,0,62,248,14,255,60,78,97,0,255,247,163,255,225,59,91,255,107,71,58,255,241,47,33,1,50,117,236,0,219,177,63,254,244,90,179,0,35,194,215,255,189,67,50,255,23,135,129,0,104,189,37,255,185,57,194,0,35,62,231,255,220,248,108,0,12,231,178,0,143,80,91,1,131,93,101,255,144,39,2,1,255,250,178,0,5,17,236,254,139,32,46,0,204,188,38,254,245,115,52,255,191,113,73,254,191,108,69,255,22,69,245,1,23,203,178,0,170,99,170,0,65,248,111,0,37,108,153,255,64,37,69,0,0,88,62,254,89,148,144,255,191,68,224,1,241,39,53,0,41,203,237,255,145,126,194,255,221,42,253,255,25,99,151,0,97,253,223,1,74,115,49,255,6,175,72,255,59,176,203,0,124,183,249,1,228,228,99,0,129,12,207,254,168,192,195,255,204,176,16,254,152,234,171,0,77,37,85,255,33,120,135,255,142,194,227,1,31,214,58,0,213,187,125,255,232,46,60,255,190,116,42,254,151,178,19,255,51,62,237,254,204,236,193,0,194,232,60,0,172,34,157,255,189,16,184,254,103,3,95,255,141,233,36,254,41,25,11,255,21,195,166,0,118,245,45,0,67,213,149,255,159,12,18,255,187,164,227,1,160,25,5,0,12,78,195,1,43,197,225,0,48,142,41,254,196,155,60,255,223,199,18,1,145,136,156,0,252,117,169,254,145,226,238,0,239,23,107,0,109,181,188,255,230,112,49,254,73,170,237,255,231,183,227,255,80,220,20,0,194,107,127,1,127,205,101,0,46,52,197,1,210,171,36,255,88,3,90,255,56,151,141,0,96,187,255,255,42,78,200,0,254,70,70,1,244,125,168,0,204,68,138,1,124,215,70,0,102,66,200,254,17,52,228,0,117,220,143,254,203,248,123,0,56,18,174,255,186,151,164,255,51,232,208,1,160,228,43,255,249,29,25,1,68,190,63,0,103,230,9,106,133,174,103,187,114,243,110,60,58,245,79,165,127,82,14,81,140,104,5,155,171,217,131,31,25,205,224,91,99,117,114,118,101,50,53,53,49,57,120,115,97,108,115,97,50,48,112,111,108,121,49,51,48,53,0,98,108,97,107,101,50,98,0,83,45,62,98,117,102,108,101,110,32,60,61,32,66,76,65,75,69,50,66,95,66,76,79,67,75,66,89,84,69,83,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,47,98,108,97,107,101,50,47,114,101,102,47,98,108,97,107,101,50,98,45,114,101,102,46,99,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,95,102,105,110,97,108,0,111,117,116,108,101,110,32,60,61,32,85,73,78,84,56,95,77,65,88,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,47,98,108,97,107,101,50,47,114,101,102,47,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,46,99,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,0,107,101,121,108,101,110,32,60,61,32,85,73,78,84,56,95,77,65,88,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,115,97,108,116,95,112,101,114,115,111,110,97,108,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,105,110,105,116,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,105,110,105,116,95,115,97,108,116,95,112,101,114,115,111,110,97,108,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,102,105,110,97,108,0,115,104,97,53,49,50,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,111,108,121,49,51,48,53,0,36,97,114,103,111,110,50,105,0,36,118,61,0,36,109,61,0,44,116,61,0,44,112,61,0,44,100,97,116,97,61,0,36,97,114,103,111,110,50,105,36,118,61,0,36,97,114,103,111,110,50,105,36,0,97,114,103,111,110,50,105,0,46,47,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,0,36,55,36,0,99,117,114,118,101,50,53,53,49,57,0,120,115,97,108,115,97,50,48,112,111,108,121,49,51,48,53,0,115,105,112,104,97,115,104,50,52,0,101,100,50,53,53,49,57,0,237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,120,115,97,108,115,97,50,48,0,106,115,0,123,32,114,101,116,117,114,110,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,40,41,59,32,125,0,123,32,105,102,32,40,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,61,61,32,117,110,100,101,102,105,110,101,100,41,32,123,32,116,114,121,32,123,32,118,97,114,32,119,105,110,100,111,119,95,32,61,32,34,111,98,106,101,99,116,34,32,61,61,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,32,63,32,119,105,110,100,111,119,32,58,32,115,101,108,102,44,32,99,114,121,112,116,111,95,32,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,95,46,99,114,121,112,116,111,32,33,61,61,32,34,117,110,100,101,102,105,110,101,100,34,32,63,32,119,105,110,100,111,119,95,46,99,114,121,112,116,111,32,58,32,119,105,110,100,111,119,95,46,109,115,67,114,121,112,116,111,44,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,32,118,97,114,32,98,117,102,32,61,32,110,101,119,32,85,105,110,116,51,50,65,114,114,97,121,40,49,41,59,32,99,114,121,112,116,111,95,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,115,40,98,117,102,41,59,32,114,101,116,117,114,110,32,98,117,102,91,48,93,32,62,62,62,32,48,59,32,125,59,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,40,41,59,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,59,32,125,32,99,97,116,99,104,32,40,101,41,32,123,32,116,114,121,32,123,32,118,97,114,32,99,114,121,112,116,111,32,61,32,114,101,113,117,105,114,101,40,39,99,114,121,112,116,111,39,41,44,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,32,118,97,114,32,98,117,102,32,61,32,99,114,121,112,116,111,46,114,97,110,100,111,109,66,121,116,101,115,40,52,41,59,32,114,101,116,117,114,110,32,40,98,117,102,91,48,93,32,60,60,32,50,52,32,124,32,98,117,102,91,49,93,32,60,60,32,49,54,32,124,32,98,117,102,91,50,93,32,60,60,32,56,32,124,32,98,117,102,91,51,93,41,32,62,62,62,32,48,59,32,125,59,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,40,41,59,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,59,32,125,32,99,97,116,99,104,32,40,101,41,32,123,32,116,104,114,111,119,32,39,78,111,32,115,101,99,117,114,101,32,114,97,110,100,111,109,32,110,117,109,98,101,114,32,103,101,110,101,114,97,116,111,114,32,102,111,117,110,100,39,59,32,125,32,125,32,125,32,125,0,98,117,102,95,108,101,110,32,60,61,32,83,73,90,69,95,77,65,88,0,114,97,110,100,111,109,98,121,116,101,115,47,114,97,110,100,111,109,98,121,116,101,115,46,99,0,114,97,110,100,111,109,98,121,116,101,115,0,49,46,48,46,49,49,0],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+30720);var tempDoublePtr=STATICTOP;STATICTOP+=16;Module["_bitshift64Ashr"]=_bitshift64Ashr;Module["_i64Subtract"]=_i64Subtract;Module["_i64Add"]=_i64Add;Module["_memset"]=_memset;Module["_bitshift64Lshr"]=_bitshift64Lshr;Module["_bitshift64Shl"]=_bitshift64Shl;function _abort(){Module["abort"]()}function ___assert_fail(condition,filename,line,func){ABORT=true;throw"Assertion failed: "+Pointer_stringify(condition)+", at: "+[filename?Pointer_stringify(filename):"unknown filename",line,func?Pointer_stringify(func):"unknown function"]+" at "+stackTrace()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}Module["_memcpy"]=_memcpy;var cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],"i8",ALLOC_STATIC);Module["_llvm_cttz_i32"]=_llvm_cttz_i32;Module["___udivmoddi4"]=___udivmoddi4;Module["___udivdi3"]=___udivdi3;Module["___muldsi3"]=___muldsi3;Module["___muldi3"]=___muldi3;function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;return value}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name){switch(name){case 30:return PAGE_SIZE;case 85:return totalMemory/PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator==="object")return navigator["hardwareConcurrency"]||1;return 1}}___setErrNo(ERRNO_CODES.EINVAL);return-1}Module["_sbrk"]=_sbrk;Module["_memmove"]=_memmove;Module["___uremdi3"]=___uremdi3;DYNAMICTOP_PTR=allocate(1,"i32",ALLOC_STATIC);STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=Runtime.alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;Module.asmGlobalArg={"Math":Math,"Int8Array":Int8Array,"Int16Array":Int16Array,"Int32Array":Int32Array,"Uint8Array":Uint8Array,"Uint16Array":Uint16Array,"Uint32Array":Uint32Array,"Float32Array":Float32Array,"Float64Array":Float64Array,"NaN":NaN,"Infinity":Infinity};Module.asmLibraryArg={"abort":abort,"assert":assert,"enlargeMemory":enlargeMemory,"getTotalMemory":getTotalMemory,"abortOnCannotGrowMemory":abortOnCannotGrowMemory,"_emscripten_asm_const_i":_emscripten_asm_const_i,"_sysconf":_sysconf,"_abort":_abort,"___setErrNo":___setErrNo,"_emscripten_memcpy_big":_emscripten_memcpy_big,"_emscripten_asm_const_v":_emscripten_asm_const_v,"___assert_fail":___assert_fail,"STACKTOP":STACKTOP,"STACK_MAX":STACK_MAX,"DYNAMICTOP_PTR":DYNAMICTOP_PTR,"tempDoublePtr":tempDoublePtr,"ABORT":ABORT,"cttz_i8":cttz_i8};// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer) {
"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.DYNAMICTOP_PTR|0;var l=env.tempDoublePtr|0;var m=env.ABORT|0;var n=env.cttz_i8|0;var o=0;var p=0;var q=0;var r=0;var s=global.NaN,t=global.Infinity;var u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;var D=0;var E=global.Math.floor;var F=global.Math.abs;var G=global.Math.sqrt;var H=global.Math.pow;var I=global.Math.cos;var J=global.Math.sin;var K=global.Math.tan;var L=global.Math.acos;var M=global.Math.asin;var N=global.Math.atan;var O=global.Math.atan2;var P=global.Math.exp;var Q=global.Math.log;var R=global.Math.ceil;var S=global.Math.imul;var T=global.Math.min;var U=global.Math.max;var V=global.Math.clz32;var W=env.abort;var X=env.assert;var Y=env.enlargeMemory;var Z=env.getTotalMemory;var _=env.abortOnCannotGrowMemory;var $=env._emscripten_asm_const_i;var aa=env._sysconf;var ba=env._abort;var ca=env.___setErrNo;var da=env._emscripten_memcpy_big;var ea=env._emscripten_asm_const_v;var fa=env.___assert_fail;var ga=0;
// EMSCRIPTEN_START_FUNCS
function ha(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;g=i;h=i=i+63&-64;i=i+720|0;e=0;do{k=b+(e<<3)|0;p=d[k+7>>0]|0;q=Pd(d[k+6>>0]|0|0,0,8)|0;j=D;o=Pd(d[k+5>>0]|0|0,0,16)|0;j=j|D;n=Pd(d[k+4>>0]|0|0,0,24)|0;j=j|D|(d[k+3>>0]|0);m=Pd(d[k+2>>0]|0|0,0,40)|0;j=j|D;l=Pd(d[k+1>>0]|0|0,0,48)|0;j=j|D;k=Pd(d[k>>0]|0|0,0,56)|0;f=h+80+(e<<3)|0;c[f>>2]=q|p|o|n|m|l|k;c[f+4>>2]=j|D;e=e+1|0}while((e|0)!=16);e=16;b=c[h+80>>2]|0;f=c[h+80+4>>2]|0;do{s=h+80+(e+-2<<3)|0;w=c[s>>2]|0;s=c[s+4>>2]|0;r=Rd(w|0,s|0,19)|0;k=D;j=Pd(w|0,s|0,45)|0;k=k|D;u=Rd(w|0,s|0,61)|0;v=D;t=Pd(w|0,s|0,3)|0;v=v|D;s=Rd(w|0,s|0,6)|0;k=v^D^k;v=h+80+(e+-7<<3)|0;w=c[v>>2]|0;v=c[v+4>>2]|0;o=h+80+(e+-15<<3)|0;y=b;b=c[o>>2]|0;x=f;f=c[o+4>>2]|0;o=Rd(b|0,f|0,1)|0;p=D;q=Pd(b|0,f|0,63)|0;p=p|D;l=Rd(b|0,f|0,8)|0;z=D;m=Pd(b|0,f|0,56)|0;z=z|D;n=Rd(b|0,f|0,7)|0;p=z^D^p;v=oe(y|0,x|0,w|0,v|0)|0;k=oe(v|0,D|0,(u|t)^s^(r|j)|0,k|0)|0;p=oe(k|0,D|0,(l|m)^n^(o|q)|0,p|0)|0;q=h+80+(e<<3)|0;c[q>>2]=p;c[q+4>>2]=D;e=e+1|0}while((e|0)!=80);e=h+16|0;b=a;f=e+64|0;do{c[e>>2]=c[b>>2];e=e+4|0;b=b+4|0}while((e|0)<(f|0));G=h+16+56|0;x=c[G>>2]|0;E=c[G+4>>2]|0;w=h+16+32|0;I=c[w>>2]|0;H=c[w+4>>2]|0;e=Rd(I|0,H|0,14)|0;z=D;F=Pd(I|0,H|0,50)|0;z=z|D;l=Rd(I|0,H|0,18)|0;A=D;L=Pd(I|0,H|0,46)|0;A=z^(A|D);z=Rd(I|0,H|0,41)|0;J=D;K=Pd(I|0,H|0,23)|0;J=A^(J|D);A=h+16+40|0;M=c[A>>2]|0;f=c[A+4>>2]|0;k=h+16+48|0;p=c[k>>2]|0;j=c[k+4>>2]|0;r=c[h+80>>2]|0;y=c[h+80+4>>2]|0;E=oe(x|0,E|0,-685199838,1116352408)|0;y=oe(E|0,D|0,r|0,y|0)|0;J=oe(y|0,D|0,(e|F)^(l|L)^(z|K)|0,J|0)|0;J=oe(J|0,D|0,(p^M)&I^p|0,(j^f)&H^j|0)|0;K=D;z=c[h+16>>2]|0;L=c[h+16+4>>2]|0;l=Rd(z|0,L|0,28)|0;F=D;e=Pd(z|0,L|0,36)|0;F=F|D;y=Rd(z|0,L|0,34)|0;r=D;E=Pd(z|0,L|0,30)|0;r=F^(r|D);F=Rd(z|0,L|0,39)|0;x=D;m=Pd(z|0,L|0,25)|0;C=h+16+8|0;o=c[C>>2]|0;q=c[C+4>>2]|0;B=h+16+16|0;b=c[B>>2]|0;s=c[B+4>>2]|0;x=oe((b|o)&z|b&o|0,(s|q)&L|s&q|0,(l|e)^(y|E)^(F|m)|0,r^(x|D)|0)|0;r=D;m=h+16+24|0;F=oe(c[m>>2]|0,c[m+4>>2]|0,J|0,K|0)|0;E=D;c[m>>2]=F;c[m+4>>2]=E;K=oe(x|0,r|0,J|0,K|0)|0;J=D;c[G>>2]=K;c[G+4>>2]=J;r=Rd(F|0,E|0,14)|0;x=D;y=Pd(F|0,E|0,50)|0;x=x|D;e=Rd(F|0,E|0,18)|0;l=D;u=Pd(F|0,E|0,46)|0;l=x^(l|D);x=Rd(F|0,E|0,41)|0;t=D;v=Pd(F|0,E|0,23)|0;t=l^(t|D);l=c[h+80+8>>2]|0;n=c[h+80+8+4>>2]|0;j=oe(p|0,j|0,602891725,1899447441)|0;t=oe(j|0,D|0,(r|y)^(e|u)^(x|v)|0,t|0)|0;n=oe(t|0,D|0,l|0,n|0)|0;H=oe(n|0,D|0,(M^I)&F^M|0,(f^H)&E^f|0)|0;I=D;n=Rd(K|0,J|0,28)|0;l=D;t=Pd(K|0,J|0,36)|0;l=l|D;v=Rd(K|0,J|0,34)|0;x=D;u=Pd(K|0,J|0,30)|0;x=l^(x|D);l=Rd(K|0,J|0,39)|0;e=D;y=Pd(K|0,J|0,25)|0;e=oe((o|z)&K|o&z|0,(q|L)&J|q&L|0,(n|t)^(v|u)^(l|y)|0,x^(e|D)|0)|0;x=D;s=oe(b|0,s|0,H|0,I|0)|0;b=D;c[B>>2]=s;c[B+4>>2]=b;I=oe(e|0,x|0,H|0,I|0)|0;H=D;c[k>>2]=I;c[k+4>>2]=H;x=Rd(s|0,b|0,14)|0;e=D;y=Pd(s|0,b|0,50)|0;e=e|D;l=Rd(s|0,b|0,18)|0;u=D;v=Pd(s|0,b|0,46)|0;u=e^(u|D);e=Rd(s|0,b|0,41)|0;t=D;n=Pd(s|0,b|0,23)|0;t=u^(t|D);u=c[w>>2]|0;r=c[w+4>>2]|0;j=c[h+80+16>>2]|0;p=c[h+80+16+4>>2]|0;f=oe(M|0,f|0,-330482897,-1245643825)|0;t=oe(f|0,D|0,(x|y)^(l|v)^(e|n)|0,t|0)|0;p=oe(t|0,D|0,j|0,p|0)|0;p=oe(p|0,D|0,(u^F)&s^u|0,(r^E)&b^r|0)|0;j=D;t=Rd(I|0,H|0,28)|0;n=D;e=Pd(I|0,H|0,36)|0;n=n|D;v=Rd(I|0,H|0,34)|0;l=D;y=Pd(I|0,H|0,30)|0;l=n^(l|D);n=Rd(I|0,H|0,39)|0;x=D;f=Pd(I|0,H|0,25)|0;x=oe((z|K)&I|z&K|0,(L|J)&H|L&J|0,(t|e)^(v|y)^(n|f)|0,l^(x|D)|0)|0;l=D;q=oe(o|0,q|0,p|0,j|0)|0;o=D;c[C>>2]=q;c[C+4>>2]=o;j=oe(x|0,l|0,p|0,j|0)|0;p=D;c[A>>2]=j;c[A+4>>2]=p;l=Rd(q|0,o|0,14)|0;x=D;f=Pd(q|0,o|0,50)|0;x=x|D;n=Rd(q|0,o|0,18)|0;y=D;v=Pd(q|0,o|0,46)|0;y=x^(y|D);x=Rd(q|0,o|0,41)|0;e=D;t=Pd(q|0,o|0,23)|0;e=y^(e|D);y=c[h+80+24>>2]|0;J=c[h+80+24+4>>2]|0;r=oe(u|0,r|0,-2121671748,-373957723)|0;e=oe(r|0,D|0,(l|f)^(n|v)^(x|t)|0,e|0)|0;J=oe(e|0,D|0,y|0,J|0)|0;J=oe(J|0,D|0,(F^s)&q^F|0,(E^b)&o^E|0)|0;y=D;e=Rd(j|0,p|0,28)|0;t=D;x=Pd(j|0,p|0,36)|0;t=t|D;v=Rd(j|0,p|0,34)|0;n=D;f=Pd(j|0,p|0,30)|0;n=t^(n|D);t=Rd(j|0,p|0,39)|0;l=D;r=Pd(j|0,p|0,25)|0;u=c[G>>2]|0;K=c[G+4>>2]|0;l=oe((u|I)&j|u&I|0,(K|H)&p|K&H|0,(e|x)^(v|f)^(t|r)|0,n^(l|D)|0)|0;n=D;L=oe(z|0,L|0,J|0,y|0)|0;z=D;c[h+16>>2]=L;c[h+16+4>>2]=z;y=oe(l|0,n|0,J|0,y|0)|0;J=D;c[w>>2]=y;c[w+4>>2]=J;n=Rd(L|0,z|0,14)|0;l=D;r=Pd(L|0,z|0,50)|0;l=l|D;t=Rd(L|0,z|0,18)|0;f=D;v=Pd(L|0,z|0,46)|0;f=l^(f|D);l=Rd(L|0,z|0,41)|0;x=D;e=Pd(L|0,z|0,23)|0;x=f^(x|D);f=c[h+80+32>>2]|0;H=c[h+80+32+4>>2]|0;E=oe(F|0,E|0,-213338824,961987163)|0;x=oe(E|0,D|0,(n|r)^(t|v)^(l|e)|0,x|0)|0;H=oe(x|0,D|0,f|0,H|0)|0;H=oe(H|0,D|0,(s^q)&L^s|0,(b^o)&z^b|0)|0;f=D;x=Rd(y|0,J|0,28)|0;e=D;l=Pd(y|0,J|0,36)|0;e=e|D;v=Rd(y|0,J|0,34)|0;t=D;r=Pd(y|0,J|0,30)|0;t=e^(t|D);e=Rd(y|0,J|0,39)|0;n=D;E=Pd(y|0,J|0,25)|0;F=c[k>>2]|0;I=c[k+4>>2]|0;n=oe((F|j)&y|F&j|0,(I|p)&J|I&p|0,(x|l)^(v|r)^(e|E)|0,t^(n|D)|0)|0;t=D;K=oe(u|0,K|0,H|0,f|0)|0;u=D;c[G>>2]=K;c[G+4>>2]=u;f=oe(n|0,t|0,H|0,f|0)|0;H=D;c[m>>2]=f;c[m+4>>2]=H;t=Rd(K|0,u|0,14)|0;n=D;E=Pd(K|0,u|0,50)|0;n=n|D;e=Rd(K|0,u|0,18)|0;r=D;v=Pd(K|0,u|0,46)|0;r=n^(r|D);n=Rd(K|0,u|0,41)|0;l=D;x=Pd(K|0,u|0,23)|0;l=r^(l|D);r=c[h+80+40>>2]|0;p=c[h+80+40+4>>2]|0;b=oe(s|0,b|0,-1241133031,1508970993)|0;l=oe(b|0,D|0,(t|E)^(e|v)^(n|x)|0,l|0)|0;p=oe(l|0,D|0,r|0,p|0)|0;p=oe(p|0,D|0,(q^L)&K^q|0,(o^z)&u^o|0)|0;r=D;l=Rd(f|0,H|0,28)|0;x=D;n=Pd(f|0,H|0,36)|0;x=x|D;v=Rd(f|0,H|0,34)|0;e=D;E=Pd(f|0,H|0,30)|0;e=x^(e|D);x=Rd(f|0,H|0,39)|0;t=D;b=Pd(f|0,H|0,25)|0;s=c[A>>2]|0;j=c[A+4>>2]|0;t=oe((s|y)&f|s&y|0,(j|J)&H|j&J|0,(l|n)^(v|E)^(x|b)|0,e^(t|D)|0)|0;e=D;I=oe(F|0,I|0,p|0,r|0)|0;F=D;c[k>>2]=I;c[k+4>>2]=F;r=oe(t|0,e|0,p|0,r|0)|0;p=D;c[B>>2]=r;c[B+4>>2]=p;e=Rd(I|0,F|0,14)|0;t=D;b=Pd(I|0,F|0,50)|0;t=t|D;x=Rd(I|0,F|0,18)|0;E=D;v=Pd(I|0,F|0,46)|0;E=t^(E|D);t=Rd(I|0,F|0,41)|0;n=D;l=Pd(I|0,F|0,23)|0;n=E^(n|D);E=c[h+80+48>>2]|0;J=c[h+80+48+4>>2]|0;o=oe(q|0,o|0,-1357295717,-1841331548)|0;n=oe(o|0,D|0,(e|b)^(x|v)^(t|l)|0,n|0)|0;J=oe(n|0,D|0,E|0,J|0)|0;J=oe(J|0,D|0,(L^K)&I^L|0,(z^u)&F^z|0)|0;E=D;n=Rd(r|0,p|0,28)|0;l=D;t=Pd(r|0,p|0,36)|0;l=l|D;v=Rd(r|0,p|0,34)|0;x=D;b=Pd(r|0,p|0,30)|0;x=l^(x|D);l=Rd(r|0,p|0,39)|0;e=D;o=Pd(r|0,p|0,25)|0;q=c[w>>2]|0;y=c[w+4>>2]|0;e=oe((q|f)&r|q&f|0,(y|H)&p|y&H|0,(n|t)^(v|b)^(l|o)|0,x^(e|D)|0)|0;x=D;j=oe(s|0,j|0,J|0,E|0)|0;s=D;c[A>>2]=j;c[A+4>>2]=s;E=oe(e|0,x|0,J|0,E|0)|0;J=D;c[C>>2]=E;c[C+4>>2]=J;x=Rd(j|0,s|0,14)|0;e=D;o=Pd(j|0,s|0,50)|0;e=e|D;l=Rd(j|0,s|0,18)|0;b=D;v=Pd(j|0,s|0,46)|0;b=e^(b|D);e=Rd(j|0,s|0,41)|0;t=D;n=Pd(j|0,s|0,23)|0;t=b^(t|D);b=c[h+80+56>>2]|0;H=c[h+80+56+4>>2]|0;z=oe(L|0,z|0,-630357736,-1424204075)|0;t=oe(z|0,D|0,(x|o)^(l|v)^(e|n)|0,t|0)|0;H=oe(t|0,D|0,b|0,H|0)|0;H=oe(H|0,D|0,(K^I)&j^K|0,(u^F)&s^u|0)|0;b=D;t=Rd(E|0,J|0,28)|0;n=D;e=Pd(E|0,J|0,36)|0;n=n|D;v=Rd(E|0,J|0,34)|0;l=D;o=Pd(E|0,J|0,30)|0;l=n^(l|D);n=Rd(E|0,J|0,39)|0;x=D;z=Pd(E|0,J|0,25)|0;L=c[m>>2]|0;f=c[m+4>>2]|0;x=oe((L|r)&E|L&r|0,(f|p)&J|f&p|0,(t|e)^(v|o)^(n|z)|0,l^(x|D)|0)|0;l=D;y=oe(q|0,y|0,H|0,b|0)|0;q=D;c[w>>2]=y;c[w+4>>2]=q;b=oe(x|0,l|0,H|0,b|0)|0;H=D;c[h+16>>2]=b;c[h+16+4>>2]=H;l=Rd(y|0,q|0,14)|0;x=D;z=Pd(y|0,q|0,50)|0;x=x|D;n=Rd(y|0,q|0,18)|0;o=D;v=Pd(y|0,q|0,46)|0;o=x^(o|D);x=Rd(y|0,q|0,41)|0;e=D;t=Pd(y|0,q|0,23)|0;e=o^(e|D);o=c[h+80+64>>2]|0;p=c[h+80+64+4>>2]|0;u=oe(K|0,u|0,-1560083902,-670586216)|0;e=oe(u|0,D|0,(l|z)^(n|v)^(x|t)|0,e|0)|0;p=oe(e|0,D|0,o|0,p|0)|0;p=oe(p|0,D|0,(I^j)&y^I|0,(F^s)&q^F|0)|0;o=D;e=Rd(b|0,H|0,28)|0;t=D;x=Pd(b|0,H|0,36)|0;t=t|D;v=Rd(b|0,H|0,34)|0;n=D;z=Pd(b|0,H|0,30)|0;n=t^(n|D);t=Rd(b|0,H|0,39)|0;l=D;u=Pd(b|0,H|0,25)|0;K=c[B>>2]|0;r=c[B+4>>2]|0;l=oe((K|E)&b|K&E|0,(r|J)&H|r&J|0,(e|x)^(v|z)^(t|u)|0,n^(l|D)|0)|0;n=D;f=oe(L|0,f|0,p|0,o|0)|0;L=D;c[m>>2]=f;c[m+4>>2]=L;o=oe(l|0,n|0,p|0,o|0)|0;p=D;c[G>>2]=o;c[G+4>>2]=p;n=Rd(f|0,L|0,14)|0;l=D;u=Pd(f|0,L|0,50)|0;l=l|D;t=Rd(f|0,L|0,18)|0;z=D;v=Pd(f|0,L|0,46)|0;z=l^(z|D);l=Rd(f|0,L|0,41)|0;x=D;e=Pd(f|0,L|0,23)|0;x=z^(x|D);z=c[h+80+72>>2]|0;J=c[h+80+72+4>>2]|0;F=oe(I|0,F|0,1164996542,310598401)|0;x=oe(F|0,D|0,(n|u)^(t|v)^(l|e)|0,x|0)|0;J=oe(x|0,D|0,z|0,J|0)|0;J=oe(J|0,D|0,(j^y)&f^j|0,(s^q)&L^s|0)|0;z=D;x=Rd(o|0,p|0,28)|0;e=D;l=Pd(o|0,p|0,36)|0;e=e|D;v=Rd(o|0,p|0,34)|0;t=D;u=Pd(o|0,p|0,30)|0;t=e^(t|D);e=Rd(o|0,p|0,39)|0;n=D;F=Pd(o|0,p|0,25)|0;I=c[C>>2]|0;E=c[C+4>>2]|0;n=oe((I|b)&o|I&b|0,(E|H)&p|E&H|0,(x|l)^(v|u)^(e|F)|0,t^(n|D)|0)|0;t=D;r=oe(K|0,r|0,J|0,z|0)|0;K=D;c[B>>2]=r;c[B+4>>2]=K;z=oe(n|0,t|0,J|0,z|0)|0;J=D;c[k>>2]=z;c[k+4>>2]=J;t=Rd(r|0,K|0,14)|0;n=D;F=Pd(r|0,K|0,50)|0;n=n|D;e=Rd(r|0,K|0,18)|0;u=D;v=Pd(r|0,K|0,46)|0;u=n^(u|D);n=Rd(r|0,K|0,41)|0;l=D;x=Pd(r|0,K|0,23)|0;l=u^(l|D);u=c[h+80+80>>2]|0;H=c[h+80+80+4>>2]|0;s=oe(j|0,s|0,1323610764,607225278)|0;l=oe(s|0,D|0,(t|F)^(e|v)^(n|x)|0,l|0)|0;H=oe(l|0,D|0,u|0,H|0)|0;H=oe(H|0,D|0,(y^f)&r^y|0,(q^L)&K^q|0)|0;u=D;l=Rd(z|0,J|0,28)|0;x=D;n=Pd(z|0,J|0,36)|0;x=x|D;v=Rd(z|0,J|0,34)|0;e=D;F=Pd(z|0,J|0,30)|0;e=x^(e|D);x=Rd(z|0,J|0,39)|0;t=D;s=Pd(z|0,J|0,25)|0;j=c[h+16>>2]|0;b=c[h+16+4>>2]|0;t=oe((j|o)&z|j&o|0,(b|p)&J|b&p|0,(l|n)^(v|F)^(x|s)|0,e^(t|D)|0)|0;e=D;E=oe(I|0,E|0,H|0,u|0)|0;I=D;c[C>>2]=E;c[C+4>>2]=I;u=oe(t|0,e|0,H|0,u|0)|0;H=D;c[A>>2]=u;c[A+4>>2]=H;e=Rd(E|0,I|0,14)|0;t=D;s=Pd(E|0,I|0,50)|0;t=t|D;x=Rd(E|0,I|0,18)|0;F=D;v=Pd(E|0,I|0,46)|0;F=t^(F|D);t=Rd(E|0,I|0,41)|0;n=D;l=Pd(E|0,I|0,23)|0;n=F^(n|D);F=c[h+80+88>>2]|0;p=c[h+80+88+4>>2]|0;q=oe(y|0,q|0,-704662302,1426881987)|0;n=oe(q|0,D|0,(e|s)^(x|v)^(t|l)|0,n|0)|0;p=oe(n|0,D|0,F|0,p|0)|0;p=oe(p|0,D|0,(f^r)&E^f|0,(L^K)&I^L|0)|0;F=D;n=Rd(u|0,H|0,28)|0;l=D;t=Pd(u|0,H|0,36)|0;l=l|D;v=Rd(u|0,H|0,34)|0;x=D;s=Pd(u|0,H|0,30)|0;x=l^(x|D);l=Rd(u|0,H|0,39)|0;e=D;q=Pd(u|0,H|0,25)|0;y=c[G>>2]|0;o=c[G+4>>2]|0;e=oe((y|z)&u|y&z|0,(o|J)&H|o&J|0,(n|t)^(v|s)^(l|q)|0,x^(e|D)|0)|0;x=D;b=oe(j|0,b|0,p|0,F|0)|0;j=D;c[h+16>>2]=b;c[h+16+4>>2]=j;F=oe(e|0,x|0,p|0,F|0)|0;p=D;c[w>>2]=F;c[w+4>>2]=p;x=Rd(b|0,j|0,14)|0;e=D;q=Pd(b|0,j|0,50)|0;e=e|D;l=Rd(b|0,j|0,18)|0;s=D;v=Pd(b|0,j|0,46)|0;s=e^(s|D);e=Rd(b|0,j|0,41)|0;t=D;n=Pd(b|0,j|0,23)|0;t=s^(t|D);s=c[h+80+96>>2]|0;J=c[h+80+96+4>>2]|0;L=oe(f|0,L|0,-226784913,1925078388)|0;t=oe(L|0,D|0,(x|q)^(l|v)^(e|n)|0,t|0)|0;J=oe(t|0,D|0,s|0,J|0)|0;J=oe(J|0,D|0,(r^E)&b^r|0,(K^I)&j^K|0)|0;s=D;t=Rd(F|0,p|0,28)|0;n=D;e=Pd(F|0,p|0,36)|0;n=n|D;v=Rd(F|0,p|0,34)|0;l=D;q=Pd(F|0,p|0,30)|0;l=n^(l|D);n=Rd(F|0,p|0,39)|0;x=D;L=Pd(F|0,p|0,25)|0;f=c[k>>2]|0;z=c[k+4>>2]|0;x=oe((f|u)&F|f&u|0,(z|H)&p|z&H|0,(t|e)^(v|q)^(n|L)|0,l^(x|D)|0)|0;l=D;o=oe(y|0,o|0,J|0,s|0)|0;y=D;c[G>>2]=o;c[G+4>>2]=y;s=oe(x|0,l|0,J|0,s|0)|0;J=D;c[m>>2]=s;c[m+4>>2]=J;l=Rd(o|0,y|0,14)|0;x=D;L=Pd(o|0,y|0,50)|0;x=x|D;n=Rd(o|0,y|0,18)|0;q=D;v=Pd(o|0,y|0,46)|0;q=x^(q|D);x=Rd(o|0,y|0,41)|0;e=D;t=Pd(o|0,y|0,23)|0;e=q^(e|D);q=c[h+80+104>>2]|0;H=c[h+80+104+4>>2]|0;K=oe(r|0,K|0,991336113,-2132889090)|0;e=oe(K|0,D|0,(l|L)^(n|v)^(x|t)|0,e|0)|0;H=oe(e|0,D|0,q|0,H|0)|0;H=oe(H|0,D|0,(E^b)&o^E|0,(I^j)&y^I|0)|0;q=D;e=Rd(s|0,J|0,28)|0;t=D;x=Pd(s|0,J|0,36)|0;t=t|D;v=Rd(s|0,J|0,34)|0;n=D;L=Pd(s|0,J|0,30)|0;n=t^(n|D);t=Rd(s|0,J|0,39)|0;l=D;K=Pd(s|0,J|0,25)|0;r=c[A>>2]|0;u=c[A+4>>2]|0;l=oe((r|F)&s|r&F|0,(u|p)&J|u&p|0,(e|x)^(v|L)^(t|K)|0,n^(l|D)|0)|0;n=D;z=oe(f|0,z|0,H|0,q|0)|0;f=D;c[k>>2]=z;c[k+4>>2]=f;q=oe(l|0,n|0,H|0,q|0)|0;H=D;c[B>>2]=q;c[B+4>>2]=H;n=Rd(z|0,f|0,14)|0;l=D;K=Pd(z|0,f|0,50)|0;l=l|D;t=Rd(z|0,f|0,18)|0;L=D;v=Pd(z|0,f|0,46)|0;L=l^(L|D);l=Rd(z|0,f|0,41)|0;x=D;e=Pd(z|0,f|0,23)|0;x=L^(x|D);L=c[h+80+112>>2]|0;p=c[h+80+112+4>>2]|0;I=oe(E|0,I|0,633803317,-1680079193)|0;x=oe(I|0,D|0,(n|K)^(t|v)^(l|e)|0,x|0)|0;p=oe(x|0,D|0,L|0,p|0)|0;p=oe(p|0,D|0,(b^o)&z^b|0,(j^y)&f^j|0)|0;L=D;x=Rd(q|0,H|0,28)|0;e=D;l=Pd(q|0,H|0,36)|0;e=e|D;v=Rd(q|0,H|0,34)|0;t=D;K=Pd(q|0,H|0,30)|0;t=e^(t|D);e=Rd(q|0,H|0,39)|0;n=D;I=Pd(q|0,H|0,25)|0;E=c[w>>2]|0;F=c[w+4>>2]|0;n=oe((E|s)&q|E&s|0,(F|J)&H|F&J|0,(x|l)^(v|K)^(e|I)|0,t^(n|D)|0)|0;t=D;u=oe(r|0,u|0,p|0,L|0)|0;r=D;c[A>>2]=u;c[A+4>>2]=r;L=oe(n|0,t|0,p|0,L|0)|0;p=D;c[C>>2]=L;c[C+4>>2]=p;t=Rd(u|0,r|0,14)|0;n=D;I=Pd(u|0,r|0,50)|0;n=n|D;e=Rd(u|0,r|0,18)|0;K=D;v=Pd(u|0,r|0,46)|0;K=n^(K|D);n=Rd(u|0,r|0,41)|0;l=D;x=Pd(u|0,r|0,23)|0;l=K^(l|D);K=c[h+80+120>>2]|0;J=c[h+80+120+4>>2]|0;j=oe(b|0,j|0,-815192428,-1046744716)|0;l=oe(j|0,D|0,(t|I)^(e|v)^(n|x)|0,l|0)|0;J=oe(l|0,D|0,K|0,J|0)|0;J=oe(J|0,D|0,(o^z)&u^o|0,(y^f)&r^y|0)|0;K=D;l=Rd(L|0,p|0,28)|0;x=D;n=Pd(L|0,p|0,36)|0;x=x|D;v=Rd(L|0,p|0,34)|0;e=D;I=Pd(L|0,p|0,30)|0;e=x^(e|D);x=Rd(L|0,p|0,39)|0;t=D;j=Pd(L|0,p|0,25)|0;b=c[m>>2]|0;s=c[m+4>>2]|0;t=oe((b|q)&L|b&q|0,(s|H)&p|s&H|0,(l|n)^(v|I)^(x|j)|0,e^(t|D)|0)|0;e=D;F=oe(E|0,F|0,J|0,K|0)|0;E=D;c[w>>2]=F;c[w+4>>2]=E;K=oe(t|0,e|0,J|0,K|0)|0;J=D;c[h+16>>2]=K;c[h+16+4>>2]=J;e=Rd(F|0,E|0,14)|0;t=D;j=Pd(F|0,E|0,50)|0;t=t|D;x=Rd(F|0,E|0,18)|0;I=D;v=Pd(F|0,E|0,46)|0;I=t^(I|D);t=Rd(F|0,E|0,41)|0;n=D;l=Pd(F|0,E|0,23)|0;n=I^(n|D);I=c[h+80+128>>2]|0;H=c[h+80+128+4>>2]|0;y=oe(o|0,y|0,-1628353838,-459576895)|0;n=oe(y|0,D|0,(e|j)^(x|v)^(t|l)|0,n|0)|0;H=oe(n|0,D|0,I|0,H|0)|0;H=oe(H|0,D|0,(z^u)&F^z|0,(f^r)&E^f|0)|0;I=D;n=Rd(K|0,J|0,28)|0;l=D;t=Pd(K|0,J|0,36)|0;l=l|D;v=Rd(K|0,J|0,34)|0;x=D;j=Pd(K|0,J|0,30)|0;x=l^(x|D);l=Rd(K|0,J|0,39)|0;e=D;y=Pd(K|0,J|0,25)|0;o=c[B>>2]|0;q=c[B+4>>2]|0;e=oe((o|L)&K|o&L|0,(q|p)&J|q&p|0,(n|t)^(v|j)^(l|y)|0,x^(e|D)|0)|0;x=D;s=oe(b|0,s|0,H|0,I|0)|0;b=D;c[m>>2]=s;c[m+4>>2]=b;I=oe(e|0,x|0,H|0,I|0)|0;H=D;c[G>>2]=I;c[G+4>>2]=H;x=Rd(s|0,b|0,14)|0;e=D;y=Pd(s|0,b|0,50)|0;e=e|D;l=Rd(s|0,b|0,18)|0;j=D;v=Pd(s|0,b|0,46)|0;j=e^(j|D);e=Rd(s|0,b|0,41)|0;t=D;n=Pd(s|0,b|0,23)|0;t=j^(t|D);j=c[h+80+136>>2]|0;p=c[h+80+136+4>>2]|0;f=oe(z|0,f|0,944711139,-272742522)|0;t=oe(f|0,D|0,(x|y)^(l|v)^(e|n)|0,t|0)|0;p=oe(t|0,D|0,j|0,p|0)|0;p=oe(p|0,D|0,(u^F)&s^u|0,(r^E)&b^r|0)|0;j=D;t=Rd(I|0,H|0,28)|0;n=D;e=Pd(I|0,H|0,36)|0;n=n|D;v=Rd(I|0,H|0,34)|0;l=D;y=Pd(I|0,H|0,30)|0;l=n^(l|D);n=Rd(I|0,H|0,39)|0;x=D;f=Pd(I|0,H|0,25)|0;z=c[C>>2]|0;L=c[C+4>>2]|0;x=oe((z|K)&I|z&K|0,(L|J)&H|L&J|0,(t|e)^(v|y)^(n|f)|0,l^(x|D)|0)|0;l=D;q=oe(o|0,q|0,p|0,j|0)|0;o=D;c[B>>2]=q;c[B+4>>2]=o;j=oe(x|0,l|0,p|0,j|0)|0;p=D;c[k>>2]=j;c[k+4>>2]=p;l=Rd(q|0,o|0,14)|0;x=D;f=Pd(q|0,o|0,50)|0;x=x|D;n=Rd(q|0,o|0,18)|0;y=D;v=Pd(q|0,o|0,46)|0;y=x^(y|D);x=Rd(q|0,o|0,41)|0;e=D;t=Pd(q|0,o|0,23)|0;e=y^(e|D);y=c[h+80+144>>2]|0;J=c[h+80+144+4>>2]|0;r=oe(u|0,r|0,-1953704523,264347078)|0;e=oe(r|0,D|0,(l|f)^(n|v)^(x|t)|0,e|0)|0;J=oe(e|0,D|0,y|0,J|0)|0;J=oe(J|0,D|0,(F^s)&q^F|0,(E^b)&o^E|0)|0;y=D;e=Rd(j|0,p|0,28)|0;t=D;x=Pd(j|0,p|0,36)|0;t=t|D;v=Rd(j|0,p|0,34)|0;n=D;f=Pd(j|0,p|0,30)|0;n=t^(n|D);t=Rd(j|0,p|0,39)|0;l=D;r=Pd(j|0,p|0,25)|0;u=c[h+16>>2]|0;K=c[h+16+4>>2]|0;l=oe((u|I)&j|u&I|0,(K|H)&p|K&H|0,(e|x)^(v|f)^(t|r)|0,n^(l|D)|0)|0;n=D;L=oe(z|0,L|0,J|0,y|0)|0;z=D;c[C>>2]=L;c[C+4>>2]=z;y=oe(l|0,n|0,J|0,y|0)|0;J=D;c[A>>2]=y;c[A+4>>2]=J;n=Rd(L|0,z|0,14)|0;l=D;r=Pd(L|0,z|0,50)|0;l=l|D;t=Rd(L|0,z|0,18)|0;f=D;v=Pd(L|0,z|0,46)|0;f=l^(f|D);l=Rd(L|0,z|0,41)|0;x=D;e=Pd(L|0,z|0,23)|0;x=f^(x|D);f=c[h+80+152>>2]|0;H=c[h+80+152+4>>2]|0;E=oe(F|0,E|0,2007800933,604807628)|0;x=oe(E|0,D|0,(n|r)^(t|v)^(l|e)|0,x|0)|0;H=oe(x|0,D|0,f|0,H|0)|0;H=oe(H|0,D|0,(s^q)&L^s|0,(b^o)&z^b|0)|0;f=D;x=Rd(y|0,J|0,28)|0;e=D;l=Pd(y|0,J|0,36)|0;e=e|D;v=Rd(y|0,J|0,34)|0;t=D;r=Pd(y|0,J|0,30)|0;t=e^(t|D);e=Rd(y|0,J|0,39)|0;n=D;E=Pd(y|0,J|0,25)|0;F=c[G>>2]|0;I=c[G+4>>2]|0;n=oe((F|j)&y|F&j|0,(I|p)&J|I&p|0,(x|l)^(v|r)^(e|E)|0,t^(n|D)|0)|0;t=D;K=oe(u|0,K|0,H|0,f|0)|0;u=D;c[h+16>>2]=K;c[h+16+4>>2]=u;f=oe(n|0,t|0,H|0,f|0)|0;H=D;c[w>>2]=f;c[w+4>>2]=H;t=Rd(K|0,u|0,14)|0;n=D;E=Pd(K|0,u|0,50)|0;n=n|D;e=Rd(K|0,u|0,18)|0;r=D;v=Pd(K|0,u|0,46)|0;r=n^(r|D);n=Rd(K|0,u|0,41)|0;l=D;x=Pd(K|0,u|0,23)|0;l=r^(l|D);r=c[h+80+160>>2]|0;p=c[h+80+160+4>>2]|0;b=oe(s|0,b|0,1495990901,770255983)|0;l=oe(b|0,D|0,(t|E)^(e|v)^(n|x)|0,l|0)|0;p=oe(l|0,D|0,r|0,p|0)|0;p=oe(p|0,D|0,(q^L)&K^q|0,(o^z)&u^o|0)|0;r=D;l=Rd(f|0,H|0,28)|0;x=D;n=Pd(f|0,H|0,36)|0;x=x|D;v=Rd(f|0,H|0,34)|0;e=D;E=Pd(f|0,H|0,30)|0;e=x^(e|D);x=Rd(f|0,H|0,39)|0;t=D;b=Pd(f|0,H|0,25)|0;s=c[k>>2]|0;j=c[k+4>>2]|0;t=oe((s|y)&f|s&y|0,(j|J)&H|j&J|0,(l|n)^(v|E)^(x|b)|0,e^(t|D)|0)|0;e=D;I=oe(F|0,I|0,p|0,r|0)|0;F=D;c[G>>2]=I;c[G+4>>2]=F;r=oe(t|0,e|0,p|0,r|0)|0;p=D;c[m>>2]=r;c[m+4>>2]=p;e=Rd(I|0,F|0,14)|0;t=D;b=Pd(I|0,F|0,50)|0;t=t|D;x=Rd(I|0,F|0,18)|0;E=D;v=Pd(I|0,F|0,46)|0;E=t^(E|D);t=Rd(I|0,F|0,41)|0;n=D;l=Pd(I|0,F|0,23)|0;n=E^(n|D);E=c[h+80+168>>2]|0;J=c[h+80+168+4>>2]|0;o=oe(q|0,o|0,1856431235,1249150122)|0;n=oe(o|0,D|0,(e|b)^(x|v)^(t|l)|0,n|0)|0;J=oe(n|0,D|0,E|0,J|0)|0;J=oe(J|0,D|0,(L^K)&I^L|0,(z^u)&F^z|0)|0;E=D;n=Rd(r|0,p|0,28)|0;l=D;t=Pd(r|0,p|0,36)|0;l=l|D;v=Rd(r|0,p|0,34)|0;x=D;b=Pd(r|0,p|0,30)|0;x=l^(x|D);l=Rd(r|0,p|0,39)|0;e=D;o=Pd(r|0,p|0,25)|0;q=c[A>>2]|0;y=c[A+4>>2]|0;e=oe((q|f)&r|q&f|0,(y|H)&p|y&H|0,(n|t)^(v|b)^(l|o)|0,x^(e|D)|0)|0;x=D;j=oe(s|0,j|0,J|0,E|0)|0;s=D;c[k>>2]=j;c[k+4>>2]=s;E=oe(e|0,x|0,J|0,E|0)|0;J=D;c[B>>2]=E;c[B+4>>2]=J;x=Rd(j|0,s|0,14)|0;e=D;o=Pd(j|0,s|0,50)|0;e=e|D;l=Rd(j|0,s|0,18)|0;b=D;v=Pd(j|0,s|0,46)|0;b=e^(b|D);e=Rd(j|0,s|0,41)|0;t=D;n=Pd(j|0,s|0,23)|0;t=b^(t|D);b=c[h+80+176>>2]|0;H=c[h+80+176+4>>2]|0;z=oe(L|0,z|0,-1119749164,1555081692)|0;t=oe(z|0,D|0,(x|o)^(l|v)^(e|n)|0,t|0)|0;H=oe(t|0,D|0,b|0,H|0)|0;H=oe(H|0,D|0,(K^I)&j^K|0,(u^F)&s^u|0)|0;b=D;t=Rd(E|0,J|0,28)|0;n=D;e=Pd(E|0,J|0,36)|0;n=n|D;v=Rd(E|0,J|0,34)|0;l=D;o=Pd(E|0,J|0,30)|0;l=n^(l|D);n=Rd(E|0,J|0,39)|0;x=D;z=Pd(E|0,J|0,25)|0;L=c[w>>2]|0;f=c[w+4>>2]|0;x=oe((L|r)&E|L&r|0,(f|p)&J|f&p|0,(t|e)^(v|o)^(n|z)|0,l^(x|D)|0)|0;l=D;y=oe(q|0,y|0,H|0,b|0)|0;q=D;c[A>>2]=y;c[A+4>>2]=q;b=oe(x|0,l|0,H|0,b|0)|0;H=D;c[C>>2]=b;c[C+4>>2]=H;l=Rd(y|0,q|0,14)|0;x=D;z=Pd(y|0,q|0,50)|0;x=x|D;n=Rd(y|0,q|0,18)|0;o=D;v=Pd(y|0,q|0,46)|0;o=x^(o|D);x=Rd(y|0,q|0,41)|0;e=D;t=Pd(y|0,q|0,23)|0;e=o^(e|D);o=c[h+80+184>>2]|0;p=c[h+80+184+4>>2]|0;u=oe(K|0,u|0,-2096016459,1996064986)|0;e=oe(u|0,D|0,(l|z)^(n|v)^(x|t)|0,e|0)|0;p=oe(e|0,D|0,o|0,p|0)|0;p=oe(p|0,D|0,(I^j)&y^I|0,(F^s)&q^F|0)|0;o=D;e=Rd(b|0,H|0,28)|0;t=D;x=Pd(b|0,H|0,36)|0;t=t|D;v=Rd(b|0,H|0,34)|0;n=D;z=Pd(b|0,H|0,30)|0;n=t^(n|D);t=Rd(b|0,H|0,39)|0;l=D;u=Pd(b|0,H|0,25)|0;K=c[m>>2]|0;r=c[m+4>>2]|0;l=oe((K|E)&b|K&E|0,(r|J)&H|r&J|0,(e|x)^(v|z)^(t|u)|0,n^(l|D)|0)|0;n=D;f=oe(L|0,f|0,p|0,o|0)|0;L=D;c[w>>2]=f;c[w+4>>2]=L;o=oe(l|0,n|0,p|0,o|0)|0;p=D;c[h+16>>2]=o;c[h+16+4>>2]=p;n=Rd(f|0,L|0,14)|0;l=D;u=Pd(f|0,L|0,50)|0;l=l|D;t=Rd(f|0,L|0,18)|0;z=D;v=Pd(f|0,L|0,46)|0;z=l^(z|D);l=Rd(f|0,L|0,41)|0;x=D;e=Pd(f|0,L|0,23)|0;x=z^(x|D);z=c[h+80+192>>2]|0;J=c[h+80+192+4>>2]|0;F=oe(I|0,F|0,-295247957,-1740746414)|0;x=oe(F|0,D|0,(n|u)^(t|v)^(l|e)|0,x|0)|0;J=oe(x|0,D|0,z|0,J|0)|0;J=oe(J|0,D|0,(j^y)&f^j|0,(s^q)&L^s|0)|0;z=D;x=Rd(o|0,p|0,28)|0;e=D;l=Pd(o|0,p|0,36)|0;e=e|D;v=Rd(o|0,p|0,34)|0;t=D;u=Pd(o|0,p|0,30)|0;t=e^(t|D);e=Rd(o|0,p|0,39)|0;n=D;F=Pd(o|0,p|0,25)|0;I=c[B>>2]|0;E=c[B+4>>2]|0;n=oe((I|b)&o|I&b|0,(E|H)&p|E&H|0,(x|l)^(v|u)^(e|F)|0,t^(n|D)|0)|0;t=D;r=oe(K|0,r|0,J|0,z|0)|0;K=D;c[m>>2]=r;c[m+4>>2]=K;z=oe(n|0,t|0,J|0,z|0)|0;J=D;c[G>>2]=z;c[G+4>>2]=J;t=Rd(r|0,K|0,14)|0;n=D;F=Pd(r|0,K|0,50)|0;n=n|D;e=Rd(r|0,K|0,18)|0;u=D;v=Pd(r|0,K|0,46)|0;u=n^(u|D);n=Rd(r|0,K|0,41)|0;l=D;x=Pd(r|0,K|0,23)|0;l=u^(l|D);u=c[h+80+200>>2]|0;H=c[h+80+200+4>>2]|0;s=oe(j|0,s|0,766784016,-1473132947)|0;l=oe(s|0,D|0,(t|F)^(e|v)^(n|x)|0,l|0)|0;H=oe(l|0,D|0,u|0,H|0)|0;H=oe(H|0,D|0,(y^f)&r^y|0,(q^L)&K^q|0)|0;u=D;l=Rd(z|0,J|0,28)|0;x=D;n=Pd(z|0,J|0,36)|0;x=x|D;v=Rd(z|0,J|0,34)|0;e=D;F=Pd(z|0,J|0,30)|0;e=x^(e|D);x=Rd(z|0,J|0,39)|0;t=D;s=Pd(z|0,J|0,25)|0;j=c[C>>2]|0;b=c[C+4>>2]|0;t=oe((j|o)&z|j&o|0,(b|p)&J|b&p|0,(l|n)^(v|F)^(x|s)|0,e^(t|D)|0)|0;e=D;E=oe(I|0,E|0,H|0,u|0)|0;I=D;c[B>>2]=E;c[B+4>>2]=I;u=oe(t|0,e|0,H|0,u|0)|0;H=D;c[k>>2]=u;c[k+4>>2]=H;e=Rd(E|0,I|0,14)|0;t=D;s=Pd(E|0,I|0,50)|0;t=t|D;x=Rd(E|0,I|0,18)|0;F=D;v=Pd(E|0,I|0,46)|0;F=t^(F|D);t=Rd(E|0,I|0,41)|0;n=D;l=Pd(E|0,I|0,23)|0;n=F^(n|D);F=c[h+80+208>>2]|0;p=c[h+80+208+4>>2]|0;q=oe(y|0,q|0,-1728372417,-1341970488)|0;n=oe(q|0,D|0,(e|s)^(x|v)^(t|l)|0,n|0)|0;p=oe(n|0,D|0,F|0,p|0)|0;p=oe(p|0,D|0,(f^r)&E^f|0,(L^K)&I^L|0)|0;F=D;n=Rd(u|0,H|0,28)|0;l=D;t=Pd(u|0,H|0,36)|0;l=l|D;v=Rd(u|0,H|0,34)|0;x=D;s=Pd(u|0,H|0,30)|0;x=l^(x|D);l=Rd(u|0,H|0,39)|0;e=D;q=Pd(u|0,H|0,25)|0;y=c[h+16>>2]|0;o=c[h+16+4>>2]|0;e=oe((y|z)&u|y&z|0,(o|J)&H|o&J|0,(n|t)^(v|s)^(l|q)|0,x^(e|D)|0)|0;x=D;b=oe(j|0,b|0,p|0,F|0)|0;j=D;c[C>>2]=b;c[C+4>>2]=j;F=oe(e|0,x|0,p|0,F|0)|0;p=D;c[A>>2]=F;c[A+4>>2]=p;x=Rd(b|0,j|0,14)|0;e=D;q=Pd(b|0,j|0,50)|0;e=e|D;l=Rd(b|0,j|0,18)|0;s=D;v=Pd(b|0,j|0,46)|0;s=e^(s|D);e=Rd(b|0,j|0,41)|0;t=D;n=Pd(b|0,j|0,23)|0;t=s^(t|D);s=c[h+80+216>>2]|0;J=c[h+80+216+4>>2]|0;L=oe(f|0,L|0,-1091629340,-1084653625)|0;t=oe(L|0,D|0,(x|q)^(l|v)^(e|n)|0,t|0)|0;J=oe(t|0,D|0,s|0,J|0)|0;J=oe(J|0,D|0,(r^E)&b^r|0,(K^I)&j^K|0)|0;s=D;t=Rd(F|0,p|0,28)|0;n=D;e=Pd(F|0,p|0,36)|0;n=n|D;v=Rd(F|0,p|0,34)|0;l=D;q=Pd(F|0,p|0,30)|0;l=n^(l|D);n=Rd(F|0,p|0,39)|0;x=D;L=Pd(F|0,p|0,25)|0;f=c[G>>2]|0;z=c[G+4>>2]|0;x=oe((f|u)&F|f&u|0,(z|H)&p|z&H|0,(t|e)^(v|q)^(n|L)|0,l^(x|D)|0)|0;l=D;o=oe(y|0,o|0,J|0,s|0)|0;y=D;c[h+16>>2]=o;c[h+16+4>>2]=y;s=oe(x|0,l|0,J|0,s|0)|0;J=D;c[w>>2]=s;c[w+4>>2]=J;l=Rd(o|0,y|0,14)|0;x=D;L=Pd(o|0,y|0,50)|0;x=x|D;n=Rd(o|0,y|0,18)|0;q=D;v=Pd(o|0,y|0,46)|0;q=x^(q|D);x=Rd(o|0,y|0,41)|0;e=D;t=Pd(o|0,y|0,23)|0;e=q^(e|D);q=c[h+80+224>>2]|0;H=c[h+80+224+4>>2]|0;K=oe(r|0,K|0,1034457026,-958395405)|0;e=oe(K|0,D|0,(l|L)^(n|v)^(x|t)|0,e|0)|0;H=oe(e|0,D|0,q|0,H|0)|0;H=oe(H|0,D|0,(E^b)&o^E|0,(I^j)&y^I|0)|0;q=D;e=Rd(s|0,J|0,28)|0;t=D;x=Pd(s|0,J|0,36)|0;t=t|D;v=Rd(s|0,J|0,34)|0;n=D;L=Pd(s|0,J|0,30)|0;n=t^(n|D);t=Rd(s|0,J|0,39)|0;l=D;K=Pd(s|0,J|0,25)|0;r=c[k>>2]|0;u=c[k+4>>2]|0;l=oe((r|F)&s|r&F|0,(u|p)&J|u&p|0,(e|x)^(v|L)^(t|K)|0,n^(l|D)|0)|0;n=D;z=oe(f|0,z|0,H|0,q|0)|0;f=D;c[G>>2]=z;c[G+4>>2]=f;q=oe(l|0,n|0,H|0,q|0)|0;H=D;c[m>>2]=q;c[m+4>>2]=H;n=Rd(z|0,f|0,14)|0;l=D;K=Pd(z|0,f|0,50)|0;l=l|D;t=Rd(z|0,f|0,18)|0;L=D;v=Pd(z|0,f|0,46)|0;L=l^(L|D);l=Rd(z|0,f|0,41)|0;x=D;e=Pd(z|0,f|0,23)|0;x=L^(x|D);L=c[h+80+232>>2]|0;p=c[h+80+232+4>>2]|0;I=oe(E|0,I|0,-1828018395,-710438585)|0;x=oe(I|0,D|0,(n|K)^(t|v)^(l|e)|0,x|0)|0;p=oe(x|0,D|0,L|0,p|0)|0;p=oe(p|0,D|0,(b^o)&z^b|0,(j^y)&f^j|0)|0;L=D;x=Rd(q|0,H|0,28)|0;e=D;l=Pd(q|0,H|0,36)|0;e=e|D;v=Rd(q|0,H|0,34)|0;t=D;K=Pd(q|0,H|0,30)|0;t=e^(t|D);e=Rd(q|0,H|0,39)|0;n=D;I=Pd(q|0,H|0,25)|0;E=c[A>>2]|0;F=c[A+4>>2]|0;n=oe((E|s)&q|E&s|0,(F|J)&H|F&J|0,(x|l)^(v|K)^(e|I)|0,t^(n|D)|0)|0;t=D;u=oe(r|0,u|0,p|0,L|0)|0;r=D;c[k>>2]=u;c[k+4>>2]=r;L=oe(n|0,t|0,p|0,L|0)|0;p=D;c[B>>2]=L;c[B+4>>2]=p;t=Rd(u|0,r|0,14)|0;n=D;I=Pd(u|0,r|0,50)|0;n=n|D;e=Rd(u|0,r|0,18)|0;K=D;v=Pd(u|0,r|0,46)|0;K=n^(K|D);n=Rd(u|0,r|0,41)|0;l=D;x=Pd(u|0,r|0,23)|0;l=K^(l|D);K=c[h+80+240>>2]|0;J=c[h+80+240+4>>2]|0;j=oe(b|0,j|0,-536640913,113926993)|0;l=oe(j|0,D|0,(t|I)^(e|v)^(n|x)|0,l|0)|0;J=oe(l|0,D|0,K|0,J|0)|0;J=oe(J|0,D|0,(o^z)&u^o|0,(y^f)&r^y|0)|0;K=D;l=Rd(L|0,p|0,28)|0;x=D;n=Pd(L|0,p|0,36)|0;x=x|D;v=Rd(L|0,p|0,34)|0;e=D;I=Pd(L|0,p|0,30)|0;e=x^(e|D);x=Rd(L|0,p|0,39)|0;t=D;j=Pd(L|0,p|0,25)|0;b=c[w>>2]|0;s=c[w+4>>2]|0;t=oe((b|q)&L|b&q|0,(s|H)&p|s&H|0,(l|n)^(v|I)^(x|j)|0,e^(t|D)|0)|0;e=D;F=oe(E|0,F|0,J|0,K|0)|0;E=D;c[A>>2]=F;c[A+4>>2]=E;K=oe(t|0,e|0,J|0,K|0)|0;J=D;c[C>>2]=K;c[C+4>>2]=J;e=Rd(F|0,E|0,14)|0;t=D;j=Pd(F|0,E|0,50)|0;t=t|D;x=Rd(F|0,E|0,18)|0;I=D;v=Pd(F|0,E|0,46)|0;I=t^(I|D);t=Rd(F|0,E|0,41)|0;n=D;l=Pd(F|0,E|0,23)|0;n=I^(n|D);I=c[h+80+248>>2]|0;H=c[h+80+248+4>>2]|0;y=oe(o|0,y|0,168717936,338241895)|0;n=oe(y|0,D|0,(e|j)^(x|v)^(t|l)|0,n|0)|0;H=oe(n|0,D|0,I|0,H|0)|0;H=oe(H|0,D|0,(z^u)&F^z|0,(f^r)&E^f|0)|0;I=D;n=Rd(K|0,J|0,28)|0;l=D;t=Pd(K|0,J|0,36)|0;l=l|D;v=Rd(K|0,J|0,34)|0;x=D;j=Pd(K|0,J|0,30)|0;x=l^(x|D);l=Rd(K|0,J|0,39)|0;e=D;y=Pd(K|0,J|0,25)|0;o=c[m>>2]|0;q=c[m+4>>2]|0;e=oe((o|L)&K|o&L|0,(q|p)&J|q&p|0,(n|t)^(v|j)^(l|y)|0,x^(e|D)|0)|0;x=D;s=oe(b|0,s|0,H|0,I|0)|0;b=D;c[w>>2]=s;c[w+4>>2]=b;I=oe(e|0,x|0,H|0,I|0)|0;H=D;c[h+16>>2]=I;c[h+16+4>>2]=H;x=Rd(s|0,b|0,14)|0;e=D;y=Pd(s|0,b|0,50)|0;e=e|D;l=Rd(s|0,b|0,18)|0;j=D;v=Pd(s|0,b|0,46)|0;j=e^(j|D);e=Rd(s|0,b|0,41)|0;t=D;n=Pd(s|0,b|0,23)|0;t=j^(t|D);j=c[h+80+256>>2]|0;p=c[h+80+256+4>>2]|0;f=oe(z|0,f|0,1188179964,666307205)|0;t=oe(f|0,D|0,(x|y)^(l|v)^(e|n)|0,t|0)|0;p=oe(t|0,D|0,j|0,p|0)|0;p=oe(p|0,D|0,(u^F)&s^u|0,(r^E)&b^r|0)|0;j=D;t=Rd(I|0,H|0,28)|0;n=D;e=Pd(I|0,H|0,36)|0;n=n|D;v=Rd(I|0,H|0,34)|0;l=D;y=Pd(I|0,H|0,30)|0;l=n^(l|D);n=Rd(I|0,H|0,39)|0;x=D;f=Pd(I|0,H|0,25)|0;z=c[B>>2]|0;L=c[B+4>>2]|0;x=oe((z|K)&I|z&K|0,(L|J)&H|L&J|0,(t|e)^(v|y)^(n|f)|0,l^(x|D)|0)|0;l=D;q=oe(o|0,q|0,p|0,j|0)|0;o=D;c[m>>2]=q;c[m+4>>2]=o;j=oe(x|0,l|0,p|0,j|0)|0;p=D;c[G>>2]=j;c[G+4>>2]=p;l=Rd(q|0,o|0,14)|0;x=D;f=Pd(q|0,o|0,50)|0;x=x|D;n=Rd(q|0,o|0,18)|0;y=D;v=Pd(q|0,o|0,46)|0;y=x^(y|D);x=Rd(q|0,o|0,41)|0;e=D;t=Pd(q|0,o|0,23)|0;e=y^(e|D);y=c[h+80+264>>2]|0;J=c[h+80+264+4>>2]|0;r=oe(u|0,r|0,1546045734,773529912)|0;e=oe(r|0,D|0,(l|f)^(n|v)^(x|t)|0,e|0)|0;J=oe(e|0,D|0,y|0,J|0)|0;J=oe(J|0,D|0,(F^s)&q^F|0,(E^b)&o^E|0)|0;y=D;e=Rd(j|0,p|0,28)|0;t=D;x=Pd(j|0,p|0,36)|0;t=t|D;v=Rd(j|0,p|0,34)|0;n=D;f=Pd(j|0,p|0,30)|0;n=t^(n|D);t=Rd(j|0,p|0,39)|0;l=D;r=Pd(j|0,p|0,25)|0;u=c[C>>2]|0;K=c[C+4>>2]|0;l=oe((u|I)&j|u&I|0,(K|H)&p|K&H|0,(e|x)^(v|f)^(t|r)|0,n^(l|D)|0)|0;n=D;L=oe(z|0,L|0,J|0,y|0)|0;z=D;c[B>>2]=L;c[B+4>>2]=z;y=oe(l|0,n|0,J|0,y|0)|0;J=D;c[k>>2]=y;c[k+4>>2]=J;n=Rd(L|0,z|0,14)|0;l=D;r=Pd(L|0,z|0,50)|0;l=l|D;t=Rd(L|0,z|0,18)|0;f=D;v=Pd(L|0,z|0,46)|0;f=l^(f|D);l=Rd(L|0,z|0,41)|0;x=D;e=Pd(L|0,z|0,23)|0;x=f^(x|D);f=c[h+80+272>>2]|0;H=c[h+80+272+4>>2]|0;E=oe(F|0,E|0,1522805485,1294757372)|0;x=oe(E|0,D|0,(n|r)^(t|v)^(l|e)|0,x|0)|0;H=oe(x|0,D|0,f|0,H|0)|0;H=oe(H|0,D|0,(s^q)&L^s|0,(b^o)&z^b|0)|0;f=D;x=Rd(y|0,J|0,28)|0;e=D;l=Pd(y|0,J|0,36)|0;e=e|D;v=Rd(y|0,J|0,34)|0;t=D;r=Pd(y|0,J|0,30)|0;t=e^(t|D);e=Rd(y|0,J|0,39)|0;n=D;E=Pd(y|0,J|0,25)|0;F=c[h+16>>2]|0;I=c[h+16+4>>2]|0;n=oe((F|j)&y|F&j|0,(I|p)&J|I&p|0,(x|l)^(v|r)^(e|E)|0,t^(n|D)|0)|0;t=D;K=oe(u|0,K|0,H|0,f|0)|0;u=D;c[C>>2]=K;c[C+4>>2]=u;f=oe(n|0,t|0,H|0,f|0)|0;H=D;c[A>>2]=f;c[A+4>>2]=H;t=Rd(K|0,u|0,14)|0;n=D;E=Pd(K|0,u|0,50)|0;n=n|D;e=Rd(K|0,u|0,18)|0;r=D;v=Pd(K|0,u|0,46)|0;r=n^(r|D);n=Rd(K|0,u|0,41)|0;l=D;x=Pd(K|0,u|0,23)|0;l=r^(l|D);r=c[h+80+280>>2]|0;p=c[h+80+280+4>>2]|0;b=oe(s|0,b|0,-1651133473,1396182291)|0;l=oe(b|0,D|0,(t|E)^(e|v)^(n|x)|0,l|0)|0;p=oe(l|0,D|0,r|0,p|0)|0;p=oe(p|0,D|0,(q^L)&K^q|0,(o^z)&u^o|0)|0;r=D;l=Rd(f|0,H|0,28)|0;x=D;n=Pd(f|0,H|0,36)|0;x=x|D;v=Rd(f|0,H|0,34)|0;e=D;E=Pd(f|0,H|0,30)|0;e=x^(e|D);x=Rd(f|0,H|0,39)|0;t=D;b=Pd(f|0,H|0,25)|0;s=c[G>>2]|0;j=c[G+4>>2]|0;t=oe((s|y)&f|s&y|0,(j|J)&H|j&J|0,(l|n)^(v|E)^(x|b)|0,e^(t|D)|0)|0;e=D;I=oe(F|0,I|0,p|0,r|0)|0;F=D;c[h+16>>2]=I;c[h+16+4>>2]=F;r=oe(t|0,e|0,p|0,r|0)|0;p=D;c[w>>2]=r;c[w+4>>2]=p;e=Rd(I|0,F|0,14)|0;t=D;b=Pd(I|0,F|0,50)|0;t=t|D;x=Rd(I|0,F|0,18)|0;E=D;v=Pd(I|0,F|0,46)|0;E=t^(E|D);t=Rd(I|0,F|0,41)|0;n=D;l=Pd(I|0,F|0,23)|0;n=E^(n|D);E=c[h+80+288>>2]|0;J=c[h+80+288+4>>2]|0;o=oe(q|0,o|0,-1951439906,1695183700)|0;n=oe(o|0,D|0,(e|b)^(x|v)^(t|l)|0,n|0)|0;J=oe(n|0,D|0,E|0,J|0)|0;J=oe(J|0,D|0,(L^K)&I^L|0,(z^u)&F^z|0)|0;E=D;n=Rd(r|0,p|0,28)|0;l=D;t=Pd(r|0,p|0,36)|0;l=l|D;v=Rd(r|0,p|0,34)|0;x=D;b=Pd(r|0,p|0,30)|0;x=l^(x|D);l=Rd(r|0,p|0,39)|0;e=D;o=Pd(r|0,p|0,25)|0;q=c[k>>2]|0;y=c[k+4>>2]|0;e=oe((q|f)&r|q&f|0,(y|H)&p|y&H|0,(n|t)^(v|b)^(l|o)|0,x^(e|D)|0)|0;x=D;j=oe(s|0,j|0,J|0,E|0)|0;s=D;c[G>>2]=j;c[G+4>>2]=s;E=oe(e|0,x|0,J|0,E|0)|0;J=D;c[m>>2]=E;c[m+4>>2]=J;x=Rd(j|0,s|0,14)|0;e=D;o=Pd(j|0,s|0,50)|0;e=e|D;l=Rd(j|0,s|0,18)|0;b=D;v=Pd(j|0,s|0,46)|0;b=e^(b|D);e=Rd(j|0,s|0,41)|0;t=D;n=Pd(j|0,s|0,23)|0;t=b^(t|D);b=c[h+80+296>>2]|0;H=c[h+80+296+4>>2]|0;z=oe(L|0,z|0,1014477480,1986661051)|0;t=oe(z|0,D|0,(x|o)^(l|v)^(e|n)|0,t|0)|0;H=oe(t|0,D|0,b|0,H|0)|0;H=oe(H|0,D|0,(K^I)&j^K|0,(u^F)&s^u|0)|0;b=D;t=Rd(E|0,J|0,28)|0;n=D;e=Pd(E|0,J|0,36)|0;n=n|D;v=Rd(E|0,J|0,34)|0;l=D;o=Pd(E|0,J|0,30)|0;l=n^(l|D);n=Rd(E|0,J|0,39)|0;x=D;z=Pd(E|0,J|0,25)|0;L=c[A>>2]|0;f=c[A+4>>2]|0;x=oe((L|r)&E|L&r|0,(f|p)&J|f&p|0,(t|e)^(v|o)^(n|z)|0,l^(x|D)|0)|0;l=D;y=oe(q|0,y|0,H|0,b|0)|0;q=D;c[k>>2]=y;c[k+4>>2]=q;b=oe(x|0,l|0,H|0,b|0)|0;H=D;c[B>>2]=b;c[B+4>>2]=H;l=Rd(y|0,q|0,14)|0;x=D;z=Pd(y|0,q|0,50)|0;x=x|D;n=Rd(y|0,q|0,18)|0;o=D;v=Pd(y|0,q|0,46)|0;o=x^(o|D);x=Rd(y|0,q|0,41)|0;e=D;t=Pd(y|0,q|0,23)|0;e=o^(e|D);o=c[h+80+304>>2]|0;p=c[h+80+304+4>>2]|0;u=oe(K|0,u|0,1206759142,-2117940946)|0;e=oe(u|0,D|0,(l|z)^(n|v)^(x|t)|0,e|0)|0;p=oe(e|0,D|0,o|0,p|0)|0;p=oe(p|0,D|0,(I^j)&y^I|0,(F^s)&q^F|0)|0;o=D;e=Rd(b|0,H|0,28)|0;t=D;x=Pd(b|0,H|0,36)|0;t=t|D;v=Rd(b|0,H|0,34)|0;n=D;z=Pd(b|0,H|0,30)|0;n=t^(n|D);t=Rd(b|0,H|0,39)|0;l=D;u=Pd(b|0,H|0,25)|0;K=c[w>>2]|0;r=c[w+4>>2]|0;l=oe((K|E)&b|K&E|0,(r|J)&H|r&J|0,(e|x)^(v|z)^(t|u)|0,n^(l|D)|0)|0;n=D;f=oe(L|0,f|0,p|0,o|0)|0;L=D;c[A>>2]=f;c[A+4>>2]=L;o=oe(l|0,n|0,p|0,o|0)|0;p=D;c[C>>2]=o;c[C+4>>2]=p;n=Rd(f|0,L|0,14)|0;l=D;u=Pd(f|0,L|0,50)|0;l=l|D;t=Rd(f|0,L|0,18)|0;z=D;v=Pd(f|0,L|0,46)|0;z=l^(z|D);l=Rd(f|0,L|0,41)|0;x=D;e=Pd(f|0,L|0,23)|0;x=z^(x|D);z=c[h+80+312>>2]|0;J=c[h+80+312+4>>2]|0;F=oe(I|0,F|0,344077627,-1838011259)|0;x=oe(F|0,D|0,(n|u)^(t|v)^(l|e)|0,x|0)|0;J=oe(x|0,D|0,z|0,J|0)|0;J=oe(J|0,D|0,(j^y)&f^j|0,(s^q)&L^s|0)|0;z=D;x=Rd(o|0,p|0,28)|0;e=D;l=Pd(o|0,p|0,36)|0;e=e|D;v=Rd(o|0,p|0,34)|0;t=D;u=Pd(o|0,p|0,30)|0;t=e^(t|D);e=Rd(o|0,p|0,39)|0;n=D;F=Pd(o|0,p|0,25)|0;I=c[m>>2]|0;E=c[m+4>>2]|0;n=oe((I|b)&o|I&b|0,(E|H)&p|E&H|0,(x|l)^(v|u)^(e|F)|0,t^(n|D)|0)|0;t=D;r=oe(K|0,r|0,J|0,z|0)|0;K=D;c[w>>2]=r;c[w+4>>2]=K;z=oe(n|0,t|0,J|0,z|0)|0;J=D;c[h+16>>2]=z;c[h+16+4>>2]=J;t=Rd(r|0,K|0,14)|0;n=D;F=Pd(r|0,K|0,50)|0;n=n|D;e=Rd(r|0,K|0,18)|0;u=D;v=Pd(r|0,K|0,46)|0;u=n^(u|D);n=Rd(r|0,K|0,41)|0;l=D;x=Pd(r|0,K|0,23)|0;l=u^(l|D);u=c[h+80+320>>2]|0;H=c[h+80+320+4>>2]|0;s=oe(j|0,s|0,1290863460,-1564481375)|0;l=oe(s|0,D|0,(t|F)^(e|v)^(n|x)|0,l|0)|0;H=oe(l|0,D|0,u|0,H|0)|0;H=oe(H|0,D|0,(y^f)&r^y|0,(q^L)&K^q|0)|0;u=D;l=Rd(z|0,J|0,28)|0;x=D;n=Pd(z|0,J|0,36)|0;x=x|D;v=Rd(z|0,J|0,34)|0;e=D;F=Pd(z|0,J|0,30)|0;e=x^(e|D);x=Rd(z|0,J|0,39)|0;t=D;s=Pd(z|0,J|0,25)|0;j=c[B>>2]|0;b=c[B+4>>2]|0;t=oe((j|o)&z|j&o|0,(b|p)&J|b&p|0,(l|n)^(v|F)^(x|s)|0,e^(t|D)|0)|0;e=D;E=oe(I|0,E|0,H|0,u|0)|0;I=D;c[m>>2]=E;c[m+4>>2]=I;u=oe(t|0,e|0,H|0,u|0)|0;H=D;c[G>>2]=u;c[G+4>>2]=H;e=Rd(E|0,I|0,14)|0;t=D;s=Pd(E|0,I|0,50)|0;t=t|D;x=Rd(E|0,I|0,18)|0;F=D;v=Pd(E|0,I|0,46)|0;F=t^(F|D);t=Rd(E|0,I|0,41)|0;n=D;l=Pd(E|0,I|0,23)|0;n=F^(n|D);F=c[h+80+328>>2]|0;p=c[h+80+328+4>>2]|0;q=oe(y|0,q|0,-1136513023,-1474664885)|0;n=oe(q|0,D|0,(e|s)^(x|v)^(t|l)|0,n|0)|0;p=oe(n|0,D|0,F|0,p|0)|0;p=oe(p|0,D|0,(f^r)&E^f|0,(L^K)&I^L|0)|0;F=D;n=Rd(u|0,H|0,28)|0;l=D;t=Pd(u|0,H|0,36)|0;l=l|D;v=Rd(u|0,H|0,34)|0;x=D;s=Pd(u|0,H|0,30)|0;x=l^(x|D);l=Rd(u|0,H|0,39)|0;e=D;q=Pd(u|0,H|0,25)|0;y=c[C>>2]|0;o=c[C+4>>2]|0;e=oe((y|z)&u|y&z|0,(o|J)&H|o&J|0,(n|t)^(v|s)^(l|q)|0,x^(e|D)|0)|0;x=D;b=oe(j|0,b|0,p|0,F|0)|0;j=D;c[B>>2]=b;c[B+4>>2]=j;F=oe(e|0,x|0,p|0,F|0)|0;p=D;c[k>>2]=F;c[k+4>>2]=p;x=Rd(b|0,j|0,14)|0;e=D;q=Pd(b|0,j|0,50)|0;e=e|D;l=Rd(b|0,j|0,18)|0;s=D;v=Pd(b|0,j|0,46)|0;s=e^(s|D);e=Rd(b|0,j|0,41)|0;t=D;n=Pd(b|0,j|0,23)|0;t=s^(t|D);s=c[h+80+336>>2]|0;J=c[h+80+336+4>>2]|0;L=oe(f|0,L|0,-789014639,-1035236496)|0;t=oe(L|0,D|0,(x|q)^(l|v)^(e|n)|0,t|0)|0;J=oe(t|0,D|0,s|0,J|0)|0;J=oe(J|0,D|0,(r^E)&b^r|0,(K^I)&j^K|0)|0;s=D;t=Rd(F|0,p|0,28)|0;n=D;e=Pd(F|0,p|0,36)|0;n=n|D;v=Rd(F|0,p|0,34)|0;l=D;q=Pd(F|0,p|0,30)|0;l=n^(l|D);n=Rd(F|0,p|0,39)|0;x=D;L=Pd(F|0,p|0,25)|0;f=c[h+16>>2]|0;z=c[h+16+4>>2]|0;x=oe((f|u)&F|f&u|0,(z|H)&p|z&H|0,(t|e)^(v|q)^(n|L)|0,l^(x|D)|0)|0;l=D;o=oe(y|0,o|0,J|0,s|0)|0;y=D;c[C>>2]=o;c[C+4>>2]=y;s=oe(x|0,l|0,J|0,s|0)|0;J=D;c[A>>2]=s;c[A+4>>2]=J;l=Rd(o|0,y|0,14)|0;x=D;L=Pd(o|0,y|0,50)|0;x=x|D;n=Rd(o|0,y|0,18)|0;q=D;v=Pd(o|0,y|0,46)|0;q=x^(q|D);x=Rd(o|0,y|0,41)|0;e=D;t=Pd(o|0,y|0,23)|0;e=q^(e|D);q=c[h+80+344>>2]|0;H=c[h+80+344+4>>2]|0;K=oe(r|0,K|0,106217008,-949202525)|0;e=oe(K|0,D|0,(l|L)^(n|v)^(x|t)|0,e|0)|0;H=oe(e|0,D|0,q|0,H|0)|0;H=oe(H|0,D|0,(E^b)&o^E|0,(I^j)&y^I|0)|0;q=D;e=Rd(s|0,J|0,28)|0;t=D;x=Pd(s|0,J|0,36)|0;t=t|D;v=Rd(s|0,J|0,34)|0;n=D;L=Pd(s|0,J|0,30)|0;n=t^(n|D);t=Rd(s|0,J|0,39)|0;l=D;K=Pd(s|0,J|0,25)|0;r=c[G>>2]|0;u=c[G+4>>2]|0;l=oe((r|F)&s|r&F|0,(u|p)&J|u&p|0,(e|x)^(v|L)^(t|K)|0,n^(l|D)|0)|0;n=D;z=oe(f|0,z|0,H|0,q|0)|0;f=D;c[h+16>>2]=z;c[h+16+4>>2]=f;q=oe(l|0,n|0,H|0,q|0)|0;H=D;c[w>>2]=q;c[w+4>>2]=H;n=Rd(z|0,f|0,14)|0;l=D;K=Pd(z|0,f|0,50)|0;l=l|D;t=Rd(z|0,f|0,18)|0;L=D;v=Pd(z|0,f|0,46)|0;L=l^(L|D);l=Rd(z|0,f|0,41)|0;x=D;e=Pd(z|0,f|0,23)|0;x=L^(x|D);L=c[h+80+352>>2]|0;p=c[h+80+352+4>>2]|0;I=oe(E|0,I|0,-688958952,-778901479)|0;x=oe(I|0,D|0,(n|K)^(t|v)^(l|e)|0,x|0)|0;p=oe(x|0,D|0,L|0,p|0)|0;p=oe(p|0,D|0,(b^o)&z^b|0,(j^y)&f^j|0)|0;L=D;x=Rd(q|0,H|0,28)|0;e=D;l=Pd(q|0,H|0,36)|0;e=e|D;v=Rd(q|0,H|0,34)|0;t=D;K=Pd(q|0,H|0,30)|0;t=e^(t|D);e=Rd(q|0,H|0,39)|0;n=D;I=Pd(q|0,H|0,25)|0;E=c[k>>2]|0;F=c[k+4>>2]|0;n=oe((E|s)&q|E&s|0,(F|J)&H|F&J|0,(x|l)^(v|K)^(e|I)|0,t^(n|D)|0)|0;t=D;u=oe(r|0,u|0,p|0,L|0)|0;r=D;c[G>>2]=u;c[G+4>>2]=r;L=oe(n|0,t|0,p|0,L|0)|0;p=D;c[m>>2]=L;c[m+4>>2]=p;t=Rd(u|0,r|0,14)|0;n=D;I=Pd(u|0,r|0,50)|0;n=n|D;e=Rd(u|0,r|0,18)|0;K=D;v=Pd(u|0,r|0,46)|0;K=n^(K|D);n=Rd(u|0,r|0,41)|0;l=D;x=Pd(u|0,r|0,23)|0;l=K^(l|D);K=c[h+80+360>>2]|0;J=c[h+80+360+4>>2]|0;j=oe(b|0,j|0,1432725776,-694614492)|0;l=oe(j|0,D|0,(t|I)^(e|v)^(n|x)|0,l|0)|0;J=oe(l|0,D|0,K|0,J|0)|0;J=oe(J|0,D|0,(o^z)&u^o|0,(y^f)&r^y|0)|0;K=D;l=Rd(L|0,p|0,28)|0;x=D;n=Pd(L|0,p|0,36)|0;x=x|D;v=Rd(L|0,p|0,34)|0;e=D;I=Pd(L|0,p|0,30)|0;e=x^(e|D);x=Rd(L|0,p|0,39)|0;t=D;j=Pd(L|0,p|0,25)|0;b=c[A>>2]|0;s=c[A+4>>2]|0;t=oe((b|q)&L|b&q|0,(s|H)&p|s&H|0,(l|n)^(v|I)^(x|j)|0,e^(t|D)|0)|0;e=D;F=oe(E|0,F|0,J|0,K|0)|0;E=D;c[k>>2]=F;c[k+4>>2]=E;K=oe(t|0,e|0,J|0,K|0)|0;J=D;c[B>>2]=K;c[B+4>>2]=J;e=Rd(F|0,E|0,14)|0;t=D;j=Pd(F|0,E|0,50)|0;t=t|D;x=Rd(F|0,E|0,18)|0;I=D;v=Pd(F|0,E|0,46)|0;I=t^(I|D);t=Rd(F|0,E|0,41)|0;n=D;l=Pd(F|0,E|0,23)|0;n=I^(n|D);I=c[h+80+368>>2]|0;H=c[h+80+368+4>>2]|0;y=oe(o|0,y|0,1467031594,-200395387)|0;n=oe(y|0,D|0,(e|j)^(x|v)^(t|l)|0,n|0)|0;H=oe(n|0,D|0,I|0,H|0)|0;H=oe(H|0,D|0,(z^u)&F^z|0,(f^r)&E^f|0)|0;I=D;n=Rd(K|0,J|0,28)|0;l=D;t=Pd(K|0,J|0,36)|0;l=l|D;v=Rd(K|0,J|0,34)|0;x=D;j=Pd(K|0,J|0,30)|0;x=l^(x|D);l=Rd(K|0,J|0,39)|0;e=D;y=Pd(K|0,J|0,25)|0;o=c[w>>2]|0;q=c[w+4>>2]|0;e=oe((o|L)&K|o&L|0,(q|p)&J|q&p|0,(n|t)^(v|j)^(l|y)|0,x^(e|D)|0)|0;x=D;s=oe(b|0,s|0,H|0,I|0)|0;b=D;c[A>>2]=s;c[A+4>>2]=b;I=oe(e|0,x|0,H|0,I|0)|0;H=D;c[C>>2]=I;c[C+4>>2]=H;x=Rd(s|0,b|0,14)|0;e=D;y=Pd(s|0,b|0,50)|0;e=e|D;l=Rd(s|0,b|0,18)|0;j=D;v=Pd(s|0,b|0,46)|0;j=e^(j|D);e=Rd(s|0,b|0,41)|0;t=D;n=Pd(s|0,b|0,23)|0;t=j^(t|D);j=c[h+80+376>>2]|0;p=c[h+80+376+4>>2]|0;f=oe(z|0,f|0,851169720,275423344)|0;t=oe(f|0,D|0,(x|y)^(l|v)^(e|n)|0,t|0)|0;p=oe(t|0,D|0,j|0,p|0)|0;p=oe(p|0,D|0,(u^F)&s^u|0,(r^E)&b^r|0)|0;j=D;t=Rd(I|0,H|0,28)|0;n=D;e=Pd(I|0,H|0,36)|0;n=n|D;v=Rd(I|0,H|0,34)|0;l=D;y=Pd(I|0,H|0,30)|0;l=n^(l|D);n=Rd(I|0,H|0,39)|0;x=D;f=Pd(I|0,H|0,25)|0;z=c[m>>2]|0;L=c[m+4>>2]|0;x=oe((z|K)&I|z&K|0,(L|J)&H|L&J|0,(t|e)^(v|y)^(n|f)|0,l^(x|D)|0)|0;l=D;q=oe(o|0,q|0,p|0,j|0)|0;o=D;c[w>>2]=q;c[w+4>>2]=o;j=oe(x|0,l|0,p|0,j|0)|0;p=D;c[h+16>>2]=j;c[h+16+4>>2]=p;l=Rd(q|0,o|0,14)|0;x=D;f=Pd(q|0,o|0,50)|0;x=x|D;n=Rd(q|0,o|0,18)|0;y=D;v=Pd(q|0,o|0,46)|0;y=x^(y|D);x=Rd(q|0,o|0,41)|0;e=D;t=Pd(q|0,o|0,23)|0;e=y^(e|D);y=c[h+80+384>>2]|0;J=c[h+80+384+4>>2]|0;r=oe(u|0,r|0,-1194143544,430227734)|0;e=oe(r|0,D|0,(l|f)^(n|v)^(x|t)|0,e|0)|0;J=oe(e|0,D|0,y|0,J|0)|0;J=oe(J|0,D|0,(F^s)&q^F|0,(E^b)&o^E|0)|0;y=D;e=Rd(j|0,p|0,28)|0;t=D;x=Pd(j|0,p|0,36)|0;t=t|D;v=Rd(j|0,p|0,34)|0;n=D;f=Pd(j|0,p|0,30)|0;n=t^(n|D);t=Rd(j|0,p|0,39)|0;l=D;r=Pd(j|0,p|0,25)|0;u=c[B>>2]|0;K=c[B+4>>2]|0;l=oe((u|I)&j|u&I|0,(K|H)&p|K&H|0,(e|x)^(v|f)^(t|r)|0,n^(l|D)|0)|0;n=D;L=oe(z|0,L|0,J|0,y|0)|0;z=D;c[m>>2]=L;c[m+4>>2]=z;y=oe(l|0,n|0,J|0,y|0)|0;J=D;c[G>>2]=y;c[G+4>>2]=J;n=Rd(L|0,z|0,14)|0;l=D;r=Pd(L|0,z|0,50)|0;l=l|D;t=Rd(L|0,z|0,18)|0;f=D;v=Pd(L|0,z|0,46)|0;f=l^(f|D);l=Rd(L|0,z|0,41)|0;x=D;e=Pd(L|0,z|0,23)|0;x=f^(x|D);f=c[h+80+392>>2]|0;H=c[h+80+392+4>>2]|0;E=oe(F|0,E|0,1363258195,506948616)|0;x=oe(E|0,D|0,(n|r)^(t|v)^(l|e)|0,x|0)|0;H=oe(x|0,D|0,f|0,H|0)|0;H=oe(H|0,D|0,(s^q)&L^s|0,(b^o)&z^b|0)|0;f=D;x=Rd(y|0,J|0,28)|0;e=D;l=Pd(y|0,J|0,36)|0;e=e|D;v=Rd(y|0,J|0,34)|0;t=D;r=Pd(y|0,J|0,30)|0;t=e^(t|D);e=Rd(y|0,J|0,39)|0;n=D;E=Pd(y|0,J|0,25)|0;F=c[C>>2]|0;I=c[C+4>>2]|0;n=oe((F|j)&y|F&j|0,(I|p)&J|I&p|0,(x|l)^(v|r)^(e|E)|0,t^(n|D)|0)|0;t=D;K=oe(u|0,K|0,H|0,f|0)|0;u=D;c[B>>2]=K;c[B+4>>2]=u;f=oe(n|0,t|0,H|0,f|0)|0;H=D;c[k>>2]=f;c[k+4>>2]=H;t=Rd(K|0,u|0,14)|0;n=D;E=Pd(K|0,u|0,50)|0;n=n|D;e=Rd(K|0,u|0,18)|0;r=D;v=Pd(K|0,u|0,46)|0;r=n^(r|D);n=Rd(K|0,u|0,41)|0;l=D;x=Pd(K|0,u|0,23)|0;l=r^(l|D);r=c[h+80+400>>2]|0;p=c[h+80+400+4>>2]|0;b=oe(s|0,b|0,-544281703,659060556)|0;l=oe(b|0,D|0,(t|E)^(e|v)^(n|x)|0,l|0)|0;p=oe(l|0,D|0,r|0,p|0)|0;p=oe(p|0,D|0,(q^L)&K^q|0,(o^z)&u^o|0)|0;r=D;l=Rd(f|0,H|0,28)|0;x=D;n=Pd(f|0,H|0,36)|0;x=x|D;v=Rd(f|0,H|0,34)|0;e=D;E=Pd(f|0,H|0,30)|0;e=x^(e|D);x=Rd(f|0,H|0,39)|0;t=D;b=Pd(f|0,H|0,25)|0;s=c[h+16>>2]|0;j=c[h+16+4>>2]|0;t=oe((s|y)&f|s&y|0,(j|J)&H|j&J|0,(l|n)^(v|E)^(x|b)|0,e^(t|D)|0)|0;e=D;I=oe(F|0,I|0,p|0,r|0)|0;F=D;c[C>>2]=I;c[C+4>>2]=F;r=oe(t|0,e|0,p|0,r|0)|0;p=D;c[A>>2]=r;c[A+4>>2]=p;e=Rd(I|0,F|0,14)|0;t=D;b=Pd(I|0,F|0,50)|0;t=t|D;x=Rd(I|0,F|0,18)|0;E=D;v=Pd(I|0,F|0,46)|0;E=t^(E|D);t=Rd(I|0,F|0,41)|0;n=D;l=Pd(I|0,F|0,23)|0;n=E^(n|D);E=c[h+80+408>>2]|0;J=c[h+80+408+4>>2]|0;o=oe(q|0,o|0,-509917016,883997877)|0;n=oe(o|0,D|0,(e|b)^(x|v)^(t|l)|0,n|0)|0;J=oe(n|0,D|0,E|0,J|0)|0;J=oe(J|0,D|0,(L^K)&I^L|0,(z^u)&F^z|0)|0;E=D;n=Rd(r|0,p|0,28)|0;l=D;t=Pd(r|0,p|0,36)|0;l=l|D;v=Rd(r|0,p|0,34)|0;x=D;b=Pd(r|0,p|0,30)|0;x=l^(x|D);l=Rd(r|0,p|0,39)|0;e=D;o=Pd(r|0,p|0,25)|0;q=c[G>>2]|0;y=c[G+4>>2]|0;e=oe((q|f)&r|q&f|0,(y|H)&p|y&H|0,(n|t)^(v|b)^(l|o)|0,x^(e|D)|0)|0;x=D;j=oe(s|0,j|0,J|0,E|0)|0;s=D;c[h+16>>2]=j;c[h+16+4>>2]=s;E=oe(e|0,x|0,J|0,E|0)|0;J=D;c[w>>2]=E;c[w+4>>2]=J;x=Rd(j|0,s|0,14)|0;e=D;o=Pd(j|0,s|0,50)|0;e=e|D;l=Rd(j|0,s|0,18)|0;b=D;v=Pd(j|0,s|0,46)|0;b=e^(b|D);e=Rd(j|0,s|0,41)|0;t=D;n=Pd(j|0,s|0,23)|0;t=b^(t|D);b=c[h+80+416>>2]|0;H=c[h+80+416+4>>2]|0;z=oe(L|0,z|0,-976659869,958139571)|0;t=oe(z|0,D|0,(x|o)^(l|v)^(e|n)|0,t|0)|0;H=oe(t|0,D|0,b|0,H|0)|0;H=oe(H|0,D|0,(K^I)&j^K|0,(u^F)&s^u|0)|0;b=D;t=Rd(E|0,J|0,28)|0;n=D;e=Pd(E|0,J|0,36)|0;n=n|D;v=Rd(E|0,J|0,34)|0;l=D;o=Pd(E|0,J|0,30)|0;l=n^(l|D);n=Rd(E|0,J|0,39)|0;x=D;z=Pd(E|0,J|0,25)|0;L=c[k>>2]|0;f=c[k+4>>2]|0;x=oe((L|r)&E|L&r|0,(f|p)&J|f&p|0,(t|e)^(v|o)^(n|z)|0,l^(x|D)|0)|0;l=D;y=oe(q|0,y|0,H|0,b|0)|0;q=D;c[G>>2]=y;c[G+4>>2]=q;b=oe(x|0,l|0,H|0,b|0)|0;H=D;c[m>>2]=b;c[m+4>>2]=H;l=Rd(y|0,q|0,14)|0;x=D;z=Pd(y|0,q|0,50)|0;x=x|D;n=Rd(y|0,q|0,18)|0;o=D;v=Pd(y|0,q|0,46)|0;o=x^(o|D);x=Rd(y|0,q|0,41)|0;e=D;t=Pd(y|0,q|0,23)|0;e=o^(e|D);o=c[h+80+424>>2]|0;p=c[h+80+424+4>>2]|0;u=oe(K|0,u|0,-482243893,1322822218)|0;e=oe(u|0,D|0,(l|z)^(n|v)^(x|t)|0,e|0)|0;p=oe(e|0,D|0,o|0,p|0)|0;p=oe(p|0,D|0,(I^j)&y^I|0,(F^s)&q^F|0)|0;o=D;e=Rd(b|0,H|0,28)|0;t=D;x=Pd(b|0,H|0,36)|0;t=t|D;v=Rd(b|0,H|0,34)|0;n=D;z=Pd(b|0,H|0,30)|0;n=t^(n|D);t=Rd(b|0,H|0,39)|0;l=D;u=Pd(b|0,H|0,25)|0;K=c[A>>2]|0;r=c[A+4>>2]|0;l=oe((K|E)&b|K&E|0,(r|J)&H|r&J|0,(e|x)^(v|z)^(t|u)|0,n^(l|D)|0)|0;n=D;f=oe(L|0,f|0,p|0,o|0)|0;L=D;c[k>>2]=f;c[k+4>>2]=L;o=oe(l|0,n|0,p|0,o|0)|0;p=D;c[B>>2]=o;c[B+4>>2]=p;n=Rd(f|0,L|0,14)|0;l=D;u=Pd(f|0,L|0,50)|0;l=l|D;t=Rd(f|0,L|0,18)|0;z=D;v=Pd(f|0,L|0,46)|0;z=l^(z|D);l=Rd(f|0,L|0,41)|0;x=D;e=Pd(f|0,L|0,23)|0;x=z^(x|D);z=c[h+80+432>>2]|0;J=c[h+80+432+4>>2]|0;F=oe(I|0,F|0,2003034995,1537002063)|0;x=oe(F|0,D|0,(n|u)^(t|v)^(l|e)|0,x|0)|0;J=oe(x|0,D|0,z|0,J|0)|0;J=oe(J|0,D|0,(j^y)&f^j|0,(s^q)&L^s|0)|0;z=D;x=Rd(o|0,p|0,28)|0;e=D;l=Pd(o|0,p|0,36)|0;e=e|D;v=Rd(o|0,p|0,34)|0;t=D;u=Pd(o|0,p|0,30)|0;t=e^(t|D);e=Rd(o|0,p|0,39)|0;n=D;F=Pd(o|0,p|0,25)|0;I=c[w>>2]|0;E=c[w+4>>2]|0;n=oe((I|b)&o|I&b|0,(E|H)&p|E&H|0,(x|l)^(v|u)^(e|F)|0,t^(n|D)|0)|0;t=D;r=oe(K|0,r|0,J|0,z|0)|0;K=D;c[A>>2]=r;c[A+4>>2]=K;z=oe(n|0,t|0,J|0,z|0)|0;J=D;c[C>>2]=z;c[C+4>>2]=J;t=Rd(r|0,K|0,14)|0;n=D;F=Pd(r|0,K|0,50)|0;n=n|D;e=Rd(r|0,K|0,18)|0;u=D;v=Pd(r|0,K|0,46)|0;u=n^(u|D);n=Rd(r|0,K|0,41)|0;l=D;x=Pd(r|0,K|0,23)|0;l=u^(l|D);u=c[h+80+440>>2]|0;H=c[h+80+440+4>>2]|0;s=oe(j|0,s|0,-692930397,1747873779)|0;l=oe(s|0,D|0,(t|F)^(e|v)^(n|x)|0,l|0)|0;H=oe(l|0,D|0,u|0,H|0)|0;H=oe(H|0,D|0,(y^f)&r^y|0,(q^L)&K^q|0)|0;u=D;l=Rd(z|0,J|0,28)|0;x=D;n=Pd(z|0,J|0,36)|0;x=x|D;v=Rd(z|0,J|0,34)|0;e=D;F=Pd(z|0,J|0,30)|0;e=x^(e|D);x=Rd(z|0,J|0,39)|0;t=D;s=Pd(z|0,J|0,25)|0;j=c[m>>2]|0;b=c[m+4>>2]|0;t=oe((j|o)&z|j&o|0,(b|p)&J|b&p|0,(l|n)^(v|F)^(x|s)|0,e^(t|D)|0)|0;e=D;E=oe(I|0,E|0,H|0,u|0)|0;I=D;c[w>>2]=E;c[w+4>>2]=I;u=oe(t|0,e|0,H|0,u|0)|0;H=D;c[h+16>>2]=u;c[h+16+4>>2]=H;e=Rd(E|0,I|0,14)|0;t=D;s=Pd(E|0,I|0,50)|0;t=t|D;x=Rd(E|0,I|0,18)|0;F=D;v=Pd(E|0,I|0,46)|0;F=t^(F|D);t=Rd(E|0,I|0,41)|0;n=D;l=Pd(E|0,I|0,23)|0;n=F^(n|D);F=c[h+80+448>>2]|0;p=c[h+80+448+4>>2]|0;q=oe(y|0,q|0,1575990012,1955562222)|0;n=oe(q|0,D|0,(e|s)^(x|v)^(t|l)|0,n|0)|0;p=oe(n|0,D|0,F|0,p|0)|0;p=oe(p|0,D|0,(f^r)&E^f|0,(L^K)&I^L|0)|0;F=D;n=Rd(u|0,H|0,28)|0;l=D;t=Pd(u|0,H|0,36)|0;l=l|D;v=Rd(u|0,H|0,34)|0;x=D;s=Pd(u|0,H|0,30)|0;x=l^(x|D);l=Rd(u|0,H|0,39)|0;e=D;q=Pd(u|0,H|0,25)|0;y=c[B>>2]|0;o=c[B+4>>2]|0;e=oe((y|z)&u|y&z|0,(o|J)&H|o&J|0,(n|t)^(v|s)^(l|q)|0,x^(e|D)|0)|0;x=D;b=oe(j|0,b|0,p|0,F|0)|0;j=D;c[m>>2]=b;c[m+4>>2]=j;F=oe(e|0,x|0,p|0,F|0)|0;p=D;c[G>>2]=F;c[G+4>>2]=p;x=Rd(b|0,j|0,14)|0;e=D;q=Pd(b|0,j|0,50)|0;e=e|D;l=Rd(b|0,j|0,18)|0;s=D;v=Pd(b|0,j|0,46)|0;s=e^(s|D);e=Rd(b|0,j|0,41)|0;t=D;n=Pd(b|0,j|0,23)|0;t=s^(t|D);s=c[h+80+456>>2]|0;J=c[h+80+456+4>>2]|0;L=oe(f|0,L|0,1125592928,2024104815)|0;t=oe(L|0,D|0,(x|q)^(l|v)^(e|n)|0,t|0)|0;J=oe(t|0,D|0,s|0,J|0)|0;J=oe(J|0,D|0,(r^E)&b^r|0,(K^I)&j^K|0)|0;s=D;t=Rd(F|0,p|0,28)|0;n=D;e=Pd(F|0,p|0,36)|0;n=n|D;v=Rd(F|0,p|0,34)|0;l=D;q=Pd(F|0,p|0,30)|0;l=n^(l|D);n=Rd(F|0,p|0,39)|0;x=D;L=Pd(F|0,p|0,25)|0;f=c[C>>2]|0;z=c[C+4>>2]|0;x=oe((f|u)&F|f&u|0,(z|H)&p|z&H|0,(t|e)^(v|q)^(n|L)|0,l^(x|D)|0)|0;l=D;o=oe(y|0,o|0,J|0,s|0)|0;y=D;c[B>>2]=o;c[B+4>>2]=y;s=oe(x|0,l|0,J|0,s|0)|0;J=D;c[k>>2]=s;c[k+4>>2]=J;l=Rd(o|0,y|0,14)|0;x=D;L=Pd(o|0,y|0,50)|0;x=x|D;n=Rd(o|0,y|0,18)|0;q=D;v=Pd(o|0,y|0,46)|0;q=x^(q|D);x=Rd(o|0,y|0,41)|0;e=D;t=Pd(o|0,y|0,23)|0;e=q^(e|D);q=c[h+80+464>>2]|0;H=c[h+80+464+4>>2]|0;K=oe(r|0,K|0,-1578062990,-2067236844)|0;e=oe(K|0,D|0,(l|L)^(n|v)^(x|t)|0,e|0)|0;H=oe(e|0,D|0,q|0,H|0)|0;H=oe(H|0,D|0,(E^b)&o^E|0,(I^j)&y^I|0)|0;q=D;e=Rd(s|0,J|0,28)|0;t=D;x=Pd(s|0,J|0,36)|0;t=t|D;v=Rd(s|0,J|0,34)|0;n=D;L=Pd(s|0,J|0,30)|0;n=t^(n|D);t=Rd(s|0,J|0,39)|0;l=D;K=Pd(s|0,J|0,25)|0;r=c[h+16>>2]|0;u=c[h+16+4>>2]|0;l=oe((r|F)&s|r&F|0,(u|p)&J|u&p|0,(e|x)^(v|L)^(t|K)|0,n^(l|D)|0)|0;n=D;z=oe(f|0,z|0,H|0,q|0)|0;f=D;c[C>>2]=z;c[C+4>>2]=f;q=oe(l|0,n|0,H|0,q|0)|0;H=D;c[A>>2]=q;c[A+4>>2]=H;n=Rd(z|0,f|0,14)|0;l=D;K=Pd(z|0,f|0,50)|0;l=l|D;t=Rd(z|0,f|0,18)|0;L=D;v=Pd(z|0,f|0,46)|0;L=l^(L|D);l=Rd(z|0,f|0,41)|0;x=D;e=Pd(z|0,f|0,23)|0;x=L^(x|D);L=c[h+80+472>>2]|0;p=c[h+80+472+4>>2]|0;I=oe(E|0,I|0,442776044,-1933114872)|0;x=oe(I|0,D|0,(n|K)^(t|v)^(l|e)|0,x|0)|0;p=oe(x|0,D|0,L|0,p|0)|0;p=oe(p|0,D|0,(b^o)&z^b|0,(j^y)&f^j|0)|0;L=D;x=Rd(q|0,H|0,28)|0;e=D;l=Pd(q|0,H|0,36)|0;e=e|D;v=Rd(q|0,H|0,34)|0;t=D;K=Pd(q|0,H|0,30)|0;t=e^(t|D);e=Rd(q|0,H|0,39)|0;n=D;I=Pd(q|0,H|0,25)|0;E=c[G>>2]|0;F=c[G+4>>2]|0;n=oe((E|s)&q|E&s|0,(F|J)&H|F&J|0,(x|l)^(v|K)^(e|I)|0,t^(n|D)|0)|0;t=D;u=oe(r|0,u|0,p|0,L|0)|0;r=D;c[h+16>>2]=u;c[h+16+4>>2]=r;L=oe(n|0,t|0,p|0,L|0)|0;p=D;c[w>>2]=L;c[w+4>>2]=p;t=Rd(u|0,r|0,14)|0;n=D;I=Pd(u|0,r|0,50)|0;n=n|D;e=Rd(u|0,r|0,18)|0;K=D;v=Pd(u|0,r|0,46)|0;K=n^(K|D);n=Rd(u|0,r|0,41)|0;l=D;x=Pd(u|0,r|0,23)|0;l=K^(l|D);K=c[h+80+480>>2]|0;J=c[h+80+480+4>>2]|0;j=oe(b|0,j|0,593698344,-1866530822)|0;l=oe(j|0,D|0,(t|I)^(e|v)^(n|x)|0,l|0)|0;J=oe(l|0,D|0,K|0,J|0)|0;J=oe(J|0,D|0,(o^z)&u^o|0,(y^f)&r^y|0)|0;K=D;l=Rd(L|0,p|0,28)|0;x=D;n=Pd(L|0,p|0,36)|0;x=x|D;v=Rd(L|0,p|0,34)|0;e=D;I=Pd(L|0,p|0,30)|0;e=x^(e|D);x=Rd(L|0,p|0,39)|0;t=D;j=Pd(L|0,p|0,25)|0;b=c[k>>2]|0;s=c[k+4>>2]|0;t=oe((b|q)&L|b&q|0,(s|H)&p|s&H|0,(l|n)^(v|I)^(x|j)|0,e^(t|D)|0)|0;e=D;F=oe(E|0,F|0,J|0,K|0)|0;E=D;c[G>>2]=F;c[G+4>>2]=E;K=oe(t|0,e|0,J|0,K|0)|0;J=D;c[m>>2]=K;c[m+4>>2]=J;e=Rd(F|0,E|0,14)|0;t=D;j=Pd(F|0,E|0,50)|0;t=t|D;x=Rd(F|0,E|0,18)|0;I=D;v=Pd(F|0,E|0,46)|0;I=t^(I|D);t=Rd(F|0,E|0,41)|0;n=D;l=Pd(F|0,E|0,23)|0;n=I^(n|D);I=c[h+80+488>>2]|0;H=c[h+80+488+4>>2]|0;y=oe(o|0,y|0,-561857047,-1538233109)|0;n=oe(y|0,D|0,(e|j)^(x|v)^(t|l)|0,n|0)|0;H=oe(n|0,D|0,I|0,H|0)|0;H=oe(H|0,D|0,(z^u)&F^z|0,(f^r)&E^f|0)|0;I=D;n=Rd(K|0,J|0,28)|0;l=D;t=Pd(K|0,J|0,36)|0;l=l|D;v=Rd(K|0,J|0,34)|0;x=D;j=Pd(K|0,J|0,30)|0;x=l^(x|D);l=Rd(K|0,J|0,39)|0;e=D;y=Pd(K|0,J|0,25)|0;o=c[A>>2]|0;q=c[A+4>>2]|0;e=oe((o|L)&K|o&L|0,(q|p)&J|q&p|0,(n|t)^(v|j)^(l|y)|0,x^(e|D)|0)|0;x=D;s=oe(b|0,s|0,H|0,I|0)|0;b=D;c[k>>2]=s;c[k+4>>2]=b;I=oe(e|0,x|0,H|0,I|0)|0;H=D;c[B>>2]=I;c[B+4>>2]=H;x=Rd(s|0,b|0,14)|0;e=D;y=Pd(s|0,b|0,50)|0;e=e|D;l=Rd(s|0,b|0,18)|0;j=D;v=Pd(s|0,b|0,46)|0;j=e^(j|D);e=Rd(s|0,b|0,41)|0;t=D;n=Pd(s|0,b|0,23)|0;t=j^(t|D);j=c[h+80+496>>2]|0;p=c[h+80+496+4>>2]|0;f=oe(z|0,f|0,-1295615723,-1090935817)|0;t=oe(f|0,D|0,(x|y)^(l|v)^(e|n)|0,t|0)|0;p=oe(t|0,D|0,j|0,p|0)|0;p=oe(p|0,D|0,(u^F)&s^u|0,(r^E)&b^r|0)|0;j=D;t=Rd(I|0,H|0,28)|0;n=D;e=Pd(I|0,H|0,36)|0;n=n|D;v=Rd(I|0,H|0,34)|0;l=D;y=Pd(I|0,H|0,30)|0;l=n^(l|D);n=Rd(I|0,H|0,39)|0;x=D;f=Pd(I|0,H|0,25)|0;z=c[w>>2]|0;L=c[w+4>>2]|0;x=oe((z|K)&I|z&K|0,(L|J)&H|L&J|0,(t|e)^(v|y)^(n|f)|0,l^(x|D)|0)|0;l=D;q=oe(o|0,q|0,p|0,j|0)|0;o=D;c[A>>2]=q;c[A+4>>2]=o;j=oe(x|0,l|0,p|0,j|0)|0;p=D;c[C>>2]=j;c[C+4>>2]=p;l=Rd(q|0,o|0,14)|0;x=D;f=Pd(q|0,o|0,50)|0;x=x|D;n=Rd(q|0,o|0,18)|0;y=D;v=Pd(q|0,o|0,46)|0;y=x^(y|D);x=Rd(q|0,o|0,41)|0;e=D;t=Pd(q|0,o|0,23)|0;e=y^(e|D);y=c[h+80+504>>2]|0;J=c[h+80+504+4>>2]|0;r=oe(u|0,r|0,-479046869,-965641998)|0;e=oe(r|0,D|0,(l|f)^(n|v)^(x|t)|0,e|0)|0;J=oe(e|0,D|0,y|0,J|0)|0;J=oe(J|0,D|0,(F^s)&q^F|0,(E^b)&o^E|0)|0;y=D;e=Rd(j|0,p|0,28)|0;t=D;x=Pd(j|0,p|0,36)|0;t=t|D;v=Rd(j|0,p|0,34)|0;n=D;f=Pd(j|0,p|0,30)|0;n=t^(n|D);t=Rd(j|0,p|0,39)|0;l=D;r=Pd(j|0,p|0,25)|0;u=c[m>>2]|0;K=c[m+4>>2]|0;l=oe((u|I)&j|u&I|0,(K|H)&p|K&H|0,(e|x)^(v|f)^(t|r)|0,n^(l|D)|0)|0;n=D;L=oe(z|0,L|0,J|0,y|0)|0;z=D;c[w>>2]=L;c[w+4>>2]=z;y=oe(l|0,n|0,J|0,y|0)|0;J=D;c[h+16>>2]=y;c[h+16+4>>2]=J;n=Rd(L|0,z|0,14)|0;l=D;r=Pd(L|0,z|0,50)|0;l=l|D;t=Rd(L|0,z|0,18)|0;f=D;v=Pd(L|0,z|0,46)|0;f=l^(f|D);l=Rd(L|0,z|0,41)|0;x=D;e=Pd(L|0,z|0,23)|0;x=f^(x|D);f=c[h+80+512>>2]|0;H=c[h+80+512+4>>2]|0;E=oe(F|0,E|0,-366583396,-903397682)|0;x=oe(E|0,D|0,(n|r)^(t|v)^(l|e)|0,x|0)|0;H=oe(x|0,D|0,f|0,H|0)|0;H=oe(H|0,D|0,(s^q)&L^s|0,(b^o)&z^b|0)|0;f=D;x=Rd(y|0,J|0,28)|0;e=D;l=Pd(y|0,J|0,36)|0;e=e|D;v=Rd(y|0,J|0,34)|0;t=D;r=Pd(y|0,J|0,30)|0;t=e^(t|D);e=Rd(y|0,J|0,39)|0;n=D;E=Pd(y|0,J|0,25)|0;F=c[B>>2]|0;I=c[B+4>>2]|0;n=oe((F|j)&y|F&j|0,(I|p)&J|I&p|0,(x|l)^(v|r)^(e|E)|0,t^(n|D)|0)|0;t=D;K=oe(u|0,K|0,H|0,f|0)|0;u=D;c[m>>2]=K;c[m+4>>2]=u;f=oe(n|0,t|0,H|0,f|0)|0;H=D;c[G>>2]=f;c[G+4>>2]=H;t=Rd(K|0,u|0,14)|0;n=D;E=Pd(K|0,u|0,50)|0;n=n|D;e=Rd(K|0,u|0,18)|0;r=D;v=Pd(K|0,u|0,46)|0;r=n^(r|D);n=Rd(K|0,u|0,41)|0;l=D;x=Pd(K|0,u|0,23)|0;l=r^(l|D);r=c[h+80+520>>2]|0;p=c[h+80+520+4>>2]|0;b=oe(s|0,b|0,566280711,-779700025)|0;l=oe(b|0,D|0,(t|E)^(e|v)^(n|x)|0,l|0)|0;p=oe(l|0,D|0,r|0,p|0)|0;p=oe(p|0,D|0,(q^L)&K^q|0,(o^z)&u^o|0)|0;r=D;l=Rd(f|0,H|0,28)|0;x=D;n=Pd(f|0,H|0,36)|0;x=x|D;v=Rd(f|0,H|0,34)|0;e=D;E=Pd(f|0,H|0,30)|0;e=x^(e|D);x=Rd(f|0,H|0,39)|0;t=D;b=Pd(f|0,H|0,25)|0;s=c[C>>2]|0;j=c[C+4>>2]|0;t=oe((s|y)&f|s&y|0,(j|J)&H|j&J|0,(l|n)^(v|E)^(x|b)|0,e^(t|D)|0)|0;e=D;I=oe(F|0,I|0,p|0,r|0)|0;F=D;c[B>>2]=I;c[B+4>>2]=F;r=oe(t|0,e|0,p|0,r|0)|0;p=D;c[k>>2]=r;c[k+4>>2]=p;e=Rd(I|0,F|0,14)|0;t=D;b=Pd(I|0,F|0,50)|0;t=t|D;x=Rd(I|0,F|0,18)|0;E=D;v=Pd(I|0,F|0,46)|0;E=t^(E|D);t=Rd(I|0,F|0,41)|0;n=D;l=Pd(I|0,F|0,23)|0;n=E^(n|D);E=c[h+80+528>>2]|0;J=c[h+80+528+4>>2]|0;o=oe(q|0,o|0,-840897762,-354779690)|0;n=oe(o|0,D|0,(e|b)^(x|v)^(t|l)|0,n|0)|0;J=oe(n|0,D|0,E|0,J|0)|0;J=oe(J|0,D|0,(L^K)&I^L|0,(z^u)&F^z|0)|0;E=D;n=Rd(r|0,p|0,28)|0;l=D;t=Pd(r|0,p|0,36)|0;l=l|D;v=Rd(r|0,p|0,34)|0;x=D;b=Pd(r|0,p|0,30)|0;x=l^(x|D);l=Rd(r|0,p|0,39)|0;e=D;o=Pd(r|0,p|0,25)|0;q=c[h+16>>2]|0;y=c[h+16+4>>2]|0;e=oe((q|f)&r|q&f|0,(y|H)&p|y&H|0,(n|t)^(v|b)^(l|o)|0,x^(e|D)|0)|0;x=D;j=oe(s|0,j|0,J|0,E|0)|0;s=D;c[C>>2]=j;c[C+4>>2]=s;E=oe(e|0,x|0,J|0,E|0)|0;J=D;c[A>>2]=E;c[A+4>>2]=J;x=Rd(j|0,s|0,14)|0;e=D;o=Pd(j|0,s|0,50)|0;e=e|D;l=Rd(j|0,s|0,18)|0;b=D;v=Pd(j|0,s|0,46)|0;b=e^(b|D);e=Rd(j|0,s|0,41)|0;t=D;n=Pd(j|0,s|0,23)|0;t=b^(t|D);b=c[h+80+536>>2]|0;H=c[h+80+536+4>>2]|0;z=oe(L|0,z|0,-294727304,-176337025)|0;t=oe(z|0,D|0,(x|o)^(l|v)^(e|n)|0,t|0)|0;H=oe(t|0,D|0,b|0,H|0)|0;H=oe(H|0,D|0,(K^I)&j^K|0,(u^F)&s^u|0)|0;b=D;t=Rd(E|0,J|0,28)|0;n=D;e=Pd(E|0,J|0,36)|0;n=n|D;v=Rd(E|0,J|0,34)|0;l=D;o=Pd(E|0,J|0,30)|0;l=n^(l|D);n=Rd(E|0,J|0,39)|0;x=D;z=Pd(E|0,J|0,25)|0;L=c[G>>2]|0;f=c[G+4>>2]|0;x=oe((L|r)&E|L&r|0,(f|p)&J|f&p|0,(t|e)^(v|o)^(n|z)|0,l^(x|D)|0)|0;l=D;y=oe(q|0,y|0,H|0,b|0)|0;q=D;c[h+16>>2]=y;c[h+16+4>>2]=q;b=oe(x|0,l|0,H|0,b|0)|0;H=D;c[w>>2]=b;c[w+4>>2]=H;l=Rd(y|0,q|0,14)|0;x=D;z=Pd(y|0,q|0,50)|0;x=x|D;n=Rd(y|0,q|0,18)|0;o=D;v=Pd(y|0,q|0,46)|0;o=x^(o|D);x=Rd(y|0,q|0,41)|0;e=D;t=Pd(y|0,q|0,23)|0;e=o^(e|D);o=c[h+80+544>>2]|0;p=c[h+80+544+4>>2]|0;u=oe(K|0,u|0,1914138554,116418474)|0;e=oe(u|0,D|0,(l|z)^(n|v)^(x|t)|0,e|0)|0;p=oe(e|0,D|0,o|0,p|0)|0;p=oe(p|0,D|0,(I^j)&y^I|0,(F^s)&q^F|0)|0;o=D;e=Rd(b|0,H|0,28)|0;t=D;x=Pd(b|0,H|0,36)|0;t=t|D;v=Rd(b|0,H|0,34)|0;n=D;z=Pd(b|0,H|0,30)|0;n=t^(n|D);t=Rd(b|0,H|0,39)|0;l=D;u=Pd(b|0,H|0,25)|0;K=c[k>>2]|0;r=c[k+4>>2]|0;l=oe((K|E)&b|K&E|0,(r|J)&H|r&J|0,(e|x)^(v|z)^(t|u)|0,n^(l|D)|0)|0;n=D;f=oe(L|0,f|0,p|0,o|0)|0;L=D;c[G>>2]=f;c[G+4>>2]=L;o=oe(l|0,n|0,p|0,o|0)|0;p=D;c[m>>2]=o;c[m+4>>2]=p;n=Rd(f|0,L|0,14)|0;l=D;u=Pd(f|0,L|0,50)|0;l=l|D;t=Rd(f|0,L|0,18)|0;z=D;v=Pd(f|0,L|0,46)|0;z=l^(z|D);l=Rd(f|0,L|0,41)|0;x=D;e=Pd(f|0,L|0,23)|0;x=z^(x|D);z=c[h+80+552>>2]|0;J=c[h+80+552+4>>2]|0;F=oe(I|0,F|0,-1563912026,174292421)|0;x=oe(F|0,D|0,(n|u)^(t|v)^(l|e)|0,x|0)|0;J=oe(x|0,D|0,z|0,J|0)|0;J=oe(J|0,D|0,(j^y)&f^j|0,(s^q)&L^s|0)|0;z=D;x=Rd(o|0,p|0,28)|0;e=D;l=Pd(o|0,p|0,36)|0;e=e|D;v=Rd(o|0,p|0,34)|0;t=D;u=Pd(o|0,p|0,30)|0;t=e^(t|D);e=Rd(o|0,p|0,39)|0;n=D;F=Pd(o|0,p|0,25)|0;I=c[A>>2]|0;E=c[A+4>>2]|0;n=oe((I|b)&o|I&b|0,(E|H)&p|E&H|0,(x|l)^(v|u)^(e|F)|0,t^(n|D)|0)|0;t=D;r=oe(K|0,r|0,J|0,z|0)|0;K=D;c[k>>2]=r;c[k+4>>2]=K;z=oe(n|0,t|0,J|0,z|0)|0;J=D;c[B>>2]=z;c[B+4>>2]=J;t=Rd(r|0,K|0,14)|0;n=D;F=Pd(r|0,K|0,50)|0;n=n|D;e=Rd(r|0,K|0,18)|0;u=D;v=Pd(r|0,K|0,46)|0;u=n^(u|D);n=Rd(r|0,K|0,41)|0;l=D;x=Pd(r|0,K|0,23)|0;l=u^(l|D);u=c[h+80+560>>2]|0;H=c[h+80+560+4>>2]|0;s=oe(j|0,s|0,-1090974290,289380356)|0;l=oe(s|0,D|0,(t|F)^(e|v)^(n|x)|0,l|0)|0;H=oe(l|0,D|0,u|0,H|0)|0;H=oe(H|0,D|0,(y^f)&r^y|0,(q^L)&K^q|0)|0;u=D;l=Rd(z|0,J|0,28)|0;x=D;n=Pd(z|0,J|0,36)|0;x=x|D;v=Rd(z|0,J|0,34)|0;e=D;F=Pd(z|0,J|0,30)|0;e=x^(e|D);x=Rd(z|0,J|0,39)|0;t=D;s=Pd(z|0,J|0,25)|0;j=c[w>>2]|0;b=c[w+4>>2]|0;t=oe((j|o)&z|j&o|0,(b|p)&J|b&p|0,(l|n)^(v|F)^(x|s)|0,e^(t|D)|0)|0;e=D;E=oe(I|0,E|0,H|0,u|0)|0;I=D;c[A>>2]=E;c[A+4>>2]=I;u=oe(t|0,e|0,H|0,u|0)|0;H=D;c[C>>2]=u;c[C+4>>2]=H;e=Rd(E|0,I|0,14)|0;t=D;s=Pd(E|0,I|0,50)|0;t=t|D;x=Rd(E|0,I|0,18)|0;F=D;v=Pd(E|0,I|0,46)|0;F=t^(F|D);t=Rd(E|0,I|0,41)|0;n=D;l=Pd(E|0,I|0,23)|0;n=F^(n|D);F=c[h+80+568>>2]|0;p=c[h+80+568+4>>2]|0;q=oe(y|0,q|0,320620315,460393269)|0;n=oe(q|0,D|0,(e|s)^(x|v)^(t|l)|0,n|0)|0;p=oe(n|0,D|0,F|0,p|0)|0;p=oe(p|0,D|0,(f^r)&E^f|0,(L^K)&I^L|0)|0;F=D;n=Rd(u|0,H|0,28)|0;l=D;t=Pd(u|0,H|0,36)|0;l=l|D;v=Rd(u|0,H|0,34)|0;x=D;s=Pd(u|0,H|0,30)|0;x=l^(x|D);l=Rd(u|0,H|0,39)|0;e=D;q=Pd(u|0,H|0,25)|0;y=c[m>>2]|0;o=c[m+4>>2]|0;e=oe((y|z)&u|y&z|0,(o|J)&H|o&J|0,(n|t)^(v|s)^(l|q)|0,x^(e|D)|0)|0;x=D;b=oe(j|0,b|0,p|0,F|0)|0;j=D;c[w>>2]=b;c[w+4>>2]=j;F=oe(e|0,x|0,p|0,F|0)|0;p=D;c[h+16>>2]=F;c[h+16+4>>2]=p;x=Rd(b|0,j|0,14)|0;e=D;q=Pd(b|0,j|0,50)|0;e=e|D;l=Rd(b|0,j|0,18)|0;s=D;v=Pd(b|0,j|0,46)|0;s=e^(s|D);e=Rd(b|0,j|0,41)|0;t=D;n=Pd(b|0,j|0,23)|0;t=s^(t|D);s=c[h+80+576>>2]|0;J=c[h+80+576+4>>2]|0;L=oe(f|0,L|0,587496836,685471733)|0;t=oe(L|0,D|0,(x|q)^(l|v)^(e|n)|0,t|0)|0;J=oe(t|0,D|0,s|0,J|0)|0;J=oe(J|0,D|0,(r^E)&b^r|0,(K^I)&j^K|0)|0;s=D;t=Rd(F|0,p|0,28)|0;n=D;e=Pd(F|0,p|0,36)|0;n=n|D;v=Rd(F|0,p|0,34)|0;l=D;q=Pd(F|0,p|0,30)|0;l=n^(l|D);n=Rd(F|0,p|0,39)|0;x=D;L=Pd(F|0,p|0,25)|0;f=c[B>>2]|0;z=c[B+4>>2]|0;x=oe((f|u)&F|f&u|0,(z|H)&p|z&H|0,(t|e)^(v|q)^(n|L)|0,l^(x|D)|0)|0;l=D;o=oe(y|0,o|0,J|0,s|0)|0;y=D;c[m>>2]=o;c[m+4>>2]=y;s=oe(x|0,l|0,J|0,s|0)|0;J=D;c[G>>2]=s;c[G+4>>2]=J;l=Rd(o|0,y|0,14)|0;x=D;L=Pd(o|0,y|0,50)|0;x=x|D;n=Rd(o|0,y|0,18)|0;q=D;v=Pd(o|0,y|0,46)|0;q=x^(q|D);x=Rd(o|0,y|0,41)|0;e=D;t=Pd(o|0,y|0,23)|0;e=q^(e|D);q=c[h+80+584>>2]|0;H=c[h+80+584+4>>2]|0;K=oe(r|0,K|0,1086792851,852142971)|0;e=oe(K|0,D|0,(l|L)^(n|v)^(x|t)|0,e|0)|0;H=oe(e|0,D|0,q|0,H|0)|0;H=oe(H|0,D|0,(E^b)&o^E|0,(I^j)&y^I|0)|0;q=D;e=Rd(s|0,J|0,28)|0;t=D;x=Pd(s|0,J|0,36)|0;t=t|D;v=Rd(s|0,J|0,34)|0;n=D;L=Pd(s|0,J|0,30)|0;n=t^(n|D);t=Rd(s|0,J|0,39)|0;l=D;K=Pd(s|0,J|0,25)|0;r=c[C>>2]|0;u=c[C+4>>2]|0;l=oe((r|F)&s|r&F|0,(u|p)&J|u&p|0,(e|x)^(v|L)^(t|K)|0,n^(l|D)|0)|0;n=D;z=oe(f|0,z|0,H|0,q|0)|0;f=D;c[B>>2]=z;c[B+4>>2]=f;q=oe(l|0,n|0,H|0,q|0)|0;H=D;c[k>>2]=q;c[k+4>>2]=H;n=Rd(z|0,f|0,14)|0;l=D;K=Pd(z|0,f|0,50)|0;l=l|D;t=Rd(z|0,f|0,18)|0;L=D;v=Pd(z|0,f|0,46)|0;L=l^(L|D);l=Rd(z|0,f|0,41)|0;x=D;e=Pd(z|0,f|0,23)|0;x=L^(x|D);L=c[h+80+592>>2]|0;p=c[h+80+592+4>>2]|0;I=oe(E|0,I|0,365543100,1017036298)|0;x=oe(I|0,D|0,(n|K)^(t|v)^(l|e)|0,x|0)|0;p=oe(x|0,D|0,L|0,p|0)|0;p=oe(p|0,D|0,(b^o)&z^b|0,(j^y)&f^j|0)|0;L=D;x=Rd(q|0,H|0,28)|0;e=D;l=Pd(q|0,H|0,36)|0;e=e|D;v=Rd(q|0,H|0,34)|0;t=D;K=Pd(q|0,H|0,30)|0;t=e^(t|D);e=Rd(q|0,H|0,39)|0;n=D;I=Pd(q|0,H|0,25)|0;E=c[h+16>>2]|0;F=c[h+16+4>>2]|0;n=oe((E|s)&q|E&s|0,(F|J)&H|F&J|0,(x|l)^(v|K)^(e|I)|0,t^(n|D)|0)|0;t=D;u=oe(r|0,u|0,p|0,L|0)|0;r=D;c[C>>2]=u;c[C+4>>2]=r;L=oe(n|0,t|0,p|0,L|0)|0;p=D;c[A>>2]=L;c[A+4>>2]=p;t=Rd(u|0,r|0,14)|0;n=D;I=Pd(u|0,r|0,50)|0;n=n|D;e=Rd(u|0,r|0,18)|0;K=D;v=Pd(u|0,r|0,46)|0;K=n^(K|D);n=Rd(u|0,r|0,41)|0;l=D;x=Pd(u|0,r|0,23)|0;l=K^(l|D);K=c[h+80+600>>2]|0;J=c[h+80+600+4>>2]|0;j=oe(b|0,j|0,-1676669620,1126000580)|0;l=oe(j|0,D|0,(t|I)^(e|v)^(n|x)|0,l|0)|0;J=oe(l|0,D|0,K|0,J|0)|0;J=oe(J|0,D|0,(o^z)&u^o|0,(y^f)&r^y|0)|0;K=D;l=Rd(L|0,p|0,28)|0;x=D;n=Pd(L|0,p|0,36)|0;x=x|D;v=Rd(L|0,p|0,34)|0;e=D;I=Pd(L|0,p|0,30)|0;e=x^(e|D);x=Rd(L|0,p|0,39)|0;t=D;j=Pd(L|0,p|0,25)|0;b=c[G>>2]|0;s=c[G+4>>2]|0;t=oe((b|q)&L|b&q|0,(s|H)&p|s&H|0,(l|n)^(v|I)^(x|j)|0,e^(t|D)|0)|0;e=D;F=oe(E|0,F|0,J|0,K|0)|0;E=D;c[h+16>>2]=F;c[h+16+4>>2]=E;K=oe(t|0,e|0,J|0,K|0)|0;J=D;c[w>>2]=K;c[w+4>>2]=J;e=Rd(F|0,E|0,14)|0;t=D;j=Pd(F|0,E|0,50)|0;t=t|D;x=Rd(F|0,E|0,18)|0;I=D;v=Pd(F|0,E|0,46)|0;I=t^(I|D);t=Rd(F|0,E|0,41)|0;n=D;l=Pd(F|0,E|0,23)|0;n=I^(n|D);I=c[h+80+608>>2]|0;H=c[h+80+608+4>>2]|0;y=oe(o|0,y|0,-885112138,1288033470)|0;n=oe(y|0,D|0,(e|j)^(x|v)^(t|l)|0,n|0)|0;H=oe(n|0,D|0,I|0,H|0)|0;H=oe(H|0,D|0,(z^u)&F^z|0,(f^r)&E^f|0)|0;I=D;n=Rd(K|0,J|0,28)|0;l=D;t=Pd(K|0,J|0,36)|0;l=l|D;v=Rd(K|0,J|0,34)|0;x=D;j=Pd(K|0,J|0,30)|0;x=l^(x|D);l=Rd(K|0,J|0,39)|0;e=D;y=Pd(K|0,J|0,25)|0;o=c[k>>2]|0;q=c[k+4>>2]|0;e=oe((o|L)&K|o&L|0,(q|p)&J|q&p|0,(n|t)^(v|j)^(l|y)|0,x^(e|D)|0)|0;x=D;s=oe(b|0,s|0,H|0,I|0)|0;b=D;c[G>>2]=s;c[G+4>>2]=b;I=oe(e|0,x|0,H|0,I|0)|0;H=D;c[m>>2]=I;c[m+4>>2]=H;x=Rd(s|0,b|0,14)|0;e=D;G=Pd(s|0,b|0,50)|0;e=e|D;y=Rd(s|0,b|0,18)|0;l=D;j=Pd(s|0,b|0,46)|0;l=e^(l|D);e=Rd(s|0,b|0,41)|0;v=D;t=Pd(s|0,b|0,23)|0;v=l^(v|D);l=c[h+80+616>>2]|0;n=c[h+80+616+4>>2]|0;f=oe(z|0,f|0,-60457430,1501505948)|0;v=oe(f|0,D|0,(x|G)^(y|j)^(e|t)|0,v|0)|0;n=oe(v|0,D|0,l|0,n|0)|0;n=oe(n|0,D|0,(u^F)&s^u|0,(r^E)&b^r|0)|0;l=D;v=Rd(I|0,H|0,28)|0;t=D;e=Pd(I|0,H|0,36)|0;t=t|D;j=Rd(I|0,H|0,34)|0;y=D;G=Pd(I|0,H|0,30)|0;y=t^(y|D);t=Rd(I|0,H|0,39)|0;x=D;f=Pd(I|0,H|0,25)|0;z=c[A>>2]|0;p=c[A+4>>2]|0;x=oe((z|K)&I|z&K|0,(p|J)&H|p&J|0,(v|e)^(j|G)^(t|f)|0,y^(x|D)|0)|0;y=D;q=oe(o|0,q|0,n|0,l|0)|0;o=D;c[k>>2]=q;c[k+4>>2]=o;l=oe(x|0,y|0,n|0,l|0)|0;n=D;c[B>>2]=l;c[B+4>>2]=n;B=Rd(q|0,o|0,14)|0;y=D;x=Pd(q|0,o|0,50)|0;y=y|D;k=Rd(q|0,o|0,18)|0;f=D;t=Pd(q|0,o|0,46)|0;f=y^(f|D);y=Rd(q|0,o|0,41)|0;G=D;j=Pd(q|0,o|0,23)|0;G=f^(G|D);f=c[h+80+624>>2]|0;e=c[h+80+624+4>>2]|0;r=oe(u|0,r|0,987167468,1607167915)|0;G=oe(r|0,D|0,(B|x)^(k|t)^(y|j)|0,G|0)|0;e=oe(G|0,D|0,f|0,e|0)|0;e=oe(e|0,D|0,(F^s)&q^F|0,(E^b)&o^E|0)|0;f=D;G=Rd(l|0,n|0,28)|0;j=D;y=Pd(l|0,n|0,36)|0;j=j|D;t=Rd(l|0,n|0,34)|0;k=D;x=Pd(l|0,n|0,30)|0;k=j^(k|D);j=Rd(l|0,n|0,39)|0;B=D;r=Pd(l|0,n|0,25)|0;u=c[w>>2]|0;v=c[w+4>>2]|0;B=oe((u|I)&l|u&I|0,(v|H)&n|v&H|0,(G|y)^(t|x)^(j|r)|0,k^(B|D)|0)|0;k=D;p=oe(z|0,p|0,e|0,f|0)|0;z=D;c[A>>2]=p;c[A+4>>2]=z;f=oe(B|0,k|0,e|0,f|0)|0;e=D;c[C>>2]=f;c[C+4>>2]=e;C=Rd(p|0,z|0,14)|0;k=D;B=Pd(p|0,z|0,50)|0;k=k|D;A=Rd(p|0,z|0,18)|0;r=D;j=Pd(p|0,z|0,46)|0;r=k^(r|D);k=Rd(p|0,z|0,41)|0;x=D;t=Pd(p|0,z|0,23)|0;x=r^(x|D);r=c[h+80+632>>2]|0;y=c[h+80+632+4>>2]|0;E=oe(F|0,E|0,1246189591,1816402316)|0;x=oe(E|0,D|0,(C|B)^(A|j)^(k|t)|0,x|0)|0;y=oe(x|0,D|0,r|0,y|0)|0;b=oe(y|0,D|0,(s^q)&p^s|0,(b^o)&z^b|0)|0;z=D;c[h+8>>2]=b;c[h+8+4>>2]=z;o=Rd(f|0,e|0,28)|0;s=D;p=Pd(f|0,e|0,36)|0;s=s|D;q=Rd(f|0,e|0,34)|0;y=D;r=Pd(f|0,e|0,30)|0;y=s^(y|D);s=Rd(f|0,e|0,39)|0;x=D;t=Pd(f|0,e|0,25)|0;k=c[m>>2]|0;m=c[m+4>>2]|0;x=oe((k|l)&f|k&l|0,(m|n)&e|m&n|0,(o|p)^(q|r)^(s|t)|0,y^(x|D)|0)|0;y=D;c[h>>2]=x;c[h+4>>2]=y;v=oe(u|0,v|0,b|0,z|0)|0;c[w>>2]=v;c[w+4>>2]=D;z=oe(x|0,y|0,b|0,z|0)|0;b=D;c[h+16>>2]=z;c[h+16+4>>2]=b;b=oe(c[a>>2]|0,c[a+4>>2]|0,z|0,b|0)|0;c[a>>2]=b;c[a+4>>2]=D;b=1;while(1){M=a+(b<<3)|0;e=oe(c[M>>2]|0,c[M+4>>2]|0,f|0,e|0)|0;c[M>>2]=e;c[M+4>>2]=D;e=b+1|0;if((e|0)==8)break;b=e;f=c[h+16+(e<<3)>>2]|0;e=c[h+16+(e<<3)+4>>2]|0}fd(h+80|0,640);fd(h+16|0,64);fd(h+8|0,8);fd(h,8);i=g;return}function ia(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;O=i;P=i=i+63&-64;i=i+128|0;v=d[b>>0]|d[b+1>>0]<<8|d[b+2>>0]<<16|d[b+3>>0]<<24;H=d[b+4>>0]|d[b+4+1>>0]<<8|d[b+4+2>>0]<<16|d[b+4+3>>0]<<24;h=d[b+8>>0]|d[b+8+1>>0]<<8|d[b+8+2>>0]<<16|d[b+8+3>>0]<<24;j=d[b+8+4>>0]|d[b+8+4+1>>0]<<8|d[b+8+4+2>>0]<<16|d[b+8+4+3>>0]<<24;k=d[b+16>>0]|d[b+16+1>>0]<<8|d[b+16+2>>0]<<16|d[b+16+3>>0]<<24;l=d[b+16+4>>0]|d[b+16+4+1>>0]<<8|d[b+16+4+2>>0]<<16|d[b+16+4+3>>0]<<24;m=d[b+24>>0]|d[b+24+1>>0]<<8|d[b+24+2>>0]<<16|d[b+24+3>>0]<<24;n=d[b+24+4>>0]|d[b+24+4+1>>0]<<8|d[b+24+4+2>>0]<<16|d[b+24+4+3>>0]<<24;o=d[b+32>>0]|d[b+32+1>>0]<<8|d[b+32+2>>0]<<16|d[b+32+3>>0]<<24;p=d[b+32+4>>0]|d[b+32+4+1>>0]<<8|d[b+32+4+2>>0]<<16|d[b+32+4+3>>0]<<24;q=d[b+40>>0]|d[b+40+1>>0]<<8|d[b+40+2>>0]<<16|d[b+40+3>>0]<<24;r=d[b+40+4>>0]|d[b+40+4+1>>0]<<8|d[b+40+4+2>>0]<<16|d[b+40+4+3>>0]<<24;s=d[b+48>>0]|d[b+48+1>>0]<<8|d[b+48+2>>0]<<16|d[b+48+3>>0]<<24;t=d[b+48+4>>0]|d[b+48+4+1>>0]<<8|d[b+48+4+2>>0]<<16|d[b+48+4+3>>0]<<24;u=d[b+56>>0]|d[b+56+1>>0]<<8|d[b+56+2>>0]<<16|d[b+56+3>>0]<<24;w=d[b+56+4>>0]|d[b+56+4+1>>0]<<8|d[b+56+4+2>>0]<<16|d[b+56+4+3>>0]<<24;x=d[b+64>>0]|d[b+64+1>>0]<<8|d[b+64+2>>0]<<16|d[b+64+3>>0]<<24;y=d[b+64+4>>0]|d[b+64+4+1>>0]<<8|d[b+64+4+2>>0]<<16|d[b+64+4+3>>0]<<24;z=d[b+72>>0]|d[b+72+1>>0]<<8|d[b+72+2>>0]<<16|d[b+72+3>>0]<<24;A=d[b+72+4>>0]|d[b+72+4+1>>0]<<8|d[b+72+4+2>>0]<<16|d[b+72+4+3>>0]<<24;B=d[b+80>>0]|d[b+80+1>>0]<<8|d[b+80+2>>0]<<16|d[b+80+3>>0]<<24;C=d[b+80+4>>0]|d[b+80+4+1>>0]<<8|d[b+80+4+2>>0]<<16|d[b+80+4+3>>0]<<24;E=d[b+88>>0]|d[b+88+1>>0]<<8|d[b+88+2>>0]<<16|d[b+88+3>>0]<<24;F=d[b+88+4>>0]|d[b+88+4+1>>0]<<8|d[b+88+4+2>>0]<<16|d[b+88+4+3>>0]<<24;G=d[b+96>>0]|d[b+96+1>>0]<<8|d[b+96+2>>0]<<16|d[b+96+3>>0]<<24;I=d[b+96+4>>0]|d[b+96+4+1>>0]<<8|d[b+96+4+2>>0]<<16|d[b+96+4+3>>0]<<24;J=d[b+104>>0]|d[b+104+1>>0]<<8|d[b+104+2>>0]<<16|d[b+104+3>>0]<<24;K=d[b+104+4>>0]|d[b+104+4+1>>0]<<8|d[b+104+4+2>>0]<<16|d[b+104+4+3>>0]<<24;L=d[b+112>>0]|d[b+112+1>>0]<<8|d[b+112+2>>0]<<16|d[b+112+3>>0]<<24;M=d[b+112+4>>0]|d[b+112+4+1>>0]<<8|d[b+112+4+2>>0]<<16|d[b+112+4+3>>0]<<24;N=d[b+120>>0]|d[b+120+1>>0]<<8|d[b+120+2>>0]<<16|d[b+120+3>>0]<<24;b=d[b+120+4>>0]|d[b+120+4+1>>0]<<8|d[b+120+4+2>>0]<<16|d[b+120+4+3>>0]<<24;e=P;f=a;g=e+64|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(g|0));c[P+80>>2]=-23791573;c[P+80+4>>2]=1013904242;c[P+88>>2]=1595750129;c[P+88+4>>2]=-1521486534;Y=c[a+64>>2]^-1377402159;ha=c[a+64+4>>2]^1359893119;$=c[a+72>>2]^725511199;R=c[a+72+4>>2]^-1694144372;V=c[a+80>>2]^-79577749;ba=c[a+80+4>>2]^528734635;ka=c[a+88>>2]^327033209;ga=c[a+88+4>>2]^1541459225;c[P+120>>2]=ka;c[P+120+4>>2]=ga;X=c[P+32>>2]|0;da=c[P+32+4>>2]|0;la=oe(X|0,da|0,c[P>>2]|0,c[P+4>>2]|0)|0;la=oe(la|0,D|0,v|0,H|0)|0;ja=D;U=oe(ha^ja|0,Y^la|0,-205731576,1779033703)|0;ea=D;Z=Rd(X^U|0,da^ea|0,24)|0;e=D;da=Pd(X^U|0,da^ea|0,40)|0;e=D|e;X=oe(da|Z|0,e|0,la|0,ja|0)|0;X=oe(X|0,D|0,h|0,j|0)|0;Q=D;c[P>>2]=X;c[P+4>>2]=Q;_=Rd(ha^ja^X|0,Y^la^Q|0,16)|0;g=D;la=Pd(ha^ja^X|0,Y^la^Q|0,48)|0;g=D|g;c[P+96>>2]=la|_;c[P+96+4>>2]=g;ea=oe(la|_|0,g|0,U|0,ea|0)|0;U=D;c[P+64>>2]=ea;c[P+64+4>>2]=U;g=Rd((da|Z)^ea|0,e^U|0,63)|0;_=D;U=Pd((da|Z)^ea|0,e^U|0,1)|0;c[P+32>>2]=U|g;c[P+32+4>>2]=D|_;_=c[P+40>>2]|0;g=c[P+40+4>>2]|0;U=oe(_|0,g|0,c[P+8>>2]|0,c[P+8+4>>2]|0)|0;U=oe(U|0,D|0,k|0,l|0)|0;e=D;ea=oe(R^e|0,$^U|0,-2067093701,-1150833019)|0;Z=D;da=Rd(_^ea|0,g^Z|0,24)|0;la=D;g=Pd(_^ea|0,g^Z|0,40)|0;la=D|la;_=oe(g|da|0,la|0,U|0,e|0)|0;_=oe(_|0,D|0,m|0,n|0)|0;Y=D;c[P+8>>2]=_;c[P+8+4>>2]=Y;ja=Rd(R^e^_|0,$^U^Y|0,16)|0;ha=D;U=Pd(R^e^_|0,$^U^Y|0,48)|0;ha=D|ha;c[P+104>>2]=U|ja;c[P+104+4>>2]=ha;Z=oe(U|ja|0,ha|0,ea|0,Z|0)|0;ea=D;c[P+72>>2]=Z;c[P+72+4>>2]=ea;ha=Rd((g|da)^Z|0,la^ea|0,63)|0;ja=D;ea=Pd((g|da)^Z|0,la^ea|0,1)|0;ja=D|ja;la=c[P+48>>2]|0;Z=c[P+48+4>>2]|0;da=oe(la|0,Z|0,c[P+16>>2]|0,c[P+16+4>>2]|0)|0;da=oe(da|0,D|0,o|0,p|0)|0;g=D;U=oe(ba^g|0,V^da|0,-23791573,1013904242)|0;$=D;e=Rd(la^U|0,Z^$|0,24)|0;R=D;Z=Pd(la^U|0,Z^$|0,40)|0;R=D|R;la=oe(Z|e|0,R|0,da|0,g|0)|0;la=oe(la|0,D|0,q|0,r|0)|0;W=D;c[P+16>>2]=la;c[P+16+4>>2]=W;ia=Rd(ba^g^la|0,V^da^W|0,16)|0;fa=D;da=Pd(ba^g^la|0,V^da^W|0,48)|0;fa=D|fa;c[P+112>>2]=da|ia;c[P+112+4>>2]=fa;$=oe(da|ia|0,fa|0,U|0,$|0)|0;U=D;fa=Rd((Z|e)^$|0,R^U|0,63)|0;ia=D;R=Pd((Z|e)^$|0,R^U|0,1)|0;ia=D|ia;e=c[P+56>>2]|0;Z=c[P+56+4>>2]|0;da=oe(e|0,Z|0,c[P+24>>2]|0,c[P+24+4>>2]|0)|0;da=oe(da|0,D|0,s|0,t|0)|0;V=D;g=oe(ga^V|0,ka^da|0,c[P+88>>2]|0,c[P+88+4>>2]|0)|0;ba=D;f=Rd(e^g|0,Z^ba|0,24)|0;aa=D;Z=Pd(e^g|0,Z^ba|0,40)|0;aa=D|aa;e=oe(Z|f|0,aa|0,da|0,V|0)|0;e=oe(e|0,D|0,u|0,w|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;ca=Rd(ga^V^e|0,ka^da^S|0,16)|0;ma=D;da=Pd(ga^V^e|0,ka^da^S|0,48)|0;ma=D|ma;ba=oe(da|ca|0,ma|0,g|0,ba|0)|0;g=D;ka=Rd((Z|f)^ba|0,aa^g|0,63)|0;V=D;aa=Pd((Z|f)^ba|0,aa^g|0,1)|0;V=D|V;Q=oe(ea|ha|0,ja|0,X|0,Q|0)|0;Q=oe(Q|0,D|0,x|0,y|0)|0;X=D;U=oe(ma^X|0,(da|ca)^Q|0,$|0,U|0)|0;$=D;f=Rd((ea|ha)^U|0,ja^$|0,24)|0;Z=D;ja=Pd((ea|ha)^U|0,ja^$|0,40)|0;Z=D|Z;ha=oe(ja|f|0,Z|0,Q|0,X|0)|0;ha=oe(ha|0,D|0,z|0,A|0)|0;ea=D;c[P>>2]=ha;c[P+4>>2]=ea;ga=Rd(ma^X^ha|0,(da|ca)^Q^ea|0,16)|0;T=D;Q=Pd(ma^X^ha|0,(da|ca)^Q^ea|0,48)|0;T=D|T;c[P+120>>2]=Q|ga;c[P+120+4>>2]=T;$=oe(Q|ga|0,T|0,U|0,$|0)|0;U=D;c[P+80>>2]=$;c[P+80+4>>2]=U;T=Rd((ja|f)^$|0,Z^U|0,63)|0;ga=D;U=Pd((ja|f)^$|0,Z^U|0,1)|0;c[P+40>>2]=U|T;c[P+40+4>>2]=D|ga;Y=oe(R|fa|0,ia|0,_|0,Y|0)|0;Y=oe(Y|0,D|0,B|0,C|0)|0;_=D;ga=c[P+96>>2]^Y;T=c[P+96+4>>2]^_;g=oe(T|0,ga|0,ba|0,g|0)|0;ba=D;U=Rd((R|fa)^g|0,ia^ba|0,24)|0;Z=D;ia=Pd((R|fa)^g|0,ia^ba|0,40)|0;Z=D|Z;_=oe(ia|U|0,Z|0,Y|0,_|0)|0;_=oe(_|0,D|0,E|0,F|0)|0;Y=D;c[P+8>>2]=_;c[P+8+4>>2]=Y;fa=Rd(T^_|0,ga^Y|0,16)|0;R=D;ga=Pd(T^_|0,ga^Y|0,48)|0;R=D|R;ba=oe(ga|fa|0,R|0,g|0,ba|0)|0;g=D;c[P+88>>2]=ba;c[P+88+4>>2]=g;T=Rd((ia|U)^ba|0,Z^g|0,63)|0;$=D;g=Pd((ia|U)^ba|0,Z^g|0,1)|0;c[P+48>>2]=g|T;c[P+48+4>>2]=D|$;W=oe(aa|ka|0,V|0,la|0,W|0)|0;W=oe(W|0,D|0,G|0,I|0)|0;la=D;$=c[P+104>>2]^W;T=c[P+104+4>>2]^la;g=oe(T|0,$|0,c[P+64>>2]|0,c[P+64+4>>2]|0)|0;Z=D;ba=Rd((aa|ka)^g|0,V^Z|0,24)|0;U=D;V=Pd((aa|ka)^g|0,V^Z|0,40)|0;U=D|U;la=oe(V|ba|0,U|0,W|0,la|0)|0;la=oe(la|0,D|0,J|0,K|0)|0;W=D;c[P+16>>2]=la;c[P+16+4>>2]=W;ka=Rd(T^la|0,$^W|0,16)|0;aa=D;$=Pd(T^la|0,$^W|0,48)|0;aa=D|aa;Z=oe($|ka|0,aa|0,g|0,Z|0)|0;g=D;T=Rd((V|ba)^Z|0,U^g|0,63)|0;ia=D;U=Pd((V|ba)^Z|0,U^g|0,1)|0;c[P+56>>2]=U|T;c[P+56+4>>2]=D|ia;ia=c[P+32>>2]|0;T=c[P+32+4>>2]|0;S=oe(ia|0,T|0,e|0,S|0)|0;S=oe(S|0,D|0,L|0,M|0)|0;e=D;U=c[P+112>>2]^S;ba=c[P+112+4>>2]^e;V=oe(ba|0,U|0,c[P+72>>2]|0,c[P+72+4>>2]|0)|0;f=D;ja=Rd(ia^V|0,T^f|0,24)|0;Q=D;T=Pd(ia^V|0,T^f|0,40)|0;Q=D|Q;e=oe(T|ja|0,Q|0,S|0,e|0)|0;e=oe(e|0,D|0,N|0,b|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;ia=Rd(ba^e|0,U^S|0,16)|0;ca=D;U=Pd(ba^e|0,U^S|0,48)|0;ca=D|ca;f=oe(U|ia|0,ca|0,V|0,f|0)|0;V=D;ba=Rd((T|ja)^f|0,Q^V|0,63)|0;da=D;Q=Pd((T|ja)^f|0,Q^V|0,1)|0;da=D|da;ea=oe(Q|ba|0,da|0,ha|0,ea|0)|0;ea=oe(ea|0,D|0,L|0,M|0)|0;ha=D;g=oe(R^ha|0,(ga|fa)^ea|0,Z|0,g|0)|0;Z=D;ja=Rd((Q|ba)^g|0,da^Z|0,24)|0;T=D;da=Pd((Q|ba)^g|0,da^Z|0,40)|0;T=D|T;ba=oe(da|ja|0,T|0,ea|0,ha|0)|0;ba=oe(ba|0,D|0,B|0,C|0)|0;Q=D;c[P>>2]=ba;c[P+4>>2]=Q;X=Rd(R^ha^ba|0,(ga|fa)^ea^Q|0,16)|0;ma=D;ea=Pd(R^ha^ba|0,(ga|fa)^ea^Q|0,48)|0;ma=D|ma;c[P+96>>2]=ea|X;c[P+96+4>>2]=ma;Z=oe(ea|X|0,ma|0,g|0,Z|0)|0;g=D;c[P+64>>2]=Z;c[P+64+4>>2]=g;ma=Rd((da|ja)^Z|0,T^g|0,63)|0;X=D;g=Pd((da|ja)^Z|0,T^g|0,1)|0;c[P+32>>2]=g|ma;c[P+32+4>>2]=D|X;X=c[P+40>>2]|0;ma=c[P+40+4>>2]|0;Y=oe(X|0,ma|0,_|0,Y|0)|0;Y=oe(Y|0,D|0,o|0,p|0)|0;_=D;V=oe(aa^_|0,($|ka)^Y|0,f|0,V|0)|0;f=D;g=Rd(X^V|0,ma^f|0,24)|0;T=D;ma=Pd(X^V|0,ma^f|0,40)|0;T=D|T;X=oe(ma|g|0,T|0,Y|0,_|0)|0;X=oe(X|0,D|0,x|0,y|0)|0;Z=D;c[P+8>>2]=X;c[P+8+4>>2]=Z;ja=Rd(aa^_^X|0,($|ka)^Y^Z|0,16)|0;da=D;Y=Pd(aa^_^X|0,($|ka)^Y^Z|0,48)|0;da=D|da;c[P+104>>2]=Y|ja;c[P+104+4>>2]=da;f=oe(Y|ja|0,da|0,V|0,f|0)|0;V=D;c[P+72>>2]=f;c[P+72+4>>2]=V;da=Rd((ma|g)^f|0,T^V|0,63)|0;ja=D;V=Pd((ma|g)^f|0,T^V|0,1)|0;ja=D|ja;T=c[P+48>>2]|0;f=c[P+48+4>>2]|0;W=oe(T|0,f|0,la|0,W|0)|0;W=oe(W|0,D|0,z|0,A|0)|0;la=D;g=oe(ca^la|0,(U|ia)^W|0,c[P+80>>2]|0,c[P+80+4>>2]|0)|0;ma=D;Y=Rd(T^g|0,f^ma|0,24)|0;ka=D;f=Pd(T^g|0,f^ma|0,40)|0;ka=D|ka;T=oe(f|Y|0,ka|0,W|0,la|0)|0;T=oe(T|0,D|0,N|0,b|0)|0;$=D;c[P+16>>2]=T;c[P+16+4>>2]=$;_=Rd(ca^la^T|0,(U|ia)^W^$|0,16)|0;aa=D;W=Pd(ca^la^T|0,(U|ia)^W^$|0,48)|0;aa=D|aa;c[P+112>>2]=W|_;c[P+112+4>>2]=aa;ma=oe(W|_|0,aa|0,g|0,ma|0)|0;g=D;aa=Rd((f|Y)^ma|0,ka^g|0,63)|0;_=D;ka=Pd((f|Y)^ma|0,ka^g|0,1)|0;_=D|_;Y=c[P+56>>2]|0;f=c[P+56+4>>2]|0;S=oe(Y|0,f|0,e|0,S|0)|0;S=oe(S|0,D|0,J|0,K|0)|0;e=D;W=c[P+120>>2]^S;ia=c[P+120+4>>2]^e;U=oe(ia|0,W|0,c[P+88>>2]|0,c[P+88+4>>2]|0)|0;la=D;ca=Rd(Y^U|0,f^la|0,24)|0;ea=D;f=Pd(Y^U|0,f^la|0,40)|0;ea=D|ea;e=oe(f|ca|0,ea|0,S|0,e|0)|0;e=oe(e|0,D|0,s|0,t|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;Y=Rd(ia^e|0,W^S|0,16)|0;fa=D;W=Pd(ia^e|0,W^S|0,48)|0;fa=D|fa;la=oe(W|Y|0,fa|0,U|0,la|0)|0;U=D;ia=Rd((f|ca)^la|0,ea^U|0,63)|0;ga=D;ea=Pd((f|ca)^la|0,ea^U|0,1)|0;ga=D|ga;Q=oe(V|da|0,ja|0,ba|0,Q|0)|0;Q=oe(Q|0,D|0,h|0,j|0)|0;ba=D;g=oe(fa^ba|0,(W|Y)^Q|0,ma|0,g|0)|0;ma=D;ca=Rd((V|da)^g|0,ja^ma|0,24)|0;f=D;ja=Pd((V|da)^g|0,ja^ma|0,40)|0;f=D|f;da=oe(ja|ca|0,f|0,Q|0,ba|0)|0;da=oe(da|0,D|0,G|0,I|0)|0;V=D;c[P>>2]=da;c[P+4>>2]=V;ha=Rd(fa^ba^da|0,(W|Y)^Q^V|0,16)|0;R=D;Q=Pd(fa^ba^da|0,(W|Y)^Q^V|0,48)|0;R=D|R;c[P+120>>2]=Q|ha;c[P+120+4>>2]=R;ma=oe(Q|ha|0,R|0,g|0,ma|0)|0;g=D;c[P+80>>2]=ma;c[P+80+4>>2]=g;R=Rd((ja|ca)^ma|0,f^g|0,63)|0;ha=D;g=Pd((ja|ca)^ma|0,f^g|0,1)|0;c[P+40>>2]=g|R;c[P+40+4>>2]=D|ha;Z=oe(ka|aa|0,_|0,X|0,Z|0)|0;Z=oe(Z|0,D|0,v|0,H|0)|0;X=D;ha=c[P+96>>2]^Z;R=c[P+96+4>>2]^X;U=oe(R|0,ha|0,la|0,U|0)|0;la=D;g=Rd((ka|aa)^U|0,_^la|0,24)|0;f=D;_=Pd((ka|aa)^U|0,_^la|0,40)|0;f=D|f;X=oe(_|g|0,f|0,Z|0,X|0)|0;X=oe(X|0,D|0,k|0,l|0)|0;Z=D;c[P+8>>2]=X;c[P+8+4>>2]=Z;aa=Rd(R^X|0,ha^Z|0,16)|0;ka=D;ha=Pd(R^X|0,ha^Z|0,48)|0;ka=D|ka;la=oe(ha|aa|0,ka|0,U|0,la|0)|0;U=D;c[P+88>>2]=la;c[P+88+4>>2]=U;R=Rd((_|g)^la|0,f^U|0,63)|0;ma=D;U=Pd((_|g)^la|0,f^U|0,1)|0;c[P+48>>2]=U|R;c[P+48+4>>2]=D|ma;$=oe(ea|ia|0,ga|0,T|0,$|0)|0;$=oe($|0,D|0,E|0,F|0)|0;T=D;ma=c[P+104>>2]^$;R=c[P+104+4>>2]^T;U=oe(R|0,ma|0,c[P+64>>2]|0,c[P+64+4>>2]|0)|0;f=D;la=Rd((ea|ia)^U|0,ga^f|0,24)|0;g=D;ga=Pd((ea|ia)^U|0,ga^f|0,40)|0;g=D|g;T=oe(ga|la|0,g|0,$|0,T|0)|0;T=oe(T|0,D|0,u|0,w|0)|0;$=D;c[P+16>>2]=T;c[P+16+4>>2]=$;ia=Rd(R^T|0,ma^$|0,16)|0;ea=D;ma=Pd(R^T|0,ma^$|0,48)|0;ea=D|ea;f=oe(ma|ia|0,ea|0,U|0,f|0)|0;U=D;R=Rd((ga|la)^f|0,g^U|0,63)|0;_=D;g=Pd((ga|la)^f|0,g^U|0,1)|0;c[P+56>>2]=g|R;c[P+56+4>>2]=D|_;_=c[P+32>>2]|0;R=c[P+32+4>>2]|0;S=oe(_|0,R|0,e|0,S|0)|0;S=oe(S|0,D|0,q|0,r|0)|0;e=D;g=c[P+112>>2]^S;la=c[P+112+4>>2]^e;ga=oe(la|0,g|0,c[P+72>>2]|0,c[P+72+4>>2]|0)|0;ca=D;ja=Rd(_^ga|0,R^ca|0,24)|0;Q=D;R=Pd(_^ga|0,R^ca|0,40)|0;Q=D|Q;e=oe(R|ja|0,Q|0,S|0,e|0)|0;e=oe(e|0,D|0,m|0,n|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;_=Rd(la^e|0,g^S|0,16)|0;Y=D;g=Pd(la^e|0,g^S|0,48)|0;Y=D|Y;ca=oe(g|_|0,Y|0,ga|0,ca|0)|0;ga=D;la=Rd((R|ja)^ca|0,Q^ga|0,63)|0;W=D;Q=Pd((R|ja)^ca|0,Q^ga|0,1)|0;W=D|W;V=oe(Q|la|0,W|0,da|0,V|0)|0;V=oe(V|0,D|0,E|0,F|0)|0;da=D;U=oe(ka^da|0,(ha|aa)^V|0,f|0,U|0)|0;f=D;ja=Rd((Q|la)^U|0,W^f|0,24)|0;R=D;W=Pd((Q|la)^U|0,W^f|0,40)|0;R=D|R;la=oe(W|ja|0,R|0,V|0,da|0)|0;la=oe(la|0,D|0,x|0,y|0)|0;Q=D;c[P>>2]=la;c[P+4>>2]=Q;ba=Rd(ka^da^la|0,(ha|aa)^V^Q|0,16)|0;fa=D;V=Pd(ka^da^la|0,(ha|aa)^V^Q|0,48)|0;fa=D|fa;c[P+96>>2]=V|ba;c[P+96+4>>2]=fa;f=oe(V|ba|0,fa|0,U|0,f|0)|0;U=D;c[P+64>>2]=f;c[P+64+4>>2]=U;fa=Rd((W|ja)^f|0,R^U|0,63)|0;ba=D;U=Pd((W|ja)^f|0,R^U|0,1)|0;c[P+32>>2]=U|fa;c[P+32+4>>2]=D|ba;ba=c[P+40>>2]|0;fa=c[P+40+4>>2]|0;Z=oe(ba|0,fa|0,X|0,Z|0)|0;Z=oe(Z|0,D|0,G|0,I|0)|0;X=D;ga=oe(ea^X|0,(ma|ia)^Z|0,ca|0,ga|0)|0;ca=D;U=Rd(ba^ga|0,fa^ca|0,24)|0;R=D;fa=Pd(ba^ga|0,fa^ca|0,40)|0;R=D|R;ba=oe(fa|U|0,R|0,Z|0,X|0)|0;ba=oe(ba|0,D|0,v|0,H|0)|0;f=D;c[P+8>>2]=ba;c[P+8+4>>2]=f;ja=Rd(ea^X^ba|0,(ma|ia)^Z^f|0,16)|0;W=D;Z=Pd(ea^X^ba|0,(ma|ia)^Z^f|0,48)|0;W=D|W;c[P+104>>2]=Z|ja;c[P+104+4>>2]=W;ca=oe(Z|ja|0,W|0,ga|0,ca|0)|0;ga=D;c[P+72>>2]=ca;c[P+72+4>>2]=ga;W=Rd((fa|U)^ca|0,R^ga|0,63)|0;ja=D;ga=Pd((fa|U)^ca|0,R^ga|0,1)|0;ja=D|ja;R=c[P+48>>2]|0;ca=c[P+48+4>>2]|0;$=oe(R|0,ca|0,T|0,$|0)|0;$=oe($|0,D|0,q|0,r|0)|0;T=D;U=oe(Y^T|0,(g|_)^$|0,c[P+80>>2]|0,c[P+80+4>>2]|0)|0;fa=D;Z=Rd(R^U|0,ca^fa|0,24)|0;ia=D;ca=Pd(R^U|0,ca^fa|0,40)|0;ia=D|ia;R=oe(ca|Z|0,ia|0,$|0,T|0)|0;R=oe(R|0,D|0,k|0,l|0)|0;ma=D;c[P+16>>2]=R;c[P+16+4>>2]=ma;X=Rd(Y^T^R|0,(g|_)^$^ma|0,16)|0;ea=D;$=Pd(Y^T^R|0,(g|_)^$^ma|0,48)|0;ea=D|ea;c[P+112>>2]=$|X;c[P+112+4>>2]=ea;fa=oe($|X|0,ea|0,U|0,fa|0)|0;U=D;ea=Rd((ca|Z)^fa|0,ia^U|0,63)|0;X=D;ia=Pd((ca|Z)^fa|0,ia^U|0,1)|0;X=D|X;Z=c[P+56>>2]|0;ca=c[P+56+4>>2]|0;S=oe(Z|0,ca|0,e|0,S|0)|0;S=oe(S|0,D|0,N|0,b|0)|0;e=D;$=c[P+120>>2]^S;_=c[P+120+4>>2]^e;g=oe(_|0,$|0,c[P+88>>2]|0,c[P+88+4>>2]|0)|0;T=D;Y=Rd(Z^g|0,ca^T|0,24)|0;V=D;ca=Pd(Z^g|0,ca^T|0,40)|0;V=D|V;e=oe(ca|Y|0,V|0,S|0,e|0)|0;e=oe(e|0,D|0,J|0,K|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;Z=Rd(_^e|0,$^S|0,16)|0;aa=D;$=Pd(_^e|0,$^S|0,48)|0;aa=D|aa;T=oe($|Z|0,aa|0,g|0,T|0)|0;g=D;_=Rd((ca|Y)^T|0,V^g|0,63)|0;ha=D;V=Pd((ca|Y)^T|0,V^g|0,1)|0;ha=D|ha;Q=oe(ga|W|0,ja|0,la|0,Q|0)|0;Q=oe(Q|0,D|0,B|0,C|0)|0;la=D;U=oe(aa^la|0,($|Z)^Q|0,fa|0,U|0)|0;fa=D;Y=Rd((ga|W)^U|0,ja^fa|0,24)|0;ca=D;ja=Pd((ga|W)^U|0,ja^fa|0,40)|0;ca=D|ca;W=oe(ja|Y|0,ca|0,Q|0,la|0)|0;W=oe(W|0,D|0,L|0,M|0)|0;ga=D;c[P>>2]=W;c[P+4>>2]=ga;da=Rd(aa^la^W|0,($|Z)^Q^ga|0,16)|0;ka=D;Q=Pd(aa^la^W|0,($|Z)^Q^ga|0,48)|0;ka=D|ka;c[P+120>>2]=Q|da;c[P+120+4>>2]=ka;fa=oe(Q|da|0,ka|0,U|0,fa|0)|0;U=D;c[P+80>>2]=fa;c[P+80+4>>2]=U;ka=Rd((ja|Y)^fa|0,ca^U|0,63)|0;da=D;U=Pd((ja|Y)^fa|0,ca^U|0,1)|0;c[P+40>>2]=U|ka;c[P+40+4>>2]=D|da;f=oe(ia|ea|0,X|0,ba|0,f|0)|0;f=oe(f|0,D|0,m|0,n|0)|0;ba=D;da=c[P+96>>2]^f;ka=c[P+96+4>>2]^ba;g=oe(ka|0,da|0,T|0,g|0)|0;T=D;U=Rd((ia|ea)^g|0,X^T|0,24)|0;ca=D;X=Pd((ia|ea)^g|0,X^T|0,40)|0;ca=D|ca;ba=oe(X|U|0,ca|0,f|0,ba|0)|0;ba=oe(ba|0,D|0,s|0,t|0)|0;f=D;c[P+8>>2]=ba;c[P+8+4>>2]=f;ea=Rd(ka^ba|0,da^f|0,16)|0;ia=D;da=Pd(ka^ba|0,da^f|0,48)|0;ia=D|ia;T=oe(da|ea|0,ia|0,g|0,T|0)|0;g=D;c[P+88>>2]=T;c[P+88+4>>2]=g;ka=Rd((X|U)^T|0,ca^g|0,63)|0;fa=D;g=Pd((X|U)^T|0,ca^g|0,1)|0;c[P+48>>2]=g|ka;c[P+48+4>>2]=D|fa;ma=oe(V|_|0,ha|0,R|0,ma|0)|0;ma=oe(ma|0,D|0,u|0,w|0)|0;R=D;fa=c[P+104>>2]^ma;ka=c[P+104+4>>2]^R;g=oe(ka|0,fa|0,c[P+64>>2]|0,c[P+64+4>>2]|0)|0;ca=D;T=Rd((V|_)^g|0,ha^ca|0,24)|0;U=D;ha=Pd((V|_)^g|0,ha^ca|0,40)|0;U=D|U;R=oe(ha|T|0,U|0,ma|0,R|0)|0;R=oe(R|0,D|0,h|0,j|0)|0;ma=D;c[P+16>>2]=R;c[P+16+4>>2]=ma;_=Rd(ka^R|0,fa^ma|0,16)|0;V=D;fa=Pd(ka^R|0,fa^ma|0,48)|0;V=D|V;ca=oe(fa|_|0,V|0,g|0,ca|0)|0;g=D;ka=Rd((ha|T)^ca|0,U^g|0,63)|0;X=D;U=Pd((ha|T)^ca|0,U^g|0,1)|0;c[P+56>>2]=U|ka;c[P+56+4>>2]=D|X;X=c[P+32>>2]|0;ka=c[P+32+4>>2]|0;S=oe(X|0,ka|0,e|0,S|0)|0;S=oe(S|0,D|0,z|0,A|0)|0;e=D;U=c[P+112>>2]^S;T=c[P+112+4>>2]^e;ha=oe(T|0,U|0,c[P+72>>2]|0,c[P+72+4>>2]|0)|0;Y=D;ja=Rd(X^ha|0,ka^Y|0,24)|0;Q=D;ka=Pd(X^ha|0,ka^Y|0,40)|0;Q=D|Q;e=oe(ka|ja|0,Q|0,S|0,e|0)|0;e=oe(e|0,D|0,o|0,p|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;X=Rd(T^e|0,U^S|0,16)|0;Z=D;U=Pd(T^e|0,U^S|0,48)|0;Z=D|Z;Y=oe(U|X|0,Z|0,ha|0,Y|0)|0;ha=D;T=Rd((ka|ja)^Y|0,Q^ha|0,63)|0;$=D;Q=Pd((ka|ja)^Y|0,Q^ha|0,1)|0;$=D|$;ga=oe(Q|T|0,$|0,W|0,ga|0)|0;ga=oe(ga|0,D|0,u|0,w|0)|0;W=D;g=oe(ia^W|0,(da|ea)^ga|0,ca|0,g|0)|0;ca=D;ja=Rd((Q|T)^g|0,$^ca|0,24)|0;ka=D;$=Pd((Q|T)^g|0,$^ca|0,40)|0;ka=D|ka;T=oe($|ja|0,ka|0,ga|0,W|0)|0;T=oe(T|0,D|0,z|0,A|0)|0;Q=D;c[P>>2]=T;c[P+4>>2]=Q;la=Rd(ia^W^T|0,(da|ea)^ga^Q|0,16)|0;aa=D;ga=Pd(ia^W^T|0,(da|ea)^ga^Q|0,48)|0;aa=D|aa;c[P+96>>2]=ga|la;c[P+96+4>>2]=aa;ca=oe(ga|la|0,aa|0,g|0,ca|0)|0;g=D;c[P+64>>2]=ca;c[P+64+4>>2]=g;aa=Rd(($|ja)^ca|0,ka^g|0,63)|0;la=D;g=Pd(($|ja)^ca|0,ka^g|0,1)|0;c[P+32>>2]=g|aa;c[P+32+4>>2]=D|la;la=c[P+40>>2]|0;aa=c[P+40+4>>2]|0;f=oe(la|0,aa|0,ba|0,f|0)|0;f=oe(f|0,D|0,m|0,n|0)|0;ba=D;ha=oe(V^ba|0,(fa|_)^f|0,Y|0,ha|0)|0;Y=D;g=Rd(la^ha|0,aa^Y|0,24)|0;ka=D;aa=Pd(la^ha|0,aa^Y|0,40)|0;ka=D|ka;la=oe(aa|g|0,ka|0,f|0,ba|0)|0;la=oe(la|0,D|0,h|0,j|0)|0;ca=D;c[P+8>>2]=la;c[P+8+4>>2]=ca;ja=Rd(V^ba^la|0,(fa|_)^f^ca|0,16)|0;$=D;f=Pd(V^ba^la|0,(fa|_)^f^ca|0,48)|0;$=D|$;c[P+104>>2]=f|ja;c[P+104+4>>2]=$;Y=oe(f|ja|0,$|0,ha|0,Y|0)|0;ha=D;c[P+72>>2]=Y;c[P+72+4>>2]=ha;$=Rd((aa|g)^Y|0,ka^ha|0,63)|0;ja=D;ha=Pd((aa|g)^Y|0,ka^ha|0,1)|0;ja=D|ja;ka=c[P+48>>2]|0;Y=c[P+48+4>>2]|0;ma=oe(ka|0,Y|0,R|0,ma|0)|0;ma=oe(ma|0,D|0,J|0,K|0)|0;R=D;g=oe(Z^R|0,(U|X)^ma|0,c[P+80>>2]|0,c[P+80+4>>2]|0)|0;aa=D;f=Rd(ka^g|0,Y^aa|0,24)|0;_=D;Y=Pd(ka^g|0,Y^aa|0,40)|0;_=D|_;ka=oe(Y|f|0,_|0,ma|0,R|0)|0;ka=oe(ka|0,D|0,G|0,I|0)|0;fa=D;c[P+16>>2]=ka;c[P+16+4>>2]=fa;ba=Rd(Z^R^ka|0,(U|X)^ma^fa|0,16)|0;V=D;ma=Pd(Z^R^ka|0,(U|X)^ma^fa|0,48)|0;V=D|V;c[P+112>>2]=ma|ba;c[P+112+4>>2]=V;aa=oe(ma|ba|0,V|0,g|0,aa|0)|0;g=D;V=Rd((Y|f)^aa|0,_^g|0,63)|0;ba=D;_=Pd((Y|f)^aa|0,_^g|0,1)|0;ba=D|ba;f=c[P+56>>2]|0;Y=c[P+56+4>>2]|0;S=oe(f|0,Y|0,e|0,S|0)|0;S=oe(S|0,D|0,E|0,F|0)|0;e=D;ma=c[P+120>>2]^S;X=c[P+120+4>>2]^e;U=oe(X|0,ma|0,c[P+88>>2]|0,c[P+88+4>>2]|0)|0;R=D;Z=Rd(f^U|0,Y^R|0,24)|0;ga=D;Y=Pd(f^U|0,Y^R|0,40)|0;ga=D|ga;e=oe(Y|Z|0,ga|0,S|0,e|0)|0;e=oe(e|0,D|0,L|0,M|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;f=Rd(X^e|0,ma^S|0,16)|0;ea=D;ma=Pd(X^e|0,ma^S|0,48)|0;ea=D|ea;R=oe(ma|f|0,ea|0,U|0,R|0)|0;U=D;X=Rd((Y|Z)^R|0,ga^U|0,63)|0;da=D;ga=Pd((Y|Z)^R|0,ga^U|0,1)|0;da=D|da;Q=oe(ha|$|0,ja|0,T|0,Q|0)|0;Q=oe(Q|0,D|0,k|0,l|0)|0;T=D;g=oe(ea^T|0,(ma|f)^Q|0,aa|0,g|0)|0;aa=D;Z=Rd((ha|$)^g|0,ja^aa|0,24)|0;Y=D;ja=Pd((ha|$)^g|0,ja^aa|0,40)|0;Y=D|Y;$=oe(ja|Z|0,Y|0,Q|0,T|0)|0;$=oe($|0,D|0,s|0,t|0)|0;ha=D;c[P>>2]=$;c[P+4>>2]=ha;W=Rd(ea^T^$|0,(ma|f)^Q^ha|0,16)|0;ia=D;Q=Pd(ea^T^$|0,(ma|f)^Q^ha|0,48)|0;ia=D|ia;c[P+120>>2]=Q|W;c[P+120+4>>2]=ia;aa=oe(Q|W|0,ia|0,g|0,aa|0)|0;g=D;c[P+80>>2]=aa;c[P+80+4>>2]=g;ia=Rd((ja|Z)^aa|0,Y^g|0,63)|0;W=D;g=Pd((ja|Z)^aa|0,Y^g|0,1)|0;c[P+40>>2]=g|ia;c[P+40+4>>2]=D|W;ca=oe(_|V|0,ba|0,la|0,ca|0)|0;ca=oe(ca|0,D|0,q|0,r|0)|0;la=D;W=c[P+96>>2]^ca;ia=c[P+96+4>>2]^la;U=oe(ia|0,W|0,R|0,U|0)|0;R=D;g=Rd((_|V)^U|0,ba^R|0,24)|0;Y=D;ba=Pd((_|V)^U|0,ba^R|0,40)|0;Y=D|Y;la=oe(ba|g|0,Y|0,ca|0,la|0)|0;la=oe(la|0,D|0,B|0,C|0)|0;ca=D;c[P+8>>2]=la;c[P+8+4>>2]=ca;V=Rd(ia^la|0,W^ca|0,16)|0;_=D;W=Pd(ia^la|0,W^ca|0,48)|0;_=D|_;R=oe(W|V|0,_|0,U|0,R|0)|0;U=D;c[P+88>>2]=R;c[P+88+4>>2]=U;ia=Rd((ba|g)^R|0,Y^U|0,63)|0;aa=D;U=Pd((ba|g)^R|0,Y^U|0,1)|0;c[P+48>>2]=U|ia;c[P+48+4>>2]=D|aa;fa=oe(ga|X|0,da|0,ka|0,fa|0)|0;fa=oe(fa|0,D|0,o|0,p|0)|0;ka=D;aa=c[P+104>>2]^fa;ia=c[P+104+4>>2]^ka;U=oe(ia|0,aa|0,c[P+64>>2]|0,c[P+64+4>>2]|0)|0;Y=D;R=Rd((ga|X)^U|0,da^Y|0,24)|0;g=D;da=Pd((ga|X)^U|0,da^Y|0,40)|0;g=D|g;ka=oe(da|R|0,g|0,fa|0,ka|0)|0;ka=oe(ka|0,D|0,v|0,H|0)|0;fa=D;c[P+16>>2]=ka;c[P+16+4>>2]=fa;X=Rd(ia^ka|0,aa^fa|0,16)|0;ga=D;aa=Pd(ia^ka|0,aa^fa|0,48)|0;ga=D|ga;Y=oe(aa|X|0,ga|0,U|0,Y|0)|0;U=D;ia=Rd((da|R)^Y|0,g^U|0,63)|0;ba=D;g=Pd((da|R)^Y|0,g^U|0,1)|0;c[P+56>>2]=g|ia;c[P+56+4>>2]=D|ba;ba=c[P+32>>2]|0;ia=c[P+32+4>>2]|0;S=oe(ba|0,ia|0,e|0,S|0)|0;S=oe(S|0,D|0,N|0,b|0)|0;e=D;g=c[P+112>>2]^S;R=c[P+112+4>>2]^e;da=oe(R|0,g|0,c[P+72>>2]|0,c[P+72+4>>2]|0)|0;Z=D;ja=Rd(ba^da|0,ia^Z|0,24)|0;Q=D;ia=Pd(ba^da|0,ia^Z|0,40)|0;Q=D|Q;e=oe(ia|ja|0,Q|0,S|0,e|0)|0;e=oe(e|0,D|0,x|0,y|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;ba=Rd(R^e|0,g^S|0,16)|0;f=D;g=Pd(R^e|0,g^S|0,48)|0;f=D|f;Z=oe(g|ba|0,f|0,da|0,Z|0)|0;da=D;R=Rd((ia|ja)^Z|0,Q^da|0,63)|0;ma=D;Q=Pd((ia|ja)^Z|0,Q^da|0,1)|0;ma=D|ma;ha=oe(Q|R|0,ma|0,$|0,ha|0)|0;ha=oe(ha|0,D|0,z|0,A|0)|0;$=D;U=oe(_^$|0,(W|V)^ha|0,Y|0,U|0)|0;Y=D;ja=Rd((Q|R)^U|0,ma^Y|0,24)|0;ia=D;ma=Pd((Q|R)^U|0,ma^Y|0,40)|0;ia=D|ia;R=oe(ma|ja|0,ia|0,ha|0,$|0)|0;R=oe(R|0,D|0,v|0,H|0)|0;Q=D;c[P>>2]=R;c[P+4>>2]=Q;T=Rd(_^$^R|0,(W|V)^ha^Q|0,16)|0;ea=D;ha=Pd(_^$^R|0,(W|V)^ha^Q|0,48)|0;ea=D|ea;c[P+96>>2]=ha|T;c[P+96+4>>2]=ea;Y=oe(ha|T|0,ea|0,U|0,Y|0)|0;U=D;c[P+64>>2]=Y;c[P+64+4>>2]=U;ea=Rd((ma|ja)^Y|0,ia^U|0,63)|0;T=D;U=Pd((ma|ja)^Y|0,ia^U|0,1)|0;c[P+32>>2]=U|ea;c[P+32+4>>2]=D|T;T=c[P+40>>2]|0;ea=c[P+40+4>>2]|0;ca=oe(T|0,ea|0,la|0,ca|0)|0;ca=oe(ca|0,D|0,q|0,r|0)|0;la=D;da=oe(ga^la|0,(aa|X)^ca|0,Z|0,da|0)|0;Z=D;U=Rd(T^da|0,ea^Z|0,24)|0;ia=D;ea=Pd(T^da|0,ea^Z|0,40)|0;ia=D|ia;T=oe(ea|U|0,ia|0,ca|0,la|0)|0;T=oe(T|0,D|0,u|0,w|0)|0;Y=D;c[P+8>>2]=T;c[P+8+4>>2]=Y;ja=Rd(ga^la^T|0,(aa|X)^ca^Y|0,16)|0;ma=D;ca=Pd(ga^la^T|0,(aa|X)^ca^Y|0,48)|0;ma=D|ma;c[P+104>>2]=ca|ja;c[P+104+4>>2]=ma;Z=oe(ca|ja|0,ma|0,da|0,Z|0)|0;da=D;c[P+72>>2]=Z;c[P+72+4>>2]=da;ma=Rd((ea|U)^Z|0,ia^da|0,63)|0;ja=D;da=Pd((ea|U)^Z|0,ia^da|0,1)|0;ja=D|ja;ia=c[P+48>>2]|0;Z=c[P+48+4>>2]|0;fa=oe(ia|0,Z|0,ka|0,fa|0)|0;fa=oe(fa|0,D|0,k|0,l|0)|0;ka=D;U=oe(f^ka|0,(g|ba)^fa|0,c[P+80>>2]|0,c[P+80+4>>2]|0)|0;ea=D;ca=Rd(ia^U|0,Z^ea|0,24)|0;X=D;Z=Pd(ia^U|0,Z^ea|0,40)|0;X=D|X;ia=oe(Z|ca|0,X|0,fa|0,ka|0)|0;ia=oe(ia|0,D|0,o|0,p|0)|0;aa=D;c[P+16>>2]=ia;c[P+16+4>>2]=aa;la=Rd(f^ka^ia|0,(g|ba)^fa^aa|0,16)|0;ga=D;fa=Pd(f^ka^ia|0,(g|ba)^fa^aa|0,48)|0;ga=D|ga;c[P+112>>2]=fa|la;c[P+112+4>>2]=ga;ea=oe(fa|la|0,ga|0,U|0,ea|0)|0;U=D;ga=Rd((Z|ca)^ea|0,X^U|0,63)|0;la=D;X=Pd((Z|ca)^ea|0,X^U|0,1)|0;la=D|la;ca=c[P+56>>2]|0;Z=c[P+56+4>>2]|0;S=oe(ca|0,Z|0,e|0,S|0)|0;S=oe(S|0,D|0,B|0,C|0)|0;e=D;fa=c[P+120>>2]^S;ba=c[P+120+4>>2]^e;g=oe(ba|0,fa|0,c[P+88>>2]|0,c[P+88+4>>2]|0)|0;ka=D;f=Rd(ca^g|0,Z^ka|0,24)|0;ha=D;Z=Pd(ca^g|0,Z^ka|0,40)|0;ha=D|ha;e=oe(Z|f|0,ha|0,S|0,e|0)|0;e=oe(e|0,D|0,N|0,b|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;ca=Rd(ba^e|0,fa^S|0,16)|0;V=D;fa=Pd(ba^e|0,fa^S|0,48)|0;V=D|V;ka=oe(fa|ca|0,V|0,g|0,ka|0)|0;g=D;ba=Rd((Z|f)^ka|0,ha^g|0,63)|0;W=D;ha=Pd((Z|f)^ka|0,ha^g|0,1)|0;W=D|W;Q=oe(da|ma|0,ja|0,R|0,Q|0)|0;Q=oe(Q|0,D|0,L|0,M|0)|0;R=D;U=oe(V^R|0,(fa|ca)^Q|0,ea|0,U|0)|0;ea=D;f=Rd((da|ma)^U|0,ja^ea|0,24)|0;Z=D;ja=Pd((da|ma)^U|0,ja^ea|0,40)|0;Z=D|Z;ma=oe(ja|f|0,Z|0,Q|0,R|0)|0;ma=oe(ma|0,D|0,h|0,j|0)|0;da=D;c[P>>2]=ma;c[P+4>>2]=da;$=Rd(V^R^ma|0,(fa|ca)^Q^da|0,16)|0;_=D;Q=Pd(V^R^ma|0,(fa|ca)^Q^da|0,48)|0;_=D|_;c[P+120>>2]=Q|$;c[P+120+4>>2]=_;ea=oe(Q|$|0,_|0,U|0,ea|0)|0;U=D;c[P+80>>2]=ea;c[P+80+4>>2]=U;_=Rd((ja|f)^ea|0,Z^U|0,63)|0;$=D;U=Pd((ja|f)^ea|0,Z^U|0,1)|0;c[P+40>>2]=U|_;c[P+40+4>>2]=D|$;Y=oe(X|ga|0,la|0,T|0,Y|0)|0;Y=oe(Y|0,D|0,E|0,F|0)|0;T=D;$=c[P+96>>2]^Y;_=c[P+96+4>>2]^T;g=oe(_|0,$|0,ka|0,g|0)|0;ka=D;U=Rd((X|ga)^g|0,la^ka|0,24)|0;Z=D;la=Pd((X|ga)^g|0,la^ka|0,40)|0;Z=D|Z;T=oe(la|U|0,Z|0,Y|0,T|0)|0;T=oe(T|0,D|0,G|0,I|0)|0;Y=D;c[P+8>>2]=T;c[P+8+4>>2]=Y;ga=Rd(_^T|0,$^Y|0,16)|0;X=D;$=Pd(_^T|0,$^Y|0,48)|0;X=D|X;ka=oe($|ga|0,X|0,g|0,ka|0)|0;g=D;c[P+88>>2]=ka;c[P+88+4>>2]=g;_=Rd((la|U)^ka|0,Z^g|0,63)|0;ea=D;g=Pd((la|U)^ka|0,Z^g|0,1)|0;c[P+48>>2]=g|_;c[P+48+4>>2]=D|ea;aa=oe(ha|ba|0,W|0,ia|0,aa|0)|0;aa=oe(aa|0,D|0,s|0,t|0)|0;ia=D;ea=c[P+104>>2]^aa;_=c[P+104+4>>2]^ia;g=oe(_|0,ea|0,c[P+64>>2]|0,c[P+64+4>>2]|0)|0;Z=D;ka=Rd((ha|ba)^g|0,W^Z|0,24)|0;U=D;W=Pd((ha|ba)^g|0,W^Z|0,40)|0;U=D|U;ia=oe(W|ka|0,U|0,aa|0,ia|0)|0;ia=oe(ia|0,D|0,x|0,y|0)|0;aa=D;c[P+16>>2]=ia;c[P+16+4>>2]=aa;ba=Rd(_^ia|0,ea^aa|0,16)|0;ha=D;ea=Pd(_^ia|0,ea^aa|0,48)|0;ha=D|ha;Z=oe(ea|ba|0,ha|0,g|0,Z|0)|0;g=D;_=Rd((W|ka)^Z|0,U^g|0,63)|0;la=D;U=Pd((W|ka)^Z|0,U^g|0,1)|0;c[P+56>>2]=U|_;c[P+56+4>>2]=D|la;la=c[P+32>>2]|0;_=c[P+32+4>>2]|0;S=oe(la|0,_|0,e|0,S|0)|0;S=oe(S|0,D|0,m|0,n|0)|0;e=D;U=c[P+112>>2]^S;ka=c[P+112+4>>2]^e;W=oe(ka|0,U|0,c[P+72>>2]|0,c[P+72+4>>2]|0)|0;f=D;ja=Rd(la^W|0,_^f|0,24)|0;Q=D;_=Pd(la^W|0,_^f|0,40)|0;Q=D|Q;e=oe(_|ja|0,Q|0,S|0,e|0)|0;e=oe(e|0,D|0,J|0,K|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;la=Rd(ka^e|0,U^S|0,16)|0;ca=D;U=Pd(ka^e|0,U^S|0,48)|0;ca=D|ca;f=oe(U|la|0,ca|0,W|0,f|0)|0;W=D;ka=Rd((_|ja)^f|0,Q^W|0,63)|0;fa=D;Q=Pd((_|ja)^f|0,Q^W|0,1)|0;fa=D|fa;da=oe(Q|ka|0,fa|0,ma|0,da|0)|0;da=oe(da|0,D|0,k|0,l|0)|0;ma=D;g=oe(X^ma|0,($|ga)^da|0,Z|0,g|0)|0;Z=D;ja=Rd((Q|ka)^g|0,fa^Z|0,24)|0;_=D;fa=Pd((Q|ka)^g|0,fa^Z|0,40)|0;_=D|_;ka=oe(fa|ja|0,_|0,da|0,ma|0)|0;ka=oe(ka|0,D|0,G|0,I|0)|0;Q=D;c[P>>2]=ka;c[P+4>>2]=Q;R=Rd(X^ma^ka|0,($|ga)^da^Q|0,16)|0;V=D;da=Pd(X^ma^ka|0,($|ga)^da^Q|0,48)|0;V=D|V;c[P+96>>2]=da|R;c[P+96+4>>2]=V;Z=oe(da|R|0,V|0,g|0,Z|0)|0;g=D;c[P+64>>2]=Z;c[P+64+4>>2]=g;V=Rd((fa|ja)^Z|0,_^g|0,63)|0;R=D;g=Pd((fa|ja)^Z|0,_^g|0,1)|0;c[P+32>>2]=g|V;c[P+32+4>>2]=D|R;R=c[P+40>>2]|0;V=c[P+40+4>>2]|0;Y=oe(R|0,V|0,T|0,Y|0)|0;Y=oe(Y|0,D|0,s|0,t|0)|0;T=D;W=oe(ha^T|0,(ea|ba)^Y|0,f|0,W|0)|0;f=D;g=Rd(R^W|0,V^f|0,24)|0;_=D;V=Pd(R^W|0,V^f|0,40)|0;_=D|_;R=oe(V|g|0,_|0,Y|0,T|0)|0;R=oe(R|0,D|0,B|0,C|0)|0;Z=D;c[P+8>>2]=R;c[P+8+4>>2]=Z;ja=Rd(ha^T^R|0,(ea|ba)^Y^Z|0,16)|0;fa=D;Y=Pd(ha^T^R|0,(ea|ba)^Y^Z|0,48)|0;fa=D|fa;c[P+104>>2]=Y|ja;c[P+104+4>>2]=fa;f=oe(Y|ja|0,fa|0,W|0,f|0)|0;W=D;c[P+72>>2]=f;c[P+72+4>>2]=W;fa=Rd((V|g)^f|0,_^W|0,63)|0;ja=D;W=Pd((V|g)^f|0,_^W|0,1)|0;ja=D|ja;_=c[P+48>>2]|0;f=c[P+48+4>>2]|0;aa=oe(_|0,f|0,ia|0,aa|0)|0;aa=oe(aa|0,D|0,v|0,H|0)|0;ia=D;g=oe(ca^ia|0,(U|la)^aa|0,c[P+80>>2]|0,c[P+80+4>>2]|0)|0;V=D;Y=Rd(_^g|0,f^V|0,24)|0;ba=D;f=Pd(_^g|0,f^V|0,40)|0;ba=D|ba;_=oe(f|Y|0,ba|0,aa|0,ia|0)|0;_=oe(_|0,D|0,E|0,F|0)|0;ea=D;c[P+16>>2]=_;c[P+16+4>>2]=ea;T=Rd(ca^ia^_|0,(U|la)^aa^ea|0,16)|0;ha=D;aa=Pd(ca^ia^_|0,(U|la)^aa^ea|0,48)|0;ha=D|ha;c[P+112>>2]=aa|T;c[P+112+4>>2]=ha;V=oe(aa|T|0,ha|0,g|0,V|0)|0;g=D;ha=Rd((f|Y)^V|0,ba^g|0,63)|0;T=D;ba=Pd((f|Y)^V|0,ba^g|0,1)|0;T=D|T;Y=c[P+56>>2]|0;f=c[P+56+4>>2]|0;S=oe(Y|0,f|0,e|0,S|0)|0;S=oe(S|0,D|0,x|0,y|0)|0;e=D;aa=c[P+120>>2]^S;la=c[P+120+4>>2]^e;U=oe(la|0,aa|0,c[P+88>>2]|0,c[P+88+4>>2]|0)|0;ia=D;ca=Rd(Y^U|0,f^ia|0,24)|0;da=D;f=Pd(Y^U|0,f^ia|0,40)|0;da=D|da;e=oe(f|ca|0,da|0,S|0,e|0)|0;e=oe(e|0,D|0,m|0,n|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;Y=Rd(la^e|0,aa^S|0,16)|0;ga=D;aa=Pd(la^e|0,aa^S|0,48)|0;ga=D|ga;ia=oe(aa|Y|0,ga|0,U|0,ia|0)|0;U=D;la=Rd((f|ca)^ia|0,da^U|0,63)|0;$=D;da=Pd((f|ca)^ia|0,da^U|0,1)|0;$=D|$;Q=oe(W|fa|0,ja|0,ka|0,Q|0)|0;Q=oe(Q|0,D|0,o|0,p|0)|0;ka=D;g=oe(ga^ka|0,(aa|Y)^Q|0,V|0,g|0)|0;V=D;ca=Rd((W|fa)^g|0,ja^V|0,24)|0;f=D;ja=Pd((W|fa)^g|0,ja^V|0,40)|0;f=D|f;fa=oe(ja|ca|0,f|0,Q|0,ka|0)|0;fa=oe(fa|0,D|0,J|0,K|0)|0;W=D;c[P>>2]=fa;c[P+4>>2]=W;ma=Rd(ga^ka^fa|0,(aa|Y)^Q^W|0,16)|0;X=D;Q=Pd(ga^ka^fa|0,(aa|Y)^Q^W|0,48)|0;X=D|X;c[P+120>>2]=Q|ma;c[P+120+4>>2]=X;V=oe(Q|ma|0,X|0,g|0,V|0)|0;g=D;c[P+80>>2]=V;c[P+80+4>>2]=g;X=Rd((ja|ca)^V|0,f^g|0,63)|0;ma=D;g=Pd((ja|ca)^V|0,f^g|0,1)|0;c[P+40>>2]=g|X;c[P+40+4>>2]=D|ma;Z=oe(ba|ha|0,T|0,R|0,Z|0)|0;Z=oe(Z|0,D|0,u|0,w|0)|0;R=D;ma=c[P+96>>2]^Z;X=c[P+96+4>>2]^R;U=oe(X|0,ma|0,ia|0,U|0)|0;ia=D;g=Rd((ba|ha)^U|0,T^ia|0,24)|0;f=D;T=Pd((ba|ha)^U|0,T^ia|0,40)|0;f=D|f;R=oe(T|g|0,f|0,Z|0,R|0)|0;R=oe(R|0,D|0,q|0,r|0)|0;Z=D;c[P+8>>2]=R;c[P+8+4>>2]=Z;ha=Rd(X^R|0,ma^Z|0,16)|0;ba=D;ma=Pd(X^R|0,ma^Z|0,48)|0;ba=D|ba;ia=oe(ma|ha|0,ba|0,U|0,ia|0)|0;U=D;c[P+88>>2]=ia;c[P+88+4>>2]=U;X=Rd((T|g)^ia|0,f^U|0,63)|0;V=D;U=Pd((T|g)^ia|0,f^U|0,1)|0;c[P+48>>2]=U|X;c[P+48+4>>2]=D|V;ea=oe(da|la|0,$|0,_|0,ea|0)|0;ea=oe(ea|0,D|0,N|0,b|0)|0;_=D;V=c[P+104>>2]^ea;X=c[P+104+4>>2]^_;U=oe(X|0,V|0,c[P+64>>2]|0,c[P+64+4>>2]|0)|0;f=D;ia=Rd((da|la)^U|0,$^f|0,24)|0;g=D;$=Pd((da|la)^U|0,$^f|0,40)|0;g=D|g;_=oe($|ia|0,g|0,ea|0,_|0)|0;_=oe(_|0,D|0,L|0,M|0)|0;ea=D;c[P+16>>2]=_;c[P+16+4>>2]=ea;la=Rd(X^_|0,V^ea|0,16)|0;da=D;V=Pd(X^_|0,V^ea|0,48)|0;da=D|da;f=oe(V|la|0,da|0,U|0,f|0)|0;U=D;X=Rd(($|ia)^f|0,g^U|0,63)|0;T=D;g=Pd(($|ia)^f|0,g^U|0,1)|0;c[P+56>>2]=g|X;c[P+56+4>>2]=D|T;T=c[P+32>>2]|0;X=c[P+32+4>>2]|0;S=oe(T|0,X|0,e|0,S|0)|0;S=oe(S|0,D|0,h|0,j|0)|0;e=D;g=c[P+112>>2]^S;ia=c[P+112+4>>2]^e;$=oe(ia|0,g|0,c[P+72>>2]|0,c[P+72+4>>2]|0)|0;ca=D;ja=Rd(T^$|0,X^ca|0,24)|0;Q=D;X=Pd(T^$|0,X^ca|0,40)|0;Q=D|Q;e=oe(X|ja|0,Q|0,S|0,e|0)|0;e=oe(e|0,D|0,z|0,A|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;T=Rd(ia^e|0,g^S|0,16)|0;Y=D;g=Pd(ia^e|0,g^S|0,48)|0;Y=D|Y;ca=oe(g|T|0,Y|0,$|0,ca|0)|0;$=D;ia=Rd((X|ja)^ca|0,Q^$|0,63)|0;aa=D;Q=Pd((X|ja)^ca|0,Q^$|0,1)|0;aa=D|aa;W=oe(Q|ia|0,aa|0,fa|0,W|0)|0;W=oe(W|0,D|0,G|0,I|0)|0;fa=D;U=oe(ba^fa|0,(ma|ha)^W|0,f|0,U|0)|0;f=D;ja=Rd((Q|ia)^U|0,aa^f|0,24)|0;X=D;aa=Pd((Q|ia)^U|0,aa^f|0,40)|0;X=D|X;ia=oe(aa|ja|0,X|0,W|0,fa|0)|0;ia=oe(ia|0,D|0,q|0,r|0)|0;Q=D;c[P>>2]=ia;c[P+4>>2]=Q;ka=Rd(ba^fa^ia|0,(ma|ha)^W^Q|0,16)|0;ga=D;W=Pd(ba^fa^ia|0,(ma|ha)^W^Q|0,48)|0;ga=D|ga;c[P+96>>2]=W|ka;c[P+96+4>>2]=ga;f=oe(W|ka|0,ga|0,U|0,f|0)|0;U=D;c[P+64>>2]=f;c[P+64+4>>2]=U;ga=Rd((aa|ja)^f|0,X^U|0,63)|0;ka=D;U=Pd((aa|ja)^f|0,X^U|0,1)|0;c[P+32>>2]=U|ga;c[P+32+4>>2]=D|ka;ka=c[P+40>>2]|0;ga=c[P+40+4>>2]|0;Z=oe(ka|0,ga|0,R|0,Z|0)|0;Z=oe(Z|0,D|0,h|0,j|0)|0;R=D;$=oe(da^R|0,(V|la)^Z|0,ca|0,$|0)|0;ca=D;U=Rd(ka^$|0,ga^ca|0,24)|0;X=D;ga=Pd(ka^$|0,ga^ca|0,40)|0;X=D|X;ka=oe(ga|U|0,X|0,Z|0,R|0)|0;ka=oe(ka|0,D|0,N|0,b|0)|0;f=D;c[P+8>>2]=ka;c[P+8+4>>2]=f;ja=Rd(da^R^ka|0,(V|la)^Z^f|0,16)|0;aa=D;Z=Pd(da^R^ka|0,(V|la)^Z^f|0,48)|0;aa=D|aa;c[P+104>>2]=Z|ja;c[P+104+4>>2]=aa;ca=oe(Z|ja|0,aa|0,$|0,ca|0)|0;$=D;c[P+72>>2]=ca;c[P+72+4>>2]=$;aa=Rd((ga|U)^ca|0,X^$|0,63)|0;ja=D;$=Pd((ga|U)^ca|0,X^$|0,1)|0;ja=D|ja;X=c[P+48>>2]|0;ca=c[P+48+4>>2]|0;ea=oe(X|0,ca|0,_|0,ea|0)|0;ea=oe(ea|0,D|0,L|0,M|0)|0;_=D;U=oe(Y^_|0,(g|T)^ea|0,c[P+80>>2]|0,c[P+80+4>>2]|0)|0;ga=D;Z=Rd(X^U|0,ca^ga|0,24)|0;la=D;ca=Pd(X^U|0,ca^ga|0,40)|0;la=D|la;X=oe(ca|Z|0,la|0,ea|0,_|0)|0;X=oe(X|0,D|0,J|0,K|0)|0;V=D;c[P+16>>2]=X;c[P+16+4>>2]=V;R=Rd(Y^_^X|0,(g|T)^ea^V|0,16)|0;da=D;ea=Pd(Y^_^X|0,(g|T)^ea^V|0,48)|0;da=D|da;c[P+112>>2]=ea|R;c[P+112+4>>2]=da;ga=oe(ea|R|0,da|0,U|0,ga|0)|0;U=D;da=Rd((ca|Z)^ga|0,la^U|0,63)|0;R=D;la=Pd((ca|Z)^ga|0,la^U|0,1)|0;R=D|R;Z=c[P+56>>2]|0;ca=c[P+56+4>>2]|0;S=oe(Z|0,ca|0,e|0,S|0)|0;S=oe(S|0,D|0,o|0,p|0)|0;e=D;ea=c[P+120>>2]^S;T=c[P+120+4>>2]^e;g=oe(T|0,ea|0,c[P+88>>2]|0,c[P+88+4>>2]|0)|0;_=D;Y=Rd(Z^g|0,ca^_|0,24)|0;W=D;ca=Pd(Z^g|0,ca^_|0,40)|0;W=D|W;e=oe(ca|Y|0,W|0,S|0,e|0)|0;e=oe(e|0,D|0,B|0,C|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;Z=Rd(T^e|0,ea^S|0,16)|0;ha=D;ea=Pd(T^e|0,ea^S|0,48)|0;ha=D|ha;_=oe(ea|Z|0,ha|0,g|0,_|0)|0;g=D;T=Rd((ca|Y)^_|0,W^g|0,63)|0;ma=D;W=Pd((ca|Y)^_|0,W^g|0,1)|0;ma=D|ma;Q=oe($|aa|0,ja|0,ia|0,Q|0)|0;Q=oe(Q|0,D|0,v|0,H|0)|0;ia=D;U=oe(ha^ia|0,(ea|Z)^Q|0,ga|0,U|0)|0;ga=D;Y=Rd(($|aa)^U|0,ja^ga|0,24)|0;ca=D;ja=Pd(($|aa)^U|0,ja^ga|0,40)|0;ca=D|ca;aa=oe(ja|Y|0,ca|0,Q|0,ia|0)|0;aa=oe(aa|0,D|0,u|0,w|0)|0;$=D;c[P>>2]=aa;c[P+4>>2]=$;fa=Rd(ha^ia^aa|0,(ea|Z)^Q^$|0,16)|0;ba=D;Q=Pd(ha^ia^aa|0,(ea|Z)^Q^$|0,48)|0;ba=D|ba;c[P+120>>2]=Q|fa;c[P+120+4>>2]=ba;ga=oe(Q|fa|0,ba|0,U|0,ga|0)|0;U=D;c[P+80>>2]=ga;c[P+80+4>>2]=U;ba=Rd((ja|Y)^ga|0,ca^U|0,63)|0;fa=D;U=Pd((ja|Y)^ga|0,ca^U|0,1)|0;c[P+40>>2]=U|ba;c[P+40+4>>2]=D|fa;f=oe(la|da|0,R|0,ka|0,f|0)|0;f=oe(f|0,D|0,s|0,t|0)|0;ka=D;fa=c[P+96>>2]^f;ba=c[P+96+4>>2]^ka;g=oe(ba|0,fa|0,_|0,g|0)|0;_=D;U=Rd((la|da)^g|0,R^_|0,24)|0;ca=D;R=Pd((la|da)^g|0,R^_|0,40)|0;ca=D|ca;ka=oe(R|U|0,ca|0,f|0,ka|0)|0;ka=oe(ka|0,D|0,m|0,n|0)|0;f=D;c[P+8>>2]=ka;c[P+8+4>>2]=f;da=Rd(ba^ka|0,fa^f|0,16)|0;la=D;fa=Pd(ba^ka|0,fa^f|0,48)|0;la=D|la;_=oe(fa|da|0,la|0,g|0,_|0)|0;g=D;c[P+88>>2]=_;c[P+88+4>>2]=g;ba=Rd((R|U)^_|0,ca^g|0,63)|0;ga=D;g=Pd((R|U)^_|0,ca^g|0,1)|0;c[P+48>>2]=g|ba;c[P+48+4>>2]=D|ga;V=oe(W|T|0,ma|0,X|0,V|0)|0;V=oe(V|0,D|0,z|0,A|0)|0;X=D;ga=c[P+104>>2]^V;ba=c[P+104+4>>2]^X;g=oe(ba|0,ga|0,c[P+64>>2]|0,c[P+64+4>>2]|0)|0;ca=D;_=Rd((W|T)^g|0,ma^ca|0,24)|0;U=D;ma=Pd((W|T)^g|0,ma^ca|0,40)|0;U=D|U;X=oe(ma|_|0,U|0,V|0,X|0)|0;X=oe(X|0,D|0,k|0,l|0)|0;V=D;c[P+16>>2]=X;c[P+16+4>>2]=V;T=Rd(ba^X|0,ga^V|0,16)|0;W=D;ga=Pd(ba^X|0,ga^V|0,48)|0;W=D|W;ca=oe(ga|T|0,W|0,g|0,ca|0)|0;g=D;ba=Rd((ma|_)^ca|0,U^g|0,63)|0;R=D;U=Pd((ma|_)^ca|0,U^g|0,1)|0;c[P+56>>2]=U|ba;c[P+56+4>>2]=D|R;R=c[P+32>>2]|0;ba=c[P+32+4>>2]|0;S=oe(R|0,ba|0,e|0,S|0)|0;S=oe(S|0,D|0,x|0,y|0)|0;e=D;U=c[P+112>>2]^S;_=c[P+112+4>>2]^e;ma=oe(_|0,U|0,c[P+72>>2]|0,c[P+72+4>>2]|0)|0;Y=D;ja=Rd(R^ma|0,ba^Y|0,24)|0;Q=D;ba=Pd(R^ma|0,ba^Y|0,40)|0;Q=D|Q;e=oe(ba|ja|0,Q|0,S|0,e|0)|0;e=oe(e|0,D|0,E|0,F|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;R=Rd(_^e|0,U^S|0,16)|0;Z=D;U=Pd(_^e|0,U^S|0,48)|0;Z=D|Z;Y=oe(U|R|0,Z|0,ma|0,Y|0)|0;ma=D;_=Rd((ba|ja)^Y|0,Q^ma|0,63)|0;ea=D;Q=Pd((ba|ja)^Y|0,Q^ma|0,1)|0;ea=D|ea;$=oe(Q|_|0,ea|0,aa|0,$|0)|0;$=oe($|0,D|0,J|0,K|0)|0;aa=D;g=oe(la^aa|0,(fa|da)^$|0,ca|0,g|0)|0;ca=D;ja=Rd((Q|_)^g|0,ea^ca|0,24)|0;ba=D;ea=Pd((Q|_)^g|0,ea^ca|0,40)|0;ba=D|ba;_=oe(ea|ja|0,ba|0,$|0,aa|0)|0;_=oe(_|0,D|0,E|0,F|0)|0;Q=D;c[P>>2]=_;c[P+4>>2]=Q;ia=Rd(la^aa^_|0,(fa|da)^$^Q|0,16)|0;ha=D;$=Pd(la^aa^_|0,(fa|da)^$^Q|0,48)|0;ha=D|ha;c[P+96>>2]=$|ia;c[P+96+4>>2]=ha;ca=oe($|ia|0,ha|0,g|0,ca|0)|0;g=D;c[P+64>>2]=ca;c[P+64+4>>2]=g;ha=Rd((ea|ja)^ca|0,ba^g|0,63)|0;ia=D;g=Pd((ea|ja)^ca|0,ba^g|0,1)|0;c[P+32>>2]=g|ha;c[P+32+4>>2]=D|ia;ia=c[P+40>>2]|0;ha=c[P+40+4>>2]|0;f=oe(ia|0,ha|0,ka|0,f|0)|0;f=oe(f|0,D|0,u|0,w|0)|0;ka=D;ma=oe(W^ka|0,(ga|T)^f|0,Y|0,ma|0)|0;Y=D;g=Rd(ia^ma|0,ha^Y|0,24)|0;ba=D;ha=Pd(ia^ma|0,ha^Y|0,40)|0;ba=D|ba;ia=oe(ha|g|0,ba|0,f|0,ka|0)|0;ia=oe(ia|0,D|0,L|0,M|0)|0;ca=D;c[P+8>>2]=ia;c[P+8+4>>2]=ca;ja=Rd(W^ka^ia|0,(ga|T)^f^ca|0,16)|0;ea=D;f=Pd(W^ka^ia|0,(ga|T)^f^ca|0,48)|0;ea=D|ea;c[P+104>>2]=f|ja;c[P+104+4>>2]=ea;Y=oe(f|ja|0,ea|0,ma|0,Y|0)|0;ma=D;c[P+72>>2]=Y;c[P+72+4>>2]=ma;ea=Rd((ha|g)^Y|0,ba^ma|0,63)|0;ja=D;ma=Pd((ha|g)^Y|0,ba^ma|0,1)|0;ja=D|ja;ba=c[P+48>>2]|0;Y=c[P+48+4>>2]|0;V=oe(ba|0,Y|0,X|0,V|0)|0;V=oe(V|0,D|0,G|0,I|0)|0;X=D;g=oe(Z^X|0,(U|R)^V|0,c[P+80>>2]|0,c[P+80+4>>2]|0)|0;ha=D;f=Rd(ba^g|0,Y^ha|0,24)|0;T=D;Y=Pd(ba^g|0,Y^ha|0,40)|0;T=D|T;ba=oe(Y|f|0,T|0,V|0,X|0)|0;ba=oe(ba|0,D|0,h|0,j|0)|0;ga=D;c[P+16>>2]=ba;c[P+16+4>>2]=ga;ka=Rd(Z^X^ba|0,(U|R)^V^ga|0,16)|0;W=D;V=Pd(Z^X^ba|0,(U|R)^V^ga|0,48)|0;W=D|W;c[P+112>>2]=V|ka;c[P+112+4>>2]=W;ha=oe(V|ka|0,W|0,g|0,ha|0)|0;g=D;W=Rd((Y|f)^ha|0,T^g|0,63)|0;ka=D;T=Pd((Y|f)^ha|0,T^g|0,1)|0;ka=D|ka;f=c[P+56>>2]|0;Y=c[P+56+4>>2]|0;S=oe(f|0,Y|0,e|0,S|0)|0;S=oe(S|0,D|0,m|0,n|0)|0;e=D;V=c[P+120>>2]^S;R=c[P+120+4>>2]^e;U=oe(R|0,V|0,c[P+88>>2]|0,c[P+88+4>>2]|0)|0;X=D;Z=Rd(f^U|0,Y^X|0,24)|0;$=D;Y=Pd(f^U|0,Y^X|0,40)|0;$=D|$;e=oe(Y|Z|0,$|0,S|0,e|0)|0;e=oe(e|0,D|0,z|0,A|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;f=Rd(R^e|0,V^S|0,16)|0;da=D;V=Pd(R^e|0,V^S|0,48)|0;da=D|da;X=oe(V|f|0,da|0,U|0,X|0)|0;U=D;R=Rd((Y|Z)^X|0,$^U|0,63)|0;fa=D;$=Pd((Y|Z)^X|0,$^U|0,1)|0;fa=D|fa;Q=oe(ma|ea|0,ja|0,_|0,Q|0)|0;Q=oe(Q|0,D|0,q|0,r|0)|0;_=D;g=oe(da^_|0,(V|f)^Q|0,ha|0,g|0)|0;ha=D;Z=Rd((ma|ea)^g|0,ja^ha|0,24)|0;Y=D;ja=Pd((ma|ea)^g|0,ja^ha|0,40)|0;Y=D|Y;ea=oe(ja|Z|0,Y|0,Q|0,_|0)|0;ea=oe(ea|0,D|0,v|0,H|0)|0;ma=D;c[P>>2]=ea;c[P+4>>2]=ma;aa=Rd(da^_^ea|0,(V|f)^Q^ma|0,16)|0;la=D;Q=Pd(da^_^ea|0,(V|f)^Q^ma|0,48)|0;la=D|la;c[P+120>>2]=Q|aa;c[P+120+4>>2]=la;ha=oe(Q|aa|0,la|0,g|0,ha|0)|0;g=D;c[P+80>>2]=ha;c[P+80+4>>2]=g;la=Rd((ja|Z)^ha|0,Y^g|0,63)|0;aa=D;g=Pd((ja|Z)^ha|0,Y^g|0,1)|0;c[P+40>>2]=g|la;c[P+40+4>>2]=D|aa;ca=oe(T|W|0,ka|0,ia|0,ca|0)|0;ca=oe(ca|0,D|0,N|0,b|0)|0;ia=D;aa=c[P+96>>2]^ca;la=c[P+96+4>>2]^ia;U=oe(la|0,aa|0,X|0,U|0)|0;X=D;g=Rd((T|W)^U|0,ka^X|0,24)|0;Y=D;ka=Pd((T|W)^U|0,ka^X|0,40)|0;Y=D|Y;ia=oe(ka|g|0,Y|0,ca|0,ia|0)|0;ia=oe(ia|0,D|0,o|0,p|0)|0;ca=D;c[P+8>>2]=ia;c[P+8+4>>2]=ca;W=Rd(la^ia|0,aa^ca|0,16)|0;T=D;aa=Pd(la^ia|0,aa^ca|0,48)|0;T=D|T;X=oe(aa|W|0,T|0,U|0,X|0)|0;U=D;c[P+88>>2]=X;c[P+88+4>>2]=U;la=Rd((ka|g)^X|0,Y^U|0,63)|0;ha=D;U=Pd((ka|g)^X|0,Y^U|0,1)|0;c[P+48>>2]=U|la;c[P+48+4>>2]=D|ha;ga=oe($|R|0,fa|0,ba|0,ga|0)|0;ga=oe(ga|0,D|0,x|0,y|0)|0;ba=D;ha=c[P+104>>2]^ga;la=c[P+104+4>>2]^ba;U=oe(la|0,ha|0,c[P+64>>2]|0,c[P+64+4>>2]|0)|0;Y=D;X=Rd(($|R)^U|0,fa^Y|0,24)|0;g=D;fa=Pd(($|R)^U|0,fa^Y|0,40)|0;g=D|g;ba=oe(fa|X|0,g|0,ga|0,ba|0)|0;ba=oe(ba|0,D|0,s|0,t|0)|0;ga=D;c[P+16>>2]=ba;c[P+16+4>>2]=ga;R=Rd(la^ba|0,ha^ga|0,16)|0;$=D;ha=Pd(la^ba|0,ha^ga|0,48)|0;$=D|$;Y=oe(ha|R|0,$|0,U|0,Y|0)|0;U=D;la=Rd((fa|X)^Y|0,g^U|0,63)|0;ka=D;g=Pd((fa|X)^Y|0,g^U|0,1)|0;c[P+56>>2]=g|la;c[P+56+4>>2]=D|ka;ka=c[P+32>>2]|0;la=c[P+32+4>>2]|0;S=oe(ka|0,la|0,e|0,S|0)|0;S=oe(S|0,D|0,k|0,l|0)|0;e=D;g=c[P+112>>2]^S;X=c[P+112+4>>2]^e;fa=oe(X|0,g|0,c[P+72>>2]|0,c[P+72+4>>2]|0)|0;Z=D;ja=Rd(ka^fa|0,la^Z|0,24)|0;Q=D;la=Pd(ka^fa|0,la^Z|0,40)|0;Q=D|Q;e=oe(la|ja|0,Q|0,S|0,e|0)|0;e=oe(e|0,D|0,B|0,C|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;ka=Rd(X^e|0,g^S|0,16)|0;f=D;g=Pd(X^e|0,g^S|0,48)|0;f=D|f;Z=oe(g|ka|0,f|0,fa|0,Z|0)|0;fa=D;X=Rd((la|ja)^Z|0,Q^fa|0,63)|0;V=D;Q=Pd((la|ja)^Z|0,Q^fa|0,1)|0;V=D|V;ma=oe(Q|X|0,V|0,ea|0,ma|0)|0;ma=oe(ma|0,D|0,s|0,t|0)|0;ea=D;U=oe(T^ea|0,(aa|W)^ma|0,Y|0,U|0)|0;Y=D;ja=Rd((Q|X)^U|0,V^Y|0,24)|0;la=D;V=Pd((Q|X)^U|0,V^Y|0,40)|0;la=D|la;X=oe(V|ja|0,la|0,ma|0,ea|0)|0;X=oe(X|0,D|0,N|0,b|0)|0;Q=D;c[P>>2]=X;c[P+4>>2]=Q;_=Rd(T^ea^X|0,(aa|W)^ma^Q|0,16)|0;da=D;ma=Pd(T^ea^X|0,(aa|W)^ma^Q|0,48)|0;da=D|da;c[P+96>>2]=ma|_;c[P+96+4>>2]=da;Y=oe(ma|_|0,da|0,U|0,Y|0)|0;U=D;c[P+64>>2]=Y;c[P+64+4>>2]=U;da=Rd((V|ja)^Y|0,la^U|0,63)|0;_=D;U=Pd((V|ja)^Y|0,la^U|0,1)|0;c[P+32>>2]=U|da;c[P+32+4>>2]=D|_;_=c[P+40>>2]|0;da=c[P+40+4>>2]|0;ca=oe(_|0,da|0,ia|0,ca|0)|0;ca=oe(ca|0,D|0,L|0,M|0)|0;ia=D;fa=oe($^ia|0,(ha|R)^ca|0,Z|0,fa|0)|0;Z=D;U=Rd(_^fa|0,da^Z|0,24)|0;la=D;da=Pd(_^fa|0,da^Z|0,40)|0;la=D|la;_=oe(da|U|0,la|0,ca|0,ia|0)|0;_=oe(_|0,D|0,z|0,A|0)|0;Y=D;c[P+8>>2]=_;c[P+8+4>>2]=Y;ja=Rd($^ia^_|0,(ha|R)^ca^Y|0,16)|0;V=D;ca=Pd($^ia^_|0,(ha|R)^ca^Y|0,48)|0;V=D|V;c[P+104>>2]=ca|ja;c[P+104+4>>2]=V;Z=oe(ca|ja|0,V|0,fa|0,Z|0)|0;fa=D;c[P+72>>2]=Z;c[P+72+4>>2]=fa;V=Rd((da|U)^Z|0,la^fa|0,63)|0;ja=D;fa=Pd((da|U)^Z|0,la^fa|0,1)|0;ja=D|ja;la=c[P+48>>2]|0;Z=c[P+48+4>>2]|0;ga=oe(la|0,Z|0,ba|0,ga|0)|0;ga=oe(ga|0,D|0,E|0,F|0)|0;ba=D;U=oe(f^ba|0,(g|ka)^ga|0,c[P+80>>2]|0,c[P+80+4>>2]|0)|0;da=D;ca=Rd(la^U|0,Z^da|0,24)|0;R=D;Z=Pd(la^U|0,Z^da|0,40)|0;R=D|R;la=oe(Z|ca|0,R|0,ga|0,ba|0)|0;la=oe(la|0,D|0,m|0,n|0)|0;ha=D;c[P+16>>2]=la;c[P+16+4>>2]=ha;ia=Rd(f^ba^la|0,(g|ka)^ga^ha|0,16)|0;$=D;ga=Pd(f^ba^la|0,(g|ka)^ga^ha|0,48)|0;$=D|$;c[P+112>>2]=ga|ia;c[P+112+4>>2]=$;da=oe(ga|ia|0,$|0,U|0,da|0)|0;U=D;$=Rd((Z|ca)^da|0,R^U|0,63)|0;ia=D;R=Pd((Z|ca)^da|0,R^U|0,1)|0;ia=D|ia;ca=c[P+56>>2]|0;Z=c[P+56+4>>2]|0;S=oe(ca|0,Z|0,e|0,S|0)|0;S=oe(S|0,D|0,v|0,H|0)|0;e=D;ga=c[P+120>>2]^S;ka=c[P+120+4>>2]^e;g=oe(ka|0,ga|0,c[P+88>>2]|0,c[P+88+4>>2]|0)|0;ba=D;f=Rd(ca^g|0,Z^ba|0,24)|0;ma=D;Z=Pd(ca^g|0,Z^ba|0,40)|0;ma=D|ma;e=oe(Z|f|0,ma|0,S|0,e|0)|0;e=oe(e|0,D|0,x|0,y|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;ca=Rd(ka^e|0,ga^S|0,16)|0;W=D;ga=Pd(ka^e|0,ga^S|0,48)|0;W=D|W;ba=oe(ga|ca|0,W|0,g|0,ba|0)|0;g=D;ka=Rd((Z|f)^ba|0,ma^g|0,63)|0;aa=D;ma=Pd((Z|f)^ba|0,ma^g|0,1)|0;aa=D|aa;Q=oe(fa|V|0,ja|0,X|0,Q|0)|0;Q=oe(Q|0,D|0,G|0,I|0)|0;X=D;U=oe(W^X|0,(ga|ca)^Q|0,da|0,U|0)|0;da=D;f=Rd((fa|V)^U|0,ja^da|0,24)|0;Z=D;ja=Pd((fa|V)^U|0,ja^da|0,40)|0;Z=D|Z;V=oe(ja|f|0,Z|0,Q|0,X|0)|0;V=oe(V|0,D|0,k|0,l|0)|0;fa=D;c[P>>2]=V;c[P+4>>2]=fa;ea=Rd(W^X^V|0,(ga|ca)^Q^fa|0,16)|0;T=D;Q=Pd(W^X^V|0,(ga|ca)^Q^fa|0,48)|0;T=D|T;c[P+120>>2]=Q|ea;c[P+120+4>>2]=T;da=oe(Q|ea|0,T|0,U|0,da|0)|0;U=D;c[P+80>>2]=da;c[P+80+4>>2]=U;T=Rd((ja|f)^da|0,Z^U|0,63)|0;ea=D;U=Pd((ja|f)^da|0,Z^U|0,1)|0;c[P+40>>2]=U|T;c[P+40+4>>2]=D|ea;Y=oe(R|$|0,ia|0,_|0,Y|0)|0;Y=oe(Y|0,D|0,J|0,K|0)|0;_=D;ea=c[P+96>>2]^Y;T=c[P+96+4>>2]^_;g=oe(T|0,ea|0,ba|0,g|0)|0;ba=D;U=Rd((R|$)^g|0,ia^ba|0,24)|0;Z=D;ia=Pd((R|$)^g|0,ia^ba|0,40)|0;Z=D|Z;_=oe(ia|U|0,Z|0,Y|0,_|0)|0;_=oe(_|0,D|0,u|0,w|0)|0;Y=D;c[P+8>>2]=_;c[P+8+4>>2]=Y;$=Rd(T^_|0,ea^Y|0,16)|0;R=D;ea=Pd(T^_|0,ea^Y|0,48)|0;R=D|R;ba=oe(ea|$|0,R|0,g|0,ba|0)|0;g=D;c[P+88>>2]=ba;c[P+88+4>>2]=g;T=Rd((ia|U)^ba|0,Z^g|0,63)|0;da=D;g=Pd((ia|U)^ba|0,Z^g|0,1)|0;c[P+48>>2]=g|T;c[P+48+4>>2]=D|da;ha=oe(ma|ka|0,aa|0,la|0,ha|0)|0;ha=oe(ha|0,D|0,h|0,j|0)|0;la=D;da=c[P+104>>2]^ha;T=c[P+104+4>>2]^la;g=oe(T|0,da|0,c[P+64>>2]|0,c[P+64+4>>2]|0)|0;Z=D;ba=Rd((ma|ka)^g|0,aa^Z|0,24)|0;U=D;aa=Pd((ma|ka)^g|0,aa^Z|0,40)|0;U=D|U;la=oe(aa|ba|0,U|0,ha|0,la|0)|0;la=oe(la|0,D|0,o|0,p|0)|0;ha=D;c[P+16>>2]=la;c[P+16+4>>2]=ha;ka=Rd(T^la|0,da^ha|0,16)|0;ma=D;da=Pd(T^la|0,da^ha|0,48)|0;ma=D|ma;Z=oe(da|ka|0,ma|0,g|0,Z|0)|0;g=D;T=Rd((aa|ba)^Z|0,U^g|0,63)|0;ia=D;U=Pd((aa|ba)^Z|0,U^g|0,1)|0;c[P+56>>2]=U|T;c[P+56+4>>2]=D|ia;ia=c[P+32>>2]|0;T=c[P+32+4>>2]|0;S=oe(ia|0,T|0,e|0,S|0)|0;S=oe(S|0,D|0,B|0,C|0)|0;e=D;U=c[P+112>>2]^S;ba=c[P+112+4>>2]^e;aa=oe(ba|0,U|0,c[P+72>>2]|0,c[P+72+4>>2]|0)|0;f=D;ja=Rd(ia^aa|0,T^f|0,24)|0;Q=D;T=Pd(ia^aa|0,T^f|0,40)|0;Q=D|Q;e=oe(T|ja|0,Q|0,S|0,e|0)|0;e=oe(e|0,D|0,q|0,r|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;ia=Rd(ba^e|0,U^S|0,16)|0;ca=D;U=Pd(ba^e|0,U^S|0,48)|0;ca=D|ca;f=oe(U|ia|0,ca|0,aa|0,f|0)|0;aa=D;ba=Rd((T|ja)^f|0,Q^aa|0,63)|0;ga=D;Q=Pd((T|ja)^f|0,Q^aa|0,1)|0;ga=D|ga;fa=oe(Q|ba|0,ga|0,V|0,fa|0)|0;fa=oe(fa|0,D|0,B|0,C|0)|0;V=D;g=oe(R^V|0,(ea|$)^fa|0,Z|0,g|0)|0;Z=D;ja=Rd((Q|ba)^g|0,ga^Z|0,24)|0;T=D;ga=Pd((Q|ba)^g|0,ga^Z|0,40)|0;T=D|T;ba=oe(ga|ja|0,T|0,fa|0,V|0)|0;ba=oe(ba|0,D|0,k|0,l|0)|0;Q=D;c[P>>2]=ba;c[P+4>>2]=Q;X=Rd(R^V^ba|0,(ea|$)^fa^Q|0,16)|0;W=D;fa=Pd(R^V^ba|0,(ea|$)^fa^Q|0,48)|0;W=D|W;c[P+96>>2]=fa|X;c[P+96+4>>2]=W;Z=oe(fa|X|0,W|0,g|0,Z|0)|0;g=D;c[P+64>>2]=Z;c[P+64+4>>2]=g;W=Rd((ga|ja)^Z|0,T^g|0,63)|0;X=D;g=Pd((ga|ja)^Z|0,T^g|0,1)|0;c[P+32>>2]=g|W;c[P+32+4>>2]=D|X;X=c[P+40>>2]|0;W=c[P+40+4>>2]|0;Y=oe(X|0,W|0,_|0,Y|0)|0;Y=oe(Y|0,D|0,x|0,y|0)|0;_=D;aa=oe(ma^_|0,(da|ka)^Y|0,f|0,aa|0)|0;f=D;g=Rd(X^aa|0,W^f|0,24)|0;T=D;W=Pd(X^aa|0,W^f|0,40)|0;T=D|T;X=oe(W|g|0,T|0,Y|0,_|0)|0;X=oe(X|0,D|0,o|0,p|0)|0;Z=D;c[P+8>>2]=X;c[P+8+4>>2]=Z;ja=Rd(ma^_^X|0,(da|ka)^Y^Z|0,16)|0;ga=D;Y=Pd(ma^_^X|0,(da|ka)^Y^Z|0,48)|0;ga=D|ga;c[P+104>>2]=Y|ja;c[P+104+4>>2]=ga;f=oe(Y|ja|0,ga|0,aa|0,f|0)|0;aa=D;c[P+72>>2]=f;c[P+72+4>>2]=aa;ga=Rd((W|g)^f|0,T^aa|0,63)|0;ja=D;aa=Pd((W|g)^f|0,T^aa|0,1)|0;ja=D|ja;T=c[P+48>>2]|0;f=c[P+48+4>>2]|0;ha=oe(T|0,f|0,la|0,ha|0)|0;ha=oe(ha|0,D|0,u|0,w|0)|0;la=D;g=oe(ca^la|0,(U|ia)^ha|0,c[P+80>>2]|0,c[P+80+4>>2]|0)|0;W=D;Y=Rd(T^g|0,f^W|0,24)|0;ka=D;f=Pd(T^g|0,f^W|0,40)|0;ka=D|ka;T=oe(f|Y|0,ka|0,ha|0,la|0)|0;T=oe(T|0,D|0,s|0,t|0)|0;da=D;c[P+16>>2]=T;c[P+16+4>>2]=da;_=Rd(ca^la^T|0,(U|ia)^ha^da|0,16)|0;ma=D;ha=Pd(ca^la^T|0,(U|ia)^ha^da|0,48)|0;ma=D|ma;c[P+112>>2]=ha|_;c[P+112+4>>2]=ma;W=oe(ha|_|0,ma|0,g|0,W|0)|0;g=D;ma=Rd((f|Y)^W|0,ka^g|0,63)|0;_=D;ka=Pd((f|Y)^W|0,ka^g|0,1)|0;_=D|_;Y=c[P+56>>2]|0;f=c[P+56+4>>2]|0;S=oe(Y|0,f|0,e|0,S|0)|0;S=oe(S|0,D|0,h|0,j|0)|0;e=D;ha=c[P+120>>2]^S;ia=c[P+120+4>>2]^e;U=oe(ia|0,ha|0,c[P+88>>2]|0,c[P+88+4>>2]|0)|0;la=D;ca=Rd(Y^U|0,f^la|0,24)|0;fa=D;f=Pd(Y^U|0,f^la|0,40)|0;fa=D|fa;e=oe(f|ca|0,fa|0,S|0,e|0)|0;e=oe(e|0,D|0,q|0,r|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;Y=Rd(ia^e|0,ha^S|0,16)|0;$=D;ha=Pd(ia^e|0,ha^S|0,48)|0;$=D|$;la=oe(ha|Y|0,$|0,U|0,la|0)|0;U=D;ia=Rd((f|ca)^la|0,fa^U|0,63)|0;ea=D;fa=Pd((f|ca)^la|0,fa^U|0,1)|0;ea=D|ea;Q=oe(aa|ga|0,ja|0,ba|0,Q|0)|0;Q=oe(Q|0,D|0,N|0,b|0)|0;ba=D;g=oe($^ba|0,(ha|Y)^Q|0,W|0,g|0)|0;W=D;ca=Rd((aa|ga)^g|0,ja^W|0,24)|0;f=D;ja=Pd((aa|ga)^g|0,ja^W|0,40)|0;f=D|f;ga=oe(ja|ca|0,f|0,Q|0,ba|0)|0;ga=oe(ga|0,D|0,E|0,F|0)|0;aa=D;c[P>>2]=ga;c[P+4>>2]=aa;V=Rd($^ba^ga|0,(ha|Y)^Q^aa|0,16)|0;R=D;Q=Pd($^ba^ga|0,(ha|Y)^Q^aa|0,48)|0;R=D|R;c[P+120>>2]=Q|V;c[P+120+4>>2]=R;W=oe(Q|V|0,R|0,g|0,W|0)|0;g=D;c[P+80>>2]=W;c[P+80+4>>2]=g;R=Rd((ja|ca)^W|0,f^g|0,63)|0;V=D;g=Pd((ja|ca)^W|0,f^g|0,1)|0;c[P+40>>2]=g|R;c[P+40+4>>2]=D|V;Z=oe(ka|ma|0,_|0,X|0,Z|0)|0;Z=oe(Z|0,D|0,z|0,A|0)|0;X=D;V=c[P+96>>2]^Z;R=c[P+96+4>>2]^X;U=oe(R|0,V|0,la|0,U|0)|0;la=D;g=Rd((ka|ma)^U|0,_^la|0,24)|0;f=D;_=Pd((ka|ma)^U|0,_^la|0,40)|0;f=D|f;X=oe(_|g|0,f|0,Z|0,X|0)|0;X=oe(X|0,D|0,L|0,M|0)|0;Z=D;c[P+8>>2]=X;c[P+8+4>>2]=Z;ma=Rd(R^X|0,V^Z|0,16)|0;ka=D;V=Pd(R^X|0,V^Z|0,48)|0;ka=D|ka;la=oe(V|ma|0,ka|0,U|0,la|0)|0;U=D;c[P+88>>2]=la;c[P+88+4>>2]=U;R=Rd((_|g)^la|0,f^U|0,63)|0;W=D;U=Pd((_|g)^la|0,f^U|0,1)|0;c[P+48>>2]=U|R;c[P+48+4>>2]=D|W;da=oe(fa|ia|0,ea|0,T|0,da|0)|0;da=oe(da|0,D|0,m|0,n|0)|0;T=D;W=c[P+104>>2]^da;R=c[P+104+4>>2]^T;U=oe(R|0,W|0,c[P+64>>2]|0,c[P+64+4>>2]|0)|0;f=D;la=Rd((fa|ia)^U|0,ea^f|0,24)|0;g=D;ea=Pd((fa|ia)^U|0,ea^f|0,40)|0;g=D|g;T=oe(ea|la|0,g|0,da|0,T|0)|0;T=oe(T|0,D|0,G|0,I|0)|0;da=D;c[P+16>>2]=T;c[P+16+4>>2]=da;ia=Rd(R^T|0,W^da|0,16)|0;fa=D;W=Pd(R^T|0,W^da|0,48)|0;fa=D|fa;f=oe(W|ia|0,fa|0,U|0,f|0)|0;U=D;R=Rd((ea|la)^f|0,g^U|0,63)|0;_=D;g=Pd((ea|la)^f|0,g^U|0,1)|0;c[P+56>>2]=g|R;c[P+56+4>>2]=D|_;_=c[P+32>>2]|0;R=c[P+32+4>>2]|0;S=oe(_|0,R|0,e|0,S|0)|0;S=oe(S|0,D|0,J|0,K|0)|0;e=D;g=c[P+112>>2]^S;la=c[P+112+4>>2]^e;ea=oe(la|0,g|0,c[P+72>>2]|0,c[P+72+4>>2]|0)|0;ca=D;ja=Rd(_^ea|0,R^ca|0,24)|0;Q=D;R=Pd(_^ea|0,R^ca|0,40)|0;Q=D|Q;e=oe(R|ja|0,Q|0,S|0,e|0)|0;e=oe(e|0,D|0,v|0,H|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;_=Rd(la^e|0,g^S|0,16)|0;Y=D;g=Pd(la^e|0,g^S|0,48)|0;Y=D|Y;ca=oe(g|_|0,Y|0,ea|0,ca|0)|0;ea=D;la=Rd((R|ja)^ca|0,Q^ea|0,63)|0;ha=D;Q=Pd((R|ja)^ca|0,Q^ea|0,1)|0;ha=D|ha;aa=oe(Q|la|0,ha|0,ga|0,aa|0)|0;aa=oe(aa|0,D|0,v|0,H|0)|0;ga=D;U=oe(ka^ga|0,(V|ma)^aa|0,f|0,U|0)|0;f=D;ja=Rd((Q|la)^U|0,ha^f|0,24)|0;R=D;ha=Pd((Q|la)^U|0,ha^f|0,40)|0;R=D|R;la=oe(ha|ja|0,R|0,aa|0,ga|0)|0;la=oe(la|0,D|0,h|0,j|0)|0;Q=D;c[P>>2]=la;c[P+4>>2]=Q;ba=Rd(ka^ga^la|0,(V|ma)^aa^Q|0,16)|0;$=D;aa=Pd(ka^ga^la|0,(V|ma)^aa^Q|0,48)|0;$=D|$;c[P+96>>2]=aa|ba;c[P+96+4>>2]=$;f=oe(aa|ba|0,$|0,U|0,f|0)|0;U=D;c[P+64>>2]=f;c[P+64+4>>2]=U;$=Rd((ha|ja)^f|0,R^U|0,63)|0;ba=D;U=Pd((ha|ja)^f|0,R^U|0,1)|0;c[P+32>>2]=U|$;c[P+32+4>>2]=D|ba;ba=c[P+40>>2]|0;$=c[P+40+4>>2]|0;Z=oe(ba|0,$|0,X|0,Z|0)|0;Z=oe(Z|0,D|0,k|0,l|0)|0;X=D;ea=oe(fa^X|0,(W|ia)^Z|0,ca|0,ea|0)|0;ca=D;U=Rd(ba^ea|0,$^ca|0,24)|0;R=D;$=Pd(ba^ea|0,$^ca|0,40)|0;R=D|R;ba=oe($|U|0,R|0,Z|0,X|0)|0;ba=oe(ba|0,D|0,m|0,n|0)|0;f=D;c[P+8>>2]=ba;c[P+8+4>>2]=f;ja=Rd(fa^X^ba|0,(W|ia)^Z^f|0,16)|0;ha=D;Z=Pd(fa^X^ba|0,(W|ia)^Z^f|0,48)|0;ha=D|ha;c[P+104>>2]=Z|ja;c[P+104+4>>2]=ha;ca=oe(Z|ja|0,ha|0,ea|0,ca|0)|0;ea=D;c[P+72>>2]=ca;c[P+72+4>>2]=ea;ha=Rd(($|U)^ca|0,R^ea|0,63)|0;ja=D;ea=Pd(($|U)^ca|0,R^ea|0,1)|0;ja=D|ja;R=c[P+48>>2]|0;ca=c[P+48+4>>2]|0;da=oe(R|0,ca|0,T|0,da|0)|0;da=oe(da|0,D|0,o|0,p|0)|0;T=D;U=oe(Y^T|0,(g|_)^da|0,c[P+80>>2]|0,c[P+80+4>>2]|0)|0;$=D;Z=Rd(R^U|0,ca^$|0,24)|0;ia=D;ca=Pd(R^U|0,ca^$|0,40)|0;ia=D|ia;R=oe(ca|Z|0,ia|0,da|0,T|0)|0;R=oe(R|0,D|0,q|0,r|0)|0;W=D;c[P+16>>2]=R;c[P+16+4>>2]=W;X=Rd(Y^T^R|0,(g|_)^da^W|0,16)|0;fa=D;da=Pd(Y^T^R|0,(g|_)^da^W|0,48)|0;fa=D|fa;c[P+112>>2]=da|X;c[P+112+4>>2]=fa;$=oe(da|X|0,fa|0,U|0,$|0)|0;U=D;fa=Rd((ca|Z)^$|0,ia^U|0,63)|0;X=D;ia=Pd((ca|Z)^$|0,ia^U|0,1)|0;X=D|X;Z=c[P+56>>2]|0;ca=c[P+56+4>>2]|0;S=oe(Z|0,ca|0,e|0,S|0)|0;S=oe(S|0,D|0,s|0,t|0)|0;e=D;da=c[P+120>>2]^S;_=c[P+120+4>>2]^e;g=oe(_|0,da|0,c[P+88>>2]|0,c[P+88+4>>2]|0)|0;T=D;Y=Rd(Z^g|0,ca^T|0,24)|0;aa=D;ca=Pd(Z^g|0,ca^T|0,40)|0;aa=D|aa;e=oe(ca|Y|0,aa|0,S|0,e|0)|0;e=oe(e|0,D|0,u|0,w|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;Z=Rd(_^e|0,da^S|0,16)|0;ma=D;da=Pd(_^e|0,da^S|0,48)|0;ma=D|ma;T=oe(da|Z|0,ma|0,g|0,T|0)|0;g=D;_=Rd((ca|Y)^T|0,aa^g|0,63)|0;V=D;aa=Pd((ca|Y)^T|0,aa^g|0,1)|0;V=D|V;Q=oe(ea|ha|0,ja|0,la|0,Q|0)|0;Q=oe(Q|0,D|0,x|0,y|0)|0;la=D;U=oe(ma^la|0,(da|Z)^Q|0,$|0,U|0)|0;$=D;Y=Rd((ea|ha)^U|0,ja^$|0,24)|0;ca=D;ja=Pd((ea|ha)^U|0,ja^$|0,40)|0;ca=D|ca;ha=oe(ja|Y|0,ca|0,Q|0,la|0)|0;ha=oe(ha|0,D|0,z|0,A|0)|0;ea=D;c[P>>2]=ha;c[P+4>>2]=ea;ga=Rd(ma^la^ha|0,(da|Z)^Q^ea|0,16)|0;ka=D;Q=Pd(ma^la^ha|0,(da|Z)^Q^ea|0,48)|0;ka=D|ka;c[P+120>>2]=Q|ga;c[P+120+4>>2]=ka;$=oe(Q|ga|0,ka|0,U|0,$|0)|0;U=D;c[P+80>>2]=$;c[P+80+4>>2]=U;ka=Rd((ja|Y)^$|0,ca^U|0,63)|0;ga=D;U=Pd((ja|Y)^$|0,ca^U|0,1)|0;c[P+40>>2]=U|ka;c[P+40+4>>2]=D|ga;f=oe(ia|fa|0,X|0,ba|0,f|0)|0;f=oe(f|0,D|0,B|0,C|0)|0;ba=D;ga=c[P+96>>2]^f;ka=c[P+96+4>>2]^ba;g=oe(ka|0,ga|0,T|0,g|0)|0;T=D;U=Rd((ia|fa)^g|0,X^T|0,24)|0;ca=D;X=Pd((ia|fa)^g|0,X^T|0,40)|0;ca=D|ca;ba=oe(X|U|0,ca|0,f|0,ba|0)|0;ba=oe(ba|0,D|0,E|0,F|0)|0;f=D;c[P+8>>2]=ba;c[P+8+4>>2]=f;fa=Rd(ka^ba|0,ga^f|0,16)|0;ia=D;ga=Pd(ka^ba|0,ga^f|0,48)|0;ia=D|ia;T=oe(ga|fa|0,ia|0,g|0,T|0)|0;g=D;c[P+88>>2]=T;c[P+88+4>>2]=g;ka=Rd((X|U)^T|0,ca^g|0,63)|0;$=D;g=Pd((X|U)^T|0,ca^g|0,1)|0;c[P+48>>2]=g|ka;c[P+48+4>>2]=D|$;W=oe(aa|_|0,V|0,R|0,W|0)|0;W=oe(W|0,D|0,G|0,I|0)|0;R=D;$=c[P+104>>2]^W;ka=c[P+104+4>>2]^R;g=oe(ka|0,$|0,c[P+64>>2]|0,c[P+64+4>>2]|0)|0;ca=D;T=Rd((aa|_)^g|0,V^ca|0,24)|0;U=D;V=Pd((aa|_)^g|0,V^ca|0,40)|0;U=D|U;R=oe(V|T|0,U|0,W|0,R|0)|0;R=oe(R|0,D|0,J|0,K|0)|0;W=D;c[P+16>>2]=R;c[P+16+4>>2]=W;_=Rd(ka^R|0,$^W|0,16)|0;aa=D;$=Pd(ka^R|0,$^W|0,48)|0;aa=D|aa;ca=oe($|_|0,aa|0,g|0,ca|0)|0;g=D;ka=Rd((V|T)^ca|0,U^g|0,63)|0;X=D;U=Pd((V|T)^ca|0,U^g|0,1)|0;c[P+56>>2]=U|ka;c[P+56+4>>2]=D|X;X=c[P+32>>2]|0;ka=c[P+32+4>>2]|0;S=oe(X|0,ka|0,e|0,S|0)|0;S=oe(S|0,D|0,L|0,M|0)|0;e=D;U=c[P+112>>2]^S;T=c[P+112+4>>2]^e;V=oe(T|0,U|0,c[P+72>>2]|0,c[P+72+4>>2]|0)|0;Y=D;ja=Rd(X^V|0,ka^Y|0,24)|0;Q=D;ka=Pd(X^V|0,ka^Y|0,40)|0;Q=D|Q;e=oe(ka|ja|0,Q|0,S|0,e|0)|0;e=oe(e|0,D|0,N|0,b|0)|0;S=D;c[P+24>>2]=e;c[P+24+4>>2]=S;X=Rd(T^e|0,U^S|0,16)|0;Z=D;U=Pd(T^e|0,U^S|0,48)|0;Z=D|Z;Y=oe(U|X|0,Z|0,V|0,Y|0)|0;V=D;T=Rd((ka|ja)^Y|0,Q^V|0,63)|0;da=D;Q=Pd((ka|ja)^Y|0,Q^V|0,1)|0;da=D|da;ea=oe(Q|T|0,da|0,ha|0,ea|0)|0;ea=oe(ea|0,D|0,L|0,M|0)|0;ha=D;g=oe(ia^ha|0,(ga|fa)^ea|0,ca|0,g|0)|0;L=D;ca=Rd((Q|T)^g|0,da^L|0,24)|0;M=D;da=Pd((Q|T)^g|0,da^L|0,40)|0;M=D|M;T=oe(da|ca|0,M|0,ea|0,ha|0)|0;T=oe(T|0,D|0,B|0,C|0)|0;Q=D;c[P>>2]=T;c[P+4>>2]=Q;B=Rd(ia^ha^T|0,(ga|fa)^ea^Q|0,16)|0;C=D;ea=Pd(ia^ha^T|0,(ga|fa)^ea^Q|0,48)|0;C=D|C;c[P+96>>2]=ea|B;c[P+96+4>>2]=C;C=oe(ea|B|0,C|0,g|0,L|0)|0;L=D;c[P+64>>2]=C;c[P+64+4>>2]=L;B=Rd((da|ca)^C|0,M^L|0,63)|0;g=D;L=Pd((da|ca)^C|0,M^L|0,1)|0;c[P+32>>2]=L|B;c[P+32+4>>2]=D|g;g=c[P+40>>2]|0;B=c[P+40+4>>2]|0;L=oe(g|0,B|0,ba|0,f|0)|0;L=oe(L|0,D|0,o|0,p|0)|0;p=D;V=oe(aa^p|0,($|_)^L|0,Y|0,V|0)|0;Y=D;M=Rd(g^V|0,B^Y|0,24)|0;C=D;B=Pd(g^V|0,B^Y|0,40)|0;C=D|C;o=oe(B|M|0,C|0,L|0,p|0)|0;o=oe(o|0,D|0,x|0,y|0)|0;x=D;c[P+8>>2]=o;c[P+8+4>>2]=x;g=Rd(aa^p^o|0,($|_)^L^x|0,16)|0;f=D;y=Pd(aa^p^o|0,($|_)^L^x|0,48)|0;f=D|f;c[P+104>>2]=y|g;c[P+104+4>>2]=f;Y=oe(y|g|0,f|0,V|0,Y|0)|0;V=D;c[P+72>>2]=Y;c[P+72+4>>2]=V;f=Rd((B|M)^Y|0,C^V|0,63)|0;g=D;V=Pd((B|M)^Y|0,C^V|0,1)|0;g=D|g;C=c[P+48>>2]|0;Y=c[P+48+4>>2]|0;M=oe(C|0,Y|0,R|0,W|0)|0;M=oe(M|0,D|0,z|0,A|0)|0;z=D;y=oe(Z^z|0,(U|X)^M|0,c[P+80>>2]|0,c[P+80+4>>2]|0)|0;W=D;R=Rd(C^y|0,Y^W|0,24)|0;B=D;Y=Pd(C^y|0,Y^W|0,40)|0;B=D|B;C=oe(Y|R|0,B|0,M|0,z|0)|0;C=oe(C|0,D|0,N|0,b|0)|0;L=D;c[P+16>>2]=C;c[P+16+4>>2]=L;N=Rd(Z^z^C|0,(U|X)^M^L|0,16)|0;b=D;M=Pd(Z^z^C|0,(U|X)^M^L|0,48)|0;b=D|b;c[P+112>>2]=M|N;c[P+112+4>>2]=b;W=oe(M|N|0,b|0,y|0,W|0)|0;b=D;N=Rd((Y|R)^W|0,B^b|0,63)|0;y=D;B=Pd((Y|R)^W|0,B^b|0,1)|0;y=D|y;R=c[P+56>>2]|0;Y=c[P+56+4>>2]|0;M=oe(R|0,Y|0,e|0,S|0)|0;M=oe(M|0,D|0,J|0,K|0)|0;K=D;S=c[P+120>>2]^M;e=c[P+120+4>>2]^K;z=oe(e|0,S|0,c[P+88>>2]|0,c[P+88+4>>2]|0)|0;p=D;X=Rd(R^z|0,Y^p|0,24)|0;A=D;Y=Pd(R^z|0,Y^p|0,40)|0;A=D|A;K=oe(Y|X|0,A|0,M|0,K|0)|0;K=oe(K|0,D|0,s|0,t|0)|0;M=D;c[P+24>>2]=K;c[P+24+4>>2]=M;R=Rd(e^K|0,S^M|0,16)|0;U=D;S=Pd(e^K|0,S^M|0,48)|0;U=D|U;p=oe(S|R|0,U|0,z|0,p|0)|0;z=D;e=Rd((Y|X)^p|0,A^z|0,63)|0;J=D;A=Pd((Y|X)^p|0,A^z|0,1)|0;J=D|J;Q=oe(V|f|0,g|0,T|0,Q|0)|0;Q=oe(Q|0,D|0,h|0,j|0)|0;T=D;t=oe(U^T|0,(S|R)^Q|0,W|0,b|0)|0;s=D;h=Rd((V|f)^t|0,g^s|0,24)|0;j=D;g=Pd((V|f)^t|0,g^s|0,40)|0;j=D|j;f=oe(g|h|0,j|0,Q|0,T|0)|0;f=oe(f|0,D|0,G|0,I|0)|0;b=D;c[P>>2]=f;c[P+4>>2]=b;I=Rd(U^T^f|0,(S|R)^Q^b|0,16)|0;G=D;Q=Pd(U^T^f|0,(S|R)^Q^b|0,48)|0;G=D|G;c[P+120>>2]=Q|I;c[P+120+4>>2]=G;G=oe(Q|I|0,G|0,t|0,s|0)|0;I=D;c[P+80>>2]=G;c[P+80+4>>2]=I;s=Rd((g|h)^G|0,j^I|0,63)|0;t=D;I=Pd((g|h)^G|0,j^I|0,1)|0;c[P+40>>2]=I|s;c[P+40+4>>2]=D|t;x=oe(B|N|0,y|0,o|0,x|0)|0;x=oe(x|0,D|0,v|0,H|0)|0;t=D;v=c[P+96>>2]^x;s=c[P+96+4>>2]^t;H=oe(s|0,v|0,p|0,z|0)|0;I=D;z=Rd((B|N)^H|0,y^I|0,24)|0;G=D;y=Pd((B|N)^H|0,y^I|0,40)|0;G=D|G;t=oe(y|z|0,G|0,x|0,t|0)|0;t=oe(t|0,D|0,k|0,l|0)|0;x=D;c[P+8>>2]=t;c[P+8+4>>2]=x;N=Rd(s^t|0,v^x|0,16)|0;B=D;x=Pd(s^t|0,v^x|0,48)|0;B=D|B;c[P+96>>2]=x|N;c[P+96+4>>2]=B;I=oe(x|N|0,B|0,H|0,I|0)|0;H=D;c[P+88>>2]=I;c[P+88+4>>2]=H;B=Rd((y|z)^I|0,G^H|0,63)|0;N=D;H=Pd((y|z)^I|0,G^H|0,1)|0;c[P+48>>2]=H|B;c[P+48+4>>2]=D|N;L=oe(A|e|0,J|0,C|0,L|0)|0;L=oe(L|0,D|0,E|0,F|0)|0;C=D;N=c[P+104>>2]^L;B=c[P+104+4>>2]^C;H=oe(B|0,N|0,c[P+64>>2]|0,c[P+64+4>>2]|0)|0;G=D;E=Rd((A|e)^H|0,J^G|0,24)|0;F=D;J=Pd((A|e)^H|0,J^G|0,40)|0;F=D|F;C=oe(J|E|0,F|0,L|0,C|0)|0;C=oe(C|0,D|0,u|0,w|0)|0;L=D;c[P+16>>2]=C;c[P+16+4>>2]=L;e=Rd(B^C|0,N^L|0,16)|0;I=D;L=Pd(B^C|0,N^L|0,48)|0;I=D|I;c[P+104>>2]=L|e;c[P+104+4>>2]=I;G=oe(L|e|0,I|0,H|0,G|0)|0;H=D;c[P+64>>2]=G;c[P+64+4>>2]=H;I=Rd((J|E)^G|0,F^H|0,63)|0;e=D;H=Pd((J|E)^G|0,F^H|0,1)|0;c[P+56>>2]=H|I;c[P+56+4>>2]=D|e;e=c[P+32>>2]|0;I=c[P+32+4>>2]|0;H=oe(e|0,I|0,K|0,M|0)|0;H=oe(H|0,D|0,q|0,r|0)|0;F=D;G=c[P+112>>2]^H;E=c[P+112+4>>2]^F;M=oe(E|0,G|0,c[P+72>>2]|0,c[P+72+4>>2]|0)|0;K=D;J=Rd(e^M|0,I^K|0,24)|0;L=D;I=Pd(e^M|0,I^K|0,40)|0;L=D|L;F=oe(I|J|0,L|0,H|0,F|0)|0;F=oe(F|0,D|0,m|0,n|0)|0;H=D;c[P+24>>2]=F;c[P+24+4>>2]=H;e=Rd(E^F|0,G^H|0,16)|0;N=D;H=Pd(E^F|0,G^H|0,48)|0;N=D|N;c[P+112>>2]=H|e;c[P+112+4>>2]=N;K=oe(H|e|0,N|0,M|0,K|0)|0;M=D;c[P+72>>2]=K;c[P+72+4>>2]=M;N=Rd((I|J)^K|0,L^M|0,63)|0;e=D;M=Pd((I|J)^K|0,L^M|0,1)|0;c[P+32>>2]=M|N;c[P+32+4>>2]=D|e;e=0;while(1){ma=a+(e<<3)|0;la=P+(e+8<<3)|0;b=b^c[ma+4>>2]^c[la+4>>2];c[ma>>2]=f^c[ma>>2]^c[la>>2];c[ma+4>>2]=b;b=e+1|0;if((b|0)==8)break;e=b;f=c[P+(b<<3)>>2]|0;b=c[P+(b<<3)+4>>2]|0}i=O;return}function ja(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0;O=d[c>>0]|0;P=Pd(d[c+1>>0]|0|0,0,8)|0;jb=D;j=d[c+2>>0]|0;db=Pd(j|0,0,16)|0;Ma=Pd(d[c+3>>0]|0|0,0,8)|0;qb=D;A=Pd(d[c+4>>0]|0|0,0,16)|0;qb=qb|D;nb=d[c+5>>0]|0;z=Pd(nb|0,0,24)|0;qb=Rd(Ma|j|A|z|0,qb|D|0,5)|0;z=Pd(d[c+6>>0]|0|0,0,8)|0;A=D;j=d[c+7>>0]|0;Ma=Pd(j|0,0,16)|0;A=Rd(z|nb|Ma|0,A|D|0,2)|0;Ma=Pd(d[c+8>>0]|0|0,0,8)|0;nb=D;z=Pd(d[c+9>>0]|0|0,0,16)|0;nb=nb|D;ca=d[c+10>>0]|0;lb=Pd(ca|0,0,24)|0;nb=Rd(Ma|j|z|lb|0,nb|D|0,7)|0;lb=Pd(d[c+11>>0]|0|0,0,8)|0;z=D;j=Pd(d[c+12>>0]|0|0,0,16)|0;z=z|D;Ma=d[c+13>>0]|0;ra=Pd(Ma|0,0,24)|0;z=Rd(lb|ca|j|ra|0,z|D|0,4)|0;ra=Pd(d[c+14>>0]|0|0,0,8)|0;j=D;ca=d[c+15>>0]|0;lb=Pd(ca|0,0,16)|0;j=Rd(ra|Ma|lb|0,j|D|0,1)|0;lb=Pd(d[c+16>>0]|0|0,0,8)|0;Ma=D;ra=Pd(d[c+17>>0]|0|0,0,16)|0;Ma=Ma|D;Ca=d[c+18>>0]|0;I=Pd(Ca|0,0,24)|0;Ma=Rd(lb|ca|ra|I|0,Ma|D|0,6)|0;I=Pd(d[c+19>>0]|0|0,0,8)|0;ra=D;ca=Pd(d[c+20>>0]|0|0,0,16)|0;ra=Rd(I|Ca|ca|0,ra|D|0,3)|0;ca=D;Ca=d[c+21>>0]|0;I=Pd(d[c+22>>0]|0|0,0,8)|0;lb=D;eb=d[c+23>>0]|0;Ja=Pd(eb|0,0,16)|0;ba=Pd(d[c+24>>0]|0|0,0,8)|0;La=D;sc=Pd(d[c+25>>0]|0|0,0,16)|0;La=La|D;o=d[c+26>>0]|0;rb=Pd(o|0,0,24)|0;La=Rd(ba|eb|sc|rb|0,La|D|0,5)|0;rb=Pd(d[c+27>>0]|0|0,0,8)|0;sc=D;eb=d[c+28>>0]|0;ba=Pd(eb|0,0,16)|0;sc=Rd(rb|o|ba|0,sc|D|0,2)|0;ba=Pd(d[c+29>>0]|0|0,0,8)|0;o=D;rb=Pd(d[c+30>>0]|0|0,0,16)|0;o=o|D;Da=Pd(d[c+31>>0]|0|0,0,24)|0;o=Rd(ba|eb|rb|Da|0,o|D|0,7)|0;Da=D;rb=d[e>>0]|0;eb=Pd(d[e+1>>0]|0|0,0,8)|0;ba=D;Ta=d[e+2>>0]|0;aa=Pd(Ta|0,0,16)|0;m=Pd(d[e+3>>0]|0|0,0,8)|0;Ya=D;q=Pd(d[e+4>>0]|0|0,0,16)|0;Ya=Ya|D;p=d[e+5>>0]|0;ea=Pd(p|0,0,24)|0;Ya=Rd(m|Ta|q|ea|0,Ya|D|0,5)|0;ea=Pd(d[e+6>>0]|0|0,0,8)|0;q=D;Ta=d[e+7>>0]|0;m=Pd(Ta|0,0,16)|0;q=Rd(ea|p|m|0,q|D|0,2)|0;m=Pd(d[e+8>>0]|0|0,0,8)|0;p=D;ea=Pd(d[e+9>>0]|0|0,0,16)|0;p=p|D;wc=d[e+10>>0]|0;wa=Pd(wc|0,0,24)|0;p=Rd(m|Ta|ea|wa|0,p|D|0,7)|0;wa=Pd(d[e+11>>0]|0|0,0,8)|0;ea=D;Ta=Pd(d[e+12>>0]|0|0,0,16)|0;ea=ea|D;m=d[e+13>>0]|0;zc=Pd(m|0,0,24)|0;ea=Rd(wa|wc|Ta|zc|0,ea|D|0,4)|0;zc=Pd(d[e+14>>0]|0|0,0,8)|0;Ta=D;wc=d[e+15>>0]|0;wa=Pd(wc|0,0,16)|0;Ta=Rd(zc|m|wa|0,Ta|D|0,1)|0;wa=Pd(d[e+16>>0]|0|0,0,8)|0;m=D;zc=Pd(d[e+17>>0]|0|0,0,16)|0;m=m|D;ub=d[e+18>>0]|0;uc=Pd(ub|0,0,24)|0;m=Rd(wa|wc|zc|uc|0,m|D|0,6)|0;uc=Pd(d[e+19>>0]|0|0,0,8)|0;zc=D;wc=Pd(d[e+20>>0]|0|0,0,16)|0;zc=Rd(uc|ub|wc|0,zc|D|0,3)|0;wc=D;ub=d[e+21>>0]|0;uc=Pd(d[e+22>>0]|0|0,0,8)|0;wa=D;pc=d[e+23>>0]|0;na=Pd(pc|0,0,16)|0;W=Pd(d[e+24>>0]|0|0,0,8)|0;Ia=D;K=Pd(d[e+25>>0]|0|0,0,16)|0;Ia=Ia|D;x=d[e+26>>0]|0;qc=Pd(x|0,0,24)|0;Ia=Rd(W|pc|K|qc|0,Ia|D|0,5)|0;qc=Pd(d[e+27>>0]|0|0,0,8)|0;K=D;pc=d[e+28>>0]|0;W=Pd(pc|0,0,16)|0;K=Rd(qc|x|W|0,K|D|0,2)|0;W=Pd(d[e+29>>0]|0|0,0,8)|0;x=D;qc=Pd(d[e+30>>0]|0|0,0,16)|0;x=x|D;Ba=Pd(d[e+31>>0]|0|0,0,24)|0;x=Rd(W|pc|qc|Ba|0,x|D|0,7)|0;Ba=D;qc=d[f>>0]|0;pc=Pd(d[f+1>>0]|0|0,0,8)|0;W=D;y=d[f+2>>0]|0;rc=Pd(y|0,0,16)|0;Qa=Pd(d[f+3>>0]|0|0,0,8)|0;xa=D;Fa=Pd(d[f+4>>0]|0|0,0,16)|0;xa=xa|D;ib=d[f+5>>0]|0;za=Pd(ib|0,0,24)|0;xa=Rd(Qa|y|Fa|za|0,xa|D|0,5)|0;za=Pd(d[f+6>>0]|0|0,0,8)|0;Fa=D;y=d[f+7>>0]|0;Qa=Pd(y|0,0,16)|0;Fa=Rd(za|ib|Qa|0,Fa|D|0,2)|0;Qa=Pd(d[f+8>>0]|0|0,0,8)|0;ib=D;za=Pd(d[f+9>>0]|0|0,0,16)|0;ib=ib|D;h=d[f+10>>0]|0;Y=Pd(h|0,0,24)|0;ib=Rd(Qa|y|za|Y|0,ib|D|0,7)|0;Y=Pd(d[f+11>>0]|0|0,0,8)|0;za=D;y=Pd(d[f+12>>0]|0|0,0,16)|0;za=za|D;Qa=d[f+13>>0]|0;B=Pd(Qa|0,0,24)|0;za=Rd(Y|h|y|B|0,za|D|0,4)|0;B=Pd(d[f+14>>0]|0|0,0,8)|0;y=D;h=d[f+15>>0]|0;Y=Pd(h|0,0,16)|0;y=Rd(B|Qa|Y|0,y|D|0,1)|0;Y=Pd(d[f+16>>0]|0|0,0,8)|0;Qa=D;B=Pd(d[f+17>>0]|0|0,0,16)|0;Qa=Qa|D;sa=d[f+18>>0]|0;H=Pd(sa|0,0,24)|0;Qa=Rd(Y|h|B|H|0,Qa|D|0,6)|0;H=Pd(d[f+19>>0]|0|0,0,8)|0;B=D;h=Pd(d[f+20>>0]|0|0,0,16)|0;B=Rd(H|sa|h|0,B|D|0,3)|0;h=D;sa=d[f+21>>0]|0;H=Pd(d[f+22>>0]|0|0,0,8)|0;Y=D;ma=d[f+23>>0]|0;Z=Pd(ma|0,0,16)|0;ua=Pd(d[f+24>>0]|0|0,0,8)|0;G=D;N=Pd(d[f+25>>0]|0|0,0,16)|0;G=G|D;c=d[f+26>>0]|0;Aa=Pd(c|0,0,24)|0;G=Rd(ua|ma|N|Aa|0,G|D|0,5)|0;Aa=Pd(d[f+27>>0]|0|0,0,8)|0;N=D;ma=d[f+28>>0]|0;ua=Pd(ma|0,0,16)|0;N=Rd(Aa|c|ua|0,N|D|0,2)|0;ua=Pd(d[f+29>>0]|0|0,0,8)|0;c=D;Aa=Pd(d[f+30>>0]|0|0,0,16)|0;c=c|D;i=Pd(d[f+31>>0]|0|0,0,24)|0;c=Rd(ua|ma|Aa|i|0,c|D|0,7)|0;i=D;Aa=Ed(eb|rb|aa&2031616|0,ba|0,P|O|db&2031616|0,jb|0)|0;Aa=oe(pc|qc|rc&2031616|0,W|0,Aa|0,D|0)|0;W=D;rc=Ed(Ya&2097151|0,0,P|O|db&2031616|0,jb|0)|0;qc=D;pc=Ed(eb|rb|aa&2031616|0,ba|0,qb&2097151|0,0)|0;ma=D;ua=Ed(q&2097151|0,0,P|O|db&2031616|0,jb|0)|0;Ea=D;va=Ed(Ya&2097151|0,0,qb&2097151|0,0)|0;kc=D;ia=Ed(eb|rb|aa&2031616|0,ba|0,A&2097151|0,0)|0;ia=oe(va|0,kc|0,ia|0,D|0)|0;Ea=oe(ia|0,D|0,ua|0,Ea|0)|0;Fa=oe(Ea|0,D|0,Fa&2097151|0,0)|0;Ea=D;ua=Ed(p&2097151|0,0,P|O|db&2031616|0,jb|0)|0;ia=D;kc=Ed(q&2097151|0,0,qb&2097151|0,0)|0;va=D;oc=Ed(Ya&2097151|0,0,A&2097151|0,0)|0;nc=D;mc=Ed(eb|rb|aa&2031616|0,ba|0,nb&2097151|0,0)|0;lc=D;Ha=Ed(ea&2097151|0,0,P|O|db&2031616|0,jb|0)|0;ya=D;bc=Ed(p&2097151|0,0,qb&2097151|0,0)|0;u=D;dc=Ed(q&2097151|0,0,A&2097151|0,0)|0;Ga=D;ec=Ed(Ya&2097151|0,0,nb&2097151|0,0)|0;fc=D;cc=Ed(eb|rb|aa&2031616|0,ba|0,z&2097151|0,0)|0;cc=oe(ec|0,fc|0,cc|0,D|0)|0;Ga=oe(cc|0,D|0,dc|0,Ga|0)|0;u=oe(Ga|0,D|0,bc|0,u|0)|0;ya=oe(u|0,D|0,Ha|0,ya|0)|0;za=oe(ya|0,D|0,za&2097151|0,0)|0;ya=D;Ha=Ed(Ta&2097151|0,0,P|O|db&2031616|0,jb|0)|0;u=D;bc=Ed(ea&2097151|0,0,qb&2097151|0,0)|0;Ga=D;dc=Ed(p&2097151|0,0,A&2097151|0,0)|0;cc=D;fc=Ed(q&2097151|0,0,nb&2097151|0,0)|0;ec=D;jc=Ed(Ya&2097151|0,0,z&2097151|0,0)|0;ic=D;hc=Ed(eb|rb|aa&2031616|0,ba|0,j&2097151|0,0)|0;gc=D;X=Ed(m&2097151|0,0,P|O|db&2031616|0,jb|0)|0;Ra=D;Qb=Ed(Ta&2097151|0,0,qb&2097151|0,0)|0;da=D;Sb=Ed(ea&2097151|0,0,A&2097151|0,0)|0;Pb=D;Ub=Ed(p&2097151|0,0,nb&2097151|0,0)|0;Rb=D;Wb=Ed(q&2097151|0,0,z&2097151|0,0)|0;Tb=D;Xb=Ed(Ya&2097151|0,0,j&2097151|0,0)|0;Yb=D;Vb=Ed(eb|rb|aa&2031616|0,ba|0,Ma&2097151|0,0)|0;Vb=oe(Xb|0,Yb|0,Vb|0,D|0)|0;Tb=oe(Vb|0,D|0,Wb|0,Tb|0)|0;Rb=oe(Tb|0,D|0,Ub|0,Rb|0)|0;Pb=oe(Rb|0,D|0,Sb|0,Pb|0)|0;da=oe(Pb|0,D|0,Qb|0,da|0)|0;Ra=oe(da|0,D|0,X|0,Ra|0)|0;Qa=oe(Ra|0,D|0,Qa&2097151|0,0)|0;Ra=D;X=Ed(zc|0,wc|0,P|O|db&2031616|0,jb|0)|0;da=D;Qb=Ed(m&2097151|0,0,qb&2097151|0,0)|0;Pb=D;Sb=Ed(Ta&2097151|0,0,A&2097151|0,0)|0;Rb=D;Ub=Ed(ea&2097151|0,0,nb&2097151|0,0)|0;Tb=D;Wb=Ed(p&2097151|0,0,z&2097151|0,0)|0;Vb=D;Yb=Ed(q&2097151|0,0,j&2097151|0,0)|0;Xb=D;ac=Ed(Ya&2097151|0,0,Ma&2097151|0,0)|0;$b=D;_b=Ed(eb|rb|aa&2031616|0,ba|0,ra|0,ca|0)|0;Zb=D;ta=Ed(uc|ub|na&2031616|0,wa|0,P|O|db&2031616|0,jb|0)|0;yb=D;zb=Ed(zc|0,wc|0,qb&2097151|0,0)|0;Ab=D;Bb=Ed(m&2097151|0,0,A&2097151|0,0)|0;Cb=D;Db=Ed(Ta&2097151|0,0,nb&2097151|0,0)|0;Eb=D;Fb=Ed(ea&2097151|0,0,z&2097151|0,0)|0;Gb=D;Hb=Ed(p&2097151|0,0,j&2097151|0,0)|0;Ib=D;Jb=Ed(q&2097151|0,0,Ma&2097151|0,0)|0;Kb=D;Mb=Ed(Ya&2097151|0,0,ra|0,ca|0)|0;Nb=D;Ob=Ed(eb|rb|aa&2031616|0,ba|0,I|Ca|Ja&2031616|0,lb|0)|0;Ob=oe(Mb|0,Nb|0,Ob|0,D|0)|0;Kb=oe(Ob|0,D|0,Jb|0,Kb|0)|0;Ib=oe(Kb|0,D|0,Hb|0,Ib|0)|0;Gb=oe(Ib|0,D|0,Fb|0,Gb|0)|0;Eb=oe(Gb|0,D|0,Db|0,Eb|0)|0;Cb=oe(Eb|0,D|0,Bb|0,Cb|0)|0;Ab=oe(Cb|0,D|0,zb|0,Ab|0)|0;yb=oe(Ab|0,D|0,ta|0,yb|0)|0;Y=oe(yb|0,D|0,H|sa|Z&2031616|0,Y|0)|0;Z=D;sa=Ed(Ia&2097151|0,0,P|O|db&2031616|0,jb|0)|0;H=D;yb=Ed(uc|ub|na&2031616|0,wa|0,qb&2097151|0,0)|0;ta=D;Ab=Ed(zc|0,wc|0,A&2097151|0,0)|0;zb=D;Cb=Ed(m&2097151|0,0,nb&2097151|0,0)|0;Bb=D;Eb=Ed(Ta&2097151|0,0,z&2097151|0,0)|0;Db=D;Gb=Ed(ea&2097151|0,0,j&2097151|0,0)|0;Fb=D;Ib=Ed(p&2097151|0,0,Ma&2097151|0,0)|0;Hb=D;Kb=Ed(q&2097151|0,0,ra|0,ca|0)|0;Jb=D;Ob=Ed(Ya&2097151|0,0,I|Ca|Ja&2031616|0,lb|0)|0;Nb=D;Mb=Ed(eb|rb|aa&2031616|0,ba|0,La&2097151|0,0)|0;Lb=D;ab=Ed(K&2097151|0,0,P|O|db&2031616|0,jb|0)|0;M=D;Q=Ed(Ia&2097151|0,0,qb&2097151|0,0)|0;bb=D;ob=Ed(uc|ub|na&2031616|0,wa|0,A&2097151|0,0)|0;R=D;J=Ed(zc|0,wc|0,nb&2097151|0,0)|0;pb=D;Oa=Ed(m&2097151|0,0,z&2097151|0,0)|0;C=D;gb=Ed(Ta&2097151|0,0,j&2097151|0,0)|0;Pa=D;U=Ed(ea&2097151|0,0,Ma&2097151|0,0)|0;hb=D;Wa=Ed(p&2097151|0,0,ra|0,ca|0)|0;V=D;xb=Ed(q&2097151|0,0,I|Ca|Ja&2031616|0,lb|0)|0;Xa=D;fa=Ed(Ya&2097151|0,0,La&2097151|0,0)|0;w=D;wb=Ed(eb|rb|aa&2031616|0,ba|0,sc&2097151|0,0)|0;wb=oe(fa|0,w|0,wb|0,D|0)|0;Xa=oe(wb|0,D|0,xb|0,Xa|0)|0;V=oe(Xa|0,D|0,Wa|0,V|0)|0;hb=oe(V|0,D|0,U|0,hb|0)|0;Pa=oe(hb|0,D|0,gb|0,Pa|0)|0;C=oe(Pa|0,D|0,Oa|0,C|0)|0;pb=oe(C|0,D|0,J|0,pb|0)|0;R=oe(pb|0,D|0,ob|0,R|0)|0;bb=oe(R|0,D|0,Q|0,bb|0)|0;M=oe(bb|0,D|0,ab|0,M|0)|0;N=oe(M|0,D|0,N&2097151|0,0)|0;M=D;jb=Ed(x|0,Ba|0,P|O|db&2031616|0,jb|0)|0;db=D;O=Ed(K&2097151|0,0,qb&2097151|0,0)|0;P=D;ab=Ed(Ia&2097151|0,0,A&2097151|0,0)|0;bb=D;Q=Ed(uc|ub|na&2031616|0,wa|0,nb&2097151|0,0)|0;R=D;ob=Ed(zc|0,wc|0,z&2097151|0,0)|0;pb=D;J=Ed(m&2097151|0,0,j&2097151|0,0)|0;C=D;Oa=Ed(Ta&2097151|0,0,Ma&2097151|0,0)|0;Pa=D;gb=Ed(ea&2097151|0,0,ra|0,ca|0)|0;hb=D;U=Ed(p&2097151|0,0,I|Ca|Ja&2031616|0,lb|0)|0;V=D;Wa=Ed(q&2097151|0,0,La&2097151|0,0)|0;Xa=D;xb=Ed(Ya&2097151|0,0,sc&2097151|0,0)|0;wb=D;ba=Ed(eb|rb|aa&2031616|0,ba|0,o|0,Da|0)|0;aa=D;qb=Ed(x|0,Ba|0,qb&2097151|0,0)|0;rb=D;eb=Ed(K&2097151|0,0,A&2097151|0,0)|0;w=D;fa=Ed(Ia&2097151|0,0,nb&2097151|0,0)|0;fb=D;ha=Ed(uc|ub|na&2031616|0,wa|0,z&2097151|0,0)|0;$=D;sb=Ed(zc|0,wc|0,j&2097151|0,0)|0;kb=D;la=Ed(m&2097151|0,0,Ma&2097151|0,0)|0;tb=D;qa=Ed(Ta&2097151|0,0,ra|0,ca|0)|0;ka=D;Na=Ed(ea&2097151|0,0,I|Ca|Ja&2031616|0,lb|0)|0;pa=D;Za=Ed(p&2097151|0,0,La&2097151|0,0)|0;ga=D;mb=Ed(q&2097151|0,0,sc&2097151|0,0)|0;v=D;Ya=Ed(Ya&2097151|0,0,o|0,Da|0)|0;Ya=oe(mb|0,v|0,Ya|0,D|0)|0;ga=oe(Ya|0,D|0,Za|0,ga|0)|0;pa=oe(ga|0,D|0,Na|0,pa|0)|0;ka=oe(pa|0,D|0,qa|0,ka|0)|0;tb=oe(ka|0,D|0,la|0,tb|0)|0;kb=oe(tb|0,D|0,sb|0,kb|0)|0;$=oe(kb|0,D|0,ha|0,$|0)|0;fb=oe($|0,D|0,fa|0,fb|0)|0;w=oe(fb|0,D|0,eb|0,w|0)|0;rb=oe(w|0,D|0,qb|0,rb|0)|0;qb=D;A=Ed(x|0,Ba|0,A&2097151|0,0)|0;w=D;eb=Ed(K&2097151|0,0,nb&2097151|0,0)|0;fb=D;fa=Ed(Ia&2097151|0,0,z&2097151|0,0)|0;$=D;ha=Ed(uc|ub|na&2031616|0,wa|0,j&2097151|0,0)|0;kb=D;sb=Ed(zc|0,wc|0,Ma&2097151|0,0)|0;tb=D;la=Ed(m&2097151|0,0,ra|0,ca|0)|0;ka=D;qa=Ed(Ta&2097151|0,0,I|Ca|Ja&2031616|0,lb|0)|0;pa=D;Na=Ed(ea&2097151|0,0,La&2097151|0,0)|0;ga=D;Za=Ed(p&2097151|0,0,sc&2097151|0,0)|0;Ya=D;q=Ed(q&2097151|0,0,o|0,Da|0)|0;v=D;nb=Ed(x|0,Ba|0,nb&2097151|0,0)|0;mb=D;_a=Ed(K&2097151|0,0,z&2097151|0,0)|0;r=D;E=Ed(Ia&2097151|0,0,j&2097151|0,0)|0;$a=D;n=Ed(uc|ub|na&2031616|0,wa|0,Ma&2097151|0,0)|0;t=D;_=Ed(zc|0,wc|0,ra|0,ca|0)|0;g=D;ja=Ed(m&2097151|0,0,I|Ca|Ja&2031616|0,lb|0)|0;s=D;oa=Ed(Ta&2097151|0,0,La&2097151|0,0)|0;F=D;vb=Ed(ea&2097151|0,0,sc&2097151|0,0)|0;l=D;p=Ed(p&2097151|0,0,o|0,Da|0)|0;p=oe(vb|0,l|0,p|0,D|0)|0;F=oe(p|0,D|0,oa|0,F|0)|0;s=oe(F|0,D|0,ja|0,s|0)|0;g=oe(s|0,D|0,_|0,g|0)|0;t=oe(g|0,D|0,n|0,t|0)|0;$a=oe(t|0,D|0,E|0,$a|0)|0;r=oe($a|0,D|0,_a|0,r|0)|0;mb=oe(r|0,D|0,nb|0,mb|0)|0;nb=D;z=Ed(x|0,Ba|0,z&2097151|0,0)|0;r=D;_a=Ed(K&2097151|0,0,j&2097151|0,0)|0;$a=D;E=Ed(Ia&2097151|0,0,Ma&2097151|0,0)|0;t=D;n=Ed(uc|ub|na&2031616|0,wa|0,ra|0,ca|0)|0;g=D;_=Ed(zc|0,wc|0,I|Ca|Ja&2031616|0,lb|0)|0;s=D;ja=Ed(m&2097151|0,0,La&2097151|0,0)|0;F=D;oa=Ed(Ta&2097151|0,0,sc&2097151|0,0)|0;p=D;ea=Ed(ea&2097151|0,0,o|0,Da|0)|0;l=D;j=Ed(x|0,Ba|0,j&2097151|0,0)|0;vb=D;e=Ed(K&2097151|0,0,Ma&2097151|0,0)|0;L=D;T=Ed(Ia&2097151|0,0,ra|0,ca|0)|0;Ka=D;Va=Ed(uc|ub|na&2031616|0,wa|0,I|Ca|Ja&2031616|0,lb|0)|0;S=D;Sa=Ed(zc|0,wc|0,La&2097151|0,0)|0;Ua=D;f=Ed(m&2097151|0,0,sc&2097151|0,0)|0;k=D;Ta=Ed(Ta&2097151|0,0,o|0,Da|0)|0;Ta=oe(f|0,k|0,Ta|0,D|0)|0;Ua=oe(Ta|0,D|0,Sa|0,Ua|0)|0;S=oe(Ua|0,D|0,Va|0,S|0)|0;Ka=oe(S|0,D|0,T|0,Ka|0)|0;L=oe(Ka|0,D|0,e|0,L|0)|0;vb=oe(L|0,D|0,j|0,vb|0)|0;j=D;Ma=Ed(x|0,Ba|0,Ma&2097151|0,0)|0;L=D;e=Ed(K&2097151|0,0,ra|0,ca|0)|0;Ka=D;T=Ed(Ia&2097151|0,0,I|Ca|Ja&2031616|0,lb|0)|0;S=D;Va=Ed(uc|ub|na&2031616|0,wa|0,La&2097151|0,0)|0;Ua=D;Sa=Ed(zc|0,wc|0,sc&2097151|0,0)|0;Ta=D;m=Ed(m&2097151|0,0,o|0,Da|0)|0;k=D;ca=Ed(x|0,Ba|0,ra|0,ca|0)|0;f=D;ra=Ed(K&2097151|0,0,I|Ca|Ja&2031616|0,lb|0)|0;cb=D;vc=Ed(Ia&2097151|0,0,La&2097151|0,0)|0;tc=D;yc=Ed(uc|ub|na&2031616|0,wa|0,sc&2097151|0,0)|0;xc=D;wc=Ed(zc|0,wc|0,o|0,Da|0)|0;wc=oe(yc|0,xc|0,wc|0,D|0)|0;tc=oe(wc|0,D|0,vc|0,tc|0)|0;cb=oe(tc|0,D|0,ra|0,cb|0)|0;f=oe(cb|0,D|0,ca|0,f|0)|0;ca=D;lb=Ed(x|0,Ba|0,I|Ca|Ja&2031616|0,lb|0)|0;Ja=D;Ca=Ed(K&2097151|0,0,La&2097151|0,0)|0;I=D;cb=Ed(Ia&2097151|0,0,sc&2097151|0,0)|0;ra=D;wa=Ed(uc|ub|na&2031616|0,wa|0,o|0,Da|0)|0;na=D;La=Ed(x|0,Ba|0,La&2097151|0,0)|0;ub=D;uc=Ed(K&2097151|0,0,sc&2097151|0,0)|0;tc=D;Ia=Ed(Ia&2097151|0,0,o|0,Da|0)|0;Ia=oe(uc|0,tc|0,Ia|0,D|0)|0;ub=oe(Ia|0,D|0,La|0,ub|0)|0;La=D;sc=Ed(x|0,Ba|0,sc&2097151|0,0)|0;Ia=D;K=Ed(K&2097151|0,0,o|0,Da|0)|0;K=oe(sc|0,Ia|0,K|0,D|0)|0;Ia=D;Da=Ed(x|0,Ba|0,o|0,Da|0)|0;o=D;Ba=oe(Aa|0,W|0,1048576,0)|0;Ba=Rd(Ba|0,D|0,21)|0;x=D;ma=oe(rc|0,qc|0,pc|0,ma|0)|0;ma=oe(ma|0,D|0,Ba|0,x|0)|0;xa=oe(ma|0,D|0,xa&2097151|0,0)|0;ma=D;x=Pd(Ba|0,x|0,21)|0;x=le(Aa|0,W|0,x|0,D|0)|0;W=D;Aa=oe(Fa|0,Ea|0,1048576,0)|0;Aa=Rd(Aa|0,D|0,21)|0;Ba=D;lc=oe(oc|0,nc|0,mc|0,lc|0)|0;va=oe(lc|0,D|0,kc|0,va|0)|0;ia=oe(va|0,D|0,ua|0,ia|0)|0;ib=oe(ia|0,D|0,ib&2097151|0,0)|0;ib=oe(ib|0,D|0,Aa|0,Ba|0)|0;ia=D;Ba=Pd(Aa|0,Ba|0,21)|0;Aa=D;ua=oe(za|0,ya|0,1048576,0)|0;ua=Dd(ua|0,D|0,21)|0;va=D;gc=oe(jc|0,ic|0,hc|0,gc|0)|0;ec=oe(gc|0,D|0,fc|0,ec|0)|0;cc=oe(ec|0,D|0,dc|0,cc|0)|0;Ga=oe(cc|0,D|0,bc|0,Ga|0)|0;u=oe(Ga|0,D|0,Ha|0,u|0)|0;y=oe(u|0,D|0,y&2097151|0,0)|0;y=oe(y|0,D|0,ua|0,va|0)|0;u=D;va=Pd(ua|0,va|0,21)|0;ua=D;Ha=oe(Qa|0,Ra|0,1048576,0)|0;Ha=Dd(Ha|0,D|0,21)|0;Ga=D;Zb=oe(ac|0,$b|0,_b|0,Zb|0)|0;Xb=oe(Zb|0,D|0,Yb|0,Xb|0)|0;Vb=oe(Xb|0,D|0,Wb|0,Vb|0)|0;Tb=oe(Vb|0,D|0,Ub|0,Tb|0)|0;Rb=oe(Tb|0,D|0,Sb|0,Rb|0)|0;Pb=oe(Rb|0,D|0,Qb|0,Pb|0)|0;da=oe(Pb|0,D|0,X|0,da|0)|0;h=oe(da|0,D|0,B|0,h|0)|0;h=oe(h|0,D|0,Ha|0,Ga|0)|0;B=D;Ga=Pd(Ha|0,Ga|0,21)|0;Ha=D;da=oe(Y|0,Z|0,1048576,0)|0;da=Dd(da|0,D|0,21)|0;X=D;Lb=oe(Ob|0,Nb|0,Mb|0,Lb|0)|0;Jb=oe(Lb|0,D|0,Kb|0,Jb|0)|0;Hb=oe(Jb|0,D|0,Ib|0,Hb|0)|0;Fb=oe(Hb|0,D|0,Gb|0,Fb|0)|0;Db=oe(Fb|0,D|0,Eb|0,Db|0)|0;Bb=oe(Db|0,D|0,Cb|0,Bb|0)|0;zb=oe(Bb|0,D|0,Ab|0,zb|0)|0;ta=oe(zb|0,D|0,yb|0,ta|0)|0;H=oe(ta|0,D|0,sa|0,H|0)|0;G=oe(H|0,D|0,G&2097151|0,0)|0;G=oe(G|0,D|0,da|0,X|0)|0;H=D;X=Pd(da|0,X|0,21)|0;da=D;sa=oe(N|0,M|0,1048576,0)|0;sa=Dd(sa|0,D|0,21)|0;ta=D;aa=oe(xb|0,wb|0,ba|0,aa|0)|0;Xa=oe(aa|0,D|0,Wa|0,Xa|0)|0;V=oe(Xa|0,D|0,U|0,V|0)|0;hb=oe(V|0,D|0,gb|0,hb|0)|0;Pa=oe(hb|0,D|0,Oa|0,Pa|0)|0;C=oe(Pa|0,D|0,J|0,C|0)|0;pb=oe(C|0,D|0,ob|0,pb|0)|0;R=oe(pb|0,D|0,Q|0,R|0)|0;bb=oe(R|0,D|0,ab|0,bb|0)|0;P=oe(bb|0,D|0,O|0,P|0)|0;db=oe(P|0,D|0,jb|0,db|0)|0;i=oe(db|0,D|0,c|0,i|0)|0;i=oe(i|0,D|0,sa|0,ta|0)|0;c=D;ta=Pd(sa|0,ta|0,21)|0;sa=D;db=oe(rb|0,qb|0,1048576,0)|0;db=Dd(db|0,D|0,21)|0;jb=D;v=oe(Za|0,Ya|0,q|0,v|0)|0;ga=oe(v|0,D|0,Na|0,ga|0)|0;pa=oe(ga|0,D|0,qa|0,pa|0)|0;ka=oe(pa|0,D|0,la|0,ka|0)|0;tb=oe(ka|0,D|0,sb|0,tb|0)|0;kb=oe(tb|0,D|0,ha|0,kb|0)|0;$=oe(kb|0,D|0,fa|0,$|0)|0;fb=oe($|0,D|0,eb|0,fb|0)|0;w=oe(fb|0,D|0,A|0,w|0)|0;w=oe(w|0,D|0,db|0,jb|0)|0;A=D;jb=Pd(db|0,jb|0,21)|0;db=D;fb=oe(mb|0,nb|0,1048576,0)|0;fb=Dd(fb|0,D|0,21)|0;eb=D;l=oe(oa|0,p|0,ea|0,l|0)|0;F=oe(l|0,D|0,ja|0,F|0)|0;s=oe(F|0,D|0,_|0,s|0)|0;g=oe(s|0,D|0,n|0,g|0)|0;t=oe(g|0,D|0,E|0,t|0)|0;$a=oe(t|0,D|0,_a|0,$a|0)|0;r=oe($a|0,D|0,z|0,r|0)|0;r=oe(r|0,D|0,fb|0,eb|0)|0;z=D;eb=Pd(fb|0,eb|0,21)|0;fb=D;$a=oe(vb|0,j|0,1048576,0)|0;$a=Dd($a|0,D|0,21)|0;_a=D;k=oe(Sa|0,Ta|0,m|0,k|0)|0;Ua=oe(k|0,D|0,Va|0,Ua|0)|0;S=oe(Ua|0,D|0,T|0,S|0)|0;Ka=oe(S|0,D|0,e|0,Ka|0)|0;L=oe(Ka|0,D|0,Ma|0,L|0)|0;L=oe(L|0,D|0,$a|0,_a|0)|0;Ma=D;_a=Pd($a|0,_a|0,21)|0;$a=D;Ka=oe(f|0,ca|0,1048576,0)|0;Ka=Dd(Ka|0,D|0,21)|0;e=D;na=oe(cb|0,ra|0,wa|0,na|0)|0;I=oe(na|0,D|0,Ca|0,I|0)|0;Ja=oe(I|0,D|0,lb|0,Ja|0)|0;Ja=oe(Ja|0,D|0,Ka|0,e|0)|0;lb=D;e=Pd(Ka|0,e|0,21)|0;e=le(f|0,ca|0,e|0,D|0)|0;ca=D;f=oe(ub|0,La|0,1048576,0)|0;f=Dd(f|0,D|0,21)|0;Ka=D;Ia=oe(K|0,Ia|0,f|0,Ka|0)|0;K=D;Ka=Pd(f|0,Ka|0,21)|0;Ka=le(ub|0,La|0,Ka|0,D|0)|0;La=D;ub=oe(Da|0,o|0,1048576,0)|0;ub=Dd(ub|0,D|0,21)|0;f=D;I=Pd(ub|0,f|0,21)|0;I=le(Da|0,o|0,I|0,D|0)|0;o=D;Da=oe(xa|0,ma|0,1048576,0)|0;Da=Rd(Da|0,D|0,21)|0;Ca=D;na=Pd(Da|0,Ca|0,21)|0;na=le(xa|0,ma|0,na|0,D|0)|0;ma=D;xa=oe(ib|0,ia|0,1048576,0)|0;xa=Dd(xa|0,D|0,21)|0;wa=D;ra=Pd(xa|0,wa|0,21)|0;ra=le(ib|0,ia|0,ra|0,D|0)|0;ia=D;ib=oe(y|0,u|0,1048576,0)|0;ib=Dd(ib|0,D|0,21)|0;cb=D;S=Pd(ib|0,cb|0,21)|0;T=D;Ua=oe(h|0,B|0,1048576,0)|0;Ua=Dd(Ua|0,D|0,21)|0;Va=D;k=Pd(Ua|0,Va|0,21)|0;m=D;Ta=oe(G|0,H|0,1048576,0)|0;Ta=Dd(Ta|0,D|0,21)|0;Sa=D;t=Pd(Ta|0,Sa|0,21)|0;E=D;g=oe(i|0,c|0,1048576,0)|0;g=Dd(g|0,D|0,21)|0;n=D;s=Pd(g|0,n|0,21)|0;_=D;F=oe(w|0,A|0,1048576,0)|0;F=Dd(F|0,D|0,21)|0;ja=D;l=Pd(F|0,ja|0,21)|0;ea=D;p=oe(r|0,z|0,1048576,0)|0;p=Dd(p|0,D|0,21)|0;oa=D;$=Pd(p|0,oa|0,21)|0;fa=D;kb=oe(L|0,Ma|0,1048576,0)|0;kb=Dd(kb|0,D|0,21)|0;ha=D;ca=oe(kb|0,ha|0,e|0,ca|0)|0;e=D;ha=Pd(kb|0,ha|0,21)|0;ha=le(L|0,Ma|0,ha|0,D|0)|0;Ma=D;L=oe(Ja|0,lb|0,1048576,0)|0;L=Dd(L|0,D|0,21)|0;kb=D;La=oe(L|0,kb|0,Ka|0,La|0)|0;Ka=D;kb=Pd(L|0,kb|0,21)|0;kb=le(Ja|0,lb|0,kb|0,D|0)|0;lb=D;Ja=oe(Ia|0,K|0,1048576,0)|0;Ja=Dd(Ja|0,D|0,21)|0;L=D;o=oe(Ja|0,L|0,I|0,o|0)|0;I=D;L=Pd(Ja|0,L|0,21)|0;L=le(Ia|0,K|0,L|0,D|0)|0;K=D;Ia=Ed(ub|0,f|0,666643,0)|0;Ja=D;tb=Ed(ub|0,f|0,470296,0)|0;sb=D;ka=Ed(ub|0,f|0,654183,0)|0;la=D;pa=Ed(ub|0,f|0,-997805,-1)|0;qa=D;ga=Ed(ub|0,f|0,136657,0)|0;Na=D;f=Ed(ub|0,f|0,-683901,-1)|0;f=oe(vb|0,j|0,f|0,D|0)|0;$a=le(f|0,D|0,_a|0,$a|0)|0;oa=oe($a|0,D|0,p|0,oa|0)|0;p=D;$a=Ed(o|0,I|0,666643,0)|0;_a=D;f=Ed(o|0,I|0,470296,0)|0;j=D;vb=Ed(o|0,I|0,654183,0)|0;ub=D;v=Ed(o|0,I|0,-997805,-1)|0;q=D;Ya=Ed(o|0,I|0,136657,0)|0;Za=D;I=Ed(o|0,I|0,-683901,-1)|0;o=D;P=Ed(L|0,K|0,666643,0)|0;O=D;bb=Ed(L|0,K|0,470296,0)|0;ab=D;R=Ed(L|0,K|0,654183,0)|0;Q=D;pb=Ed(L|0,K|0,-997805,-1)|0;ob=D;C=Ed(L|0,K|0,136657,0)|0;J=D;K=Ed(L|0,K|0,-683901,-1)|0;L=D;qa=oe(mb|0,nb|0,pa|0,qa|0)|0;Za=oe(qa|0,D|0,Ya|0,Za|0)|0;L=oe(Za|0,D|0,K|0,L|0)|0;fb=le(L|0,D|0,eb|0,fb|0)|0;ja=oe(fb|0,D|0,F|0,ja|0)|0;F=D;fb=Ed(La|0,Ka|0,666643,0)|0;eb=D;L=Ed(La|0,Ka|0,470296,0)|0;K=D;Za=Ed(La|0,Ka|0,654183,0)|0;Ya=D;qa=Ed(La|0,Ka|0,-997805,-1)|0;pa=D;nb=Ed(La|0,Ka|0,136657,0)|0;mb=D;Ka=Ed(La|0,Ka|0,-683901,-1)|0;La=D;Pa=Ed(kb|0,lb|0,666643,0)|0;Oa=D;hb=Ed(kb|0,lb|0,470296,0)|0;gb=D;V=Ed(kb|0,lb|0,654183,0)|0;U=D;Xa=Ed(kb|0,lb|0,-997805,-1)|0;Wa=D;aa=Ed(kb|0,lb|0,136657,0)|0;ba=D;lb=Ed(kb|0,lb|0,-683901,-1)|0;kb=D;sb=oe(vb|0,ub|0,tb|0,sb|0)|0;qb=oe(sb|0,D|0,rb|0,qb|0)|0;ob=oe(qb|0,D|0,pb|0,ob|0)|0;mb=oe(ob|0,D|0,nb|0,mb|0)|0;kb=oe(mb|0,D|0,lb|0,kb|0)|0;db=le(kb|0,D|0,jb|0,db|0)|0;n=oe(db|0,D|0,g|0,n|0)|0;g=D;db=Ed(ca|0,e|0,666643,0)|0;db=oe(ib|0,cb|0,db|0,D|0)|0;Ra=oe(db|0,D|0,Qa|0,Ra|0)|0;Ha=le(Ra|0,D|0,Ga|0,Ha|0)|0;Ga=D;Ra=Ed(ca|0,e|0,470296,0)|0;Qa=D;db=Ed(ca|0,e|0,654183,0)|0;cb=D;eb=oe(hb|0,gb|0,fb|0,eb|0)|0;cb=oe(eb|0,D|0,db|0,cb|0)|0;Va=oe(cb|0,D|0,Ua|0,Va|0)|0;Z=oe(Va|0,D|0,Y|0,Z|0)|0;da=le(Z|0,D|0,X|0,da|0)|0;X=D;Z=Ed(ca|0,e|0,-997805,-1)|0;Y=D;Va=Ed(ca|0,e|0,136657,0)|0;Ua=D;_a=oe(bb|0,ab|0,$a|0,_a|0)|0;Ya=oe(_a|0,D|0,Za|0,Ya|0)|0;Wa=oe(Ya|0,D|0,Xa|0,Wa|0)|0;Ua=oe(Wa|0,D|0,Va|0,Ua|0)|0;Sa=oe(Ua|0,D|0,Ta|0,Sa|0)|0;M=oe(Sa|0,D|0,N|0,M|0)|0;sa=le(M|0,D|0,ta|0,sa|0)|0;ta=D;e=Ed(ca|0,e|0,-683901,-1)|0;ca=D;M=oe(Ha|0,Ga|0,1048576,0)|0;M=Dd(M|0,D|0,21)|0;N=D;Oa=oe(Ra|0,Qa|0,Pa|0,Oa|0)|0;B=oe(Oa|0,D|0,h|0,B|0)|0;m=le(B|0,D|0,k|0,m|0)|0;m=oe(m|0,D|0,M|0,N|0)|0;k=D;N=Pd(M|0,N|0,21)|0;M=D;B=oe(da|0,X|0,1048576,0)|0;B=Dd(B|0,D|0,21)|0;h=D;O=oe(L|0,K|0,P|0,O|0)|0;U=oe(O|0,D|0,V|0,U|0)|0;Y=oe(U|0,D|0,Z|0,Y|0)|0;H=oe(Y|0,D|0,G|0,H|0)|0;E=le(H|0,D|0,t|0,E|0)|0;E=oe(E|0,D|0,B|0,h|0)|0;t=D;h=Pd(B|0,h|0,21)|0;B=D;H=oe(sa|0,ta|0,1048576,0)|0;H=Dd(H|0,D|0,21)|0;G=D;Ja=oe(f|0,j|0,Ia|0,Ja|0)|0;Q=oe(Ja|0,D|0,R|0,Q|0)|0;pa=oe(Q|0,D|0,qa|0,pa|0)|0;ba=oe(pa|0,D|0,aa|0,ba|0)|0;ca=oe(ba|0,D|0,e|0,ca|0)|0;c=oe(ca|0,D|0,i|0,c|0)|0;_=le(c|0,D|0,s|0,_|0)|0;_=oe(_|0,D|0,H|0,G|0)|0;s=D;G=Pd(H|0,G|0,21)|0;H=D;c=oe(n|0,g|0,1048576,0)|0;c=Dd(c|0,D|0,21)|0;i=D;la=oe(v|0,q|0,ka|0,la|0)|0;J=oe(la|0,D|0,C|0,J|0)|0;La=oe(J|0,D|0,Ka|0,La|0)|0;A=oe(La|0,D|0,w|0,A|0)|0;ea=le(A|0,D|0,l|0,ea|0)|0;ea=oe(ea|0,D|0,c|0,i|0)|0;l=D;i=Pd(c|0,i|0,21)|0;i=le(n|0,g|0,i|0,D|0)|0;g=D;n=oe(ja|0,F|0,1048576,0)|0;n=Dd(n|0,D|0,21)|0;c=D;Na=oe(I|0,o|0,ga|0,Na|0)|0;z=oe(Na|0,D|0,r|0,z|0)|0;fa=le(z|0,D|0,$|0,fa|0)|0;fa=oe(fa|0,D|0,n|0,c|0)|0;$=D;c=Pd(n|0,c|0,21)|0;c=le(ja|0,F|0,c|0,D|0)|0;F=D;ja=oe(oa|0,p|0,1048576,0)|0;ja=Dd(ja|0,D|0,21)|0;n=D;Ma=oe(ja|0,n|0,ha|0,Ma|0)|0;ha=D;n=Pd(ja|0,n|0,21)|0;n=le(oa|0,p|0,n|0,D|0)|0;p=D;oa=oe(m|0,k|0,1048576,0)|0;oa=Dd(oa|0,D|0,21)|0;ja=D;z=Pd(oa|0,ja|0,21)|0;r=D;Na=oe(E|0,t|0,1048576,0)|0;Na=Dd(Na|0,D|0,21)|0;ga=D;o=Pd(Na|0,ga|0,21)|0;I=D;A=oe(_|0,s|0,1048576,0)|0;A=Dd(A|0,D|0,21)|0;w=D;g=oe(A|0,w|0,i|0,g|0)|0;i=D;w=Pd(A|0,w|0,21)|0;w=le(_|0,s|0,w|0,D|0)|0;s=D;_=oe(ea|0,l|0,1048576,0)|0;_=Dd(_|0,D|0,21)|0;A=D;F=oe(_|0,A|0,c|0,F|0)|0;c=D;A=Pd(_|0,A|0,21)|0;A=le(ea|0,l|0,A|0,D|0)|0;l=D;ea=oe(fa|0,$|0,1048576,0)|0;ea=Dd(ea|0,D|0,21)|0;_=D;p=oe(ea|0,_|0,n|0,p|0)|0;n=D;_=Pd(ea|0,_|0,21)|0;_=le(fa|0,$|0,_|0,D|0)|0;$=D;fa=Ed(Ma|0,ha|0,666643,0)|0;ea=D;La=Ed(Ma|0,ha|0,470296,0)|0;Ka=D;J=Ed(Ma|0,ha|0,654183,0)|0;C=D;la=Ed(Ma|0,ha|0,-997805,-1)|0;ka=D;q=Ed(Ma|0,ha|0,136657,0)|0;v=D;ha=Ed(Ma|0,ha|0,-683901,-1)|0;ha=oe(Na|0,ga|0,ha|0,D|0)|0;ta=oe(ha|0,D|0,sa|0,ta|0)|0;H=le(ta|0,D|0,G|0,H|0)|0;G=D;ta=Ed(p|0,n|0,666643,0)|0;sa=D;ha=Ed(p|0,n|0,470296,0)|0;ga=D;Na=Ed(p|0,n|0,654183,0)|0;Ma=D;ca=Ed(p|0,n|0,-997805,-1)|0;e=D;ba=Ed(p|0,n|0,136657,0)|0;aa=D;n=Ed(p|0,n|0,-683901,-1)|0;p=D;pa=Ed(_|0,$|0,666643,0)|0;pa=oe(ra|0,ia|0,pa|0,D|0)|0;ia=D;ra=Ed(_|0,$|0,470296,0)|0;qa=D;Q=Ed(_|0,$|0,654183,0)|0;R=D;Ja=Ed(_|0,$|0,-997805,-1)|0;Ia=D;j=Ed(_|0,$|0,136657,0)|0;f=D;$=Ed(_|0,$|0,-683901,-1)|0;_=D;ka=oe(ba|0,aa|0,la|0,ka|0)|0;_=oe(ka|0,D|0,$|0,_|0)|0;ja=oe(_|0,D|0,oa|0,ja|0)|0;X=oe(ja|0,D|0,da|0,X|0)|0;B=le(X|0,D|0,h|0,B|0)|0;h=D;X=Ed(F|0,c|0,666643,0)|0;da=D;ja=Ed(F|0,c|0,470296,0)|0;ja=oe(pa|0,ia|0,ja|0,D|0)|0;ia=D;pa=Ed(F|0,c|0,654183,0)|0;oa=D;_=Ed(F|0,c|0,-997805,-1)|0;$=D;ka=Ed(F|0,c|0,136657,0)|0;la=D;c=Ed(F|0,c|0,-683901,-1)|0;F=D;aa=Ed(A|0,l|0,666643,0)|0;ba=D;Y=Ed(A|0,l|0,470296,0)|0;Z=D;U=Ed(A|0,l|0,654183,0)|0;V=D;O=Ed(A|0,l|0,-997805,-1)|0;P=D;K=Ed(A|0,l|0,136657,0)|0;L=D;l=Ed(A|0,l|0,-683901,-1)|0;A=D;Ka=oe(Na|0,Ma|0,La|0,Ka|0)|0;Ia=oe(Ka|0,D|0,Ja|0,Ia|0)|0;Ga=oe(Ia|0,D|0,Ha|0,Ga|0)|0;M=le(Ga|0,D|0,N|0,M|0)|0;la=oe(M|0,D|0,ka|0,la|0)|0;A=oe(la|0,D|0,l|0,A|0)|0;l=D;la=Ed(g|0,i|0,666643,0)|0;W=oe(la|0,D|0,x|0,W|0)|0;x=D;la=Ed(g|0,i|0,470296,0)|0;ka=D;M=Ed(g|0,i|0,654183,0)|0;N=D;Ca=oe(Fa|0,Ea|0,Da|0,Ca|0)|0;Aa=le(Ca|0,D|0,Ba|0,Aa|0)|0;da=oe(Aa|0,D|0,X|0,da|0)|0;N=oe(da|0,D|0,M|0,N|0)|0;Z=oe(N|0,D|0,Y|0,Z|0)|0;Y=D;N=Ed(g|0,i|0,-997805,-1)|0;M=D;da=Ed(g|0,i|0,136657,0)|0;X=D;wa=oe(za|0,ya|0,xa|0,wa|0)|0;ua=le(wa|0,D|0,va|0,ua|0)|0;sa=oe(ua|0,D|0,ta|0,sa|0)|0;qa=oe(sa|0,D|0,ra|0,qa|0)|0;oa=oe(qa|0,D|0,pa|0,oa|0)|0;X=oe(oa|0,D|0,da|0,X|0)|0;P=oe(X|0,D|0,O|0,P|0)|0;O=D;i=Ed(g|0,i|0,-683901,-1)|0;g=D;X=oe(W|0,x|0,1048576,0)|0;X=Dd(X|0,D|0,21)|0;da=D;ka=oe(na|0,ma|0,la|0,ka|0)|0;ba=oe(ka|0,D|0,aa|0,ba|0)|0;ba=oe(ba|0,D|0,X|0,da|0)|0;aa=D;da=Pd(X|0,da|0,21)|0;da=le(W|0,x|0,da|0,D|0)|0;x=D;W=oe(Z|0,Y|0,1048576,0)|0;W=Dd(W|0,D|0,21)|0;X=D;M=oe(ja|0,ia|0,N|0,M|0)|0;V=oe(M|0,D|0,U|0,V|0)|0;V=oe(V|0,D|0,W|0,X|0)|0;U=D;X=Pd(W|0,X|0,21)|0;W=D;M=oe(P|0,O|0,1048576,0)|0;M=Dd(M|0,D|0,21)|0;N=D;ea=oe(ha|0,ga|0,fa|0,ea|0)|0;u=oe(ea|0,D|0,y|0,u|0)|0;R=oe(u|0,D|0,Q|0,R|0)|0;T=le(R|0,D|0,S|0,T|0)|0;$=oe(T|0,D|0,_|0,$|0)|0;g=oe($|0,D|0,i|0,g|0)|0;L=oe(g|0,D|0,K|0,L|0)|0;L=oe(L|0,D|0,M|0,N|0)|0;K=D;N=Pd(M|0,N|0,21)|0;M=D;g=oe(A|0,l|0,1048576,0)|0;g=Dd(g|0,D|0,21)|0;i=D;C=oe(ca|0,e|0,J|0,C|0)|0;f=oe(C|0,D|0,j|0,f|0)|0;k=oe(f|0,D|0,m|0,k|0)|0;r=le(k|0,D|0,z|0,r|0)|0;F=oe(r|0,D|0,c|0,F|0)|0;F=oe(F|0,D|0,g|0,i|0)|0;c=D;i=Pd(g|0,i|0,21)|0;i=le(A|0,l|0,i|0,D|0)|0;l=D;A=oe(B|0,h|0,1048576,0)|0;A=Dd(A|0,D|0,21)|0;g=D;v=oe(n|0,p|0,q|0,v|0)|0;t=oe(v|0,D|0,E|0,t|0)|0;I=le(t|0,D|0,o|0,I|0)|0;I=oe(I|0,D|0,A|0,g|0)|0;o=D;g=Pd(A|0,g|0,21)|0;g=le(B|0,h|0,g|0,D|0)|0;h=D;B=oe(H|0,G|0,1048576,0)|0;B=Dd(B|0,D|0,21)|0;A=D;s=oe(w|0,s|0,B|0,A|0)|0;w=D;A=Pd(B|0,A|0,21)|0;B=D;t=oe(ba|0,aa|0,1048576,0)|0;t=Dd(t|0,D|0,21)|0;E=D;v=Pd(t|0,E|0,21)|0;q=D;p=oe(V|0,U|0,1048576,0)|0;p=Dd(p|0,D|0,21)|0;n=D;r=Pd(p|0,n|0,21)|0;z=D;k=oe(L|0,K|0,1048576,0)|0;k=Dd(k|0,D|0,21)|0;m=D;l=oe(i|0,l|0,k|0,m|0)|0;i=D;m=Pd(k|0,m|0,21)|0;k=D;f=oe(F|0,c|0,1048576,0)|0;f=Dd(f|0,D|0,21)|0;j=D;h=oe(g|0,h|0,f|0,j|0)|0;g=D;j=Pd(f|0,j|0,21)|0;j=le(F|0,c|0,j|0,D|0)|0;c=D;F=oe(I|0,o|0,1048576,0)|0;F=Dd(F|0,D|0,21)|0;f=D;C=Pd(F|0,f|0,21)|0;C=le(I|0,o|0,C|0,D|0)|0;o=D;I=oe(s|0,w|0,1048576,0)|0;I=Dd(I|0,D|0,21)|0;J=D;e=Pd(I|0,J|0,21)|0;e=le(s|0,w|0,e|0,D|0)|0;w=D;s=Ed(I|0,J|0,666643,0)|0;s=oe(da|0,x|0,s|0,D|0)|0;x=D;da=Ed(I|0,J|0,470296,0)|0;ca=D;$=Ed(I|0,J|0,654183,0)|0;_=D;T=Ed(I|0,J|0,-997805,-1)|0;S=D;R=Ed(I|0,J|0,136657,0)|0;Q=D;J=Ed(I|0,J|0,-683901,-1)|0;I=D;u=Dd(s|0,x|0,21)|0;y=D;aa=oe(da|0,ca|0,ba|0,aa|0)|0;q=le(aa|0,D|0,v|0,q|0)|0;q=oe(q|0,D|0,u|0,y|0)|0;v=D;y=Pd(u|0,y|0,21)|0;y=le(s|0,x|0,y|0,D|0)|0;x=D;s=Dd(q|0,v|0,21)|0;u=D;Y=oe($|0,_|0,Z|0,Y|0)|0;W=le(Y|0,D|0,X|0,W|0)|0;E=oe(W|0,D|0,t|0,E|0)|0;E=oe(E|0,D|0,s|0,u|0)|0;t=D;u=Pd(s|0,u|0,21)|0;u=le(q|0,v|0,u|0,D|0)|0;v=D;q=Dd(E|0,t|0,21)|0;s=D;S=oe(V|0,U|0,T|0,S|0)|0;z=le(S|0,D|0,r|0,z|0)|0;z=oe(z|0,D|0,q|0,s|0)|0;r=D;s=Pd(q|0,s|0,21)|0;s=le(E|0,t|0,s|0,D|0)|0;t=D;E=Dd(z|0,r|0,21)|0;q=D;O=oe(R|0,Q|0,P|0,O|0)|0;M=le(O|0,D|0,N|0,M|0)|0;n=oe(M|0,D|0,p|0,n|0)|0;n=oe(n|0,D|0,E|0,q|0)|0;p=D;q=Pd(E|0,q|0,21)|0;q=le(z|0,r|0,q|0,D|0)|0;r=D;z=Dd(n|0,p|0,21)|0;E=D;I=oe(L|0,K|0,J|0,I|0)|0;k=le(I|0,D|0,m|0,k|0)|0;k=oe(k|0,D|0,z|0,E|0)|0;m=D;E=Pd(z|0,E|0,21)|0;E=le(n|0,p|0,E|0,D|0)|0;p=D;n=Dd(k|0,m|0,21)|0;z=D;i=oe(l|0,i|0,n|0,z|0)|0;l=D;z=Pd(n|0,z|0,21)|0;z=le(k|0,m|0,z|0,D|0)|0;m=D;k=Dd(i|0,l|0,21)|0;n=D;c=oe(k|0,n|0,j|0,c|0)|0;j=D;n=Pd(k|0,n|0,21)|0;n=le(i|0,l|0,n|0,D|0)|0;l=D;i=Dd(c|0,j|0,21)|0;k=D;g=oe(h|0,g|0,i|0,k|0)|0;h=D;k=Pd(i|0,k|0,21)|0;k=le(c|0,j|0,k|0,D|0)|0;j=D;c=Dd(g|0,h|0,21)|0;i=D;o=oe(c|0,i|0,C|0,o|0)|0;C=D;i=Pd(c|0,i|0,21)|0;i=le(g|0,h|0,i|0,D|0)|0;h=D;g=Dd(o|0,C|0,21)|0;c=D;f=oe(H|0,G|0,F|0,f|0)|0;B=le(f|0,D|0,A|0,B|0)|0;B=oe(B|0,D|0,g|0,c|0)|0;A=D;c=Pd(g|0,c|0,21)|0;c=le(o|0,C|0,c|0,D|0)|0;C=D;o=Dd(B|0,A|0,21)|0;g=D;w=oe(o|0,g|0,e|0,w|0)|0;e=D;g=Pd(o|0,g|0,21)|0;g=le(B|0,A|0,g|0,D|0)|0;A=D;B=Dd(w|0,e|0,21)|0;o=D;f=Pd(B|0,o|0,21)|0;f=le(w|0,e|0,f|0,D|0)|0;e=D;w=Ed(B|0,o|0,666643,0)|0;x=oe(w|0,D|0,y|0,x|0)|0;y=D;w=Ed(B|0,o|0,470296,0)|0;w=oe(u|0,v|0,w|0,D|0)|0;v=D;u=Ed(B|0,o|0,654183,0)|0;u=oe(s|0,t|0,u|0,D|0)|0;t=D;s=Ed(B|0,o|0,-997805,-1)|0;s=oe(q|0,r|0,s|0,D|0)|0;r=D;q=Ed(B|0,o|0,136657,0)|0;q=oe(E|0,p|0,q|0,D|0)|0;p=D;o=Ed(B|0,o|0,-683901,-1)|0;o=oe(z|0,m|0,o|0,D|0)|0;m=D;z=Dd(x|0,y|0,21)|0;B=D;v=oe(w|0,v|0,z|0,B|0)|0;w=D;B=Pd(z|0,B|0,21)|0;B=le(x|0,y|0,B|0,D|0)|0;y=D;x=Dd(v|0,w|0,21)|0;z=D;t=oe(u|0,t|0,x|0,z|0)|0;u=D;z=Pd(x|0,z|0,21)|0;z=le(v|0,w|0,z|0,D|0)|0;w=D;v=Dd(t|0,u|0,21)|0;x=D;r=oe(s|0,r|0,v|0,x|0)|0;s=D;x=Pd(v|0,x|0,21)|0;x=le(t|0,u|0,x|0,D|0)|0;u=D;t=Dd(r|0,s|0,21)|0;v=D;p=oe(q|0,p|0,t|0,v|0)|0;q=D;v=Pd(t|0,v|0,21)|0;v=le(r|0,s|0,v|0,D|0)|0;s=D;r=Dd(p|0,q|0,21)|0;t=D;m=oe(o|0,m|0,r|0,t|0)|0;o=D;t=Pd(r|0,t|0,21)|0;t=le(p|0,q|0,t|0,D|0)|0;q=D;p=Dd(m|0,o|0,21)|0;r=D;l=oe(p|0,r|0,n|0,l|0)|0;n=D;r=Pd(p|0,r|0,21)|0;r=le(m|0,o|0,r|0,D|0)|0;o=D;m=Dd(l|0,n|0,21)|0;p=D;j=oe(m|0,p|0,k|0,j|0)|0;k=D;p=Pd(m|0,p|0,21)|0;p=le(l|0,n|0,p|0,D|0)|0;n=D;l=Dd(j|0,k|0,21)|0;m=D;h=oe(l|0,m|0,i|0,h|0)|0;i=D;m=Pd(l|0,m|0,21)|0;m=le(j|0,k|0,m|0,D|0)|0;k=D;j=Dd(h|0,i|0,21)|0;l=D;C=oe(j|0,l|0,c|0,C|0)|0;c=D;l=Pd(j|0,l|0,21)|0;l=le(h|0,i|0,l|0,D|0)|0;i=D;h=Dd(C|0,c|0,21)|0;j=D;A=oe(h|0,j|0,g|0,A|0)|0;g=D;j=Pd(h|0,j|0,21)|0;j=le(C|0,c|0,j|0,D|0)|0;c=D;C=Dd(A|0,g|0,21)|0;h=D;e=oe(C|0,h|0,f|0,e|0)|0;f=D;h=Pd(C|0,h|0,21)|0;h=le(A|0,g|0,h|0,D|0)|0;g=D;a[b>>0]=B;A=Rd(B|0,y|0,8)|0;a[b+1>>0]=A;y=Rd(B|0,y|0,16)|0;B=D;A=Pd(z|0,w|0,5)|0;a[b+2>>0]=A|y;y=Rd(z|0,w|0,3)|0;a[b+3>>0]=y;y=Rd(z|0,w|0,11)|0;a[b+4>>0]=y;w=Rd(z|0,w|0,19)|0;z=D;y=Pd(x|0,u|0,2)|0;a[b+5>>0]=y|w;w=Rd(x|0,u|0,6)|0;a[b+6>>0]=w;u=Rd(x|0,u|0,14)|0;x=D;w=Pd(v|0,s|0,7)|0;a[b+7>>0]=w|u;u=Rd(v|0,s|0,1)|0;a[b+8>>0]=u;u=Rd(v|0,s|0,9)|0;a[b+9>>0]=u;s=Rd(v|0,s|0,17)|0;v=D;u=Pd(t|0,q|0,4)|0;a[b+10>>0]=u|s;s=Rd(t|0,q|0,4)|0;a[b+11>>0]=s;s=Rd(t|0,q|0,12)|0;a[b+12>>0]=s;q=Rd(t|0,q|0,20)|0;t=D;s=Pd(r|0,o|0,1)|0;a[b+13>>0]=s|q;q=Rd(r|0,o|0,7)|0;a[b+14>>0]=q;o=Rd(r|0,o|0,15)|0;r=D;q=Pd(p|0,n|0,6)|0;a[b+15>>0]=q|o;o=Rd(p|0,n|0,2)|0;a[b+16>>0]=o;o=Rd(p|0,n|0,10)|0;a[b+17>>0]=o;n=Rd(p|0,n|0,18)|0;p=D;o=Pd(m|0,k|0,3)|0;a[b+18>>0]=o|n;n=Rd(m|0,k|0,5)|0;a[b+19>>0]=n;k=Rd(m|0,k|0,13)|0;a[b+20>>0]=k;a[b+21>>0]=l;k=Rd(l|0,i|0,8)|0;a[b+22>>0]=k;i=Rd(l|0,i|0,16)|0;l=D;k=Pd(j|0,c|0,5)|0;a[b+23>>0]=k|i;i=Rd(j|0,c|0,3)|0;a[b+24>>0]=i;i=Rd(j|0,c|0,11)|0;a[b+25>>0]=i;c=Rd(j|0,c|0,19)|0;j=D;i=Pd(h|0,g|0,2)|0;a[b+26>>0]=i|c;c=Rd(h|0,g|0,6)|0;a[b+27>>0]=c;g=Rd(h|0,g|0,14)|0;h=D;c=Pd(e|0,f|0,7)|0;a[b+28>>0]=g|c;c=Rd(e|0,f|0,1)|0;a[b+29>>0]=c;c=Rd(e|0,f|0,9)|0;a[b+30>>0]=c;f=Rd(e|0,f|0,17)|0;a[b+31>>0]=f;return}function ka(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=i;g=i=i+63&-64;i=i+304|0;e=0;do{h=b+(e<<2)|0;c[g+40+(e<<2)>>2]=(d[h+2>>0]|0)<<8|(d[h+3>>0]|0)|(d[h+1>>0]|0)<<16|(d[h>>0]|0)<<24;e=e+1|0}while((e|0)!=16);e=16;b=c[g+40>>2]|0;do{h=c[g+40+(e+-2<<2)>>2]|0;j=b;b=c[g+40+(e+-15<<2)>>2]|0;c[g+40+(e<<2)>>2]=j+(c[g+40+(e+-7<<2)>>2]|0)+((h>>>19|h<<13)^h>>>10^(h>>>17|h<<15))+((b>>>18|b<<14)^b>>>3^(b>>>7|b<<25));e=e+1|0}while((e|0)!=64);c[g+8>>2]=c[a>>2];c[g+8+4>>2]=c[a+4>>2];c[g+8+8>>2]=c[a+8>>2];c[g+8+12>>2]=c[a+12>>2];c[g+8+16>>2]=c[a+16>>2];c[g+8+20>>2]=c[a+20>>2];c[g+8+24>>2]=c[a+24>>2];c[g+8+28>>2]=c[a+28>>2];x=g+8+28|0;k=g+8+16|0;p=c[k>>2]|0;v=g+8+20|0;n=c[v>>2]|0;j=g+8+24|0;y=c[j>>2]|0;b=(c[x>>2]|0)+1116352408+(c[g+40>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((y^n)&p^y)|0;l=c[g+8>>2]|0;t=g+8+4|0;o=c[t>>2]|0;w=g+8+8|0;q=c[w>>2]|0;h=g+8+12|0;e=(c[h>>2]|0)+b|0;c[h>>2]=e;c[x>>2]=((q|o)&l|q&o)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+b;p=y+1899447441+((e>>>6|e<<26)^(e>>>11|e<<21)^(e>>>25|e<<7))+(c[g+40+4>>2]|0)+((n^p)&e^n)|0;c[w>>2]=q+p;y=((o|l)&((q|o)&l|q&o)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+b|o&l)+(((((q|o)&l|q&o)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+b|0)>>>2|((q|o)&l|q&o)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+b<<30)^((((q|o)&l|q&o)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+b|0)>>>13|((q|o)&l|q&o)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+b<<19)^((((q|o)&l|q&o)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+b|0)>>>22|((q|o)&l|q&o)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+b<<10))+p|0;c[j>>2]=y;r=c[k>>2]|0;n=n+-1245643825+(((q+p|0)>>>6|q+p<<26)^((q+p|0)>>>11|q+p<<21)^((q+p|0)>>>25|q+p<<7))+(c[g+40+8>>2]|0)+((r^e)&q+p^r)|0;c[t>>2]=o+n;b=((l|((q|o)&l|q&o)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+b)&y|l&((q|o)&l|q&o)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+b)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+n|0;c[v>>2]=b;r=r+-373957723+(((o+n|0)>>>6|o+n<<26)^((o+n|0)>>>11|o+n<<21)^((o+n|0)>>>25|o+n<<7))+(c[g+40+12>>2]|0)+((e^q+p)&o+n^e)|0;s=c[x>>2]|0;c[g+8>>2]=l+r;c[k>>2]=((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r;e=e+961987163+(((l+r|0)>>>6|l+r<<26)^((l+r|0)>>>11|l+r<<21)^((l+r|0)>>>25|l+r<<7))+(c[g+40+16>>2]|0)+((q+p^o+n)&l+r^q+p)|0;m=c[j>>2]|0;c[x>>2]=s+e;u=((m|b)&((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|m&b)+(((((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>2|((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<30)^((((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>13|((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<19)^((((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>22|((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<10))+e|0;c[h>>2]=u;p=q+p+1508970993+(((s+e|0)>>>6|s+e<<26)^((s+e|0)>>>11|s+e<<21)^((s+e|0)>>>25|s+e<<7))+(c[g+40+20>>2]|0)+((o+n^l+r)&s+e^o+n)|0;q=c[v>>2]|0;c[j>>2]=m+p;b=((q|((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r)&u|q&((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+p|0;c[w>>2]=b;n=o+n+-1841331548+(((m+p|0)>>>6|m+p<<26)^((m+p|0)>>>11|m+p<<21)^((m+p|0)>>>25|m+p<<7))+(c[g+40+24>>2]|0)+((l+r^s+e)&m+p^l+r)|0;o=c[k>>2]|0;c[v>>2]=q+n;c[t>>2]=((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n;r=l+r+-1424204075+(((q+n|0)>>>6|q+n<<26)^((q+n|0)>>>11|q+n<<21)^((q+n|0)>>>25|q+n<<7))+(c[g+40+28>>2]|0)+((s+e^m+p)&q+n^s+e)|0;l=c[h>>2]|0;c[k>>2]=o+r;y=((l|b)&((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|l&b)+(((((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>2|((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<30)^((((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>13|((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<19)^((((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>22|((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<10))+r|0;c[g+8>>2]=y;e=s+e+-670586216+(((o+r|0)>>>6|o+r<<26)^((o+r|0)>>>11|o+r<<21)^((o+r|0)>>>25|o+r<<7))+(c[g+40+32>>2]|0)+((m+p^q+n)&o+r^m+p)|0;s=c[w>>2]|0;c[h>>2]=l+e;b=((s|((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n)&y|s&((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+e|0;c[x>>2]=b;p=m+p+310598401+(((l+e|0)>>>6|l+e<<26)^((l+e|0)>>>11|l+e<<21)^((l+e|0)>>>25|l+e<<7))+(c[g+40+36>>2]|0)+((q+n^o+r)&l+e^q+n)|0;m=c[t>>2]|0;c[w>>2]=s+p;c[j>>2]=((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p;n=q+n+607225278+(((s+p|0)>>>6|s+p<<26)^((s+p|0)>>>11|s+p<<21)^((s+p|0)>>>25|s+p<<7))+(c[g+40+40>>2]|0)+((o+r^l+e)&s+p^o+r)|0;q=c[g+8>>2]|0;c[t>>2]=m+n;u=((q|b)&((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|q&b)+(((((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>2|((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<30)^((((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>13|((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<19)^((((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>22|((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<10))+n|0;c[v>>2]=u;r=o+r+1426881987+(((m+n|0)>>>6|m+n<<26)^((m+n|0)>>>11|m+n<<21)^((m+n|0)>>>25|m+n<<7))+(c[g+40+44>>2]|0)+((l+e^s+p)&m+n^l+e)|0;o=c[x>>2]|0;c[g+8>>2]=q+r;b=((o|((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p)&u|o&((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+r|0;c[k>>2]=b;e=l+e+1925078388+(((q+r|0)>>>6|q+r<<26)^((q+r|0)>>>11|q+r<<21)^((q+r|0)>>>25|q+r<<7))+(c[g+40+48>>2]|0)+((s+p^m+n)&q+r^s+p)|0;l=c[j>>2]|0;c[x>>2]=o+e;c[h>>2]=((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e;p=s+p+-2132889090+(((o+e|0)>>>6|o+e<<26)^((o+e|0)>>>11|o+e<<21)^((o+e|0)>>>25|o+e<<7))+(c[g+40+52>>2]|0)+((m+n^q+r)&o+e^m+n)|0;s=c[v>>2]|0;c[j>>2]=l+p;y=((s|b)&((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|s&b)+(((((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>2|((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<30)^((((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>13|((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<19)^((((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>22|((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<10))+p|0;c[w>>2]=y;n=m+n+-1680079193+(((l+p|0)>>>6|l+p<<26)^((l+p|0)>>>11|l+p<<21)^((l+p|0)>>>25|l+p<<7))+(c[g+40+56>>2]|0)+((q+r^o+e)&l+p^q+r)|0;m=c[k>>2]|0;c[v>>2]=s+n;b=((m|((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e)&y|m&((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+n|0;c[t>>2]=b;r=q+r+-1046744716+(((s+n|0)>>>6|s+n<<26)^((s+n|0)>>>11|s+n<<21)^((s+n|0)>>>25|s+n<<7))+(c[g+40+60>>2]|0)+((o+e^l+p)&s+n^o+e)|0;q=c[h>>2]|0;c[k>>2]=m+r;c[g+8>>2]=((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r;e=o+e+-459576895+(((m+r|0)>>>6|m+r<<26)^((m+r|0)>>>11|m+r<<21)^((m+r|0)>>>25|m+r<<7))+(c[g+40+64>>2]|0)+((l+p^s+n)&m+r^l+p)|0;o=c[w>>2]|0;c[h>>2]=q+e;u=((o|b)&((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|o&b)+(((((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>2|((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<30)^((((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>13|((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<19)^((((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>22|((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<10))+e|0;c[x>>2]=u;p=l+p+-272742522+(((q+e|0)>>>6|q+e<<26)^((q+e|0)>>>11|q+e<<21)^((q+e|0)>>>25|q+e<<7))+(c[g+40+68>>2]|0)+((s+n^m+r)&q+e^s+n)|0;l=c[t>>2]|0;c[w>>2]=o+p;b=((l|((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r)&u|l&((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+p|0;c[j>>2]=b;n=s+n+264347078+(((o+p|0)>>>6|o+p<<26)^((o+p|0)>>>11|o+p<<21)^((o+p|0)>>>25|o+p<<7))+(c[g+40+72>>2]|0)+((m+r^q+e)&o+p^m+r)|0;s=c[g+8>>2]|0;c[t>>2]=l+n;c[v>>2]=((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n;r=m+r+604807628+(((l+n|0)>>>6|l+n<<26)^((l+n|0)>>>11|l+n<<21)^((l+n|0)>>>25|l+n<<7))+(c[g+40+76>>2]|0)+((q+e^o+p)&l+n^q+e)|0;m=c[x>>2]|0;c[g+8>>2]=s+r;y=((m|b)&((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|m&b)+(((((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>2|((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<30)^((((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>13|((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<19)^((((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>22|((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<10))+r|0;c[k>>2]=y;e=q+e+770255983+(((s+r|0)>>>6|s+r<<26)^((s+r|0)>>>11|s+r<<21)^((s+r|0)>>>25|s+r<<7))+(c[g+40+80>>2]|0)+((o+p^l+n)&s+r^o+p)|0;q=c[j>>2]|0;c[x>>2]=m+e;b=((q|((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n)&y|q&((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+e|0;c[h>>2]=b;p=o+p+1249150122+(((m+e|0)>>>6|m+e<<26)^((m+e|0)>>>11|m+e<<21)^((m+e|0)>>>25|m+e<<7))+(c[g+40+84>>2]|0)+((l+n^s+r)&m+e^l+n)|0;o=c[v>>2]|0;c[j>>2]=q+p;c[w>>2]=((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p;n=l+n+1555081692+(((q+p|0)>>>6|q+p<<26)^((q+p|0)>>>11|q+p<<21)^((q+p|0)>>>25|q+p<<7))+(c[g+40+88>>2]|0)+((s+r^m+e)&q+p^s+r)|0;l=c[k>>2]|0;c[v>>2]=o+n;u=((l|b)&((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|l&b)+(((((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>2|((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<30)^((((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>13|((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<19)^((((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>22|((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<10))+n|0;c[t>>2]=u;r=s+r+1996064986+(((o+n|0)>>>6|o+n<<26)^((o+n|0)>>>11|o+n<<21)^((o+n|0)>>>25|o+n<<7))+(c[g+40+92>>2]|0)+((m+e^q+p)&o+n^m+e)|0;s=c[h>>2]|0;c[k>>2]=l+r;b=((s|((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p)&u|s&((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+r|0;c[g+8>>2]=b;e=m+e+-1740746414+(((l+r|0)>>>6|l+r<<26)^((l+r|0)>>>11|l+r<<21)^((l+r|0)>>>25|l+r<<7))+(c[g+40+96>>2]|0)+((q+p^o+n)&l+r^q+p)|0;m=c[w>>2]|0;c[h>>2]=s+e;c[x>>2]=((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e;p=q+p+-1473132947+(((s+e|0)>>>6|s+e<<26)^((s+e|0)>>>11|s+e<<21)^((s+e|0)>>>25|s+e<<7))+(c[g+40+100>>2]|0)+((o+n^l+r)&s+e^o+n)|0;q=c[t>>2]|0;c[w>>2]=m+p;y=((q|b)&((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|q&b)+(((((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>2|((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<30)^((((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>13|((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<19)^((((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>22|((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<10))+p|0;c[j>>2]=y;n=o+n+-1341970488+(((m+p|0)>>>6|m+p<<26)^((m+p|0)>>>11|m+p<<21)^((m+p|0)>>>25|m+p<<7))+(c[g+40+104>>2]|0)+((l+r^s+e)&m+p^l+r)|0;o=c[g+8>>2]|0;c[t>>2]=q+n;b=((o|((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e)&y|o&((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+n|0;c[v>>2]=b;r=l+r+-1084653625+(((q+n|0)>>>6|q+n<<26)^((q+n|0)>>>11|q+n<<21)^((q+n|0)>>>25|q+n<<7))+(c[g+40+108>>2]|0)+((s+e^m+p)&q+n^s+e)|0;l=c[x>>2]|0;c[g+8>>2]=o+r;c[k>>2]=((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r;e=s+e+-958395405+(((o+r|0)>>>6|o+r<<26)^((o+r|0)>>>11|o+r<<21)^((o+r|0)>>>25|o+r<<7))+(c[g+40+112>>2]|0)+((m+p^q+n)&o+r^m+p)|0;s=c[j>>2]|0;c[x>>2]=l+e;u=((s|b)&((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|s&b)+(((((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>2|((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<30)^((((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>13|((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<19)^((((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>22|((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<10))+e|0;c[h>>2]=u;p=m+p+-710438585+(((l+e|0)>>>6|l+e<<26)^((l+e|0)>>>11|l+e<<21)^((l+e|0)>>>25|l+e<<7))+(c[g+40+116>>2]|0)+((q+n^o+r)&l+e^q+n)|0;m=c[v>>2]|0;c[j>>2]=s+p;b=((m|((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r)&u|m&((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+p|0;c[w>>2]=b;n=q+n+113926993+(((s+p|0)>>>6|s+p<<26)^((s+p|0)>>>11|s+p<<21)^((s+p|0)>>>25|s+p<<7))+(c[g+40+120>>2]|0)+((o+r^l+e)&s+p^o+r)|0;q=c[k>>2]|0;c[v>>2]=m+n;c[t>>2]=((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n;r=o+r+338241895+(((m+n|0)>>>6|m+n<<26)^((m+n|0)>>>11|m+n<<21)^((m+n|0)>>>25|m+n<<7))+(c[g+40+124>>2]|0)+((l+e^s+p)&m+n^l+e)|0;o=c[h>>2]|0;c[k>>2]=q+r;y=((o|b)&((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|o&b)+(((((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>2|((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<30)^((((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>13|((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<19)^((((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>22|((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<10))+r|0;c[g+8>>2]=y;e=l+e+666307205+(((q+r|0)>>>6|q+r<<26)^((q+r|0)>>>11|q+r<<21)^((q+r|0)>>>25|q+r<<7))+(c[g+40+128>>2]|0)+((s+p^m+n)&q+r^s+p)|0;l=c[w>>2]|0;c[h>>2]=o+e;b=((l|((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n)&y|l&((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+e|0;c[x>>2]=b;p=s+p+773529912+(((o+e|0)>>>6|o+e<<26)^((o+e|0)>>>11|o+e<<21)^((o+e|0)>>>25|o+e<<7))+(c[g+40+132>>2]|0)+((m+n^q+r)&o+e^m+n)|0;s=c[t>>2]|0;c[w>>2]=l+p;c[j>>2]=((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p;n=m+n+1294757372+(((l+p|0)>>>6|l+p<<26)^((l+p|0)>>>11|l+p<<21)^((l+p|0)>>>25|l+p<<7))+(c[g+40+136>>2]|0)+((q+r^o+e)&l+p^q+r)|0;m=c[g+8>>2]|0;c[t>>2]=s+n;u=((m|b)&((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|m&b)+(((((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>2|((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<30)^((((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>13|((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<19)^((((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>22|((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<10))+n|0;c[v>>2]=u;r=q+r+1396182291+(((s+n|0)>>>6|s+n<<26)^((s+n|0)>>>11|s+n<<21)^((s+n|0)>>>25|s+n<<7))+(c[g+40+140>>2]|0)+((o+e^l+p)&s+n^o+e)|0;q=c[x>>2]|0;c[g+8>>2]=m+r;b=((q|((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p)&u|q&((s|y)&b|s&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+r|0;c[k>>2]=b;e=o+e+1695183700+(((m+r|0)>>>6|m+r<<26)^((m+r|0)>>>11|m+r<<21)^((m+r|0)>>>25|m+r<<7))+(c[g+40+144>>2]|0)+((l+p^s+n)&m+r^l+p)|0;o=c[j>>2]|0;c[x>>2]=q+e;c[h>>2]=((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e;p=l+p+1986661051+(((q+e|0)>>>6|q+e<<26)^((q+e|0)>>>11|q+e<<21)^((q+e|0)>>>25|q+e<<7))+(c[g+40+148>>2]|0)+((s+n^m+r)&q+e^s+n)|0;l=c[v>>2]|0;c[j>>2]=o+p;y=((l|b)&((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|l&b)+(((((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>2|((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<30)^((((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>13|((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<19)^((((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>22|((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<10))+p|0;c[w>>2]=y;n=s+n+-2117940946+(((o+p|0)>>>6|o+p<<26)^((o+p|0)>>>11|o+p<<21)^((o+p|0)>>>25|o+p<<7))+(c[g+40+152>>2]|0)+((m+r^q+e)&o+p^m+r)|0;s=c[k>>2]|0;c[v>>2]=l+n;b=((s|((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e)&y|s&((o|u)&b|o&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+n|0;c[t>>2]=b;r=m+r+-1838011259+(((l+n|0)>>>6|l+n<<26)^((l+n|0)>>>11|l+n<<21)^((l+n|0)>>>25|l+n<<7))+(c[g+40+156>>2]|0)+((q+e^o+p)&l+n^q+e)|0;m=c[h>>2]|0;c[k>>2]=s+r;c[g+8>>2]=((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r;e=q+e+-1564481375+(((s+r|0)>>>6|s+r<<26)^((s+r|0)>>>11|s+r<<21)^((s+r|0)>>>25|s+r<<7))+(c[g+40+160>>2]|0)+((o+p^l+n)&s+r^o+p)|0;q=c[w>>2]|0;c[h>>2]=m+e;u=((q|b)&((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|q&b)+(((((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>2|((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<30)^((((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>13|((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<19)^((((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>22|((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<10))+e|0;c[x>>2]=u;p=o+p+-1474664885+(((m+e|0)>>>6|m+e<<26)^((m+e|0)>>>11|m+e<<21)^((m+e|0)>>>25|m+e<<7))+(c[g+40+164>>2]|0)+((l+n^s+r)&m+e^l+n)|0;o=c[t>>2]|0;c[w>>2]=q+p;b=((o|((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r)&u|o&((m|y)&b|m&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+p|0;c[j>>2]=b;n=l+n+-1035236496+(((q+p|0)>>>6|q+p<<26)^((q+p|0)>>>11|q+p<<21)^((q+p|0)>>>25|q+p<<7))+(c[g+40+168>>2]|0)+((s+r^m+e)&q+p^s+r)|0;l=c[g+8>>2]|0;c[t>>2]=o+n;c[v>>2]=((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n;r=s+r+-949202525+(((o+n|0)>>>6|o+n<<26)^((o+n|0)>>>11|o+n<<21)^((o+n|0)>>>25|o+n<<7))+(c[g+40+172>>2]|0)+((m+e^q+p)&o+n^m+e)|0;s=c[x>>2]|0;c[g+8>>2]=l+r;y=((s|b)&((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|s&b)+(((((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>2|((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<30)^((((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>13|((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<19)^((((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>22|((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<10))+r|0;c[k>>2]=y;e=m+e+-778901479+(((l+r|0)>>>6|l+r<<26)^((l+r|0)>>>11|l+r<<21)^((l+r|0)>>>25|l+r<<7))+(c[g+40+176>>2]|0)+((q+p^o+n)&l+r^q+p)|0;m=c[j>>2]|0;c[x>>2]=s+e;b=((m|((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n)&y|m&((l|u)&b|l&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+e|0;c[h>>2]=b;p=q+p+-694614492+(((s+e|0)>>>6|s+e<<26)^((s+e|0)>>>11|s+e<<21)^((s+e|0)>>>25|s+e<<7))+(c[g+40+180>>2]|0)+((o+n^l+r)&s+e^o+n)|0;q=c[v>>2]|0;c[j>>2]=m+p;c[w>>2]=((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p;n=o+n+-200395387+(((m+p|0)>>>6|m+p<<26)^((m+p|0)>>>11|m+p<<21)^((m+p|0)>>>25|m+p<<7))+(c[g+40+184>>2]|0)+((l+r^s+e)&m+p^l+r)|0;o=c[k>>2]|0;c[v>>2]=q+n;u=((o|b)&((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|o&b)+(((((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>2|((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<30)^((((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>13|((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<19)^((((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>22|((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<10))+n|0;c[t>>2]=u;r=l+r+275423344+(((q+n|0)>>>6|q+n<<26)^((q+n|0)>>>11|q+n<<21)^((q+n|0)>>>25|q+n<<7))+(c[g+40+188>>2]|0)+((s+e^m+p)&q+n^s+e)|0;l=c[h>>2]|0;c[k>>2]=o+r;b=((l|((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p)&u|l&((q|y)&b|q&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+r|0;c[g+8>>2]=b;e=s+e+430227734+(((o+r|0)>>>6|o+r<<26)^((o+r|0)>>>11|o+r<<21)^((o+r|0)>>>25|o+r<<7))+(c[g+40+192>>2]|0)+((m+p^q+n)&o+r^m+p)|0;s=c[w>>2]|0;c[h>>2]=l+e;c[x>>2]=((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e;p=m+p+506948616+(((l+e|0)>>>6|l+e<<26)^((l+e|0)>>>11|l+e<<21)^((l+e|0)>>>25|l+e<<7))+(c[g+40+196>>2]|0)+((q+n^o+r)&l+e^q+n)|0;m=c[t>>2]|0;c[w>>2]=s+p;y=((m|b)&((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|m&b)+(((((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>2|((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<30)^((((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>13|((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<19)^((((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>22|((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<10))+p|0;c[j>>2]=y;n=q+n+659060556+(((s+p|0)>>>6|s+p<<26)^((s+p|0)>>>11|s+p<<21)^((s+p|0)>>>25|s+p<<7))+(c[g+40+200>>2]|0)+((o+r^l+e)&s+p^o+r)|0;q=c[g+8>>2]|0;c[t>>2]=m+n;b=((q|((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e)&y|q&((s|u)&b|s&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+n|0;c[v>>2]=b;r=o+r+883997877+(((m+n|0)>>>6|m+n<<26)^((m+n|0)>>>11|m+n<<21)^((m+n|0)>>>25|m+n<<7))+(c[g+40+204>>2]|0)+((l+e^s+p)&m+n^l+e)|0;o=c[x>>2]|0;c[g+8>>2]=q+r;c[k>>2]=((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r;e=l+e+958139571+(((q+r|0)>>>6|q+r<<26)^((q+r|0)>>>11|q+r<<21)^((q+r|0)>>>25|q+r<<7))+(c[g+40+208>>2]|0)+((s+p^m+n)&q+r^s+p)|0;l=c[j>>2]|0;c[x>>2]=o+e;u=((l|b)&((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|l&b)+(((((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>2|((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<30)^((((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>13|((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<19)^((((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r|0)>>>22|((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r<<10))+e|0;c[h>>2]=u;p=s+p+1322822218+(((o+e|0)>>>6|o+e<<26)^((o+e|0)>>>11|o+e<<21)^((o+e|0)>>>25|o+e<<7))+(c[g+40+212>>2]|0)+((m+n^q+r)&o+e^m+n)|0;s=c[v>>2]|0;c[j>>2]=l+p;b=((s|((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r)&u|s&((o|y)&b|o&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+r)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+p|0;c[w>>2]=b;n=m+n+1537002063+(((l+p|0)>>>6|l+p<<26)^((l+p|0)>>>11|l+p<<21)^((l+p|0)>>>25|l+p<<7))+(c[g+40+216>>2]|0)+((q+r^o+e)&l+p^q+r)|0;m=c[k>>2]|0;c[v>>2]=s+n;c[t>>2]=((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n;r=q+r+1747873779+(((s+n|0)>>>6|s+n<<26)^((s+n|0)>>>11|s+n<<21)^((s+n|0)>>>25|s+n<<7))+(c[g+40+220>>2]|0)+((o+e^l+p)&s+n^o+e)|0;q=c[h>>2]|0;c[k>>2]=m+r;y=((q|b)&((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|q&b)+(((((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>2|((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<30)^((((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>13|((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<19)^((((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n|0)>>>22|((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n<<10))+r|0;c[g+8>>2]=y;e=o+e+1955562222+(((m+r|0)>>>6|m+r<<26)^((m+r|0)>>>11|m+r<<21)^((m+r|0)>>>25|m+r<<7))+(c[g+40+224>>2]|0)+((l+p^s+n)&m+r^l+p)|0;o=c[w>>2]|0;c[h>>2]=q+e;b=((o|((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n)&y|o&((m|u)&b|m&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+n)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+e|0;c[x>>2]=b;p=l+p+2024104815+(((q+e|0)>>>6|q+e<<26)^((q+e|0)>>>11|q+e<<21)^((q+e|0)>>>25|q+e<<7))+(c[g+40+228>>2]|0)+((s+n^m+r)&q+e^s+n)|0;l=c[t>>2]|0;c[w>>2]=o+p;c[j>>2]=((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p;n=s+n+-2067236844+(((o+p|0)>>>6|o+p<<26)^((o+p|0)>>>11|o+p<<21)^((o+p|0)>>>25|o+p<<7))+(c[g+40+232>>2]|0)+((m+r^q+e)&o+p^m+r)|0;s=c[g+8>>2]|0;c[t>>2]=l+n;u=((s|b)&((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|s&b)+(((((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>2|((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<30)^((((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>13|((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<19)^((((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p|0)>>>22|((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p<<10))+n|0;c[v>>2]=u;r=m+r+-1933114872+(((l+n|0)>>>6|l+n<<26)^((l+n|0)>>>11|l+n<<21)^((l+n|0)>>>25|l+n<<7))+(c[g+40+236>>2]|0)+((q+e^o+p)&l+n^q+e)|0;m=c[x>>2]|0;c[g+8>>2]=s+r;b=((m|((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p)&u|m&((l|y)&b|l&y)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+p)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+r|0;c[k>>2]=b;e=q+e+-1866530822+(((s+r|0)>>>6|s+r<<26)^((s+r|0)>>>11|s+r<<21)^((s+r|0)>>>25|s+r<<7))+(c[g+40+240>>2]|0)+((o+p^l+n)&s+r^o+p)|0;q=c[j>>2]|0;c[x>>2]=m+e;c[h>>2]=((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e;p=o+p+-1538233109+(((m+e|0)>>>6|m+e<<26)^((m+e|0)>>>11|m+e<<21)^((m+e|0)>>>25|m+e<<7))+(c[g+40+244>>2]|0)+((l+n^s+r)&m+e^l+n)|0;o=c[v>>2]|0;c[j>>2]=q+p;j=((o|b)&((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|o&b)+(((((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>2|((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<30)^((((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>13|((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<19)^((((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0)>>>22|((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e<<10))+p|0;c[w>>2]=j;n=l+n+-1090935817+(((q+p|0)>>>6|q+p<<26)^((q+p|0)>>>11|q+p<<21)^((q+p|0)>>>25|q+p<<7))+(c[g+40+248>>2]|0)+((s+r^m+e)&q+p^s+r)|0;l=c[k>>2]|0;c[v>>2]=o+n;b=((l|((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e)&j|l&((q|u)&b|q&u)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e)+((j>>>2|j<<30)^(j>>>13|j<<19)^(j>>>22|j<<10))+n|0;c[t>>2]=b;e=s+r+-965641998+(((o+n|0)>>>6|o+n<<26)^((o+n|0)>>>11|o+n<<21)^((o+n|0)>>>25|o+n<<7))+(c[g+40+252>>2]|0)+((m+e^q+p)&o+n^m+e)|0;c[g+4>>2]=e;h=c[h>>2]|0;c[g>>2]=((h|j)&b|h&j)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10));c[k>>2]=l+e;e=((h|j)&b|h&j)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+e|0;c[g+8>>2]=e;c[a>>2]=(c[a>>2]|0)+e;e=1;while(1){y=a+(e<<2)|0;c[y>>2]=(c[y>>2]|0)+b;e=e+1|0;if((e|0)==8)break;b=c[g+8+(e<<2)>>2]|0}fd(g+40|0,256);fd(g+8|0,32);fd(g+4|0,4);fd(g,4);i=f;return}function la(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0;r=i;q=i=i+63&-64;i=i+4096|0;if(b){p=na(c[b+12>>2]<<3)|0;if(!p)e=-22;else{kf(q+3072|0);kf(q+2048|0);l=c[d>>2]|0;c[q+2048>>2]=l;c[q+2048+4>>2]=0;j=c[d+4>>2]|0;c[q+2048+8>>2]=j;c[q+2048+8+4>>2]=0;k=a[d+8>>0]|0;c[q+2048+16>>2]=k&255;c[q+2048+16+4>>2]=0;c[q+2048+24>>2]=c[b+8>>2];c[q+2048+24+4>>2]=0;c[q+2048+32>>2]=c[b+4>>2];c[q+2048+32+4>>2]=0;c[q+2048+40>>2]=c[b+28>>2];c[q+2048+40+4>>2]=0;e=c[b+12>>2]|0;if(!e)f=0;else{g=0;do{f=g&127;if(!f){e=oe(c[q+2048+48>>2]|0,c[q+2048+48+4>>2]|0,1,0)|0;c[q+2048+48>>2]=e;c[q+2048+48+4>>2]=D;kf(q);kf(q+1024|0);ma(q+3072|0,q+2048|0,q);ma(q+3072|0,q,q+1024|0);e=c[b+12>>2]|0}n=c[q+1024+(f<<3)+4>>2]|0;o=p+(g<<3)|0;c[o>>2]=c[q+1024+(f<<3)>>2];c[o+4>>2]=n;g=g+1|0}while(g>>>0<e>>>0);f=e}e=(l|0)==0&k<<24>>24==0?2:0;h=c[b+16>>2]|0;g=(S(h,j)|0)+e+(S(k&255,f)|0)|0;a:do if(e>>>0<f>>>0){o=g;f=(((g>>>0)%(h>>>0)|0|0)==0?h+-1|0:-1)+g|0;m=h;g=l;while(1){n=((o>>>0)%(m>>>0)|0|0)==1?o+-1|0:f;f=p+(e<<3)|0;j=c[f>>2]|0;f=Bd(c[f+4>>2]|0,0,c[b+20>>2]|0,0)|0;h=D;l=(g|0)==0;if(l?(a[d+8>>0]|0)==0:0){f=c[d+4>>2]|0;h=0}c[d+12>>2]=e;j=Eb(b,d,j,((h|0)==0?(f|0)==(c[d+4>>2]|0):0)&1)|0;k=c[(c[b>>2]|0)+4>>2]|0;f=Ed(m|0,0,f|0,h|0)|0;g=k+(o<<10)|0;if(l){ef(q+3072|0,k+(f<<10)+(j<<10)|0);gd(q+3072|0,k+(n<<10)|0);ef(q+2048|0,q+3072|0);f=0;do{m=f<<4;z=c[q+3072+(m<<3)>>2]|0;G=c[q+3072+(m<<3)+4>>2]|0;u=c[q+3072+((m|4)<<3)>>2]|0;s=c[q+3072+((m|4)<<3)+4>>2]|0;l=oe(u|0,s|0,z|0,G|0)|0;v=D;G=Pd(z|0,G|0,1)|0;G=Ed(G&-2|0,D&1|0,u|0,0)|0;G=oe(l|0,v|0,G|0,D|0)|0;v=D;l=G^c[q+3072+((m|12)<<3)>>2];z=v^c[q+3072+((m|12)<<3)+4>>2];y=c[q+3072+((m|8)<<3)>>2]|0;A=c[q+3072+((m|8)<<3)+4>>2]|0;C=oe(z|0,l|0,y|0,A|0)|0;j=D;A=Pd(y|0,A|0,1)|0;A=Ed(z|0,0,A&-2|0,D&1|0)|0;A=oe(C|0,j|0,A|0,D|0)|0;j=D;C=Rd(A^u|0,j^s|0,24)|0;y=D;s=Pd(A^u|0,j^s|0,40)|0;y=D|y;u=oe(s|C|0,y|0,G|0,v|0)|0;h=D;v=Pd(G|0,v|0,1)|0;v=Ed(C|0,0,v&-2|0,D&1|0)|0;v=oe(u|0,h|0,v|0,D|0)|0;h=D;c[q+3072+(m<<3)>>2]=v;c[q+3072+(m<<3)+4>>2]=h;u=Rd(v^z|0,h^l|0,16)|0;G=D;l=Pd(v^z|0,h^l|0,48)|0;G=D|G;c[q+3072+((m|12)<<3)>>2]=l|u;c[q+3072+((m|12)<<3)+4>>2]=G;G=oe(l|u|0,G|0,A|0,j|0)|0;l=D;j=Pd(A|0,j|0,1)|0;j=Ed(u|0,0,j&-2|0,D&1|0)|0;j=oe(G|0,l|0,j|0,D|0)|0;l=D;c[q+3072+((m|8)<<3)>>2]=j;c[q+3072+((m|8)<<3)+4>>2]=l;G=Rd(j^(s|C)|0,l^y|0,63)|0;u=D;y=Pd(j^(s|C)|0,l^y|0,1)|0;c[q+3072+((m|4)<<3)>>2]=y|G;c[q+3072+((m|4)<<3)+4>>2]=D|u;u=c[q+3072+((m|1)<<3)>>2]|0;G=c[q+3072+((m|1)<<3)+4>>2]|0;y=c[q+3072+((m|5)<<3)>>2]|0;l=c[q+3072+((m|5)<<3)+4>>2]|0;C=oe(y|0,l|0,u|0,G|0)|0;s=D;G=Pd(u|0,G|0,1)|0;G=Ed(G&-2|0,D&1|0,y|0,0)|0;G=oe(C|0,s|0,G|0,D|0)|0;s=D;C=G^c[q+3072+((m|13)<<3)>>2];u=s^c[q+3072+((m|13)<<3)+4>>2];j=c[q+3072+((m|9)<<3)>>2]|0;A=c[q+3072+((m|9)<<3)+4>>2]|0;h=oe(u|0,C|0,j|0,A|0)|0;z=D;A=Pd(j|0,A|0,1)|0;A=Ed(u|0,0,A&-2|0,D&1|0)|0;A=oe(h|0,z|0,A|0,D|0)|0;z=D;h=Rd(A^y|0,z^l|0,24)|0;j=D;l=Pd(A^y|0,z^l|0,40)|0;j=D|j;y=oe(l|h|0,j|0,G|0,s|0)|0;v=D;s=Pd(G|0,s|0,1)|0;s=Ed(h|0,0,s&-2|0,D&1|0)|0;s=oe(y|0,v|0,s|0,D|0)|0;v=D;c[q+3072+((m|1)<<3)>>2]=s;c[q+3072+((m|1)<<3)+4>>2]=v;y=Rd(s^u|0,v^C|0,16)|0;G=D;C=Pd(s^u|0,v^C|0,48)|0;G=D|G;c[q+3072+((m|13)<<3)>>2]=C|y;c[q+3072+((m|13)<<3)+4>>2]=G;G=oe(C|y|0,G|0,A|0,z|0)|0;C=D;z=Pd(A|0,z|0,1)|0;z=Ed(y|0,0,z&-2|0,D&1|0)|0;z=oe(G|0,C|0,z|0,D|0)|0;C=D;c[q+3072+((m|9)<<3)>>2]=z;c[q+3072+((m|9)<<3)+4>>2]=C;G=Rd(z^(l|h)|0,C^j|0,63)|0;y=D;j=Pd(z^(l|h)|0,C^j|0,1)|0;c[q+3072+((m|5)<<3)>>2]=j|G;c[q+3072+((m|5)<<3)+4>>2]=D|y;y=c[q+3072+((m|2)<<3)>>2]|0;G=c[q+3072+((m|2)<<3)+4>>2]|0;j=c[q+3072+((m|6)<<3)>>2]|0;C=c[q+3072+((m|6)<<3)+4>>2]|0;h=oe(j|0,C|0,y|0,G|0)|0;l=D;G=Pd(y|0,G|0,1)|0;G=Ed(G&-2|0,D&1|0,j|0,0)|0;G=oe(h|0,l|0,G|0,D|0)|0;l=D;h=G^c[q+3072+((m|14)<<3)>>2];y=l^c[q+3072+((m|14)<<3)+4>>2];z=c[q+3072+((m|10)<<3)>>2]|0;A=c[q+3072+((m|10)<<3)+4>>2]|0;v=oe(y|0,h|0,z|0,A|0)|0;u=D;A=Pd(z|0,A|0,1)|0;A=Ed(y|0,0,A&-2|0,D&1|0)|0;A=oe(v|0,u|0,A|0,D|0)|0;u=D;v=Rd(A^j|0,u^C|0,24)|0;z=D;C=Pd(A^j|0,u^C|0,40)|0;z=D|z;j=oe(C|v|0,z|0,G|0,l|0)|0;s=D;l=Pd(G|0,l|0,1)|0;l=Ed(v|0,0,l&-2|0,D&1|0)|0;l=oe(j|0,s|0,l|0,D|0)|0;s=D;c[q+3072+((m|2)<<3)>>2]=l;c[q+3072+((m|2)<<3)+4>>2]=s;j=Rd(l^y|0,s^h|0,16)|0;G=D;h=Pd(l^y|0,s^h|0,48)|0;G=D|G;c[q+3072+((m|14)<<3)>>2]=h|j;c[q+3072+((m|14)<<3)+4>>2]=G;G=oe(h|j|0,G|0,A|0,u|0)|0;h=D;u=Pd(A|0,u|0,1)|0;u=Ed(j|0,0,u&-2|0,D&1|0)|0;u=oe(G|0,h|0,u|0,D|0)|0;h=D;G=Rd(u^(C|v)|0,h^z|0,63)|0;j=D;z=Pd(u^(C|v)|0,h^z|0,1)|0;c[q+3072+((m|6)<<3)>>2]=z|G;c[q+3072+((m|6)<<3)+4>>2]=D|j;j=c[q+3072+((m|3)<<3)>>2]|0;G=c[q+3072+((m|3)<<3)+4>>2]|0;z=c[q+3072+((m|7)<<3)>>2]|0;v=c[q+3072+((m|7)<<3)+4>>2]|0;C=oe(z|0,v|0,j|0,G|0)|0;A=D;G=Pd(j|0,G|0,1)|0;G=Ed(G&-2|0,D&1|0,z|0,0)|0;G=oe(C|0,A|0,G|0,D|0)|0;A=D;C=G^c[q+3072+((m|15)<<3)>>2];j=A^c[q+3072+((m|15)<<3)+4>>2];s=c[q+3072+((m|11)<<3)>>2]|0;y=c[q+3072+((m|11)<<3)+4>>2]|0;l=oe(j|0,C|0,s|0,y|0)|0;t=D;y=Pd(s|0,y|0,1)|0;y=Ed(j|0,0,y&-2|0,D&1|0)|0;y=oe(l|0,t|0,y|0,D|0)|0;t=D;l=Rd(y^z|0,t^v|0,24)|0;s=D;v=Pd(y^z|0,t^v|0,40)|0;s=D|s;z=oe(v|l|0,s|0,G|0,A|0)|0;x=D;A=Pd(G|0,A|0,1)|0;A=Ed(l|0,0,A&-2|0,D&1|0)|0;A=oe(z|0,x|0,A|0,D|0)|0;x=D;c[q+3072+((m|3)<<3)>>2]=A;c[q+3072+((m|3)<<3)+4>>2]=x;z=Rd(A^j|0,x^C|0,16)|0;G=D;C=Pd(A^j|0,x^C|0,48)|0;G=D|G;x=oe(C|z|0,G|0,y|0,t|0)|0;j=D;t=Pd(y|0,t|0,1)|0;t=Ed(z|0,0,t&-2|0,D&1|0)|0;t=oe(x|0,j|0,t|0,D|0)|0;j=D;x=Rd(t^(v|l)|0,j^s|0,63)|0;y=D;s=Pd(t^(v|l)|0,j^s|0,1)|0;y=D|y;c[q+3072+((m|7)<<3)>>2]=s|x;c[q+3072+((m|7)<<3)+4>>2]=y;l=c[q+3072+(m<<3)>>2]|0;v=c[q+3072+(m<<3)+4>>2]|0;A=c[q+3072+((m|5)<<3)>>2]|0;B=c[q+3072+((m|5)<<3)+4>>2]|0;w=oe(A|0,B|0,l|0,v|0)|0;F=D;v=Pd(l|0,v|0,1)|0;v=Ed(v&-2|0,D&1|0,A|0,0)|0;v=oe(w|0,F|0,v|0,D|0)|0;F=D;w=oe(G^F|0,(C|z)^v|0,u|0,h|0)|0;l=D;h=Pd(u|0,h|0,1)|0;h=Ed(G^F|0,0,h&-2|0,D&1|0)|0;h=oe(w|0,l|0,h|0,D|0)|0;l=D;w=Rd(h^A|0,l^B|0,24)|0;u=D;B=Pd(h^A|0,l^B|0,40)|0;u=D|u;A=oe(B|w|0,u|0,v|0,F|0)|0;E=D;H=Pd(v|0,F|0,1)|0;H=Ed(w|0,0,H&-2|0,D&1|0)|0;H=oe(A|0,E|0,H|0,D|0)|0;E=D;c[q+3072+(m<<3)>>2]=H;c[q+3072+(m<<3)+4>>2]=E;A=Rd(H^(G^F)|0,E^((C|z)^v)|0,16)|0;k=D;v=Pd(H^(G^F)|0,E^((C|z)^v)|0,48)|0;k=D|k;c[q+3072+((m|15)<<3)>>2]=v|A;c[q+3072+((m|15)<<3)+4>>2]=k;k=oe(v|A|0,k|0,h|0,l|0)|0;v=D;l=Pd(h|0,l|0,1)|0;l=Ed(A|0,0,l&-2|0,D&1|0)|0;l=oe(k|0,v|0,l|0,D|0)|0;v=D;c[q+3072+((m|10)<<3)>>2]=l;c[q+3072+((m|10)<<3)+4>>2]=v;k=Rd(l^(B|w)|0,v^u|0,63)|0;A=D;u=Pd(l^(B|w)|0,v^u|0,1)|0;c[q+3072+((m|5)<<3)>>2]=u|k;c[q+3072+((m|5)<<3)+4>>2]=D|A;A=c[q+3072+((m|1)<<3)>>2]|0;k=c[q+3072+((m|1)<<3)+4>>2]|0;u=c[q+3072+((m|6)<<3)>>2]|0;v=c[q+3072+((m|6)<<3)+4>>2]|0;w=oe(u|0,v|0,A|0,k|0)|0;B=D;k=Pd(A|0,k|0,1)|0;k=Ed(k&-2|0,D&1|0,u|0,0)|0;k=oe(w|0,B|0,k|0,D|0)|0;B=D;w=k^c[q+3072+((m|12)<<3)>>2];A=B^c[q+3072+((m|12)<<3)+4>>2];l=oe(A|0,w|0,t|0,j|0)|0;h=D;j=Pd(t|0,j|0,1)|0;j=Ed(j&-2|0,D&1|0,A|0,0)|0;j=oe(l|0,h|0,j|0,D|0)|0;h=D;l=Rd(j^u|0,h^v|0,24)|0;t=D;v=Pd(j^u|0,h^v|0,40)|0;t=D|t;u=oe(v|l|0,t|0,k|0,B|0)|0;z=D;B=Pd(k|0,B|0,1)|0;B=Ed(l|0,0,B&-2|0,D&1|0)|0;B=oe(u|0,z|0,B|0,D|0)|0;z=D;c[q+3072+((m|1)<<3)>>2]=B;c[q+3072+((m|1)<<3)+4>>2]=z;u=Rd(B^A|0,z^w|0,16)|0;k=D;w=Pd(B^A|0,z^w|0,48)|0;k=D|k;c[q+3072+((m|12)<<3)>>2]=w|u;c[q+3072+((m|12)<<3)+4>>2]=k;k=oe(w|u|0,k|0,j|0,h|0)|0;w=D;h=Pd(j|0,h|0,1)|0;h=Ed(u|0,0,h&-2|0,D&1|0)|0;h=oe(k|0,w|0,h|0,D|0)|0;w=D;c[q+3072+((m|11)<<3)>>2]=h;c[q+3072+((m|11)<<3)+4>>2]=w;k=Rd(h^(v|l)|0,w^t|0,63)|0;u=D;t=Pd(h^(v|l)|0,w^t|0,1)|0;c[q+3072+((m|6)<<3)>>2]=t|k;c[q+3072+((m|6)<<3)+4>>2]=D|u;u=c[q+3072+((m|2)<<3)>>2]|0;k=c[q+3072+((m|2)<<3)+4>>2]|0;t=oe(s|x|0,y|0,u|0,k|0)|0;w=D;k=Pd(u|0,k|0,1)|0;k=Ed(k&-2|0,D&1|0,s|x|0,0)|0;k=oe(t|0,w|0,k|0,D|0)|0;w=D;t=k^c[q+3072+((m|13)<<3)>>2];u=w^c[q+3072+((m|13)<<3)+4>>2];l=c[q+3072+((m|8)<<3)>>2]|0;v=c[q+3072+((m|8)<<3)+4>>2]|0;h=oe(u|0,t|0,l|0,v|0)|0;j=D;v=Pd(l|0,v|0,1)|0;v=Ed(u|0,0,v&-2|0,D&1|0)|0;v=oe(h|0,j|0,v|0,D|0)|0;j=D;h=Rd(v^(s|x)|0,j^y|0,24)|0;l=D;y=Pd(v^(s|x)|0,j^y|0,40)|0;l=D|l;x=oe(y|h|0,l|0,k|0,w|0)|0;s=D;w=Pd(k|0,w|0,1)|0;w=Ed(h|0,0,w&-2|0,D&1|0)|0;w=oe(x|0,s|0,w|0,D|0)|0;s=D;c[q+3072+((m|2)<<3)>>2]=w;c[q+3072+((m|2)<<3)+4>>2]=s;x=Rd(w^u|0,s^t|0,16)|0;k=D;t=Pd(w^u|0,s^t|0,48)|0;k=D|k;c[q+3072+((m|13)<<3)>>2]=t|x;c[q+3072+((m|13)<<3)+4>>2]=k;k=oe(t|x|0,k|0,v|0,j|0)|0;t=D;j=Pd(v|0,j|0,1)|0;j=Ed(x|0,0,j&-2|0,D&1|0)|0;j=oe(k|0,t|0,j|0,D|0)|0;t=D;c[q+3072+((m|8)<<3)>>2]=j;c[q+3072+((m|8)<<3)+4>>2]=t;k=Rd(j^(y|h)|0,t^l|0,63)|0;x=D;l=Pd(j^(y|h)|0,t^l|0,1)|0;c[q+3072+((m|7)<<3)>>2]=l|k;c[q+3072+((m|7)<<3)+4>>2]=D|x;x=c[q+3072+((m|3)<<3)>>2]|0;k=c[q+3072+((m|3)<<3)+4>>2]|0;l=c[q+3072+((m|4)<<3)>>2]|0;t=c[q+3072+((m|4)<<3)+4>>2]|0;h=oe(l|0,t|0,x|0,k|0)|0;y=D;k=Pd(x|0,k|0,1)|0;k=Ed(k&-2|0,D&1|0,l|0,0)|0;k=oe(h|0,y|0,k|0,D|0)|0;y=D;h=k^c[q+3072+((m|14)<<3)>>2];x=y^c[q+3072+((m|14)<<3)+4>>2];j=c[q+3072+((m|9)<<3)>>2]|0;v=c[q+3072+((m|9)<<3)+4>>2]|0;s=oe(x|0,h|0,j|0,v|0)|0;u=D;v=Pd(j|0,v|0,1)|0;v=Ed(x|0,0,v&-2|0,D&1|0)|0;v=oe(s|0,u|0,v|0,D|0)|0;u=D;s=Rd(v^l|0,u^t|0,24)|0;j=D;t=Pd(v^l|0,u^t|0,40)|0;j=D|j;l=oe(t|s|0,j|0,k|0,y|0)|0;w=D;y=Pd(k|0,y|0,1)|0;y=Ed(s|0,0,y&-2|0,D&1|0)|0;y=oe(l|0,w|0,y|0,D|0)|0;w=D;c[q+3072+((m|3)<<3)>>2]=y;c[q+3072+((m|3)<<3)+4>>2]=w;l=Rd(y^x|0,w^h|0,16)|0;k=D;h=Pd(y^x|0,w^h|0,48)|0;k=D|k;c[q+3072+((m|14)<<3)>>2]=h|l;c[q+3072+((m|14)<<3)+4>>2]=k;k=oe(h|l|0,k|0,v|0,u|0)|0;h=D;u=Pd(v|0,u|0,1)|0;u=Ed(l|0,0,u&-2|0,D&1|0)|0;u=oe(k|0,h|0,u|0,D|0)|0;h=D;c[q+3072+((m|9)<<3)>>2]=u;c[q+3072+((m|9)<<3)+4>>2]=h;k=Rd(u^(t|s)|0,h^j|0,63)|0;l=D;j=Pd(u^(t|s)|0,h^j|0,1)|0;c[q+3072+((m|4)<<3)>>2]=j|k;c[q+3072+((m|4)<<3)+4>>2]=D|l;f=f+1|0}while((f|0)!=8);f=0;do{H=f<<1;A=c[q+3072+(H<<3)>>2]|0;E=c[q+3072+(H<<3)+4>>2]|0;v=q+3072+(H+32<<3)|0;y=c[v>>2]|0;v=c[v+4>>2]|0;s=oe(y|0,v|0,A|0,E|0)|0;j=D;E=Pd(A|0,E|0,1)|0;E=Ed(E&-2|0,D&1|0,y|0,0)|0;E=oe(s|0,j|0,E|0,D|0)|0;j=D;s=q+3072+(H+96<<3)|0;A=E^c[s>>2];s=j^c[s+4>>2];m=q+3072+(H+64<<3)|0;w=c[m>>2]|0;m=c[m+4>>2]|0;F=oe(s|0,A|0,w|0,m|0)|0;u=D;m=Pd(w|0,m|0,1)|0;m=Ed(s|0,0,m&-2|0,D&1|0)|0;m=oe(F|0,u|0,m|0,D|0)|0;u=D;F=Rd(m^y|0,u^v|0,24)|0;w=D;v=Pd(m^y|0,u^v|0,40)|0;w=D|w;y=oe(v|F|0,w|0,E|0,j|0)|0;B=D;j=Pd(E|0,j|0,1)|0;j=Ed(F|0,0,j&-2|0,D&1|0)|0;j=oe(y|0,B|0,j|0,D|0)|0;B=D;c[q+3072+(H<<3)>>2]=j;c[q+3072+(H<<3)+4>>2]=B;y=Rd(j^s|0,B^A|0,16)|0;E=D;A=Pd(j^s|0,B^A|0,48)|0;E=D|E;B=q+3072+(H+96<<3)|0;c[B>>2]=A|y;c[B+4>>2]=E;E=oe(A|y|0,E|0,m|0,u|0)|0;A=D;u=Pd(m|0,u|0,1)|0;u=Ed(y|0,0,u&-2|0,D&1|0)|0;u=oe(E|0,A|0,u|0,D|0)|0;A=D;E=q+3072+(H+64<<3)|0;c[E>>2]=u;c[E+4>>2]=A;E=Rd(u^(v|F)|0,A^w|0,63)|0;y=D;w=Pd(u^(v|F)|0,A^w|0,1)|0;A=q+3072+(H+32<<3)|0;c[A>>2]=w|E;c[A+4>>2]=D|y;A=c[q+3072+((H|1)<<3)>>2]|0;y=c[q+3072+((H|1)<<3)+4>>2]|0;E=q+3072+(H+33<<3)|0;w=c[E>>2]|0;E=c[E+4>>2]|0;F=oe(w|0,E|0,A|0,y|0)|0;v=D;y=Pd(A|0,y|0,1)|0;y=Ed(y&-2|0,D&1|0,w|0,0)|0;y=oe(F|0,v|0,y|0,D|0)|0;v=D;F=q+3072+(H+97<<3)|0;A=y^c[F>>2];F=v^c[F+4>>2];u=q+3072+(H+65<<3)|0;m=c[u>>2]|0;u=c[u+4>>2]|0;B=oe(F|0,A|0,m|0,u|0)|0;s=D;u=Pd(m|0,u|0,1)|0;u=Ed(F|0,0,u&-2|0,D&1|0)|0;u=oe(B|0,s|0,u|0,D|0)|0;s=D;B=Rd(u^w|0,s^E|0,24)|0;m=D;E=Pd(u^w|0,s^E|0,40)|0;m=D|m;w=oe(E|B|0,m|0,y|0,v|0)|0;j=D;v=Pd(y|0,v|0,1)|0;v=Ed(B|0,0,v&-2|0,D&1|0)|0;v=oe(w|0,j|0,v|0,D|0)|0;j=D;c[q+3072+((H|1)<<3)>>2]=v;c[q+3072+((H|1)<<3)+4>>2]=j;w=Rd(v^F|0,j^A|0,16)|0;y=D;A=Pd(v^F|0,j^A|0,48)|0;y=D|y;j=q+3072+(H+97<<3)|0;c[j>>2]=A|w;c[j+4>>2]=y;y=oe(A|w|0,y|0,u|0,s|0)|0;A=D;s=Pd(u|0,s|0,1)|0;s=Ed(w|0,0,s&-2|0,D&1|0)|0;s=oe(y|0,A|0,s|0,D|0)|0;A=D;y=q+3072+(H+65<<3)|0;c[y>>2]=s;c[y+4>>2]=A;y=Rd(s^(E|B)|0,A^m|0,63)|0;w=D;m=Pd(s^(E|B)|0,A^m|0,1)|0;A=q+3072+(H+33<<3)|0;c[A>>2]=m|y;c[A+4>>2]=D|w;A=q+3072+(H+16<<3)|0;w=c[A>>2]|0;A=c[A+4>>2]|0;y=q+3072+(H+48<<3)|0;m=c[y>>2]|0;y=c[y+4>>2]|0;B=oe(m|0,y|0,w|0,A|0)|0;E=D;A=Pd(w|0,A|0,1)|0;A=Ed(A&-2|0,D&1|0,m|0,0)|0;A=oe(B|0,E|0,A|0,D|0)|0;E=D;B=q+3072+(H+112<<3)|0;w=A^c[B>>2];B=E^c[B+4>>2];s=q+3072+(H+80<<3)|0;u=c[s>>2]|0;s=c[s+4>>2]|0;j=oe(B|0,w|0,u|0,s|0)|0;F=D;s=Pd(u|0,s|0,1)|0;s=Ed(B|0,0,s&-2|0,D&1|0)|0;s=oe(j|0,F|0,s|0,D|0)|0;F=D;j=Rd(s^m|0,F^y|0,24)|0;u=D;y=Pd(s^m|0,F^y|0,40)|0;u=D|u;m=oe(y|j|0,u|0,A|0,E|0)|0;v=D;E=Pd(A|0,E|0,1)|0;E=Ed(j|0,0,E&-2|0,D&1|0)|0;E=oe(m|0,v|0,E|0,D|0)|0;v=D;m=q+3072+(H+16<<3)|0;c[m>>2]=E;c[m+4>>2]=v;m=Rd(E^B|0,v^w|0,16)|0;A=D;w=Pd(E^B|0,v^w|0,48)|0;A=D|A;v=q+3072+(H+112<<3)|0;c[v>>2]=w|m;c[v+4>>2]=A;A=oe(w|m|0,A|0,s|0,F|0)|0;w=D;F=Pd(s|0,F|0,1)|0;F=Ed(m|0,0,F&-2|0,D&1|0)|0;F=oe(A|0,w|0,F|0,D|0)|0;w=D;A=Rd(F^(y|j)|0,w^u|0,63)|0;m=D;u=Pd(F^(y|j)|0,w^u|0,1)|0;j=q+3072+(H+48<<3)|0;c[j>>2]=u|A;c[j+4>>2]=D|m;j=q+3072+(H+17<<3)|0;m=c[j>>2]|0;j=c[j+4>>2]|0;A=q+3072+(H+49<<3)|0;u=c[A>>2]|0;A=c[A+4>>2]|0;y=oe(u|0,A|0,m|0,j|0)|0;s=D;j=Pd(m|0,j|0,1)|0;j=Ed(j&-2|0,D&1|0,u|0,0)|0;j=oe(y|0,s|0,j|0,D|0)|0;s=D;y=q+3072+(H+113<<3)|0;m=j^c[y>>2];y=s^c[y+4>>2];v=q+3072+(H+81<<3)|0;B=c[v>>2]|0;v=c[v+4>>2]|0;E=oe(y|0,m|0,B|0,v|0)|0;x=D;v=Pd(B|0,v|0,1)|0;v=Ed(y|0,0,v&-2|0,D&1|0)|0;v=oe(E|0,x|0,v|0,D|0)|0;x=D;E=Rd(v^u|0,x^A|0,24)|0;B=D;A=Pd(v^u|0,x^A|0,40)|0;B=D|B;u=oe(A|E|0,B|0,j|0,s|0)|0;C=D;s=Pd(j|0,s|0,1)|0;s=Ed(E|0,0,s&-2|0,D&1|0)|0;s=oe(u|0,C|0,s|0,D|0)|0;C=D;u=q+3072+(H+17<<3)|0;c[u>>2]=s;c[u+4>>2]=C;u=Rd(s^y|0,C^m|0,16)|0;j=D;m=Pd(s^y|0,C^m|0,48)|0;j=D|j;C=oe(m|u|0,j|0,v|0,x|0)|0;y=D;x=Pd(v|0,x|0,1)|0;x=Ed(u|0,0,x&-2|0,D&1|0)|0;x=oe(C|0,y|0,x|0,D|0)|0;y=D;C=Rd(x^(A|E)|0,y^B|0,63)|0;v=D;B=Pd(x^(A|E)|0,y^B|0,1)|0;v=D|v;E=q+3072+(H+49<<3)|0;c[E>>2]=B|C;c[E+4>>2]=v;E=c[q+3072+(H<<3)>>2]|0;A=c[q+3072+(H<<3)+4>>2]|0;s=q+3072+(H+33<<3)|0;z=c[s>>2]|0;s=c[s+4>>2]|0;t=oe(z|0,s|0,E|0,A|0)|0;k=D;A=Pd(E|0,A|0,1)|0;A=Ed(A&-2|0,D&1|0,z|0,0)|0;A=oe(t|0,k|0,A|0,D|0)|0;k=D;t=oe(j^k|0,(m|u)^A|0,F|0,w|0)|0;E=D;w=Pd(F|0,w|0,1)|0;w=Ed(j^k|0,0,w&-2|0,D&1|0)|0;w=oe(t|0,E|0,w|0,D|0)|0;E=D;t=Rd(w^z|0,E^s|0,24)|0;F=D;s=Pd(w^z|0,E^s|0,40)|0;F=D|F;z=oe(s|t|0,F|0,A|0,k|0)|0;l=D;h=Pd(A|0,k|0,1)|0;h=Ed(t|0,0,h&-2|0,D&1|0)|0;h=oe(z|0,l|0,h|0,D|0)|0;l=D;c[q+3072+(H<<3)>>2]=h;c[q+3072+(H<<3)+4>>2]=l;z=Rd(h^(j^k)|0,l^((m|u)^A)|0,16)|0;G=D;A=Pd(h^(j^k)|0,l^((m|u)^A)|0,48)|0;G=D|G;u=q+3072+(H+113<<3)|0;c[u>>2]=A|z;c[u+4>>2]=G;G=oe(A|z|0,G|0,w|0,E|0)|0;A=D;E=Pd(w|0,E|0,1)|0;E=Ed(z|0,0,E&-2|0,D&1|0)|0;E=oe(G|0,A|0,E|0,D|0)|0;A=D;G=q+3072+(H+80<<3)|0;c[G>>2]=E;c[G+4>>2]=A;G=Rd(E^(s|t)|0,A^F|0,63)|0;z=D;F=Pd(E^(s|t)|0,A^F|0,1)|0;A=q+3072+(H+33<<3)|0;c[A>>2]=F|G;c[A+4>>2]=D|z;A=c[q+3072+((H|1)<<3)>>2]|0;z=c[q+3072+((H|1)<<3)+4>>2]|0;G=q+3072+(H+48<<3)|0;F=c[G>>2]|0;G=c[G+4>>2]|0;t=oe(F|0,G|0,A|0,z|0)|0;s=D;z=Pd(A|0,z|0,1)|0;z=Ed(z&-2|0,D&1|0,F|0,0)|0;z=oe(t|0,s|0,z|0,D|0)|0;s=D;t=q+3072+(H+96<<3)|0;A=z^c[t>>2];t=s^c[t+4>>2];E=oe(t|0,A|0,x|0,y|0)|0;w=D;y=Pd(x|0,y|0,1)|0;y=Ed(y&-2|0,D&1|0,t|0,0)|0;y=oe(E|0,w|0,y|0,D|0)|0;w=D;E=Rd(y^F|0,w^G|0,24)|0;x=D;G=Pd(y^F|0,w^G|0,40)|0;x=D|x;F=oe(G|E|0,x|0,z|0,s|0)|0;u=D;s=Pd(z|0,s|0,1)|0;s=Ed(E|0,0,s&-2|0,D&1|0)|0;s=oe(F|0,u|0,s|0,D|0)|0;u=D;c[q+3072+((H|1)<<3)>>2]=s;c[q+3072+((H|1)<<3)+4>>2]=u;F=Rd(s^t|0,u^A|0,16)|0;z=D;A=Pd(s^t|0,u^A|0,48)|0;z=D|z;u=q+3072+(H+96<<3)|0;c[u>>2]=A|F;c[u+4>>2]=z;z=oe(A|F|0,z|0,y|0,w|0)|0;A=D;w=Pd(y|0,w|0,1)|0;w=Ed(F|0,0,w&-2|0,D&1|0)|0;w=oe(z|0,A|0,w|0,D|0)|0;A=D;z=q+3072+(H+81<<3)|0;c[z>>2]=w;c[z+4>>2]=A;z=Rd(w^(G|E)|0,A^x|0,63)|0;F=D;x=Pd(w^(G|E)|0,A^x|0,1)|0;A=q+3072+(H+48<<3)|0;c[A>>2]=x|z;c[A+4>>2]=D|F;A=q+3072+(H+16<<3)|0;F=c[A>>2]|0;A=c[A+4>>2]|0;z=oe(B|C|0,v|0,F|0,A|0)|0;x=D;A=Pd(F|0,A|0,1)|0;A=Ed(A&-2|0,D&1|0,B|C|0,0)|0;A=oe(z|0,x|0,A|0,D|0)|0;x=D;z=q+3072+(H+97<<3)|0;F=A^c[z>>2];z=x^c[z+4>>2];E=q+3072+(H+64<<3)|0;G=c[E>>2]|0;E=c[E+4>>2]|0;w=oe(z|0,F|0,G|0,E|0)|0;y=D;E=Pd(G|0,E|0,1)|0;E=Ed(z|0,0,E&-2|0,D&1|0)|0;E=oe(w|0,y|0,E|0,D|0)|0;y=D;w=Rd(E^(B|C)|0,y^v|0,24)|0;G=D;v=Pd(E^(B|C)|0,y^v|0,40)|0;G=D|G;C=oe(v|w|0,G|0,A|0,x|0)|0;B=D;x=Pd(A|0,x|0,1)|0;x=Ed(w|0,0,x&-2|0,D&1|0)|0;x=oe(C|0,B|0,x|0,D|0)|0;B=D;C=q+3072+(H+16<<3)|0;c[C>>2]=x;c[C+4>>2]=B;C=Rd(x^z|0,B^F|0,16)|0;A=D;F=Pd(x^z|0,B^F|0,48)|0;A=D|A;B=q+3072+(H+97<<3)|0;c[B>>2]=F|C;c[B+4>>2]=A;A=oe(F|C|0,A|0,E|0,y|0)|0;F=D;y=Pd(E|0,y|0,1)|0;y=Ed(C|0,0,y&-2|0,D&1|0)|0;y=oe(A|0,F|0,y|0,D|0)|0;F=D;A=q+3072+(H+64<<3)|0;c[A>>2]=y;c[A+4>>2]=F;A=Rd(y^(v|w)|0,F^G|0,63)|0;C=D;G=Pd(y^(v|w)|0,F^G|0,1)|0;F=q+3072+(H+49<<3)|0;c[F>>2]=G|A;c[F+4>>2]=D|C;F=q+3072+(H+17<<3)|0;C=c[F>>2]|0;F=c[F+4>>2]|0;A=q+3072+(H+32<<3)|0;G=c[A>>2]|0;A=c[A+4>>2]|0;w=oe(G|0,A|0,C|0,F|0)|0;v=D;F=Pd(C|0,F|0,1)|0;F=Ed(F&-2|0,D&1|0,G|0,0)|0;F=oe(w|0,v|0,F|0,D|0)|0;v=D;w=q+3072+(H+112<<3)|0;C=F^c[w>>2];w=v^c[w+4>>2];y=q+3072+(H+65<<3)|0;E=c[y>>2]|0;y=c[y+4>>2]|0;B=oe(w|0,C|0,E|0,y|0)|0;z=D;y=Pd(E|0,y|0,1)|0;y=Ed(w|0,0,y&-2|0,D&1|0)|0;y=oe(B|0,z|0,y|0,D|0)|0;z=D;B=Rd(y^G|0,z^A|0,24)|0;E=D;A=Pd(y^G|0,z^A|0,40)|0;E=D|E;G=oe(A|B|0,E|0,F|0,v|0)|0;x=D;v=Pd(F|0,v|0,1)|0;v=Ed(B|0,0,v&-2|0,D&1|0)|0;v=oe(G|0,x|0,v|0,D|0)|0;x=D;G=q+3072+(H+17<<3)|0;c[G>>2]=v;c[G+4>>2]=x;G=Rd(v^w|0,x^C|0,16)|0;F=D;C=Pd(v^w|0,x^C|0,48)|0;F=D|F;x=q+3072+(H+112<<3)|0;c[x>>2]=C|G;c[x+4>>2]=F;F=oe(C|G|0,F|0,y|0,z|0)|0;C=D;z=Pd(y|0,z|0,1)|0;z=Ed(G|0,0,z&-2|0,D&1|0)|0;z=oe(F|0,C|0,z|0,D|0)|0;C=D;F=q+3072+(H+65<<3)|0;c[F>>2]=z;c[F+4>>2]=C;F=Rd(z^(A|B)|0,C^E|0,63)|0;G=D;E=Pd(z^(A|B)|0,C^E|0,1)|0;H=q+3072+(H+32<<3)|0;c[H>>2]=E|F;c[H+4>>2]=D|G;f=f+1|0}while((f|0)!=8);ef(g,q+2048|0);gd(g,q+3072|0)}else ma(k+(n<<10)|0,k+(f<<10)+(j<<10)|0,g);e=e+1|0;if(e>>>0>=(c[b+12>>2]|0)>>>0)break a;o=o+1|0;f=n+1|0;m=c[b+16>>2]|0;g=c[d>>2]|0}}while(0);ta(p);e=0}}else e=0;i=r;return e|0}function ma(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;f=i=i+63&-64;i=i+2048|0;ef(f+1024|0,b);gd(f+1024|0,a);ef(f,f+1024|0);gd(f,d);a=0;do{b=a<<4;o=c[f+1024+(b<<3)>>2]|0;x=c[f+1024+(b<<3)+4>>2]|0;n=c[f+1024+((b|4)<<3)>>2]|0;l=c[f+1024+((b|4)<<3)+4>>2]|0;g=oe(n|0,l|0,o|0,x|0)|0;v=D;x=Pd(o|0,x|0,1)|0;x=Ed(x&-2|0,D&1|0,n|0,0)|0;x=oe(g|0,v|0,x|0,D|0)|0;v=D;g=x^c[f+1024+((b|12)<<3)>>2];o=v^c[f+1024+((b|12)<<3)+4>>2];r=c[f+1024+((b|8)<<3)>>2]|0;t=c[f+1024+((b|8)<<3)+4>>2]|0;s=oe(o|0,g|0,r|0,t|0)|0;j=D;t=Pd(r|0,t|0,1)|0;t=Ed(t&-2|0,D&1|0,o|0,0)|0;t=oe(s|0,j|0,t|0,D|0)|0;j=D;s=Rd(t^n|0,j^l|0,24)|0;r=D;l=Pd(t^n|0,j^l|0,40)|0;r=D|r;n=oe(l|s|0,r|0,x|0,v|0)|0;k=D;v=Pd(x|0,v|0,1)|0;v=Ed(s|0,0,v&-2|0,D&1|0)|0;v=oe(n|0,k|0,v|0,D|0)|0;k=D;c[f+1024+(b<<3)>>2]=v;c[f+1024+(b<<3)+4>>2]=k;n=Rd(v^o|0,k^g|0,16)|0;x=D;g=Pd(v^o|0,k^g|0,48)|0;x=D|x;c[f+1024+((b|12)<<3)>>2]=g|n;c[f+1024+((b|12)<<3)+4>>2]=x;x=oe(g|n|0,x|0,t|0,j|0)|0;g=D;j=Pd(t|0,j|0,1)|0;j=Ed(n|0,0,j&-2|0,D&1|0)|0;j=oe(x|0,g|0,j|0,D|0)|0;g=D;c[f+1024+((b|8)<<3)>>2]=j;c[f+1024+((b|8)<<3)+4>>2]=g;x=Rd(j^(l|s)|0,g^r|0,63)|0;n=D;r=Pd(j^(l|s)|0,g^r|0,1)|0;c[f+1024+((b|4)<<3)>>2]=r|x;c[f+1024+((b|4)<<3)+4>>2]=D|n;n=c[f+1024+((b|1)<<3)>>2]|0;x=c[f+1024+((b|1)<<3)+4>>2]|0;r=c[f+1024+((b|5)<<3)>>2]|0;g=c[f+1024+((b|5)<<3)+4>>2]|0;s=oe(r|0,g|0,n|0,x|0)|0;l=D;x=Pd(n|0,x|0,1)|0;x=Ed(x&-2|0,D&1|0,r|0,0)|0;x=oe(s|0,l|0,x|0,D|0)|0;l=D;s=x^c[f+1024+((b|13)<<3)>>2];n=l^c[f+1024+((b|13)<<3)+4>>2];j=c[f+1024+((b|9)<<3)>>2]|0;t=c[f+1024+((b|9)<<3)+4>>2]|0;k=oe(n|0,s|0,j|0,t|0)|0;o=D;t=Pd(j|0,t|0,1)|0;t=Ed(t&-2|0,D&1|0,n|0,0)|0;t=oe(k|0,o|0,t|0,D|0)|0;o=D;k=Rd(t^r|0,o^g|0,24)|0;j=D;g=Pd(t^r|0,o^g|0,40)|0;j=D|j;r=oe(g|k|0,j|0,x|0,l|0)|0;v=D;l=Pd(x|0,l|0,1)|0;l=Ed(k|0,0,l&-2|0,D&1|0)|0;l=oe(r|0,v|0,l|0,D|0)|0;v=D;c[f+1024+((b|1)<<3)>>2]=l;c[f+1024+((b|1)<<3)+4>>2]=v;r=Rd(l^n|0,v^s|0,16)|0;x=D;s=Pd(l^n|0,v^s|0,48)|0;x=D|x;c[f+1024+((b|13)<<3)>>2]=s|r;c[f+1024+((b|13)<<3)+4>>2]=x;x=oe(s|r|0,x|0,t|0,o|0)|0;s=D;o=Pd(t|0,o|0,1)|0;o=Ed(r|0,0,o&-2|0,D&1|0)|0;o=oe(x|0,s|0,o|0,D|0)|0;s=D;c[f+1024+((b|9)<<3)>>2]=o;c[f+1024+((b|9)<<3)+4>>2]=s;x=Rd(o^(g|k)|0,s^j|0,63)|0;r=D;j=Pd(o^(g|k)|0,s^j|0,1)|0;c[f+1024+((b|5)<<3)>>2]=j|x;c[f+1024+((b|5)<<3)+4>>2]=D|r;r=c[f+1024+((b|2)<<3)>>2]|0;x=c[f+1024+((b|2)<<3)+4>>2]|0;j=c[f+1024+((b|6)<<3)>>2]|0;s=c[f+1024+((b|6)<<3)+4>>2]|0;k=oe(j|0,s|0,r|0,x|0)|0;g=D;x=Pd(r|0,x|0,1)|0;x=Ed(x&-2|0,D&1|0,j|0,0)|0;x=oe(k|0,g|0,x|0,D|0)|0;g=D;k=x^c[f+1024+((b|14)<<3)>>2];r=g^c[f+1024+((b|14)<<3)+4>>2];o=c[f+1024+((b|10)<<3)>>2]|0;t=c[f+1024+((b|10)<<3)+4>>2]|0;v=oe(r|0,k|0,o|0,t|0)|0;n=D;t=Pd(o|0,t|0,1)|0;t=Ed(t&-2|0,D&1|0,r|0,0)|0;t=oe(v|0,n|0,t|0,D|0)|0;n=D;v=Rd(t^j|0,n^s|0,24)|0;o=D;s=Pd(t^j|0,n^s|0,40)|0;o=D|o;j=oe(s|v|0,o|0,x|0,g|0)|0;l=D;g=Pd(x|0,g|0,1)|0;g=Ed(v|0,0,g&-2|0,D&1|0)|0;g=oe(j|0,l|0,g|0,D|0)|0;l=D;c[f+1024+((b|2)<<3)>>2]=g;c[f+1024+((b|2)<<3)+4>>2]=l;j=Rd(g^r|0,l^k|0,16)|0;x=D;k=Pd(g^r|0,l^k|0,48)|0;x=D|x;c[f+1024+((b|14)<<3)>>2]=k|j;c[f+1024+((b|14)<<3)+4>>2]=x;x=oe(k|j|0,x|0,t|0,n|0)|0;k=D;n=Pd(t|0,n|0,1)|0;n=Ed(j|0,0,n&-2|0,D&1|0)|0;n=oe(x|0,k|0,n|0,D|0)|0;k=D;x=Rd(n^(s|v)|0,k^o|0,63)|0;j=D;o=Pd(n^(s|v)|0,k^o|0,1)|0;c[f+1024+((b|6)<<3)>>2]=o|x;c[f+1024+((b|6)<<3)+4>>2]=D|j;j=c[f+1024+((b|3)<<3)>>2]|0;x=c[f+1024+((b|3)<<3)+4>>2]|0;o=c[f+1024+((b|7)<<3)>>2]|0;v=c[f+1024+((b|7)<<3)+4>>2]|0;s=oe(o|0,v|0,j|0,x|0)|0;t=D;x=Pd(j|0,x|0,1)|0;x=Ed(x&-2|0,D&1|0,o|0,0)|0;x=oe(s|0,t|0,x|0,D|0)|0;t=D;s=x^c[f+1024+((b|15)<<3)>>2];j=t^c[f+1024+((b|15)<<3)+4>>2];l=c[f+1024+((b|11)<<3)>>2]|0;r=c[f+1024+((b|11)<<3)+4>>2]|0;g=oe(j|0,s|0,l|0,r|0)|0;m=D;r=Pd(l|0,r|0,1)|0;r=Ed(r&-2|0,D&1|0,j|0,0)|0;r=oe(g|0,m|0,r|0,D|0)|0;m=D;g=Rd(r^o|0,m^v|0,24)|0;l=D;v=Pd(r^o|0,m^v|0,40)|0;l=D|l;o=oe(v|g|0,l|0,x|0,t|0)|0;q=D;t=Pd(x|0,t|0,1)|0;t=Ed(g|0,0,t&-2|0,D&1|0)|0;t=oe(o|0,q|0,t|0,D|0)|0;q=D;c[f+1024+((b|3)<<3)>>2]=t;c[f+1024+((b|3)<<3)+4>>2]=q;o=Rd(t^j|0,q^s|0,16)|0;x=D;s=Pd(t^j|0,q^s|0,48)|0;x=D|x;q=oe(s|o|0,x|0,r|0,m|0)|0;j=D;m=Pd(r|0,m|0,1)|0;m=Ed(o|0,0,m&-2|0,D&1|0)|0;m=oe(q|0,j|0,m|0,D|0)|0;j=D;q=Rd(m^(v|g)|0,j^l|0,63)|0;r=D;l=Pd(m^(v|g)|0,j^l|0,1)|0;r=D|r;c[f+1024+((b|7)<<3)>>2]=l|q;c[f+1024+((b|7)<<3)+4>>2]=r;g=c[f+1024+(b<<3)>>2]|0;v=c[f+1024+(b<<3)+4>>2]|0;t=c[f+1024+((b|5)<<3)>>2]|0;u=c[f+1024+((b|5)<<3)+4>>2]|0;p=oe(t|0,u|0,g|0,v|0)|0;y=D;v=Pd(g|0,v|0,1)|0;v=Ed(v&-2|0,D&1|0,t|0,0)|0;v=oe(p|0,y|0,v|0,D|0)|0;y=D;p=oe(y^x|0,v^(s|o)|0,n|0,k|0)|0;g=D;k=Pd(n|0,k|0,1)|0;k=Ed(k&-2|0,D&1|0,y^x|0,0)|0;k=oe(p|0,g|0,k|0,D|0)|0;g=D;p=Rd(k^t|0,g^u|0,24)|0;n=D;u=Pd(k^t|0,g^u|0,40)|0;n=D|n;t=oe(u|p|0,n|0,v|0,y|0)|0;w=D;z=Pd(v|0,y|0,1)|0;z=Ed(p|0,0,z&-2|0,D&1|0)|0;z=oe(t|0,w|0,z|0,D|0)|0;w=D;c[f+1024+(b<<3)>>2]=z;c[f+1024+(b<<3)+4>>2]=w;t=Rd(z^(y^x)|0,w^(v^(s|o))|0,16)|0;h=D;o=Pd(z^(y^x)|0,w^(v^(s|o))|0,48)|0;h=D|h;c[f+1024+((b|15)<<3)>>2]=o|t;c[f+1024+((b|15)<<3)+4>>2]=h;h=oe(o|t|0,h|0,k|0,g|0)|0;o=D;g=Pd(k|0,g|0,1)|0;g=Ed(t|0,0,g&-2|0,D&1|0)|0;g=oe(h|0,o|0,g|0,D|0)|0;o=D;c[f+1024+((b|10)<<3)>>2]=g;c[f+1024+((b|10)<<3)+4>>2]=o;h=Rd(g^(u|p)|0,o^n|0,63)|0;t=D;n=Pd(g^(u|p)|0,o^n|0,1)|0;c[f+1024+((b|5)<<3)>>2]=n|h;c[f+1024+((b|5)<<3)+4>>2]=D|t;t=c[f+1024+((b|1)<<3)>>2]|0;h=c[f+1024+((b|1)<<3)+4>>2]|0;n=c[f+1024+((b|6)<<3)>>2]|0;o=c[f+1024+((b|6)<<3)+4>>2]|0;p=oe(n|0,o|0,t|0,h|0)|0;u=D;h=Pd(t|0,h|0,1)|0;h=Ed(h&-2|0,D&1|0,n|0,0)|0;h=oe(p|0,u|0,h|0,D|0)|0;u=D;p=h^c[f+1024+((b|12)<<3)>>2];t=u^c[f+1024+((b|12)<<3)+4>>2];g=oe(t|0,p|0,m|0,j|0)|0;k=D;j=Pd(m|0,j|0,1)|0;j=Ed(j&-2|0,D&1|0,t|0,0)|0;j=oe(g|0,k|0,j|0,D|0)|0;k=D;g=Rd(j^n|0,k^o|0,24)|0;m=D;o=Pd(j^n|0,k^o|0,40)|0;m=D|m;n=oe(o|g|0,m|0,h|0,u|0)|0;s=D;u=Pd(h|0,u|0,1)|0;u=Ed(g|0,0,u&-2|0,D&1|0)|0;u=oe(n|0,s|0,u|0,D|0)|0;s=D;c[f+1024+((b|1)<<3)>>2]=u;c[f+1024+((b|1)<<3)+4>>2]=s;n=Rd(u^t|0,s^p|0,16)|0;h=D;p=Pd(u^t|0,s^p|0,48)|0;h=D|h;c[f+1024+((b|12)<<3)>>2]=p|n;c[f+1024+((b|12)<<3)+4>>2]=h;h=oe(p|n|0,h|0,j|0,k|0)|0;p=D;k=Pd(j|0,k|0,1)|0;k=Ed(n|0,0,k&-2|0,D&1|0)|0;k=oe(h|0,p|0,k|0,D|0)|0;p=D;c[f+1024+((b|11)<<3)>>2]=k;c[f+1024+((b|11)<<3)+4>>2]=p;h=Rd(k^(o|g)|0,p^m|0,63)|0;n=D;m=Pd(k^(o|g)|0,p^m|0,1)|0;c[f+1024+((b|6)<<3)>>2]=m|h;c[f+1024+((b|6)<<3)+4>>2]=D|n;n=c[f+1024+((b|2)<<3)>>2]|0;h=c[f+1024+((b|2)<<3)+4>>2]|0;m=oe(l|q|0,r|0,n|0,h|0)|0;p=D;h=Pd(n|0,h|0,1)|0;h=Ed(h&-2|0,D&1|0,l|q|0,0)|0;h=oe(m|0,p|0,h|0,D|0)|0;p=D;m=h^c[f+1024+((b|13)<<3)>>2];n=p^c[f+1024+((b|13)<<3)+4>>2];g=c[f+1024+((b|8)<<3)>>2]|0;o=c[f+1024+((b|8)<<3)+4>>2]|0;k=oe(n|0,m|0,g|0,o|0)|0;j=D;o=Pd(g|0,o|0,1)|0;o=Ed(o&-2|0,D&1|0,n|0,0)|0;o=oe(k|0,j|0,o|0,D|0)|0;j=D;k=Rd(o^(l|q)|0,j^r|0,24)|0;g=D;r=Pd(o^(l|q)|0,j^r|0,40)|0;g=D|g;q=oe(r|k|0,g|0,h|0,p|0)|0;l=D;p=Pd(h|0,p|0,1)|0;p=Ed(k|0,0,p&-2|0,D&1|0)|0;p=oe(q|0,l|0,p|0,D|0)|0;l=D;c[f+1024+((b|2)<<3)>>2]=p;c[f+1024+((b|2)<<3)+4>>2]=l;q=Rd(p^n|0,l^m|0,16)|0;h=D;m=Pd(p^n|0,l^m|0,48)|0;h=D|h;c[f+1024+((b|13)<<3)>>2]=m|q;c[f+1024+((b|13)<<3)+4>>2]=h;h=oe(m|q|0,h|0,o|0,j|0)|0;m=D;j=Pd(o|0,j|0,1)|0;j=Ed(q|0,0,j&-2|0,D&1|0)|0;j=oe(h|0,m|0,j|0,D|0)|0;m=D;c[f+1024+((b|8)<<3)>>2]=j;c[f+1024+((b|8)<<3)+4>>2]=m;h=Rd(j^(r|k)|0,m^g|0,63)|0;q=D;g=Pd(j^(r|k)|0,m^g|0,1)|0;c[f+1024+((b|7)<<3)>>2]=g|h;c[f+1024+((b|7)<<3)+4>>2]=D|q;q=c[f+1024+((b|3)<<3)>>2]|0;h=c[f+1024+((b|3)<<3)+4>>2]|0;g=c[f+1024+((b|4)<<3)>>2]|0;m=c[f+1024+((b|4)<<3)+4>>2]|0;k=oe(g|0,m|0,q|0,h|0)|0;r=D;h=Pd(q|0,h|0,1)|0;h=Ed(h&-2|0,D&1|0,g|0,0)|0;h=oe(k|0,r|0,h|0,D|0)|0;r=D;k=h^c[f+1024+((b|14)<<3)>>2];q=r^c[f+1024+((b|14)<<3)+4>>2];j=c[f+1024+((b|9)<<3)>>2]|0;o=c[f+1024+((b|9)<<3)+4>>2]|0;l=oe(q|0,k|0,j|0,o|0)|0;n=D;o=Pd(j|0,o|0,1)|0;o=Ed(o&-2|0,D&1|0,q|0,0)|0;o=oe(l|0,n|0,o|0,D|0)|0;n=D;l=Rd(o^g|0,n^m|0,24)|0;j=D;m=Pd(o^g|0,n^m|0,40)|0;j=D|j;g=oe(m|l|0,j|0,h|0,r|0)|0;p=D;r=Pd(h|0,r|0,1)|0;r=Ed(l|0,0,r&-2|0,D&1|0)|0;r=oe(g|0,p|0,r|0,D|0)|0;p=D;c[f+1024+((b|3)<<3)>>2]=r;c[f+1024+((b|3)<<3)+4>>2]=p;g=Rd(r^q|0,p^k|0,16)|0;h=D;k=Pd(r^q|0,p^k|0,48)|0;h=D|h;c[f+1024+((b|14)<<3)>>2]=k|g;c[f+1024+((b|14)<<3)+4>>2]=h;h=oe(k|g|0,h|0,o|0,n|0)|0;k=D;n=Pd(o|0,n|0,1)|0;n=Ed(g|0,0,n&-2|0,D&1|0)|0;n=oe(h|0,k|0,n|0,D|0)|0;k=D;c[f+1024+((b|9)<<3)>>2]=n;c[f+1024+((b|9)<<3)+4>>2]=k;h=Rd(n^(m|l)|0,k^j|0,63)|0;g=D;j=Pd(n^(m|l)|0,k^j|0,1)|0;c[f+1024+((b|4)<<3)>>2]=j|h;c[f+1024+((b|4)<<3)+4>>2]=D|g;a=a+1|0}while((a|0)!=8);a=0;do{z=a<<1;k=c[f+1024+(z<<3)>>2]|0;w=c[f+1024+(z<<3)+4>>2]|0;o=f+1024+(z+32<<3)|0;r=c[o>>2]|0;o=c[o+4>>2]|0;l=oe(r|0,o|0,k|0,w|0)|0;h=D;w=Pd(k|0,w|0,1)|0;w=Ed(w&-2|0,D&1|0,r|0,0)|0;w=oe(l|0,h|0,w|0,D|0)|0;h=D;l=f+1024+(z+96<<3)|0;k=w^c[l>>2];l=h^c[l+4>>2];n=f+1024+(z+64<<3)|0;p=c[n>>2]|0;n=c[n+4>>2]|0;x=oe(l|0,k|0,p|0,n|0)|0;t=D;n=Pd(p|0,n|0,1)|0;n=Ed(n&-2|0,D&1|0,l|0,0)|0;n=oe(x|0,t|0,n|0,D|0)|0;t=D;x=Rd(n^r|0,t^o|0,24)|0;p=D;o=Pd(n^r|0,t^o|0,40)|0;p=D|p;r=oe(o|x|0,p|0,w|0,h|0)|0;u=D;h=Pd(w|0,h|0,1)|0;h=Ed(x|0,0,h&-2|0,D&1|0)|0;h=oe(r|0,u|0,h|0,D|0)|0;u=D;c[f+1024+(z<<3)>>2]=h;c[f+1024+(z<<3)+4>>2]=u;r=Rd(h^l|0,u^k|0,16)|0;w=D;k=Pd(h^l|0,u^k|0,48)|0;w=D|w;u=f+1024+(z+96<<3)|0;c[u>>2]=k|r;c[u+4>>2]=w;w=oe(k|r|0,w|0,n|0,t|0)|0;k=D;t=Pd(n|0,t|0,1)|0;t=Ed(r|0,0,t&-2|0,D&1|0)|0;t=oe(w|0,k|0,t|0,D|0)|0;k=D;w=f+1024+(z+64<<3)|0;c[w>>2]=t;c[w+4>>2]=k;w=Rd(t^(o|x)|0,k^p|0,63)|0;r=D;p=Pd(t^(o|x)|0,k^p|0,1)|0;k=f+1024+(z+32<<3)|0;c[k>>2]=p|w;c[k+4>>2]=D|r;k=c[f+1024+((z|1)<<3)>>2]|0;r=c[f+1024+((z|1)<<3)+4>>2]|0;w=f+1024+(z+33<<3)|0;p=c[w>>2]|0;w=c[w+4>>2]|0;x=oe(p|0,w|0,k|0,r|0)|0;o=D;r=Pd(k|0,r|0,1)|0;r=Ed(r&-2|0,D&1|0,p|0,0)|0;r=oe(x|0,o|0,r|0,D|0)|0;o=D;x=f+1024+(z+97<<3)|0;k=r^c[x>>2];x=o^c[x+4>>2];t=f+1024+(z+65<<3)|0;n=c[t>>2]|0;t=c[t+4>>2]|0;u=oe(x|0,k|0,n|0,t|0)|0;l=D;t=Pd(n|0,t|0,1)|0;t=Ed(t&-2|0,D&1|0,x|0,0)|0;t=oe(u|0,l|0,t|0,D|0)|0;l=D;u=Rd(t^p|0,l^w|0,24)|0;n=D;w=Pd(t^p|0,l^w|0,40)|0;n=D|n;p=oe(w|u|0,n|0,r|0,o|0)|0;h=D;o=Pd(r|0,o|0,1)|0;o=Ed(u|0,0,o&-2|0,D&1|0)|0;o=oe(p|0,h|0,o|0,D|0)|0;h=D;c[f+1024+((z|1)<<3)>>2]=o;c[f+1024+((z|1)<<3)+4>>2]=h;p=Rd(o^x|0,h^k|0,16)|0;r=D;k=Pd(o^x|0,h^k|0,48)|0;r=D|r;h=f+1024+(z+97<<3)|0;c[h>>2]=k|p;c[h+4>>2]=r;r=oe(k|p|0,r|0,t|0,l|0)|0;k=D;l=Pd(t|0,l|0,1)|0;l=Ed(p|0,0,l&-2|0,D&1|0)|0;l=oe(r|0,k|0,l|0,D|0)|0;k=D;r=f+1024+(z+65<<3)|0;c[r>>2]=l;c[r+4>>2]=k;r=Rd(l^(w|u)|0,k^n|0,63)|0;p=D;n=Pd(l^(w|u)|0,k^n|0,1)|0;k=f+1024+(z+33<<3)|0;c[k>>2]=n|r;c[k+4>>2]=D|p;k=f+1024+(z+16<<3)|0;p=c[k>>2]|0;k=c[k+4>>2]|0;r=f+1024+(z+48<<3)|0;n=c[r>>2]|0;r=c[r+4>>2]|0;u=oe(n|0,r|0,p|0,k|0)|0;w=D;k=Pd(p|0,k|0,1)|0;k=Ed(k&-2|0,D&1|0,n|0,0)|0;k=oe(u|0,w|0,k|0,D|0)|0;w=D;u=f+1024+(z+112<<3)|0;p=k^c[u>>2];u=w^c[u+4>>2];l=f+1024+(z+80<<3)|0;t=c[l>>2]|0;l=c[l+4>>2]|0;h=oe(u|0,p|0,t|0,l|0)|0;x=D;l=Pd(t|0,l|0,1)|0;l=Ed(l&-2|0,D&1|0,u|0,0)|0;l=oe(h|0,x|0,l|0,D|0)|0;x=D;h=Rd(l^n|0,x^r|0,24)|0;t=D;r=Pd(l^n|0,x^r|0,40)|0;t=D|t;n=oe(r|h|0,t|0,k|0,w|0)|0;o=D;w=Pd(k|0,w|0,1)|0;w=Ed(h|0,0,w&-2|0,D&1|0)|0;w=oe(n|0,o|0,w|0,D|0)|0;o=D;n=f+1024+(z+16<<3)|0;c[n>>2]=w;c[n+4>>2]=o;n=Rd(w^u|0,o^p|0,16)|0;k=D;p=Pd(w^u|0,o^p|0,48)|0;k=D|k;o=f+1024+(z+112<<3)|0;c[o>>2]=p|n;c[o+4>>2]=k;k=oe(p|n|0,k|0,l|0,x|0)|0;p=D;x=Pd(l|0,x|0,1)|0;x=Ed(n|0,0,x&-2|0,D&1|0)|0;x=oe(k|0,p|0,x|0,D|0)|0;p=D;k=Rd(x^(r|h)|0,p^t|0,63)|0;n=D;t=Pd(x^(r|h)|0,p^t|0,1)|0;h=f+1024+(z+48<<3)|0;c[h>>2]=t|k;c[h+4>>2]=D|n;h=f+1024+(z+17<<3)|0;n=c[h>>2]|0;h=c[h+4>>2]|0;k=f+1024+(z+49<<3)|0;t=c[k>>2]|0;k=c[k+4>>2]|0;r=oe(t|0,k|0,n|0,h|0)|0;l=D;h=Pd(n|0,h|0,1)|0;h=Ed(h&-2|0,D&1|0,t|0,0)|0;h=oe(r|0,l|0,h|0,D|0)|0;l=D;r=f+1024+(z+113<<3)|0;n=h^c[r>>2];r=l^c[r+4>>2];o=f+1024+(z+81<<3)|0;u=c[o>>2]|0;o=c[o+4>>2]|0;w=oe(r|0,n|0,u|0,o|0)|0;q=D;o=Pd(u|0,o|0,1)|0;o=Ed(o&-2|0,D&1|0,r|0,0)|0;o=oe(w|0,q|0,o|0,D|0)|0;q=D;w=Rd(o^t|0,q^k|0,24)|0;u=D;k=Pd(o^t|0,q^k|0,40)|0;u=D|u;t=oe(k|w|0,u|0,h|0,l|0)|0;v=D;l=Pd(h|0,l|0,1)|0;l=Ed(w|0,0,l&-2|0,D&1|0)|0;l=oe(t|0,v|0,l|0,D|0)|0;v=D;t=f+1024+(z+17<<3)|0;c[t>>2]=l;c[t+4>>2]=v;t=Rd(l^r|0,v^n|0,16)|0;h=D;n=Pd(l^r|0,v^n|0,48)|0;h=D|h;v=oe(n|t|0,h|0,o|0,q|0)|0;r=D;q=Pd(o|0,q|0,1)|0;q=Ed(t|0,0,q&-2|0,D&1|0)|0;q=oe(v|0,r|0,q|0,D|0)|0;r=D;v=Rd(q^(k|w)|0,r^u|0,63)|0;o=D;u=Pd(q^(k|w)|0,r^u|0,1)|0;o=D|o;w=f+1024+(z+49<<3)|0;c[w>>2]=u|v;c[w+4>>2]=o;w=c[f+1024+(z<<3)>>2]|0;k=c[f+1024+(z<<3)+4>>2]|0;l=f+1024+(z+33<<3)|0;s=c[l>>2]|0;l=c[l+4>>2]|0;m=oe(s|0,l|0,w|0,k|0)|0;g=D;k=Pd(w|0,k|0,1)|0;k=Ed(k&-2|0,D&1|0,s|0,0)|0;k=oe(m|0,g|0,k|0,D|0)|0;g=D;m=oe(g^h|0,k^(n|t)|0,x|0,p|0)|0;w=D;p=Pd(x|0,p|0,1)|0;p=Ed(p&-2|0,D&1|0,g^h|0,0)|0;p=oe(m|0,w|0,p|0,D|0)|0;w=D;m=Rd(p^s|0,w^l|0,24)|0;x=D;l=Pd(p^s|0,w^l|0,40)|0;x=D|x;s=oe(l|m|0,x|0,k|0,g|0)|0;j=D;b=Pd(k|0,g|0,1)|0;b=Ed(m|0,0,b&-2|0,D&1|0)|0;b=oe(s|0,j|0,b|0,D|0)|0;j=D;c[f+1024+(z<<3)>>2]=b;c[f+1024+(z<<3)+4>>2]=j;s=Rd(b^(g^h)|0,j^(k^(n|t))|0,16)|0;y=D;t=Pd(b^(g^h)|0,j^(k^(n|t))|0,48)|0;y=D|y;n=f+1024+(z+113<<3)|0;c[n>>2]=t|s;c[n+4>>2]=y;y=oe(t|s|0,y|0,p|0,w|0)|0;t=D;w=Pd(p|0,w|0,1)|0;w=Ed(s|0,0,w&-2|0,D&1|0)|0;w=oe(y|0,t|0,w|0,D|0)|0;t=D;y=f+1024+(z+80<<3)|0;c[y>>2]=w;c[y+4>>2]=t;y=Rd(w^(l|m)|0,t^x|0,63)|0;s=D;x=Pd(w^(l|m)|0,t^x|0,1)|0;t=f+1024+(z+33<<3)|0;c[t>>2]=x|y;c[t+4>>2]=D|s;t=c[f+1024+((z|1)<<3)>>2]|0;s=c[f+1024+((z|1)<<3)+4>>2]|0;y=f+1024+(z+48<<3)|0;x=c[y>>2]|0;y=c[y+4>>2]|0;m=oe(x|0,y|0,t|0,s|0)|0;l=D;s=Pd(t|0,s|0,1)|0;s=Ed(s&-2|0,D&1|0,x|0,0)|0;s=oe(m|0,l|0,s|0,D|0)|0;l=D;m=f+1024+(z+96<<3)|0;t=s^c[m>>2];m=l^c[m+4>>2];w=oe(m|0,t|0,q|0,r|0)|0;p=D;r=Pd(q|0,r|0,1)|0;r=Ed(r&-2|0,D&1|0,m|0,0)|0;r=oe(w|0,p|0,r|0,D|0)|0;p=D;w=Rd(r^x|0,p^y|0,24)|0;q=D;y=Pd(r^x|0,p^y|0,40)|0;q=D|q;x=oe(y|w|0,q|0,s|0,l|0)|0;n=D;l=Pd(s|0,l|0,1)|0;l=Ed(w|0,0,l&-2|0,D&1|0)|0;l=oe(x|0,n|0,l|0,D|0)|0;n=D;c[f+1024+((z|1)<<3)>>2]=l;c[f+1024+((z|1)<<3)+4>>2]=n;x=Rd(l^m|0,n^t|0,16)|0;s=D;t=Pd(l^m|0,n^t|0,48)|0;s=D|s;n=f+1024+(z+96<<3)|0;c[n>>2]=t|x;c[n+4>>2]=s;s=oe(t|x|0,s|0,r|0,p|0)|0;t=D;p=Pd(r|0,p|0,1)|0;p=Ed(x|0,0,p&-2|0,D&1|0)|0;p=oe(s|0,t|0,p|0,D|0)|0;t=D;s=f+1024+(z+81<<3)|0;c[s>>2]=p;c[s+4>>2]=t;s=Rd(p^(y|w)|0,t^q|0,63)|0;x=D;q=Pd(p^(y|w)|0,t^q|0,1)|0;t=f+1024+(z+48<<3)|0;c[t>>2]=q|s;c[t+4>>2]=D|x;t=f+1024+(z+16<<3)|0;x=c[t>>2]|0;t=c[t+4>>2]|0;s=oe(u|v|0,o|0,x|0,t|0)|0;q=D;t=Pd(x|0,t|0,1)|0;t=Ed(t&-2|0,D&1|0,u|v|0,0)|0;t=oe(s|0,q|0,t|0,D|0)|0;q=D;s=f+1024+(z+97<<3)|0;x=t^c[s>>2];s=q^c[s+4>>2];w=f+1024+(z+64<<3)|0;y=c[w>>2]|0;w=c[w+4>>2]|0;p=oe(s|0,x|0,y|0,w|0)|0;r=D;w=Pd(y|0,w|0,1)|0;w=Ed(w&-2|0,D&1|0,s|0,0)|0;w=oe(p|0,r|0,w|0,D|0)|0;r=D;p=Rd(w^(u|v)|0,r^o|0,24)|0;y=D;o=Pd(w^(u|v)|0,r^o|0,40)|0;y=D|y;v=oe(o|p|0,y|0,t|0,q|0)|0;u=D;q=Pd(t|0,q|0,1)|0;q=Ed(p|0,0,q&-2|0,D&1|0)|0;q=oe(v|0,u|0,q|0,D|0)|0;u=D;v=f+1024+(z+16<<3)|0;c[v>>2]=q;c[v+4>>2]=u;v=Rd(q^s|0,u^x|0,16)|0;t=D;x=Pd(q^s|0,u^x|0,48)|0;t=D|t;u=f+1024+(z+97<<3)|0;c[u>>2]=x|v;c[u+4>>2]=t;t=oe(x|v|0,t|0,w|0,r|0)|0;x=D;r=Pd(w|0,r|0,1)|0;r=Ed(v|0,0,r&-2|0,D&1|0)|0;r=oe(t|0,x|0,r|0,D|0)|0;x=D;t=f+1024+(z+64<<3)|0;c[t>>2]=r;c[t+4>>2]=x;t=Rd(r^(o|p)|0,x^y|0,63)|0;v=D;y=Pd(r^(o|p)|0,x^y|0,1)|0;x=f+1024+(z+49<<3)|0;c[x>>2]=y|t;c[x+4>>2]=D|v;x=f+1024+(z+17<<3)|0;v=c[x>>2]|0;x=c[x+4>>2]|0;t=f+1024+(z+32<<3)|0;y=c[t>>2]|0;t=c[t+4>>2]|0;p=oe(y|0,t|0,v|0,x|0)|0;o=D;x=Pd(v|0,x|0,1)|0;x=Ed(x&-2|0,D&1|0,y|0,0)|0;x=oe(p|0,o|0,x|0,D|0)|0;o=D;p=f+1024+(z+112<<3)|0;v=x^c[p>>2];p=o^c[p+4>>2];r=f+1024+(z+65<<3)|0;w=c[r>>2]|0;r=c[r+4>>2]|0;u=oe(p|0,v|0,w|0,r|0)|0;s=D;r=Pd(w|0,r|0,1)|0;r=Ed(r&-2|0,D&1|0,p|0,0)|0;r=oe(u|0,s|0,r|0,D|0)|0;s=D;u=Rd(r^y|0,s^t|0,24)|0;w=D;t=Pd(r^y|0,s^t|0,40)|0;w=D|w;y=oe(t|u|0,w|0,x|0,o|0)|0;q=D;o=Pd(x|0,o|0,1)|0;o=Ed(u|0,0,o&-2|0,D&1|0)|0;o=oe(y|0,q|0,o|0,D|0)|0;q=D;y=f+1024+(z+17<<3)|0;c[y>>2]=o;c[y+4>>2]=q;y=Rd(o^p|0,q^v|0,16)|0;x=D;v=Pd(o^p|0,q^v|0,48)|0;x=D|x;q=f+1024+(z+112<<3)|0;c[q>>2]=v|y;c[q+4>>2]=x;x=oe(v|y|0,x|0,r|0,s|0)|0;v=D;s=Pd(r|0,s|0,1)|0;s=Ed(y|0,0,s&-2|0,D&1|0)|0;s=oe(x|0,v|0,s|0,D|0)|0;v=D;x=f+1024+(z+65<<3)|0;c[x>>2]=s;c[x+4>>2]=v;x=Rd(s^(t|u)|0,v^w|0,63)|0;y=D;w=Pd(s^(t|u)|0,v^w|0,1)|0;z=f+1024+(z+32<<3)|0;c[z>>2]=w|x;c[z+4>>2]=D|y;a=a+1|0}while((a|0)!=8);ef(d,f);gd(d,f+1024|0);i=e;return}function na(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;I=i;s=i=i+63&-64;i=i+16|0;do if(a>>>0<245){r=a>>>0<11?16:a+11&-8;q=c[8491]|0;if(q>>>(r>>>3)&3|0){b=34004+((q>>>(r>>>3)&1^1)+(r>>>3)<<1<<2)|0;a=c[b+8>>2]|0;d=c[a+8>>2]|0;do if((b|0)!=(d|0)){if(d>>>0<(c[8495]|0)>>>0)ba();if((c[d+12>>2]|0)==(a|0)){c[d+12>>2]=b;c[b+8>>2]=d;break}else ba()}else c[8491]=q&~(1<<(q>>>(r>>>3)&1^1)+(r>>>3));while(0);H=(q>>>(r>>>3)&1^1)+(r>>>3)<<3;c[a+4>>2]=H|3;c[a+H+4>>2]=c[a+H+4>>2]|1;H=a+8|0;i=I;return H|0}p=c[8493]|0;if(r>>>0>p>>>0){if(q>>>(r>>>3)|0){b=q>>>(r>>>3)<<(r>>>3)&(2<<(r>>>3)|0-(2<<(r>>>3)));e=((b&0-b)+-1|0)>>>(((b&0-b)+-1|0)>>>12&16);d=e>>>(e>>>5&8)>>>(e>>>(e>>>5&8)>>>2&4);d=(e>>>5&8|((b&0-b)+-1|0)>>>12&16|e>>>(e>>>5&8)>>>2&4|d>>>1&2|d>>>(d>>>1&2)>>>1&1)+(d>>>(d>>>1&2)>>>(d>>>(d>>>1&2)>>>1&1))|0;e=c[34004+(d<<1<<2)+8>>2]|0;b=c[e+8>>2]|0;do if((34004+(d<<1<<2)|0)!=(b|0)){if(b>>>0<(c[8495]|0)>>>0)ba();if((c[b+12>>2]|0)==(e|0)){c[b+12>>2]=34004+(d<<1<<2);c[34004+(d<<1<<2)+8>>2]=b;f=q;break}else ba()}else{c[8491]=q&~(1<<d);f=q&~(1<<d)}while(0);c[e+4>>2]=r|3;c[e+r+4>>2]=(d<<3)-r|1;c[e+r+((d<<3)-r)>>2]=(d<<3)-r;if(p|0){a=c[8496]|0;if(f&1<<(p>>>3)){b=c[34004+(p>>>3<<1<<2)+8>>2]|0;if(b>>>0<(c[8495]|0)>>>0)ba();else{h=b;j=34004+(p>>>3<<1<<2)+8|0}}else{c[8491]=f|1<<(p>>>3);h=34004+(p>>>3<<1<<2)|0;j=34004+(p>>>3<<1<<2)+8|0}c[j>>2]=a;c[h+12>>2]=a;c[a+8>>2]=h;c[a+12>>2]=34004+(p>>>3<<1<<2)}c[8493]=(d<<3)-r;c[8496]=e+r;H=e+8|0;i=I;return H|0}l=c[8492]|0;if(l){a=((l&0-l)+-1|0)>>>(((l&0-l)+-1|0)>>>12&16);k=a>>>(a>>>5&8)>>>(a>>>(a>>>5&8)>>>2&4);k=c[34268+((a>>>5&8|((l&0-l)+-1|0)>>>12&16|a>>>(a>>>5&8)>>>2&4|k>>>1&2|k>>>(k>>>1&2)>>>1&1)+(k>>>(k>>>1&2)>>>(k>>>(k>>>1&2)>>>1&1))<<2)>>2]|0;a=k;j=k;k=(c[k+4>>2]&-8)-r|0;while(1){b=c[a+16>>2]|0;if(!b){b=c[a+20>>2]|0;if(!b)break}H=(c[b+4>>2]&-8)-r|0;G=H>>>0<k>>>0;a=b;j=G?b:j;k=G?H:k}f=c[8495]|0;if(j>>>0<f>>>0)ba();h=j+r|0;if(j>>>0>=h>>>0)ba();g=c[j+24>>2]|0;b=c[j+12>>2]|0;do if((b|0)==(j|0)){a=j+20|0;b=c[a>>2]|0;if(!b){a=j+16|0;b=c[a>>2]|0;if(!b){m=0;break}}while(1){d=b+20|0;e=c[d>>2]|0;if(e|0){b=e;a=d;continue}d=b+16|0;e=c[d>>2]|0;if(!e)break;else{b=e;a=d}}if(a>>>0<f>>>0)ba();else{c[a>>2]=0;m=b;break}}else{a=c[j+8>>2]|0;if(a>>>0<f>>>0)ba();if((c[a+12>>2]|0)!=(j|0))ba();if((c[b+8>>2]|0)==(j|0)){c[a+12>>2]=b;c[b+8>>2]=a;m=b;break}else ba()}while(0);do if(g|0){b=c[j+28>>2]|0;if((j|0)==(c[34268+(b<<2)>>2]|0)){c[34268+(b<<2)>>2]=m;if(!m){c[8492]=l&~(1<<b);break}}else{if(g>>>0<(c[8495]|0)>>>0)ba();if((c[g+16>>2]|0)==(j|0))c[g+16>>2]=m;else c[g+20>>2]=m;if(!m)break}a=c[8495]|0;if(m>>>0<a>>>0)ba();c[m+24>>2]=g;b=c[j+16>>2]|0;do if(b|0)if(b>>>0<a>>>0)ba();else{c[m+16>>2]=b;c[b+24>>2]=m;break}while(0);b=c[j+20>>2]|0;if(b|0)if(b>>>0<(c[8495]|0)>>>0)ba();else{c[m+20>>2]=b;c[b+24>>2]=m;break}}while(0);if(k>>>0<16){H=k+r|0;c[j+4>>2]=H|3;H=j+H+4|0;c[H>>2]=c[H>>2]|1}else{c[j+4>>2]=r|3;c[h+4>>2]=k|1;c[h+k>>2]=k;if(p|0){a=c[8496]|0;if(q&1<<(p>>>3)){b=c[34004+(p>>>3<<1<<2)+8>>2]|0;if(b>>>0<(c[8495]|0)>>>0)ba();else{n=b;o=34004+(p>>>3<<1<<2)+8|0}}else{c[8491]=q|1<<(p>>>3);n=34004+(p>>>3<<1<<2)|0;o=34004+(p>>>3<<1<<2)+8|0}c[o>>2]=a;c[n+12>>2]=a;c[a+8>>2]=n;c[a+12>>2]=34004+(p>>>3<<1<<2)}c[8493]=k;c[8496]=h}H=j+8|0;i=I;return H|0}}}else if(a>>>0<=4294967231){r=a+11&-8;l=c[8492]|0;if(l){if((a+11|0)>>>8)if(r>>>0>16777215)k=31;else{k=(a+11|0)>>>8<<((((a+11|0)>>>8)+1048320|0)>>>16&8);k=14-((k+520192|0)>>>16&4|(((a+11|0)>>>8)+1048320|0)>>>16&8|((k<<((k+520192|0)>>>16&4))+245760|0)>>>16&2)+(k<<((k+520192|0)>>>16&4)<<(((k<<((k+520192|0)>>>16&4))+245760|0)>>>16&2)>>>15)|0;k=r>>>(k+7|0)&1|k<<1}else k=0;a=c[34268+(k<<2)>>2]|0;a:do if(!a){a=0;e=0;d=0-r|0;A=86}else{e=0;d=0-r|0;j=r<<((k|0)==31?0:25-(k>>>1)|0);h=0;while(1){f=(c[a+4>>2]&-8)-r|0;if(f>>>0<d>>>0)if(!f){h=a;d=0;e=a;A=90;break a}else{e=a;d=f}f=c[a+20>>2]|0;a=c[a+16+(j>>>31<<2)>>2]|0;h=(f|0)==0|(f|0)==(a|0)?h:f;f=(a|0)==0;if(f){a=h;A=86;break}else j=j<<(f&1^1)}}while(0);if((A|0)==86){if((a|0)==0&(e|0)==0){a=2<<k;if(!(l&(a|0-a)))break;n=(l&(a|0-a)&0-(l&(a|0-a)))+-1|0;o=n>>>(n>>>12&16)>>>(n>>>(n>>>12&16)>>>5&8);a=o>>>(o>>>2&4)>>>(o>>>(o>>>2&4)>>>1&2);a=c[34268+((n>>>(n>>>12&16)>>>5&8|n>>>12&16|o>>>2&4|o>>>(o>>>2&4)>>>1&2|a>>>1&1)+(a>>>(a>>>1&1))<<2)>>2]|0}if(!a){k=e;j=d}else{h=e;e=a;A=90}}if((A|0)==90)while(1){A=0;f=(c[e+4>>2]&-8)-r|0;a=f>>>0<d>>>0;d=a?f:d;a=a?e:h;f=c[e+16>>2]|0;if(f|0){h=a;e=f;A=90;continue}e=c[e+20>>2]|0;if(!e){k=a;j=d;break}else{h=a;A=90}}if((k|0)!=0?j>>>0<((c[8493]|0)-r|0)>>>0:0){f=c[8495]|0;if(k>>>0<f>>>0)ba();h=k+r|0;if(k>>>0>=h>>>0)ba();g=c[k+24>>2]|0;b=c[k+12>>2]|0;do if((b|0)==(k|0)){a=k+20|0;b=c[a>>2]|0;if(!b){a=k+16|0;b=c[a>>2]|0;if(!b){p=0;break}}while(1){d=b+20|0;e=c[d>>2]|0;if(e|0){b=e;a=d;continue}d=b+16|0;e=c[d>>2]|0;if(!e)break;else{b=e;a=d}}if(a>>>0<f>>>0)ba();else{c[a>>2]=0;p=b;break}}else{a=c[k+8>>2]|0;if(a>>>0<f>>>0)ba();if((c[a+12>>2]|0)!=(k|0))ba();if((c[b+8>>2]|0)==(k|0)){c[a+12>>2]=b;c[b+8>>2]=a;p=b;break}else ba()}while(0);do if(g){b=c[k+28>>2]|0;if((k|0)==(c[34268+(b<<2)>>2]|0)){c[34268+(b<<2)>>2]=p;if(!p){c[8492]=l&~(1<<b);y=l&~(1<<b);break}}else{if(g>>>0<(c[8495]|0)>>>0)ba();if((c[g+16>>2]|0)==(k|0))c[g+16>>2]=p;else c[g+20>>2]=p;if(!p){y=l;break}}a=c[8495]|0;if(p>>>0<a>>>0)ba();c[p+24>>2]=g;b=c[k+16>>2]|0;do if(b|0)if(b>>>0<a>>>0)ba();else{c[p+16>>2]=b;c[b+24>>2]=p;break}while(0);b=c[k+20>>2]|0;if(b)if(b>>>0<(c[8495]|0)>>>0)ba();else{c[p+20>>2]=b;c[b+24>>2]=p;y=l;break}else y=l}else y=l;while(0);do if(j>>>0>=16){c[k+4>>2]=r|3;c[h+4>>2]=j|1;c[h+j>>2]=j;a=j>>>3;if(j>>>0<256){b=c[8491]|0;if(b&1<<a){b=c[34004+(a<<1<<2)+8>>2]|0;if(b>>>0<(c[8495]|0)>>>0)ba();else{q=b;v=34004+(a<<1<<2)+8|0}}else{c[8491]=b|1<<a;q=34004+(a<<1<<2)|0;v=34004+(a<<1<<2)+8|0}c[v>>2]=h;c[q+12>>2]=h;c[h+8>>2]=q;c[h+12>>2]=34004+(a<<1<<2);break}b=j>>>8;if(b)if(j>>>0>16777215)b=31;else{H=b<<((b+1048320|0)>>>16&8)<<(((b<<((b+1048320|0)>>>16&8))+520192|0)>>>16&4);b=14-(((b<<((b+1048320|0)>>>16&8))+520192|0)>>>16&4|(b+1048320|0)>>>16&8|(H+245760|0)>>>16&2)+(H<<((H+245760|0)>>>16&2)>>>15)|0;b=j>>>(b+7|0)&1|b<<1}else b=0;d=34268+(b<<2)|0;c[h+28>>2]=b;c[h+16+4>>2]=0;c[h+16>>2]=0;a=1<<b;if(!(y&a)){c[8492]=y|a;c[d>>2]=h;c[h+24>>2]=d;c[h+12>>2]=h;c[h+8>>2]=h;break}a=j<<((b|0)==31?0:25-(b>>>1)|0);e=c[d>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(j|0)){A=148;break}d=e+16+(a>>>31<<2)|0;b=c[d>>2]|0;if(!b){A=145;break}else{a=a<<1;e=b}}if((A|0)==145)if(d>>>0<(c[8495]|0)>>>0)ba();else{c[d>>2]=h;c[h+24>>2]=e;c[h+12>>2]=h;c[h+8>>2]=h;break}else if((A|0)==148){b=e+8|0;a=c[b>>2]|0;H=c[8495]|0;if(a>>>0>=H>>>0&e>>>0>=H>>>0){c[a+12>>2]=h;c[b>>2]=h;c[h+8>>2]=a;c[h+12>>2]=e;c[h+24>>2]=0;break}else ba()}}else{H=j+r|0;c[k+4>>2]=H|3;H=k+H+4|0;c[H>>2]=c[H>>2]|1}while(0);H=k+8|0;i=I;return H|0}}}else r=-1;while(0);d=c[8493]|0;if(d>>>0>=r>>>0){b=d-r|0;a=c[8496]|0;if(b>>>0>15){H=a+r|0;c[8496]=H;c[8493]=b;c[H+4>>2]=b|1;c[H+b>>2]=b;c[a+4>>2]=r|3}else{c[8493]=0;c[8496]=0;c[a+4>>2]=d|3;c[a+d+4>>2]=c[a+d+4>>2]|1}H=a+8|0;i=I;return H|0}f=c[8494]|0;if(f>>>0>r>>>0){F=f-r|0;c[8494]=F;H=c[8497]|0;G=H+r|0;c[8497]=G;c[G+4>>2]=F|1;c[H+4>>2]=r|3;H=H+8|0;i=I;return H|0}if(!(c[8609]|0)){c[8611]=4096;c[8610]=4096;c[8612]=-1;c[8613]=-1;c[8614]=0;c[8602]=0;c[s>>2]=s&-16^1431655768;c[8609]=s&-16^1431655768;a=4096}else a=c[8611]|0;h=r+48|0;j=r+47|0;l=a+j|0;k=0-a|0;if((l&k)>>>0<=r>>>0){H=0;i=I;return H|0}a=c[8601]|0;if(a|0?(y=c[8599]|0,(y+(l&k)|0)>>>0<=y>>>0?1:(y+(l&k)|0)>>>0>a>>>0):0){H=0;i=I;return H|0}b:do if(!(c[8602]&4)){e=c[8497]|0;c:do if(e){d=34412;while(1){a=c[d>>2]|0;if(a>>>0<=e>>>0?(t=d+4|0,(a+(c[t>>2]|0)|0)>>>0>e>>>0):0)break;a=c[d+8>>2]|0;if(!a){A=172;break c}else d=a}if((l-f&k)>>>0<2147483647){a=Pc(l-f&k|0)|0;if((a|0)==((c[d>>2]|0)+(c[t>>2]|0)|0)){if((a|0)!=(-1|0)){h=l-f&k;g=a;A=190;break b}}else{b=l-f&k;A=180}}}else A=172;while(0);do if(((A|0)==172?(g=Pc(0)|0,(g|0)!=(-1|0)):0)?(b=c[8610]|0,b=((b+-1&g|0)==0?0:(b+-1+g&0-b)-g|0)+(l&k)|0,u=c[8599]|0,b>>>0>r>>>0&b>>>0<2147483647):0){y=c[8601]|0;if(y|0?(b+u|0)>>>0<=u>>>0|(b+u|0)>>>0>y>>>0:0)break;a=Pc(b|0)|0;if((a|0)==(g|0)){h=b;A=190;break b}else A=180}while(0);d:do if((A|0)==180){d=0-b|0;do if(h>>>0>b>>>0&(b>>>0<2147483647&(a|0)!=(-1|0))?(w=c[8611]|0,w=j-b+w&0-w,w>>>0<2147483647):0)if((Pc(w|0)|0)==(-1|0)){Pc(d|0)|0;break d}else{b=w+b|0;break}while(0);if((a|0)!=(-1|0)){h=b;g=a;A=190;break b}}while(0);c[8602]=c[8602]|4;A=187}else A=187;while(0);if((((A|0)==187?(l&k)>>>0<2147483647:0)?(z=Pc(l&k|0)|0,x=Pc(0)|0,z>>>0<x>>>0&((z|0)!=(-1|0)&(x|0)!=(-1|0))):0)?(x-z|0)>>>0>(r+40|0)>>>0:0){h=x-z|0;g=z;A=190}if((A|0)==190){b=(c[8599]|0)+h|0;c[8599]=b;if(b>>>0>(c[8600]|0)>>>0)c[8600]=b;j=c[8497]|0;do if(j){b=34412;while(1){a=c[b>>2]|0;d=b+4|0;e=c[d>>2]|0;if((g|0)==(a+e|0)){A=200;break}f=c[b+8>>2]|0;if(!f)break;else b=f}if(((A|0)==200?(c[b+12>>2]&8|0)==0:0)?j>>>0<g>>>0&j>>>0>=a>>>0:0){c[d>>2]=e+h;G=(j+8&7|0)==0?0:0-(j+8)&7;H=h-G+(c[8494]|0)|0;c[8497]=j+G;c[8494]=H;c[j+G+4>>2]=H|1;c[j+G+H+4>>2]=40;c[8498]=c[8613];break}b=c[8495]|0;if(g>>>0<b>>>0){c[8495]=g;k=g}else k=b;a=g+h|0;b=34412;while(1){if((c[b>>2]|0)==(a|0)){A=208;break}b=c[b+8>>2]|0;if(!b){a=34412;break}}if((A|0)==208)if(!(c[b+12>>2]&8)){c[b>>2]=g;m=b+4|0;c[m>>2]=(c[m>>2]|0)+h;m=g+8|0;m=g+((m&7|0)==0?0:0-m&7)|0;b=a+((a+8&7|0)==0?0:0-(a+8)&7)|0;l=m+r|0;f=b-m-r|0;c[m+4>>2]=r|3;do if((b|0)!=(j|0)){if((b|0)==(c[8496]|0)){H=(c[8493]|0)+f|0;c[8493]=H;c[8496]=l;c[l+4>>2]=H|1;c[l+H>>2]=H;break}j=c[b+4>>2]|0;if((j&3|0)==1){e:do if(j>>>0>=256){h=c[b+24>>2]|0;a=c[b+12>>2]|0;do if((a|0)==(b|0)){a=c[b+16+4>>2]|0;if(!a){a=c[b+16>>2]|0;if(!a){F=0;break}else g=b+16|0}else g=b+16+4|0;while(1){d=a+20|0;e=c[d>>2]|0;if(e|0){a=e;g=d;continue}d=a+16|0;e=c[d>>2]|0;if(!e)break;else{a=e;g=d}}if(g>>>0<k>>>0)ba();else{c[g>>2]=0;F=a;break}}else{d=c[b+8>>2]|0;if(d>>>0<k>>>0)ba();if((c[d+12>>2]|0)!=(b|0))ba();if((c[a+8>>2]|0)==(b|0)){c[d+12>>2]=a;c[a+8>>2]=d;F=a;break}else ba()}while(0);if(!h)break;a=c[b+28>>2]|0;do if((b|0)!=(c[34268+(a<<2)>>2]|0)){if(h>>>0<(c[8495]|0)>>>0)ba();if((c[h+16>>2]|0)==(b|0))c[h+16>>2]=F;else c[h+20>>2]=F;if(!F)break e}else{c[34268+(a<<2)>>2]=F;if(F|0)break;c[8492]=c[8492]&~(1<<a);break e}while(0);d=c[8495]|0;if(F>>>0<d>>>0)ba();c[F+24>>2]=h;a=c[b+16>>2]|0;do if(a|0)if(a>>>0<d>>>0)ba();else{c[F+16>>2]=a;c[a+24>>2]=F;break}while(0);a=c[b+16+4>>2]|0;if(!a)break;if(a>>>0<(c[8495]|0)>>>0)ba();else{c[F+20>>2]=a;c[a+24>>2]=F;break}}else{a=c[b+8>>2]|0;d=c[b+12>>2]|0;do if((a|0)!=(34004+(j>>>3<<1<<2)|0)){if(a>>>0<k>>>0)ba();if((c[a+12>>2]|0)==(b|0))break;ba()}while(0);if((d|0)==(a|0)){c[8491]=c[8491]&~(1<<(j>>>3));break}do if((d|0)==(34004+(j>>>3<<1<<2)|0))E=d+8|0;else{if(d>>>0<k>>>0)ba();if((c[d+8>>2]|0)==(b|0)){E=d+8|0;break}ba()}while(0);c[a+12>>2]=d;c[E>>2]=a}while(0);b=b+(j&-8)|0;f=(j&-8)+f|0}a=b+4|0;c[a>>2]=c[a>>2]&-2;c[l+4>>2]=f|1;c[l+f>>2]=f;a=f>>>3;if(f>>>0<256){b=c[8491]|0;do if(!(b&1<<a)){c[8491]=b|1<<a;G=34004+(a<<1<<2)|0;H=34004+(a<<1<<2)+8|0}else{b=c[34004+(a<<1<<2)+8>>2]|0;if(b>>>0>=(c[8495]|0)>>>0){G=b;H=34004+(a<<1<<2)+8|0;break}ba()}while(0);c[H>>2]=l;c[G+12>>2]=l;c[l+8>>2]=G;c[l+12>>2]=34004+(a<<1<<2);break}b=f>>>8;do if(!b)b=0;else{if(f>>>0>16777215){b=31;break}H=b<<((b+1048320|0)>>>16&8)<<(((b<<((b+1048320|0)>>>16&8))+520192|0)>>>16&4);b=14-(((b<<((b+1048320|0)>>>16&8))+520192|0)>>>16&4|(b+1048320|0)>>>16&8|(H+245760|0)>>>16&2)+(H<<((H+245760|0)>>>16&2)>>>15)|0;b=f>>>(b+7|0)&1|b<<1}while(0);e=34268+(b<<2)|0;c[l+28>>2]=b;c[l+16+4>>2]=0;c[l+16>>2]=0;a=c[8492]|0;d=1<<b;if(!(a&d)){c[8492]=a|d;c[e>>2]=l;c[l+24>>2]=e;c[l+12>>2]=l;c[l+8>>2]=l;break}a=f<<((b|0)==31?0:25-(b>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f|0)){A=278;break}d=e+16+(a>>>31<<2)|0;b=c[d>>2]|0;if(!b){A=275;break}else{a=a<<1;e=b}}if((A|0)==275)if(d>>>0<(c[8495]|0)>>>0)ba();else{c[d>>2]=l;c[l+24>>2]=e;c[l+12>>2]=l;c[l+8>>2]=l;break}else if((A|0)==278){b=e+8|0;a=c[b>>2]|0;H=c[8495]|0;if(a>>>0>=H>>>0&e>>>0>=H>>>0){c[a+12>>2]=l;c[b>>2]=l;c[l+8>>2]=a;c[l+12>>2]=e;c[l+24>>2]=0;break}else ba()}}else{H=(c[8494]|0)+f|0;c[8494]=H;c[8497]=l;c[l+4>>2]=H|1}while(0);H=m+8|0;i=I;return H|0}else a=34412;while(1){b=c[a>>2]|0;if(b>>>0<=j>>>0?(B=b+(c[a+4>>2]|0)|0,B>>>0>j>>>0):0)break;a=c[a+8>>2]|0}f=B+-47+((B+-47+8&7|0)==0?0:0-(B+-47+8)&7)|0;f=f>>>0<(j+16|0)>>>0?j:f;b=g+8|0;b=(b&7|0)==0?0:0-b&7;H=g+b|0;b=h+-40-b|0;c[8497]=H;c[8494]=b;c[H+4>>2]=b|1;c[H+b+4>>2]=40;c[8498]=c[8613];c[f+4>>2]=27;c[f+8>>2]=c[8603];c[f+8+4>>2]=c[8604];c[f+8+8>>2]=c[8605];c[f+8+12>>2]=c[8606];c[8603]=g;c[8604]=h;c[8606]=0;c[8605]=f+8;b=f+24|0;do{b=b+4|0;c[b>>2]=7}while((b+4|0)>>>0<B>>>0);if((f|0)!=(j|0)){c[f+4>>2]=c[f+4>>2]&-2;c[j+4>>2]=f-j|1;c[f>>2]=f-j;if((f-j|0)>>>0<256){a=34004+((f-j|0)>>>3<<1<<2)|0;b=c[8491]|0;if(b&1<<((f-j|0)>>>3)){b=c[a+8>>2]|0;if(b>>>0<(c[8495]|0)>>>0)ba();else{C=b;D=a+8|0}}else{c[8491]=b|1<<((f-j|0)>>>3);C=a;D=a+8|0}c[D>>2]=j;c[C+12>>2]=j;c[j+8>>2]=C;c[j+12>>2]=a;break}if((f-j|0)>>>8)if((f-j|0)>>>0>16777215)b=31;else{b=(f-j|0)>>>8<<((((f-j|0)>>>8)+1048320|0)>>>16&8);b=14-((b+520192|0)>>>16&4|(((f-j|0)>>>8)+1048320|0)>>>16&8|((b<<((b+520192|0)>>>16&4))+245760|0)>>>16&2)+(b<<((b+520192|0)>>>16&4)<<(((b<<((b+520192|0)>>>16&4))+245760|0)>>>16&2)>>>15)|0;b=(f-j|0)>>>(b+7|0)&1|b<<1}else b=0;e=34268+(b<<2)|0;c[j+28>>2]=b;c[j+20>>2]=0;c[j+16>>2]=0;a=c[8492]|0;d=1<<b;if(!(a&d)){c[8492]=a|d;c[e>>2]=j;c[j+24>>2]=e;c[j+12>>2]=j;c[j+8>>2]=j;break}a=f-j<<((b|0)==31?0:25-(b>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f-j|0)){A=304;break}d=e+16+(a>>>31<<2)|0;b=c[d>>2]|0;if(!b){A=301;break}else{a=a<<1;e=b}}if((A|0)==301)if(d>>>0<(c[8495]|0)>>>0)ba();else{c[d>>2]=j;c[j+24>>2]=e;c[j+12>>2]=j;c[j+8>>2]=j;break}else if((A|0)==304){b=e+8|0;a=c[b>>2]|0;H=c[8495]|0;if(a>>>0>=H>>>0&e>>>0>=H>>>0){c[a+12>>2]=j;c[b>>2]=j;c[j+8>>2]=a;c[j+12>>2]=e;c[j+24>>2]=0;break}else ba()}}}else{H=c[8495]|0;if((H|0)==0|g>>>0<H>>>0)c[8495]=g;c[8603]=g;c[8604]=h;c[8606]=0;c[8500]=c[8609];c[8499]=-1;b=0;do{H=34004+(b<<1<<2)|0;c[H+12>>2]=H;c[H+8>>2]=H;b=b+1|0}while((b|0)!=32);H=g+8|0;H=(H&7|0)==0?0:0-H&7;G=g+H|0;H=h+-40-H|0;c[8497]=G;c[8494]=H;c[G+4>>2]=H|1;c[G+H+4>>2]=40;c[8498]=c[8613]}while(0);b=c[8494]|0;if(b>>>0>r>>>0){F=b-r|0;c[8494]=F;H=c[8497]|0;G=H+r|0;c[8497]=G;c[G+4>>2]=F|1;c[H+4>>2]=r|3;H=H+8|0;i=I;return H|0}}c[(Zf()|0)>>2]=12;H=0;i=I;return H|0}
function oa(b){b=b|0;var c=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0;e=d[b>>0]|0;j=Pd(d[b+1>>0]|0|0,0,8)|0;S=D;_=d[b+2>>0]|0;x=Pd(_|0,0,16)|0;Z=Pd(d[b+3>>0]|0|0,0,8)|0;C=D;Y=Pd(d[b+4>>0]|0|0,0,16)|0;C=C|D;m=d[b+5>>0]|0;n=Pd(m|0,0,24)|0;C=Rd(Z|_|Y|n|0,C|D|0,5)|0;n=Pd(d[b+6>>0]|0|0,0,8)|0;Y=D;_=d[b+7>>0]|0;Z=Pd(_|0,0,16)|0;Y=Rd(n|m|Z|0,Y|D|0,2)|0;Z=Pd(d[b+8>>0]|0|0,0,8)|0;m=D;n=Pd(d[b+9>>0]|0|0,0,16)|0;m=m|D;na=d[b+10>>0]|0;va=Pd(na|0,0,24)|0;m=Rd(Z|_|n|va|0,m|D|0,7)|0;va=Pd(d[b+11>>0]|0|0,0,8)|0;n=D;_=Pd(d[b+12>>0]|0|0,0,16)|0;n=n|D;Z=d[b+13>>0]|0;oa=Pd(Z|0,0,24)|0;n=Rd(va|na|_|oa|0,n|D|0,4)|0;oa=Pd(d[b+14>>0]|0|0,0,8)|0;_=D;na=d[b+15>>0]|0;va=Pd(na|0,0,16)|0;_=Rd(oa|Z|va|0,_|D|0,1)|0;va=Pd(d[b+16>>0]|0|0,0,8)|0;Z=D;oa=Pd(d[b+17>>0]|0|0,0,16)|0;Z=Z|D;xa=d[b+18>>0]|0;ya=Pd(xa|0,0,24)|0;Z=Rd(va|na|oa|ya|0,Z|D|0,6)|0;ya=Pd(d[b+19>>0]|0|0,0,8)|0;oa=D;na=Pd(d[b+20>>0]|0|0,0,16)|0;oa=Rd(ya|xa|na|0,oa|D|0,3)|0;na=D;xa=d[b+21>>0]|0;ya=Pd(d[b+22>>0]|0|0,0,8)|0;va=D;N=d[b+23>>0]|0;wa=Pd(N|0,0,16)|0;U=Pd(d[b+24>>0]|0|0,0,8)|0;ka=D;ua=Pd(d[b+25>>0]|0|0,0,16)|0;ka=ka|D;fa=d[b+26>>0]|0;Ca=Pd(fa|0,0,24)|0;ka=Rd(U|N|ua|Ca|0,ka|D|0,5)|0;Ca=Pd(d[b+27>>0]|0|0,0,8)|0;ua=D;N=d[b+28>>0]|0;U=Pd(N|0,0,16)|0;ua=Rd(Ca|fa|U|0,ua|D|0,2)|0;U=Pd(d[b+29>>0]|0|0,0,8)|0;fa=D;Ca=Pd(d[b+30>>0]|0|0,0,16)|0;fa=fa|D;A=d[b+31>>0]|0;g=Pd(A|0,0,24)|0;fa=Rd(U|N|Ca|g|0,fa|D|0,7)|0;g=Pd(d[b+32>>0]|0|0,0,8)|0;Ca=D;N=Pd(d[b+33>>0]|0|0,0,16)|0;Ca=Ca|D;U=d[b+34>>0]|0;I=Pd(U|0,0,24)|0;Ca=Rd(g|A|N|I|0,Ca|D|0,4)|0;I=Pd(d[b+35>>0]|0|0,0,8)|0;N=D;A=d[b+36>>0]|0;g=Pd(A|0,0,16)|0;N=Rd(I|U|g|0,N|D|0,1)|0;g=Pd(d[b+37>>0]|0|0,0,8)|0;U=D;I=Pd(d[b+38>>0]|0|0,0,16)|0;U=U|D;K=d[b+39>>0]|0;L=Pd(K|0,0,24)|0;U=Rd(g|A|I|L|0,U|D|0,6)|0;L=Pd(d[b+40>>0]|0|0,0,8)|0;I=D;A=Pd(d[b+41>>0]|0|0,0,16)|0;I=Rd(L|K|A|0,I|D|0,3)|0;A=D;K=d[b+42>>0]|0;L=Pd(d[b+43>>0]|0|0,0,8)|0;g=D;X=d[b+44>>0]|0;W=Pd(X|0,0,16)|0;G=Pd(d[b+45>>0]|0|0,0,8)|0;t=D;ha=Pd(d[b+46>>0]|0|0,0,16)|0;t=t|D;Da=d[b+47>>0]|0;u=Pd(Da|0,0,24)|0;t=Rd(G|X|ha|u|0,t|D|0,5)|0;u=Pd(d[b+48>>0]|0|0,0,8)|0;ha=D;X=d[b+49>>0]|0;G=Pd(X|0,0,16)|0;ha=Rd(u|Da|G|0,ha|D|0,2)|0;G=Pd(d[b+50>>0]|0|0,0,8)|0;Da=D;u=Pd(d[b+51>>0]|0|0,0,16)|0;Da=Da|D;s=d[b+52>>0]|0;q=Pd(s|0,0,24)|0;Da=Rd(G|X|u|q|0,Da|D|0,7)|0;q=Pd(d[b+53>>0]|0|0,0,8)|0;u=D;X=Pd(d[b+54>>0]|0|0,0,16)|0;u=u|D;G=d[b+55>>0]|0;f=Pd(G|0,0,24)|0;u=Rd(q|s|X|f|0,u|D|0,4)|0;f=Pd(d[b+56>>0]|0|0,0,8)|0;X=D;s=d[b+57>>0]|0;q=Pd(s|0,0,16)|0;X=Rd(f|G|q|0,X|D|0,1)|0;q=Pd(d[b+58>>0]|0|0,0,8)|0;G=D;f=Pd(d[b+59>>0]|0|0,0,16)|0;G=G|D;E=d[b+60>>0]|0;v=Pd(E|0,0,24)|0;G=Rd(q|s|f|v|0,G|D|0,6)|0;v=Pd(d[b+61>>0]|0|0,0,8)|0;f=D;s=Pd(d[b+62>>0]|0|0,0,16)|0;f=f|D;q=Pd(d[b+63>>0]|0|0,0,24)|0;f=Rd(v|E|s|q|0,f|D|0,3)|0;q=D;s=Ed(f|0,q|0,666643,0)|0;E=D;v=Ed(f|0,q|0,470296,0)|0;o=D;B=Ed(f|0,q|0,654183,0)|0;Q=D;$=Ed(f|0,q|0,-997805,-1)|0;i=D;h=Ed(f|0,q|0,136657,0)|0;p=D;q=Ed(f|0,q|0,-683901,-1)|0;g=oe(q|0,D|0,L|K|W&2031616|0,g|0)|0;W=D;K=Ed(G&2097151|0,0,666643,0)|0;L=D;q=Ed(G&2097151|0,0,470296,0)|0;f=D;qa=Ed(G&2097151|0,0,654183,0)|0;l=D;J=Ed(G&2097151|0,0,-997805,-1)|0;w=D;V=Ed(G&2097151|0,0,136657,0)|0;P=D;G=Ed(G&2097151|0,0,-683901,-1)|0;r=D;c=Ed(X&2097151|0,0,666643,0)|0;O=D;T=Ed(X&2097151|0,0,470296,0)|0;ga=D;aa=Ed(X&2097151|0,0,654183,0)|0;y=D;za=Ed(X&2097151|0,0,-997805,-1)|0;pa=D;H=Ed(X&2097151|0,0,136657,0)|0;k=D;X=Ed(X&2097151|0,0,-683901,-1)|0;U=oe(X|0,D|0,U&2097151|0,0)|0;P=oe(U|0,D|0,V|0,P|0)|0;i=oe(P|0,D|0,$|0,i|0)|0;$=D;P=Ed(u&2097151|0,0,666643,0)|0;V=D;U=Ed(u&2097151|0,0,470296,0)|0;X=D;ra=Ed(u&2097151|0,0,654183,0)|0;z=D;ca=Ed(u&2097151|0,0,-997805,-1)|0;ba=D;Ba=Ed(u&2097151|0,0,136657,0)|0;Aa=D;u=Ed(u&2097151|0,0,-683901,-1)|0;M=D;F=Ed(Da&2097151|0,0,666643,0)|0;R=D;la=Ed(Da&2097151|0,0,470296,0)|0;ma=D;ja=Ed(Da&2097151|0,0,654183,0)|0;ia=D;ta=Ed(Da&2097151|0,0,-997805,-1)|0;sa=D;ea=Ed(Da&2097151|0,0,136657,0)|0;da=D;Da=Ed(Da&2097151|0,0,-683901,-1)|0;Ca=oe(Da|0,D|0,Ca&2097151|0,0)|0;Aa=oe(Ca|0,D|0,Ba|0,Aa|0)|0;pa=oe(Aa|0,D|0,za|0,pa|0)|0;l=oe(pa|0,D|0,qa|0,l|0)|0;o=oe(l|0,D|0,v|0,o|0)|0;v=D;l=Ed(ha&2097151|0,0,666643,0)|0;Z=oe(l|0,D|0,Z&2097151|0,0)|0;l=D;qa=Ed(ha&2097151|0,0,470296,0)|0;pa=D;za=Ed(ha&2097151|0,0,654183,0)|0;va=oe(za|0,D|0,ya|xa|wa&2031616|0,va|0)|0;ma=oe(va|0,D|0,la|0,ma|0)|0;V=oe(ma|0,D|0,P|0,V|0)|0;P=D;ma=Ed(ha&2097151|0,0,-997805,-1)|0;la=D;va=Ed(ha&2097151|0,0,136657,0)|0;ua=oe(va|0,D|0,ua&2097151|0,0)|0;sa=oe(ua|0,D|0,ta|0,sa|0)|0;z=oe(sa|0,D|0,ra|0,z|0)|0;ga=oe(z|0,D|0,T|0,ga|0)|0;L=oe(ga|0,D|0,K|0,L|0)|0;K=D;ha=Ed(ha&2097151|0,0,-683901,-1)|0;ga=D;T=oe(Z|0,l|0,1048576,0)|0;T=Rd(T|0,D|0,21)|0;z=D;na=oe(qa|0,pa|0,oa|0,na|0)|0;na=oe(na|0,D|0,T|0,z|0)|0;R=oe(na|0,D|0,F|0,R|0)|0;F=D;z=Pd(T|0,z|0,21)|0;z=le(Z|0,l|0,z|0,D|0)|0;l=D;Z=oe(V|0,P|0,1048576,0)|0;Z=Rd(Z|0,D|0,21)|0;T=D;ka=oe(ma|0,la|0,ka&2097151|0,0)|0;ia=oe(ka|0,D|0,ja|0,ia|0)|0;X=oe(ia|0,D|0,U|0,X|0)|0;O=oe(X|0,D|0,c|0,O|0)|0;O=oe(O|0,D|0,Z|0,T|0)|0;c=D;T=Pd(Z|0,T|0,21)|0;Z=D;X=oe(L|0,K|0,1048576,0)|0;X=Dd(X|0,D|0,21)|0;U=D;fa=oe(ha|0,ga|0,fa&2097151|0,0)|0;da=oe(fa|0,D|0,ea|0,da|0)|0;ba=oe(da|0,D|0,ca|0,ba|0)|0;y=oe(ba|0,D|0,aa|0,y|0)|0;f=oe(y|0,D|0,q|0,f|0)|0;E=oe(f|0,D|0,s|0,E|0)|0;E=oe(E|0,D|0,X|0,U|0)|0;s=D;U=Pd(X|0,U|0,21)|0;X=D;f=oe(o|0,v|0,1048576,0)|0;f=Dd(f|0,D|0,21)|0;q=D;N=oe(u|0,M|0,N&2097151|0,0)|0;k=oe(N|0,D|0,H|0,k|0)|0;w=oe(k|0,D|0,J|0,w|0)|0;Q=oe(w|0,D|0,B|0,Q|0)|0;Q=oe(Q|0,D|0,f|0,q|0)|0;B=D;q=Pd(f|0,q|0,21)|0;q=le(o|0,v|0,q|0,D|0)|0;v=D;o=oe(i|0,$|0,1048576,0)|0;o=Dd(o|0,D|0,21)|0;f=D;A=oe(G|0,r|0,I|0,A|0)|0;p=oe(A|0,D|0,h|0,p|0)|0;p=oe(p|0,D|0,o|0,f|0)|0;h=D;f=Pd(o|0,f|0,21)|0;f=le(i|0,$|0,f|0,D|0)|0;$=D;i=oe(g|0,W|0,1048576,0)|0;i=Dd(i|0,D|0,21)|0;o=D;t=oe(i|0,o|0,t&2097151|0,0)|0;A=D;o=Pd(i|0,o|0,21)|0;o=le(g|0,W|0,o|0,D|0)|0;W=D;g=oe(R|0,F|0,1048576,0)|0;g=Rd(g|0,D|0,21)|0;i=D;I=Pd(g|0,i|0,21)|0;I=le(R|0,F|0,I|0,D|0)|0;F=D;R=oe(O|0,c|0,1048576,0)|0;R=Dd(R|0,D|0,21)|0;r=D;G=Pd(R|0,r|0,21)|0;G=le(O|0,c|0,G|0,D|0)|0;c=D;O=oe(E|0,s|0,1048576,0)|0;O=Dd(O|0,D|0,21)|0;w=D;v=oe(q|0,v|0,O|0,w|0)|0;q=D;w=Pd(O|0,w|0,21)|0;w=le(E|0,s|0,w|0,D|0)|0;s=D;E=oe(Q|0,B|0,1048576,0)|0;E=Dd(E|0,D|0,21)|0;O=D;$=oe(E|0,O|0,f|0,$|0)|0;f=D;O=Pd(E|0,O|0,21)|0;O=le(Q|0,B|0,O|0,D|0)|0;B=D;Q=oe(p|0,h|0,1048576,0)|0;Q=Dd(Q|0,D|0,21)|0;E=D;W=oe(Q|0,E|0,o|0,W|0)|0;o=D;E=Pd(Q|0,E|0,21)|0;E=le(p|0,h|0,E|0,D|0)|0;h=D;p=Ed(t|0,A|0,666643,0)|0;_=oe(p|0,D|0,_&2097151|0,0)|0;p=D;Q=Ed(t|0,A|0,470296,0)|0;Q=oe(z|0,l|0,Q|0,D|0)|0;l=D;z=Ed(t|0,A|0,654183,0)|0;z=oe(I|0,F|0,z|0,D|0)|0;F=D;I=Ed(t|0,A|0,-997805,-1)|0;J=D;k=Ed(t|0,A|0,136657,0)|0;k=oe(G|0,c|0,k|0,D|0)|0;c=D;A=Ed(t|0,A|0,-683901,-1)|0;t=D;r=oe(L|0,K|0,R|0,r|0)|0;X=le(r|0,D|0,U|0,X|0)|0;t=oe(X|0,D|0,A|0,t|0)|0;A=D;X=Ed(W|0,o|0,666643,0)|0;n=oe(X|0,D|0,n&2097151|0,0)|0;X=D;U=Ed(W|0,o|0,470296,0)|0;U=oe(_|0,p|0,U|0,D|0)|0;p=D;_=Ed(W|0,o|0,654183,0)|0;_=oe(Q|0,l|0,_|0,D|0)|0;l=D;Q=Ed(W|0,o|0,-997805,-1)|0;Q=oe(z|0,F|0,Q|0,D|0)|0;F=D;z=Ed(W|0,o|0,136657,0)|0;r=D;o=Ed(W|0,o|0,-683901,-1)|0;o=oe(k|0,c|0,o|0,D|0)|0;c=D;k=Ed(E|0,h|0,666643,0)|0;m=oe(k|0,D|0,m&2097151|0,0)|0;k=D;W=Ed(E|0,h|0,470296,0)|0;W=oe(n|0,X|0,W|0,D|0)|0;X=D;n=Ed(E|0,h|0,654183,0)|0;n=oe(U|0,p|0,n|0,D|0)|0;p=D;U=Ed(E|0,h|0,-997805,-1)|0;U=oe(_|0,l|0,U|0,D|0)|0;l=D;_=Ed(E|0,h|0,136657,0)|0;_=oe(Q|0,F|0,_|0,D|0)|0;F=D;h=Ed(E|0,h|0,-683901,-1)|0;E=D;i=oe(V|0,P|0,g|0,i|0)|0;Z=le(i|0,D|0,T|0,Z|0)|0;J=oe(Z|0,D|0,I|0,J|0)|0;r=oe(J|0,D|0,z|0,r|0)|0;E=oe(r|0,D|0,h|0,E|0)|0;h=D;r=Ed($|0,f|0,666643,0)|0;z=D;J=Ed($|0,f|0,470296,0)|0;I=D;Z=Ed($|0,f|0,654183,0)|0;T=D;i=Ed($|0,f|0,-997805,-1)|0;g=D;P=Ed($|0,f|0,136657,0)|0;P=oe(U|0,l|0,P|0,D|0)|0;l=D;f=Ed($|0,f|0,-683901,-1)|0;f=oe(_|0,F|0,f|0,D|0)|0;F=D;_=Ed(O|0,B|0,666643,0)|0;$=D;U=Ed(O|0,B|0,470296,0)|0;V=D;Q=Ed(O|0,B|0,654183,0)|0;R=D;K=Ed(O|0,B|0,-997805,-1)|0;L=D;G=Ed(O|0,B|0,136657,0)|0;H=D;B=Ed(O|0,B|0,-683901,-1)|0;B=oe(P|0,l|0,B|0,D|0)|0;l=D;P=Ed(v|0,q|0,666643,0)|0;S=oe(P|0,D|0,j|e|x&2031616|0,S|0)|0;x=D;e=Ed(v|0,q|0,470296,0)|0;j=D;P=Ed(v|0,q|0,654183,0)|0;Y=oe(P|0,D|0,Y&2097151|0,0)|0;z=oe(Y|0,D|0,r|0,z|0)|0;V=oe(z|0,D|0,U|0,V|0)|0;U=D;z=Ed(v|0,q|0,-997805,-1)|0;r=D;Y=Ed(v|0,q|0,136657,0)|0;Y=oe(W|0,X|0,Y|0,D|0)|0;T=oe(Y|0,D|0,Z|0,T|0)|0;L=oe(T|0,D|0,K|0,L|0)|0;K=D;q=Ed(v|0,q|0,-683901,-1)|0;v=D;T=oe(S|0,x|0,1048576,0)|0;T=Dd(T|0,D|0,21)|0;Z=D;C=oe(e|0,j|0,C&2097151|0,0)|0;$=oe(C|0,D|0,_|0,$|0)|0;$=oe($|0,D|0,T|0,Z|0)|0;_=D;Z=Pd(T|0,Z|0,21)|0;Z=le(S|0,x|0,Z|0,D|0)|0;x=D;S=oe(V|0,U|0,1048576,0)|0;S=Dd(S|0,D|0,21)|0;T=D;r=oe(m|0,k|0,z|0,r|0)|0;I=oe(r|0,D|0,J|0,I|0)|0;R=oe(I|0,D|0,Q|0,R|0)|0;R=oe(R|0,D|0,S|0,T|0)|0;Q=D;T=Pd(S|0,T|0,21)|0;S=D;I=oe(L|0,K|0,1048576,0)|0;I=Dd(I|0,D|0,21)|0;J=D;v=oe(n|0,p|0,q|0,v|0)|0;g=oe(v|0,D|0,i|0,g|0)|0;H=oe(g|0,D|0,G|0,H|0)|0;H=oe(H|0,D|0,I|0,J|0)|0;G=D;J=Pd(I|0,J|0,21)|0;I=D;g=oe(B|0,l|0,1048576,0)|0;g=Dd(g|0,D|0,21)|0;i=D;F=oe(f|0,F|0,g|0,i|0)|0;f=D;i=Pd(g|0,i|0,21)|0;i=le(B|0,l|0,i|0,D|0)|0;l=D;B=oe(E|0,h|0,1048576,0)|0;B=Dd(B|0,D|0,21)|0;g=D;c=oe(o|0,c|0,B|0,g|0)|0;o=D;g=Pd(B|0,g|0,21)|0;g=le(E|0,h|0,g|0,D|0)|0;h=D;E=oe(t|0,A|0,1048576,0)|0;E=Dd(E|0,D|0,21)|0;B=D;s=oe(w|0,s|0,E|0,B|0)|0;w=D;B=Pd(E|0,B|0,21)|0;B=le(t|0,A|0,B|0,D|0)|0;A=D;t=oe($|0,_|0,1048576,0)|0;t=Dd(t|0,D|0,21)|0;E=D;v=Pd(t|0,E|0,21)|0;q=D;p=oe(R|0,Q|0,1048576,0)|0;p=Dd(p|0,D|0,21)|0;n=D;r=Pd(p|0,n|0,21)|0;z=D;k=oe(H|0,G|0,1048576,0)|0;k=Dd(k|0,D|0,21)|0;m=D;l=oe(i|0,l|0,k|0,m|0)|0;i=D;m=Pd(k|0,m|0,21)|0;k=D;C=oe(F|0,f|0,1048576,0)|0;C=Dd(C|0,D|0,21)|0;j=D;h=oe(g|0,h|0,C|0,j|0)|0;g=D;j=Pd(C|0,j|0,21)|0;j=le(F|0,f|0,j|0,D|0)|0;f=D;F=oe(c|0,o|0,1048576,0)|0;F=Dd(F|0,D|0,21)|0;C=D;A=oe(B|0,A|0,F|0,C|0)|0;B=D;C=Pd(F|0,C|0,21)|0;C=le(c|0,o|0,C|0,D|0)|0;o=D;c=oe(s|0,w|0,1048576,0)|0;c=Dd(c|0,D|0,21)|0;F=D;e=Pd(c|0,F|0,21)|0;e=le(s|0,w|0,e|0,D|0)|0;w=D;s=Ed(c|0,F|0,666643,0)|0;s=oe(Z|0,x|0,s|0,D|0)|0;x=D;Z=Ed(c|0,F|0,470296,0)|0;Y=D;X=Ed(c|0,F|0,654183,0)|0;W=D;P=Ed(c|0,F|0,-997805,-1)|0;O=D;N=Ed(c|0,F|0,136657,0)|0;M=D;F=Ed(c|0,F|0,-683901,-1)|0;c=D;u=Dd(s|0,x|0,21)|0;y=D;Y=oe($|0,_|0,Z|0,Y|0)|0;Y=oe(Y|0,D|0,u|0,y|0)|0;q=le(Y|0,D|0,v|0,q|0)|0;v=D;y=Pd(u|0,y|0,21)|0;y=le(s|0,x|0,y|0,D|0)|0;x=D;s=Dd(q|0,v|0,21)|0;u=D;U=oe(X|0,W|0,V|0,U|0)|0;S=le(U|0,D|0,T|0,S|0)|0;E=oe(S|0,D|0,t|0,E|0)|0;E=oe(E|0,D|0,s|0,u|0)|0;t=D;u=Pd(s|0,u|0,21)|0;u=le(q|0,v|0,u|0,D|0)|0;v=D;q=Dd(E|0,t|0,21)|0;s=D;O=oe(R|0,Q|0,P|0,O|0)|0;z=le(O|0,D|0,r|0,z|0)|0;z=oe(z|0,D|0,q|0,s|0)|0;r=D;s=Pd(q|0,s|0,21)|0;s=le(E|0,t|0,s|0,D|0)|0;t=D;E=Dd(z|0,r|0,21)|0;q=D;K=oe(N|0,M|0,L|0,K|0)|0;I=le(K|0,D|0,J|0,I|0)|0;n=oe(I|0,D|0,p|0,n|0)|0;n=oe(n|0,D|0,E|0,q|0)|0;p=D;q=Pd(E|0,q|0,21)|0;q=le(z|0,r|0,q|0,D|0)|0;r=D;z=Dd(n|0,p|0,21)|0;E=D;c=oe(H|0,G|0,F|0,c|0)|0;k=le(c|0,D|0,m|0,k|0)|0;k=oe(k|0,D|0,z|0,E|0)|0;m=D;E=Pd(z|0,E|0,21)|0;E=le(n|0,p|0,E|0,D|0)|0;p=D;n=Dd(k|0,m|0,21)|0;z=D;i=oe(l|0,i|0,n|0,z|0)|0;l=D;z=Pd(n|0,z|0,21)|0;z=le(k|0,m|0,z|0,D|0)|0;m=D;k=Dd(i|0,l|0,21)|0;n=D;f=oe(k|0,n|0,j|0,f|0)|0;j=D;n=Pd(k|0,n|0,21)|0;n=le(i|0,l|0,n|0,D|0)|0;l=D;i=Dd(f|0,j|0,21)|0;k=D;g=oe(h|0,g|0,i|0,k|0)|0;h=D;k=Pd(i|0,k|0,21)|0;k=le(f|0,j|0,k|0,D|0)|0;j=D;f=Dd(g|0,h|0,21)|0;i=D;o=oe(f|0,i|0,C|0,o|0)|0;C=D;i=Pd(f|0,i|0,21)|0;i=le(g|0,h|0,i|0,D|0)|0;h=D;g=Dd(o|0,C|0,21)|0;f=D;B=oe(A|0,B|0,g|0,f|0)|0;A=D;f=Pd(g|0,f|0,21)|0;f=le(o|0,C|0,f|0,D|0)|0;C=D;o=Dd(B|0,A|0,21)|0;g=D;w=oe(o|0,g|0,e|0,w|0)|0;e=D;g=Pd(o|0,g|0,21)|0;g=le(B|0,A|0,g|0,D|0)|0;A=D;B=Dd(w|0,e|0,21)|0;o=D;c=Pd(B|0,o|0,21)|0;c=le(w|0,e|0,c|0,D|0)|0;e=D;w=Ed(B|0,o|0,666643,0)|0;x=oe(w|0,D|0,y|0,x|0)|0;y=D;w=Ed(B|0,o|0,470296,0)|0;w=oe(u|0,v|0,w|0,D|0)|0;v=D;u=Ed(B|0,o|0,654183,0)|0;u=oe(s|0,t|0,u|0,D|0)|0;t=D;s=Ed(B|0,o|0,-997805,-1)|0;s=oe(q|0,r|0,s|0,D|0)|0;r=D;q=Ed(B|0,o|0,136657,0)|0;q=oe(E|0,p|0,q|0,D|0)|0;p=D;o=Ed(B|0,o|0,-683901,-1)|0;o=oe(z|0,m|0,o|0,D|0)|0;m=D;z=Dd(x|0,y|0,21)|0;B=D;v=oe(w|0,v|0,z|0,B|0)|0;w=D;B=Pd(z|0,B|0,21)|0;B=le(x|0,y|0,B|0,D|0)|0;y=D;x=Dd(v|0,w|0,21)|0;z=D;t=oe(u|0,t|0,x|0,z|0)|0;u=D;z=Pd(x|0,z|0,21)|0;z=le(v|0,w|0,z|0,D|0)|0;w=D;v=Dd(t|0,u|0,21)|0;x=D;r=oe(s|0,r|0,v|0,x|0)|0;s=D;x=Pd(v|0,x|0,21)|0;x=le(t|0,u|0,x|0,D|0)|0;u=D;t=Dd(r|0,s|0,21)|0;v=D;p=oe(q|0,p|0,t|0,v|0)|0;q=D;v=Pd(t|0,v|0,21)|0;v=le(r|0,s|0,v|0,D|0)|0;s=D;r=Dd(p|0,q|0,21)|0;t=D;m=oe(o|0,m|0,r|0,t|0)|0;o=D;t=Pd(r|0,t|0,21)|0;t=le(p|0,q|0,t|0,D|0)|0;q=D;p=Dd(m|0,o|0,21)|0;r=D;l=oe(p|0,r|0,n|0,l|0)|0;n=D;r=Pd(p|0,r|0,21)|0;r=le(m|0,o|0,r|0,D|0)|0;o=D;m=Dd(l|0,n|0,21)|0;p=D;j=oe(m|0,p|0,k|0,j|0)|0;k=D;p=Pd(m|0,p|0,21)|0;p=le(l|0,n|0,p|0,D|0)|0;n=D;l=Dd(j|0,k|0,21)|0;m=D;h=oe(l|0,m|0,i|0,h|0)|0;i=D;m=Pd(l|0,m|0,21)|0;m=le(j|0,k|0,m|0,D|0)|0;k=D;j=Dd(h|0,i|0,21)|0;l=D;C=oe(j|0,l|0,f|0,C|0)|0;f=D;l=Pd(j|0,l|0,21)|0;l=le(h|0,i|0,l|0,D|0)|0;i=D;h=Dd(C|0,f|0,21)|0;j=D;A=oe(h|0,j|0,g|0,A|0)|0;g=D;j=Pd(h|0,j|0,21)|0;j=le(C|0,f|0,j|0,D|0)|0;f=D;C=Dd(A|0,g|0,21)|0;h=D;e=oe(C|0,h|0,c|0,e|0)|0;c=D;h=Pd(C|0,h|0,21)|0;h=le(A|0,g|0,h|0,D|0)|0;g=D;a[b>>0]=B;A=Rd(B|0,y|0,8)|0;a[b+1>>0]=A;y=Rd(B|0,y|0,16)|0;B=D;A=Pd(z|0,w|0,5)|0;a[b+2>>0]=A|y;y=Rd(z|0,w|0,3)|0;a[b+3>>0]=y;y=Rd(z|0,w|0,11)|0;a[b+4>>0]=y;w=Rd(z|0,w|0,19)|0;z=D;y=Pd(x|0,u|0,2)|0;a[b+5>>0]=y|w;w=Rd(x|0,u|0,6)|0;a[b+6>>0]=w;u=Rd(x|0,u|0,14)|0;x=D;w=Pd(v|0,s|0,7)|0;a[b+7>>0]=w|u;u=Rd(v|0,s|0,1)|0;a[b+8>>0]=u;u=Rd(v|0,s|0,9)|0;a[b+9>>0]=u;s=Rd(v|0,s|0,17)|0;v=D;u=Pd(t|0,q|0,4)|0;a[b+10>>0]=u|s;s=Rd(t|0,q|0,4)|0;a[b+11>>0]=s;s=Rd(t|0,q|0,12)|0;a[b+12>>0]=s;q=Rd(t|0,q|0,20)|0;t=D;s=Pd(r|0,o|0,1)|0;a[b+13>>0]=s|q;q=Rd(r|0,o|0,7)|0;a[b+14>>0]=q;o=Rd(r|0,o|0,15)|0;r=D;q=Pd(p|0,n|0,6)|0;a[b+15>>0]=q|o;o=Rd(p|0,n|0,2)|0;a[b+16>>0]=o;o=Rd(p|0,n|0,10)|0;a[b+17>>0]=o;n=Rd(p|0,n|0,18)|0;p=D;o=Pd(m|0,k|0,3)|0;a[b+18>>0]=o|n;n=Rd(m|0,k|0,5)|0;a[b+19>>0]=n;k=Rd(m|0,k|0,13)|0;a[b+20>>0]=k;a[b+21>>0]=l;k=Rd(l|0,i|0,8)|0;a[b+22>>0]=k;i=Rd(l|0,i|0,16)|0;l=D;k=Pd(j|0,f|0,5)|0;a[b+23>>0]=k|i;i=Rd(j|0,f|0,3)|0;a[b+24>>0]=i;i=Rd(j|0,f|0,11)|0;a[b+25>>0]=i;f=Rd(j|0,f|0,19)|0;j=D;i=Pd(h|0,g|0,2)|0;a[b+26>>0]=i|f;f=Rd(h|0,g|0,6)|0;a[b+27>>0]=f;g=Rd(h|0,g|0,14)|0;h=D;f=Pd(e|0,c|0,7)|0;a[b+28>>0]=g|f;f=Rd(e|0,c|0,1)|0;a[b+29>>0]=f;f=Rd(e|0,c|0,9)|0;a[b+30>>0]=f;c=Rd(e|0,c|0,17)|0;a[b+31>>0]=c;return}function pa(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0;o=c[b>>2]|0;n=c[b+4>>2]|0;k=c[b+8>>2]|0;fa=c[b+12>>2]|0;N=c[b+16>>2]|0;M=c[b+20>>2]|0;g=c[b+24>>2]|0;ea=c[b+28>>2]|0;L=c[b+32>>2]|0;q=c[b+36>>2]|0;I=c[d>>2]|0;Oc=c[d+4>>2]|0;cc=c[d+8>>2]|0;sb=c[d+12>>2]|0;Ia=c[d+16>>2]|0;jc=c[d+20>>2]|0;Db=c[d+24>>2]|0;Ta=c[d+28>>2]|0;ga=c[d+32>>2]|0;Pc=c[d+36>>2]|0;Mc=Ed(I|0,((I|0)<0)<<31>>31|0,o|0,((o|0)<0)<<31>>31|0)|0;Lc=D;wc=Ed(Oc|0,((Oc|0)<0)<<31>>31|0,o|0,((o|0)<0)<<31>>31|0)|0;vc=D;ub=Ed(cc|0,((cc|0)<0)<<31>>31|0,o|0,((o|0)<0)<<31>>31|0)|0;tb=D;Ka=Ed(sb|0,((sb|0)<0)<<31>>31|0,o|0,((o|0)<0)<<31>>31|0)|0;Ja=D;mc=Ed(Ia|0,((Ia|0)<0)<<31>>31|0,o|0,((o|0)<0)<<31>>31|0)|0;lc=D;Gb=Ed(jc|0,((jc|0)<0)<<31>>31|0,o|0,((o|0)<0)<<31>>31|0)|0;Fb=D;Wa=Ed(Db|0,((Db|0)<0)<<31>>31|0,o|0,((o|0)<0)<<31>>31|0)|0;Va=D;ja=Ed(Ta|0,((Ta|0)<0)<<31>>31|0,o|0,((o|0)<0)<<31>>31|0)|0;ia=D;P=Ed(ga|0,((ga|0)<0)<<31>>31|0,o|0,((o|0)<0)<<31>>31|0)|0;O=D;o=Ed(Pc|0,((Pc|0)<0)<<31>>31|0,o|0,((o|0)<0)<<31>>31|0)|0;l=D;dc=Ed(I|0,((I|0)<0)<<31>>31|0,n|0,((n|0)<0)<<31>>31|0)|0;ec=D;yb=Ed(Oc|0,((Oc|0)<0)<<31>>31|0,n<<1|0,((n<<1|0)<0)<<31>>31|0)|0;xb=D;Ma=Ed(cc|0,((cc|0)<0)<<31>>31|0,n|0,((n|0)<0)<<31>>31|0)|0;La=D;oc=Ed(sb|0,((sb|0)<0)<<31>>31|0,n<<1|0,((n<<1|0)<0)<<31>>31|0)|0;nc=D;Ib=Ed(Ia|0,((Ia|0)<0)<<31>>31|0,n|0,((n|0)<0)<<31>>31|0)|0;Hb=D;Ya=Ed(jc|0,((jc|0)<0)<<31>>31|0,n<<1|0,((n<<1|0)<0)<<31>>31|0)|0;Xa=D;la=Ed(Db|0,((Db|0)<0)<<31>>31|0,n|0,((n|0)<0)<<31>>31|0)|0;ka=D;R=Ed(Ta|0,((Ta|0)<0)<<31>>31|0,n<<1|0,((n<<1|0)<0)<<31>>31|0)|0;Q=D;t=Ed(ga|0,((ga|0)<0)<<31>>31|0,n|0,((n|0)<0)<<31>>31|0)|0;s=D;d=((Pc*19|0)<0)<<31>>31;n=Ed(Pc*19|0,d|0,n<<1|0,((n<<1|0)<0)<<31>>31|0)|0;p=D;wb=Ed(I|0,((I|0)<0)<<31>>31|0,k|0,((k|0)<0)<<31>>31|0)|0;vb=D;Qa=Ed(Oc|0,((Oc|0)<0)<<31>>31|0,k|0,((k|0)<0)<<31>>31|0)|0;Pa=D;qc=Ed(cc|0,((cc|0)<0)<<31>>31|0,k|0,((k|0)<0)<<31>>31|0)|0;pc=D;Kb=Ed(sb|0,((sb|0)<0)<<31>>31|0,k|0,((k|0)<0)<<31>>31|0)|0;Jb=D;_a=Ed(Ia|0,((Ia|0)<0)<<31>>31|0,k|0,((k|0)<0)<<31>>31|0)|0;Za=D;na=Ed(jc|0,((jc|0)<0)<<31>>31|0,k|0,((k|0)<0)<<31>>31|0)|0;ma=D;T=Ed(Db|0,((Db|0)<0)<<31>>31|0,k|0,((k|0)<0)<<31>>31|0)|0;S=D;v=Ed(Ta|0,((Ta|0)<0)<<31>>31|0,k|0,((k|0)<0)<<31>>31|0)|0;u=D;ha=((ga*19|0)<0)<<31>>31;yc=Ed(ga*19|0,ha|0,k|0,((k|0)<0)<<31>>31|0)|0;xc=D;k=Ed(Pc*19|0,d|0,k|0,((k|0)<0)<<31>>31|0)|0;j=D;Oa=Ed(I|0,((I|0)<0)<<31>>31|0,fa|0,((fa|0)<0)<<31>>31|0)|0;Na=D;uc=Ed(Oc|0,((Oc|0)<0)<<31>>31|0,fa<<1|0,((fa<<1|0)<0)<<31>>31|0)|0;tc=D;Mb=Ed(cc|0,((cc|0)<0)<<31>>31|0,fa|0,((fa|0)<0)<<31>>31|0)|0;Lb=D;ab=Ed(sb|0,((sb|0)<0)<<31>>31|0,fa<<1|0,((fa<<1|0)<0)<<31>>31|0)|0;$a=D;pa=Ed(Ia|0,((Ia|0)<0)<<31>>31|0,fa|0,((fa|0)<0)<<31>>31|0)|0;oa=D;V=Ed(jc|0,((jc|0)<0)<<31>>31|0,fa<<1|0,((fa<<1|0)<0)<<31>>31|0)|0;U=D;x=Ed(Db|0,((Db|0)<0)<<31>>31|0,fa|0,((fa|0)<0)<<31>>31|0)|0;w=D;Ua=((Ta*19|0)<0)<<31>>31;Ac=Ed(Ta*19|0,Ua|0,fa<<1|0,((fa<<1|0)<0)<<31>>31|0)|0;zc=D;Sb=Ed(ga*19|0,ha|0,fa|0,((fa|0)<0)<<31>>31|0)|0;Rb=D;fa=Ed(Pc*19|0,d|0,fa<<1|0,((fa<<1|0)<0)<<31>>31|0)|0;f=D;sc=Ed(I|0,((I|0)<0)<<31>>31|0,N|0,((N|0)<0)<<31>>31|0)|0;rc=D;Qb=Ed(Oc|0,((Oc|0)<0)<<31>>31|0,N|0,((N|0)<0)<<31>>31|0)|0;Pb=D;cb=Ed(cc|0,((cc|0)<0)<<31>>31|0,N|0,((N|0)<0)<<31>>31|0)|0;bb=D;ra=Ed(sb|0,((sb|0)<0)<<31>>31|0,N|0,((N|0)<0)<<31>>31|0)|0;qa=D;X=Ed(Ia|0,((Ia|0)<0)<<31>>31|0,N|0,((N|0)<0)<<31>>31|0)|0;W=D;z=Ed(jc|0,((jc|0)<0)<<31>>31|0,N|0,((N|0)<0)<<31>>31|0)|0;y=D;Eb=((Db*19|0)<0)<<31>>31;Cc=Ed(Db*19|0,Eb|0,N|0,((N|0)<0)<<31>>31|0)|0;Bc=D;Ub=Ed(Ta*19|0,Ua|0,N|0,((N|0)<0)<<31>>31|0)|0;Tb=D;ib=Ed(ga*19|0,ha|0,N|0,((N|0)<0)<<31>>31|0)|0;hb=D;N=Ed(Pc*19|0,d|0,N|0,((N|0)<0)<<31>>31|0)|0;e=D;Ob=Ed(I|0,((I|0)<0)<<31>>31|0,M|0,((M|0)<0)<<31>>31|0)|0;Nb=D;gb=Ed(Oc|0,((Oc|0)<0)<<31>>31|0,M<<1|0,((M<<1|0)<0)<<31>>31|0)|0;fb=D;ta=Ed(cc|0,((cc|0)<0)<<31>>31|0,M|0,((M|0)<0)<<31>>31|0)|0;sa=D;Z=Ed(sb|0,((sb|0)<0)<<31>>31|0,M<<1|0,((M<<1|0)<0)<<31>>31|0)|0;Y=D;B=Ed(Ia|0,((Ia|0)<0)<<31>>31|0,M|0,((M|0)<0)<<31>>31|0)|0;A=D;kc=((jc*19|0)<0)<<31>>31;Ec=Ed(jc*19|0,kc|0,M<<1|0,((M<<1|0)<0)<<31>>31|0)|0;Dc=D;Wb=Ed(Db*19|0,Eb|0,M|0,((M|0)<0)<<31>>31|0)|0;Vb=D;kb=Ed(Ta*19|0,Ua|0,M<<1|0,((M<<1|0)<0)<<31>>31|0)|0;jb=D;Aa=Ed(ga*19|0,ha|0,M|0,((M|0)<0)<<31>>31|0)|0;za=D;b=Ed(Pc*19|0,d|0,M<<1|0,((M<<1|0)<0)<<31>>31|0)|0;M=D;eb=Ed(I|0,((I|0)<0)<<31>>31|0,g|0,((g|0)<0)<<31>>31|0)|0;db=D;xa=Ed(Oc|0,((Oc|0)<0)<<31>>31|0,g|0,((g|0)<0)<<31>>31|0)|0;wa=D;$=Ed(cc|0,((cc|0)<0)<<31>>31|0,g|0,((g|0)<0)<<31>>31|0)|0;_=D;E=Ed(sb|0,((sb|0)<0)<<31>>31|0,g|0,((g|0)<0)<<31>>31|0)|0;C=D;Gc=Ed(Ia*19|0,((Ia*19|0)<0)<<31>>31|0,g|0,((g|0)<0)<<31>>31|0)|0;Fc=D;Yb=Ed(jc*19|0,kc|0,g|0,((g|0)<0)<<31>>31|0)|0;Xb=D;mb=Ed(Db*19|0,Eb|0,g|0,((g|0)<0)<<31>>31|0)|0;lb=D;Ca=Ed(Ta*19|0,Ua|0,g|0,((g|0)<0)<<31>>31|0)|0;Ba=D;m=Ed(ga*19|0,ha|0,g|0,((g|0)<0)<<31>>31|0)|0;r=D;g=Ed(Pc*19|0,d|0,g|0,((g|0)<0)<<31>>31|0)|0;ya=D;va=Ed(I|0,((I|0)<0)<<31>>31|0,ea|0,((ea|0)<0)<<31>>31|0)|0;ua=D;da=Ed(Oc|0,((Oc|0)<0)<<31>>31|0,ea<<1|0,((ea<<1|0)<0)<<31>>31|0)|0;ca=D;G=Ed(cc|0,((cc|0)<0)<<31>>31|0,ea|0,((ea|0)<0)<<31>>31|0)|0;F=D;Ic=Ed(sb*19|0,((sb*19|0)<0)<<31>>31|0,ea<<1|0,((ea<<1|0)<0)<<31>>31|0)|0;Hc=D;_b=Ed(Ia*19|0,((Ia*19|0)<0)<<31>>31|0,ea|0,((ea|0)<0)<<31>>31|0)|0;Zb=D;ob=Ed(jc*19|0,kc|0,ea<<1|0,((ea<<1|0)<0)<<31>>31|0)|0;nb=D;Ea=Ed(Db*19|0,Eb|0,ea|0,((ea|0)<0)<<31>>31|0)|0;Da=D;gc=Ed(Ta*19|0,Ua|0,ea<<1|0,((ea<<1|0)<0)<<31>>31|0)|0;fc=D;Ab=Ed(ga*19|0,ha|0,ea|0,((ea|0)<0)<<31>>31|0)|0;zb=D;ea=Ed(Pc*19|0,d|0,ea<<1|0,((ea<<1|0)<0)<<31>>31|0)|0;i=D;ba=Ed(I|0,((I|0)<0)<<31>>31|0,L|0,((L|0)<0)<<31>>31|0)|0;aa=D;K=Ed(Oc|0,((Oc|0)<0)<<31>>31|0,L|0,((L|0)<0)<<31>>31|0)|0;J=D;Kc=Ed(cc*19|0,((cc*19|0)<0)<<31>>31|0,L|0,((L|0)<0)<<31>>31|0)|0;Jc=D;ac=Ed(sb*19|0,((sb*19|0)<0)<<31>>31|0,L|0,((L|0)<0)<<31>>31|0)|0;$b=D;qb=Ed(Ia*19|0,((Ia*19|0)<0)<<31>>31|0,L|0,((L|0)<0)<<31>>31|0)|0;pb=D;Ga=Ed(jc*19|0,kc|0,L|0,((L|0)<0)<<31>>31|0)|0;Fa=D;ic=Ed(Db*19|0,Eb|0,L|0,((L|0)<0)<<31>>31|0)|0;hc=D;Cb=Ed(Ta*19|0,Ua|0,L|0,((L|0)<0)<<31>>31|0)|0;Bb=D;Sa=Ed(ga*19|0,ha|0,L|0,((L|0)<0)<<31>>31|0)|0;Ra=D;L=Ed(Pc*19|0,d|0,L|0,((L|0)<0)<<31>>31|0)|0;h=D;I=Ed(I|0,((I|0)<0)<<31>>31|0,q|0,((q|0)<0)<<31>>31|0)|0;H=D;Oc=Ed(Oc*19|0,((Oc*19|0)<0)<<31>>31|0,q<<1|0,((q<<1|0)<0)<<31>>31|0)|0;Nc=D;cc=Ed(cc*19|0,((cc*19|0)<0)<<31>>31|0,q|0,((q|0)<0)<<31>>31|0)|0;bc=D;sb=Ed(sb*19|0,((sb*19|0)<0)<<31>>31|0,q<<1|0,((q<<1|0)<0)<<31>>31|0)|0;rb=D;Ia=Ed(Ia*19|0,((Ia*19|0)<0)<<31>>31|0,q|0,((q|0)<0)<<31>>31|0)|0;Ha=D;kc=Ed(jc*19|0,kc|0,q<<1|0,((q<<1|0)<0)<<31>>31|0)|0;jc=D;Eb=Ed(Db*19|0,Eb|0,q|0,((q|0)<0)<<31>>31|0)|0;Db=D;Ua=Ed(Ta*19|0,Ua|0,q<<1|0,((q<<1|0)<0)<<31>>31|0)|0;Ta=D;ha=Ed(ga*19|0,ha|0,q|0,((q|0)<0)<<31>>31|0)|0;ga=D;q=Ed(Pc*19|0,d|0,q<<1|0,((q<<1|0)<0)<<31>>31|0)|0;d=D;Lc=oe(Oc|0,Nc|0,Mc|0,Lc|0)|0;Jc=oe(Lc|0,D|0,Kc|0,Jc|0)|0;Hc=oe(Jc|0,D|0,Ic|0,Hc|0)|0;Fc=oe(Hc|0,D|0,Gc|0,Fc|0)|0;Dc=oe(Fc|0,D|0,Ec|0,Dc|0)|0;Bc=oe(Dc|0,D|0,Cc|0,Bc|0)|0;zc=oe(Bc|0,D|0,Ac|0,zc|0)|0;xc=oe(zc|0,D|0,yc|0,xc|0)|0;p=oe(xc|0,D|0,n|0,p|0)|0;n=D;ec=oe(wc|0,vc|0,dc|0,ec|0)|0;dc=D;rc=oe(uc|0,tc|0,sc|0,rc|0)|0;pc=oe(rc|0,D|0,qc|0,pc|0)|0;nc=oe(pc|0,D|0,oc|0,nc|0)|0;lc=oe(nc|0,D|0,mc|0,lc|0)|0;jc=oe(lc|0,D|0,kc|0,jc|0)|0;hc=oe(jc|0,D|0,ic|0,hc|0)|0;fc=oe(hc|0,D|0,gc|0,fc|0)|0;r=oe(fc|0,D|0,m|0,r|0)|0;M=oe(r|0,D|0,b|0,M|0)|0;b=D;r=oe(p|0,n|0,33554432,0)|0;r=Dd(r|0,D|0,26)|0;m=D;bc=oe(ec|0,dc|0,cc|0,bc|0)|0;$b=oe(bc|0,D|0,ac|0,$b|0)|0;Zb=oe($b|0,D|0,_b|0,Zb|0)|0;Xb=oe(Zb|0,D|0,Yb|0,Xb|0)|0;Vb=oe(Xb|0,D|0,Wb|0,Vb|0)|0;Tb=oe(Vb|0,D|0,Ub|0,Tb|0)|0;Rb=oe(Tb|0,D|0,Sb|0,Rb|0)|0;j=oe(Rb|0,D|0,k|0,j|0)|0;j=oe(j|0,D|0,r|0,m|0)|0;k=D;m=Pd(r|0,m|0,26)|0;m=le(p|0,n|0,m|0,D|0)|0;n=D;p=oe(M|0,b|0,33554432,0)|0;p=Dd(p|0,D|0,26)|0;r=D;Nb=oe(Qb|0,Pb|0,Ob|0,Nb|0)|0;Lb=oe(Nb|0,D|0,Mb|0,Lb|0)|0;Jb=oe(Lb|0,D|0,Kb|0,Jb|0)|0;Hb=oe(Jb|0,D|0,Ib|0,Hb|0)|0;Fb=oe(Hb|0,D|0,Gb|0,Fb|0)|0;Db=oe(Fb|0,D|0,Eb|0,Db|0)|0;Bb=oe(Db|0,D|0,Cb|0,Bb|0)|0;zb=oe(Bb|0,D|0,Ab|0,zb|0)|0;ya=oe(zb|0,D|0,g|0,ya|0)|0;ya=oe(ya|0,D|0,p|0,r|0)|0;g=D;r=Pd(p|0,r|0,26)|0;r=le(M|0,b|0,r|0,D|0)|0;b=D;M=oe(j|0,k|0,16777216,0)|0;M=Dd(M|0,D|0,25)|0;p=D;vb=oe(yb|0,xb|0,wb|0,vb|0)|0;tb=oe(vb|0,D|0,ub|0,tb|0)|0;rb=oe(tb|0,D|0,sb|0,rb|0)|0;pb=oe(rb|0,D|0,qb|0,pb|0)|0;nb=oe(pb|0,D|0,ob|0,nb|0)|0;lb=oe(nb|0,D|0,mb|0,lb|0)|0;jb=oe(lb|0,D|0,kb|0,jb|0)|0;hb=oe(jb|0,D|0,ib|0,hb|0)|0;f=oe(hb|0,D|0,fa|0,f|0)|0;f=oe(f|0,D|0,M|0,p|0)|0;fa=D;p=Pd(M|0,p|0,25)|0;p=le(j|0,k|0,p|0,D|0)|0;k=D;j=oe(ya|0,g|0,16777216,0)|0;j=Dd(j|0,D|0,25)|0;M=D;db=oe(gb|0,fb|0,eb|0,db|0)|0;bb=oe(db|0,D|0,cb|0,bb|0)|0;$a=oe(bb|0,D|0,ab|0,$a|0)|0;Za=oe($a|0,D|0,_a|0,Za|0)|0;Xa=oe(Za|0,D|0,Ya|0,Xa|0)|0;Va=oe(Xa|0,D|0,Wa|0,Va|0)|0;Ta=oe(Va|0,D|0,Ua|0,Ta|0)|0;Ra=oe(Ta|0,D|0,Sa|0,Ra|0)|0;i=oe(Ra|0,D|0,ea|0,i|0)|0;i=oe(i|0,D|0,j|0,M|0)|0;ea=D;M=Pd(j|0,M|0,25)|0;M=le(ya|0,g|0,M|0,D|0)|0;g=D;ya=oe(f|0,fa|0,33554432,0)|0;ya=Dd(ya|0,D|0,26)|0;j=D;Na=oe(Qa|0,Pa|0,Oa|0,Na|0)|0;La=oe(Na|0,D|0,Ma|0,La|0)|0;Ja=oe(La|0,D|0,Ka|0,Ja|0)|0;Ha=oe(Ja|0,D|0,Ia|0,Ha|0)|0;Fa=oe(Ha|0,D|0,Ga|0,Fa|0)|0;Da=oe(Fa|0,D|0,Ea|0,Da|0)|0;Ba=oe(Da|0,D|0,Ca|0,Ba|0)|0;za=oe(Ba|0,D|0,Aa|0,za|0)|0;e=oe(za|0,D|0,N|0,e|0)|0;e=oe(e|0,D|0,ya|0,j|0)|0;N=D;j=Pd(ya|0,j|0,26)|0;j=le(f|0,fa|0,j|0,D|0)|0;fa=oe(i|0,ea|0,33554432,0)|0;fa=Dd(fa|0,D|0,26)|0;f=D;ua=oe(xa|0,wa|0,va|0,ua|0)|0;sa=oe(ua|0,D|0,ta|0,sa|0)|0;qa=oe(sa|0,D|0,ra|0,qa|0)|0;oa=oe(qa|0,D|0,pa|0,oa|0)|0;ma=oe(oa|0,D|0,na|0,ma|0)|0;ka=oe(ma|0,D|0,la|0,ka|0)|0;ia=oe(ka|0,D|0,ja|0,ia|0)|0;ga=oe(ia|0,D|0,ha|0,ga|0)|0;h=oe(ga|0,D|0,L|0,h|0)|0;h=oe(h|0,D|0,fa|0,f|0)|0;L=D;f=Pd(fa|0,f|0,26)|0;f=le(i|0,ea|0,f|0,D|0)|0;ea=oe(e|0,N|0,16777216,0)|0;ea=Dd(ea|0,D|0,25)|0;i=D;b=oe(ea|0,i|0,r|0,b|0)|0;r=D;i=Pd(ea|0,i|0,25)|0;i=le(e|0,N|0,i|0,D|0)|0;N=oe(h|0,L|0,16777216,0)|0;N=Dd(N|0,D|0,25)|0;e=D;aa=oe(da|0,ca|0,ba|0,aa|0)|0;_=oe(aa|0,D|0,$|0,_|0)|0;Y=oe(_|0,D|0,Z|0,Y|0)|0;W=oe(Y|0,D|0,X|0,W|0)|0;U=oe(W|0,D|0,V|0,U|0)|0;S=oe(U|0,D|0,T|0,S|0)|0;Q=oe(S|0,D|0,R|0,Q|0)|0;O=oe(Q|0,D|0,P|0,O|0)|0;d=oe(O|0,D|0,q|0,d|0)|0;d=oe(d|0,D|0,N|0,e|0)|0;q=D;e=Pd(N|0,e|0,25)|0;e=le(h|0,L|0,e|0,D|0)|0;L=oe(b|0,r|0,33554432,0)|0;L=Dd(L|0,D|0,26)|0;h=D;g=oe(M|0,g|0,L|0,h|0)|0;h=Pd(L|0,h|0,26)|0;h=le(b|0,r|0,h|0,D|0)|0;r=oe(d|0,q|0,33554432,0)|0;r=Dd(r|0,D|0,26)|0;b=D;H=oe(K|0,J|0,I|0,H|0)|0;F=oe(H|0,D|0,G|0,F|0)|0;C=oe(F|0,D|0,E|0,C|0)|0;A=oe(C|0,D|0,B|0,A|0)|0;y=oe(A|0,D|0,z|0,y|0)|0;w=oe(y|0,D|0,x|0,w|0)|0;u=oe(w|0,D|0,v|0,u|0)|0;s=oe(u|0,D|0,t|0,s|0)|0;l=oe(s|0,D|0,o|0,l|0)|0;l=oe(l|0,D|0,r|0,b|0)|0;o=D;b=Pd(r|0,b|0,26)|0;b=le(d|0,q|0,b|0,D|0)|0;q=oe(l|0,o|0,16777216,0)|0;q=Dd(q|0,D|0,25)|0;d=D;r=Ed(q|0,d|0,19,0)|0;n=oe(r|0,D|0,m|0,n|0)|0;m=D;d=Pd(q|0,d|0,25)|0;d=le(l|0,o|0,d|0,D|0)|0;o=oe(n|0,m|0,33554432,0)|0;o=Dd(o|0,D|0,26)|0;l=D;k=oe(p|0,k|0,o|0,l|0)|0;l=Pd(o|0,l|0,26)|0;l=le(n|0,m|0,l|0,D|0)|0;c[a>>2]=l;c[a+4>>2]=k;c[a+8>>2]=j;c[a+12>>2]=i;c[a+16>>2]=h;c[a+20>>2]=g;c[a+24>>2]=f;c[a+28>>2]=e;c[a+32>>2]=b;c[a+36>>2]=d;return}function qa(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0;l=c[b>>2]|0;n=c[b+4>>2]|0;k=c[b+8>>2]|0;f=c[b+12>>2]|0;u=c[b+16>>2]|0;t=c[b+20>>2]|0;g=c[b+24>>2]|0;v=c[b+28>>2]|0;s=c[b+32>>2]|0;q=c[b+36>>2]|0;cb=Ed(l|0,((l|0)<0)<<31>>31|0,l|0,((l|0)<0)<<31>>31|0)|0;bb=D;o=((l<<1|0)<0)<<31>>31;Ua=Ed(l<<1|0,o|0,n|0,((n|0)<0)<<31>>31|0)|0;Ta=D;Oa=Ed(k|0,((k|0)<0)<<31>>31|0,l<<1|0,o|0)|0;Na=D;Ea=Ed(f|0,((f|0)<0)<<31>>31|0,l<<1|0,o|0)|0;Da=D;sa=Ed(u|0,((u|0)<0)<<31>>31|0,l<<1|0,o|0)|0;ra=D;ia=Ed(t|0,((t|0)<0)<<31>>31|0,l<<1|0,o|0)|0;ha=D;_=Ed(g|0,((g|0)<0)<<31>>31|0,l<<1|0,o|0)|0;Z=D;Q=Ed(v|0,((v|0)<0)<<31>>31|0,l<<1|0,o|0)|0;P=D;G=Ed(s|0,((s|0)<0)<<31>>31|0,l<<1|0,o|0)|0;F=D;o=Ed(q|0,((q|0)<0)<<31>>31|0,l<<1|0,o|0)|0;l=D;p=((n<<1|0)<0)<<31>>31;Ma=Ed(n<<1|0,p|0,n|0,((n|0)<0)<<31>>31|0)|0;La=D;Ca=Ed(n<<1|0,p|0,k|0,((k|0)<0)<<31>>31|0)|0;Ba=D;w=((f<<1|0)<0)<<31>>31;wa=Ed(f<<1|0,w|0,n<<1|0,p|0)|0;va=D;ma=Ed(u|0,((u|0)<0)<<31>>31|0,n<<1|0,p|0)|0;la=D;aa=Ed(t<<1|0,((t<<1|0)<0)<<31>>31|0,n<<1|0,p|0)|0;$=D;S=Ed(g|0,((g|0)<0)<<31>>31|0,n<<1|0,p|0)|0;R=D;I=Ed(v<<1|0,((v<<1|0)<0)<<31>>31|0,n<<1|0,p|0)|0;H=D;m=Ed(s|0,((s|0)<0)<<31>>31|0,n<<1|0,p|0)|0;r=D;b=((q*38|0)<0)<<31>>31;p=Ed(q*38|0,b|0,n<<1|0,p|0)|0;n=D;ua=Ed(k|0,((k|0)<0)<<31>>31|0,k|0,((k|0)<0)<<31>>31|0)|0;ta=D;ka=Ed(k<<1|0,((k<<1|0)<0)<<31>>31|0,f|0,((f|0)<0)<<31>>31|0)|0;ja=D;ca=Ed(u|0,((u|0)<0)<<31>>31|0,k<<1|0,((k<<1|0)<0)<<31>>31|0)|0;ba=D;W=Ed(t|0,((t|0)<0)<<31>>31|0,k<<1|0,((k<<1|0)<0)<<31>>31|0)|0;V=D;O=Ed(g|0,((g|0)<0)<<31>>31|0,k<<1|0,((k<<1|0)<0)<<31>>31|0)|0;N=D;z=Ed(v|0,((v|0)<0)<<31>>31|0,k<<1|0,((k<<1|0)<0)<<31>>31|0)|0;y=D;Y=((s*19|0)<0)<<31>>31;Ya=Ed(s*19|0,Y|0,k<<1|0,((k<<1|0)<0)<<31>>31|0)|0;Xa=D;k=Ed(q*38|0,b|0,k|0,((k|0)<0)<<31>>31|0)|0;j=D;ea=Ed(f<<1|0,w|0,f|0,((f|0)<0)<<31>>31|0)|0;da=D;U=Ed(f<<1|0,w|0,u|0,((u|0)<0)<<31>>31|0)|0;T=D;K=Ed(t<<1|0,((t<<1|0)<0)<<31>>31|0,f<<1|0,w|0)|0;J=D;E=Ed(g|0,((g|0)<0)<<31>>31|0,f<<1|0,w|0)|0;C=D;qa=((v*38|0)<0)<<31>>31;_a=Ed(v*38|0,qa|0,f<<1|0,w|0)|0;Za=D;Qa=Ed(s*19|0,Y|0,f<<1|0,w|0)|0;Pa=D;w=Ed(q*38|0,b|0,f<<1|0,w|0)|0;f=D;M=Ed(u|0,((u|0)<0)<<31>>31|0,u|0,((u|0)<0)<<31>>31|0)|0;L=D;B=Ed(u<<1|0,((u<<1|0)<0)<<31>>31|0,t|0,((t|0)<0)<<31>>31|0)|0;A=D;ab=Ed(g*19|0,((g*19|0)<0)<<31>>31|0,u<<1|0,((u<<1|0)<0)<<31>>31|0)|0;$a=D;Sa=Ed(v*38|0,qa|0,u|0,((u|0)<0)<<31>>31|0)|0;Ra=D;Ga=Ed(s*19|0,Y|0,u<<1|0,((u<<1|0)<0)<<31>>31|0)|0;Fa=D;u=Ed(q*38|0,b|0,u|0,((u|0)<0)<<31>>31|0)|0;e=D;eb=Ed(t*38|0,((t*38|0)<0)<<31>>31|0,t|0,((t|0)<0)<<31>>31|0)|0;db=D;Wa=Ed(g*19|0,((g*19|0)<0)<<31>>31|0,t<<1|0,((t<<1|0)<0)<<31>>31|0)|0;Va=D;Ia=Ed(v*38|0,qa|0,t<<1|0,((t<<1|0)<0)<<31>>31|0)|0;Ha=D;ya=Ed(s*19|0,Y|0,t<<1|0,((t<<1|0)<0)<<31>>31|0)|0;xa=D;t=Ed(q*38|0,b|0,t<<1|0,((t<<1|0)<0)<<31>>31|0)|0;d=D;Ka=Ed(g*19|0,((g*19|0)<0)<<31>>31|0,g|0,((g|0)<0)<<31>>31|0)|0;Ja=D;Aa=Ed(v*38|0,qa|0,g|0,((g|0)<0)<<31>>31|0)|0;za=D;oa=Ed(s*19|0,Y|0,g<<1|0,((g<<1|0)<0)<<31>>31|0)|0;na=D;g=Ed(q*38|0,b|0,g|0,((g|0)<0)<<31>>31|0)|0;x=D;qa=Ed(v*38|0,qa|0,v|0,((v|0)<0)<<31>>31|0)|0;pa=D;ga=Ed(s*19|0,Y|0,v<<1|0,((v<<1|0)<0)<<31>>31|0)|0;fa=D;v=Ed(q*38|0,b|0,v<<1|0,((v<<1|0)<0)<<31>>31|0)|0;i=D;Y=Ed(s*19|0,Y|0,s|0,((s|0)<0)<<31>>31|0)|0;X=D;s=Ed(q*38|0,b|0,s|0,((s|0)<0)<<31>>31|0)|0;h=D;q=Ed(q*38|0,b|0,q|0,((q|0)<0)<<31>>31|0)|0;b=D;bb=oe(eb|0,db|0,cb|0,bb|0)|0;$a=oe(bb|0,D|0,ab|0,$a|0)|0;Za=oe($a|0,D|0,_a|0,Za|0)|0;Xa=oe(Za|0,D|0,Ya|0,Xa|0)|0;n=oe(Xa|0,D|0,p|0,n|0)|0;p=D;Ta=oe(Wa|0,Va|0,Ua|0,Ta|0)|0;Ra=oe(Ta|0,D|0,Sa|0,Ra|0)|0;Pa=oe(Ra|0,D|0,Qa|0,Pa|0)|0;j=oe(Pa|0,D|0,k|0,j|0)|0;k=D;La=oe(Oa|0,Na|0,Ma|0,La|0)|0;Ja=oe(La|0,D|0,Ka|0,Ja|0)|0;Ha=oe(Ja|0,D|0,Ia|0,Ha|0)|0;Fa=oe(Ha|0,D|0,Ga|0,Fa|0)|0;f=oe(Fa|0,D|0,w|0,f|0)|0;w=D;Ba=oe(Ea|0,Da|0,Ca|0,Ba|0)|0;za=oe(Ba|0,D|0,Aa|0,za|0)|0;xa=oe(za|0,D|0,ya|0,xa|0)|0;e=oe(xa|0,D|0,u|0,e|0)|0;u=D;ta=oe(wa|0,va|0,ua|0,ta|0)|0;ra=oe(ta|0,D|0,sa|0,ra|0)|0;pa=oe(ra|0,D|0,qa|0,pa|0)|0;na=oe(pa|0,D|0,oa|0,na|0)|0;d=oe(na|0,D|0,t|0,d|0)|0;t=D;ja=oe(ma|0,la|0,ka|0,ja|0)|0;ha=oe(ja|0,D|0,ia|0,ha|0)|0;fa=oe(ha|0,D|0,ga|0,fa|0)|0;x=oe(fa|0,D|0,g|0,x|0)|0;g=D;ba=oe(ea|0,da|0,ca|0,ba|0)|0;$=oe(ba|0,D|0,aa|0,$|0)|0;Z=oe($|0,D|0,_|0,Z|0)|0;X=oe(Z|0,D|0,Y|0,X|0)|0;i=oe(X|0,D|0,v|0,i|0)|0;v=D;T=oe(W|0,V|0,U|0,T|0)|0;R=oe(T|0,D|0,S|0,R|0)|0;P=oe(R|0,D|0,Q|0,P|0)|0;h=oe(P|0,D|0,s|0,h|0)|0;s=D;L=oe(O|0,N|0,M|0,L|0)|0;J=oe(L|0,D|0,K|0,J|0)|0;H=oe(J|0,D|0,I|0,H|0)|0;F=oe(H|0,D|0,G|0,F|0)|0;b=oe(F|0,D|0,q|0,b|0)|0;q=D;A=oe(E|0,C|0,B|0,A|0)|0;y=oe(A|0,D|0,z|0,y|0)|0;r=oe(y|0,D|0,m|0,r|0)|0;l=oe(r|0,D|0,o|0,l|0)|0;o=D;p=Pd(n|0,p|0,1)|0;n=D;k=Pd(j|0,k|0,1)|0;j=D;w=Pd(f|0,w|0,1)|0;f=D;u=Pd(e|0,u|0,1)|0;e=D;t=Pd(d|0,t|0,1)|0;d=D;g=Pd(x|0,g|0,1)|0;x=D;v=Pd(i|0,v|0,1)|0;i=D;s=Pd(h|0,s|0,1)|0;h=D;q=Pd(b|0,q|0,1)|0;b=D;o=Pd(l|0,o|0,1)|0;l=D;r=oe(p|0,n|0,33554432,0)|0;r=Dd(r|0,D|0,26)|0;m=D;j=oe(r|0,m|0,k|0,j|0)|0;k=D;m=Pd(r|0,m|0,26)|0;m=le(p|0,n|0,m|0,D|0)|0;n=D;p=oe(t|0,d|0,33554432,0)|0;p=Dd(p|0,D|0,26)|0;r=D;x=oe(p|0,r|0,g|0,x|0)|0;g=D;r=Pd(p|0,r|0,26)|0;r=le(t|0,d|0,r|0,D|0)|0;d=D;t=oe(j|0,k|0,16777216,0)|0;t=Dd(t|0,D|0,25)|0;p=D;f=oe(t|0,p|0,w|0,f|0)|0;w=D;p=Pd(t|0,p|0,25)|0;p=le(j|0,k|0,p|0,D|0)|0;k=D;j=oe(x|0,g|0,16777216,0)|0;j=Dd(j|0,D|0,25)|0;t=D;i=oe(j|0,t|0,v|0,i|0)|0;v=D;t=Pd(j|0,t|0,25)|0;t=le(x|0,g|0,t|0,D|0)|0;g=D;x=oe(f|0,w|0,33554432,0)|0;x=Dd(x|0,D|0,26)|0;j=D;e=oe(x|0,j|0,u|0,e|0)|0;u=D;j=Pd(x|0,j|0,26)|0;j=le(f|0,w|0,j|0,D|0)|0;w=oe(i|0,v|0,33554432,0)|0;w=Dd(w|0,D|0,26)|0;f=D;h=oe(w|0,f|0,s|0,h|0)|0;s=D;f=Pd(w|0,f|0,26)|0;f=le(i|0,v|0,f|0,D|0)|0;v=oe(e|0,u|0,16777216,0)|0;v=Dd(v|0,D|0,25)|0;i=D;d=oe(v|0,i|0,r|0,d|0)|0;r=D;i=Pd(v|0,i|0,25)|0;i=le(e|0,u|0,i|0,D|0)|0;u=oe(h|0,s|0,16777216,0)|0;u=Dd(u|0,D|0,25)|0;e=D;b=oe(u|0,e|0,q|0,b|0)|0;q=D;e=Pd(u|0,e|0,25)|0;e=le(h|0,s|0,e|0,D|0)|0;s=oe(d|0,r|0,33554432,0)|0;s=Dd(s|0,D|0,26)|0;h=D;g=oe(t|0,g|0,s|0,h|0)|0;h=Pd(s|0,h|0,26)|0;h=le(d|0,r|0,h|0,D|0)|0;r=oe(b|0,q|0,33554432,0)|0;r=Dd(r|0,D|0,26)|0;d=D;l=oe(r|0,d|0,o|0,l|0)|0;o=D;d=Pd(r|0,d|0,26)|0;d=le(b|0,q|0,d|0,D|0)|0;q=oe(l|0,o|0,16777216,0)|0;q=Dd(q|0,D|0,25)|0;b=D;r=Ed(q|0,b|0,19,0)|0;n=oe(r|0,D|0,m|0,n|0)|0;m=D;b=Pd(q|0,b|0,25)|0;b=le(l|0,o|0,b|0,D|0)|0;o=oe(n|0,m|0,33554432,0)|0;o=Dd(o|0,D|0,26)|0;l=D;k=oe(p|0,k|0,o|0,l|0)|0;l=Pd(o|0,l|0,26)|0;l=le(n|0,m|0,l|0,D|0)|0;c[a>>2]=l;c[a+4>>2]=k;c[a+8>>2]=j;c[a+12>>2]=i;c[a+16>>2]=h;c[a+20>>2]=g;c[a+24>>2]=f;c[a+28>>2]=e;c[a+32>>2]=d;c[a+36>>2]=b;return}function ra(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0;l=c[b>>2]|0;p=c[b+4>>2]|0;k=c[b+8>>2]|0;f=c[b+12>>2]|0;C=c[b+16>>2]|0;d=c[b+20>>2]|0;g=c[b+24>>2]|0;O=c[b+28>>2]|0;A=c[b+32>>2]|0;q=c[b+36>>2]|0;cb=Ed(l|0,((l|0)<0)<<31>>31|0,l|0,((l|0)<0)<<31>>31|0)|0;bb=D;o=((l<<1|0)<0)<<31>>31;Ia=Ed(l<<1|0,o|0,p|0,((p|0)<0)<<31>>31|0)|0;Ha=D;Wa=Ed(k|0,((k|0)<0)<<31>>31|0,l<<1|0,o|0)|0;Va=D;Ua=Ed(f|0,((f|0)<0)<<31>>31|0,l<<1|0,o|0)|0;Ta=D;Oa=Ed(C|0,((C|0)<0)<<31>>31|0,l<<1|0,o|0)|0;Na=D;ya=Ed(d|0,((d|0)<0)<<31>>31|0,l<<1|0,o|0)|0;xa=D;ga=Ed(g|0,((g|0)<0)<<31>>31|0,l<<1|0,o|0)|0;fa=D;R=Ed(O|0,((O|0)<0)<<31>>31|0,l<<1|0,o|0)|0;Q=D;F=Ed(A|0,((A|0)<0)<<31>>31|0,l<<1|0,o|0)|0;E=D;o=Ed(q|0,((q|0)<0)<<31>>31|0,l<<1|0,o|0)|0;l=D;n=((p<<1|0)<0)<<31>>31;ta=Ed(p<<1|0,n|0,p|0,((p|0)<0)<<31>>31|0)|0;ua=D;ba=Ed(p<<1|0,n|0,k|0,((k|0)<0)<<31>>31|0)|0;ca=D;P=((f<<1|0)<0)<<31>>31;Sa=Ed(f<<1|0,P|0,p<<1|0,n|0)|0;Ra=D;Ca=Ed(C|0,((C|0)<0)<<31>>31|0,p<<1|0,n|0)|0;Ba=D;ia=Ed(d<<1|0,((d<<1|0)<0)<<31>>31|0,p<<1|0,n|0)|0;ha=D;T=Ed(g|0,((g|0)<0)<<31>>31|0,p<<1|0,n|0)|0;S=D;H=Ed(O<<1|0,((O<<1|0)<0)<<31>>31|0,p<<1|0,n|0)|0;G=D;t=Ed(A|0,((A|0)<0)<<31>>31|0,p<<1|0,n|0)|0;s=D;b=((q*38|0)<0)<<31>>31;n=Ed(q*38|0,b|0,p<<1|0,n|0)|0;p=D;Qa=Ed(k|0,((k|0)<0)<<31>>31|0,k|0,((k|0)<0)<<31>>31|0)|0;Pa=D;Aa=Ed(k<<1|0,((k<<1|0)<0)<<31>>31|0,f|0,((f|0)<0)<<31>>31|0)|0;za=D;ka=Ed(C|0,((C|0)<0)<<31>>31|0,k<<1|0,((k<<1|0)<0)<<31>>31|0)|0;ja=D;X=Ed(d|0,((d|0)<0)<<31>>31|0,k<<1|0,((k<<1|0)<0)<<31>>31|0)|0;W=D;N=Ed(g|0,((g|0)<0)<<31>>31|0,k<<1|0,((k<<1|0)<0)<<31>>31|0)|0;M=D;v=Ed(O|0,((O|0)<0)<<31>>31|0,k<<1|0,((k<<1|0)<0)<<31>>31|0)|0;u=D;ea=((A*19|0)<0)<<31>>31;Ya=Ed(A*19|0,ea|0,k<<1|0,((k<<1|0)<0)<<31>>31|0)|0;Xa=D;k=Ed(q*38|0,b|0,k|0,((k|0)<0)<<31>>31|0)|0;j=D;ma=Ed(f<<1|0,P|0,f|0,((f|0)<0)<<31>>31|0)|0;la=D;V=Ed(f<<1|0,P|0,C|0,((C|0)<0)<<31>>31|0)|0;U=D;J=Ed(d<<1|0,((d<<1|0)<0)<<31>>31|0,f<<1|0,P|0)|0;I=D;z=Ed(g|0,((g|0)<0)<<31>>31|0,f<<1|0,P|0)|0;y=D;Ma=((O*38|0)<0)<<31>>31;_a=Ed(O*38|0,Ma|0,f<<1|0,P|0)|0;Za=D;Ea=Ed(A*19|0,ea|0,f<<1|0,P|0)|0;Da=D;P=Ed(q*38|0,b|0,f<<1|0,P|0)|0;f=D;L=Ed(C|0,((C|0)<0)<<31>>31|0,C|0,((C|0)<0)<<31>>31|0)|0;K=D;x=Ed(C<<1|0,((C<<1|0)<0)<<31>>31|0,d|0,((d|0)<0)<<31>>31|0)|0;w=D;ab=Ed(g*19|0,((g*19|0)<0)<<31>>31|0,C<<1|0,((C<<1|0)<0)<<31>>31|0)|0;$a=D;Ga=Ed(O*38|0,Ma|0,C|0,((C|0)<0)<<31>>31|0)|0;Fa=D;oa=Ed(A*19|0,ea|0,C<<1|0,((C<<1|0)<0)<<31>>31|0)|0;na=D;C=Ed(q*38|0,b|0,C|0,((C|0)<0)<<31>>31|0)|0;e=D;eb=Ed(d*38|0,((d*38|0)<0)<<31>>31|0,d|0,((d|0)<0)<<31>>31|0)|0;db=D;Ka=Ed(g*19|0,((g*19|0)<0)<<31>>31|0,d<<1|0,((d<<1|0)<0)<<31>>31|0)|0;Ja=D;qa=Ed(O*38|0,Ma|0,d<<1|0,((d<<1|0)<0)<<31>>31|0)|0;pa=D;_=Ed(A*19|0,ea|0,d<<1|0,((d<<1|0)<0)<<31>>31|0)|0;Z=D;d=Ed(q*38|0,b|0,d<<1|0,((d<<1|0)<0)<<31>>31|0)|0;B=D;sa=Ed(g*19|0,((g*19|0)<0)<<31>>31|0,g|0,((g|0)<0)<<31>>31|0)|0;ra=D;aa=Ed(O*38|0,Ma|0,g|0,((g|0)<0)<<31>>31|0)|0;$=D;m=Ed(A*19|0,ea|0,g<<1|0,((g<<1|0)<0)<<31>>31|0)|0;r=D;g=Ed(q*38|0,b|0,g|0,((g|0)<0)<<31>>31|0)|0;Y=D;Ma=Ed(O*38|0,Ma|0,O|0,((O|0)<0)<<31>>31|0)|0;La=D;wa=Ed(A*19|0,ea|0,O<<1|0,((O<<1|0)<0)<<31>>31|0)|0;va=D;O=Ed(q*38|0,b|0,O<<1|0,((O<<1|0)<0)<<31>>31|0)|0;i=D;ea=Ed(A*19|0,ea|0,A|0,((A|0)<0)<<31>>31|0)|0;da=D;A=Ed(q*38|0,b|0,A|0,((A|0)<0)<<31>>31|0)|0;h=D;q=Ed(q*38|0,b|0,q|0,((q|0)<0)<<31>>31|0)|0;b=D;bb=oe(eb|0,db|0,cb|0,bb|0)|0;$a=oe(bb|0,D|0,ab|0,$a|0)|0;Za=oe($a|0,D|0,_a|0,Za|0)|0;Xa=oe(Za|0,D|0,Ya|0,Xa|0)|0;p=oe(Xa|0,D|0,n|0,p|0)|0;n=D;ua=oe(Wa|0,Va|0,ta|0,ua|0)|0;ta=D;ca=oe(Ua|0,Ta|0,ba|0,ca|0)|0;ba=D;Pa=oe(Sa|0,Ra|0,Qa|0,Pa|0)|0;Na=oe(Pa|0,D|0,Oa|0,Na|0)|0;La=oe(Na|0,D|0,Ma|0,La|0)|0;r=oe(La|0,D|0,m|0,r|0)|0;B=oe(r|0,D|0,d|0,B|0)|0;d=D;r=oe(p|0,n|0,33554432,0)|0;r=Dd(r|0,D|0,26)|0;m=D;Ha=oe(Ka|0,Ja|0,Ia|0,Ha|0)|0;Fa=oe(Ha|0,D|0,Ga|0,Fa|0)|0;Da=oe(Fa|0,D|0,Ea|0,Da|0)|0;j=oe(Da|0,D|0,k|0,j|0)|0;j=oe(j|0,D|0,r|0,m|0)|0;k=D;m=Pd(r|0,m|0,26)|0;m=le(p|0,n|0,m|0,D|0)|0;n=D;p=oe(B|0,d|0,33554432,0)|0;p=Dd(p|0,D|0,26)|0;r=D;za=oe(Ca|0,Ba|0,Aa|0,za|0)|0;xa=oe(za|0,D|0,ya|0,xa|0)|0;va=oe(xa|0,D|0,wa|0,va|0)|0;Y=oe(va|0,D|0,g|0,Y|0)|0;Y=oe(Y|0,D|0,p|0,r|0)|0;g=D;r=Pd(p|0,r|0,26)|0;r=le(B|0,d|0,r|0,D|0)|0;d=D;B=oe(j|0,k|0,16777216,0)|0;B=Dd(B|0,D|0,25)|0;p=D;ra=oe(ua|0,ta|0,sa|0,ra|0)|0;pa=oe(ra|0,D|0,qa|0,pa|0)|0;na=oe(pa|0,D|0,oa|0,na|0)|0;f=oe(na|0,D|0,P|0,f|0)|0;f=oe(f|0,D|0,B|0,p|0)|0;P=D;p=Pd(B|0,p|0,25)|0;p=le(j|0,k|0,p|0,D|0)|0;k=D;j=oe(Y|0,g|0,16777216,0)|0;j=Dd(j|0,D|0,25)|0;B=D;ja=oe(ma|0,la|0,ka|0,ja|0)|0;ha=oe(ja|0,D|0,ia|0,ha|0)|0;fa=oe(ha|0,D|0,ga|0,fa|0)|0;da=oe(fa|0,D|0,ea|0,da|0)|0;i=oe(da|0,D|0,O|0,i|0)|0;i=oe(i|0,D|0,j|0,B|0)|0;O=D;B=Pd(j|0,B|0,25)|0;B=le(Y|0,g|0,B|0,D|0)|0;g=D;Y=oe(f|0,P|0,33554432,0)|0;Y=Dd(Y|0,D|0,26)|0;j=D;$=oe(ca|0,ba|0,aa|0,$|0)|0;Z=oe($|0,D|0,_|0,Z|0)|0;e=oe(Z|0,D|0,C|0,e|0)|0;e=oe(e|0,D|0,Y|0,j|0)|0;C=D;j=Pd(Y|0,j|0,26)|0;j=le(f|0,P|0,j|0,D|0)|0;P=oe(i|0,O|0,33554432,0)|0;P=Dd(P|0,D|0,26)|0;f=D;U=oe(X|0,W|0,V|0,U|0)|0;S=oe(U|0,D|0,T|0,S|0)|0;Q=oe(S|0,D|0,R|0,Q|0)|0;h=oe(Q|0,D|0,A|0,h|0)|0;h=oe(h|0,D|0,P|0,f|0)|0;A=D;f=Pd(P|0,f|0,26)|0;f=le(i|0,O|0,f|0,D|0)|0;O=oe(e|0,C|0,16777216,0)|0;O=Dd(O|0,D|0,25)|0;i=D;d=oe(O|0,i|0,r|0,d|0)|0;r=D;i=Pd(O|0,i|0,25)|0;i=le(e|0,C|0,i|0,D|0)|0;C=oe(h|0,A|0,16777216,0)|0;C=Dd(C|0,D|0,25)|0;e=D;K=oe(N|0,M|0,L|0,K|0)|0;I=oe(K|0,D|0,J|0,I|0)|0;G=oe(I|0,D|0,H|0,G|0)|0;E=oe(G|0,D|0,F|0,E|0)|0;b=oe(E|0,D|0,q|0,b|0)|0;b=oe(b|0,D|0,C|0,e|0)|0;q=D;e=Pd(C|0,e|0,25)|0;e=le(h|0,A|0,e|0,D|0)|0;A=oe(d|0,r|0,33554432,0)|0;A=Dd(A|0,D|0,26)|0;h=D;g=oe(B|0,g|0,A|0,h|0)|0;h=Pd(A|0,h|0,26)|0;h=le(d|0,r|0,h|0,D|0)|0;r=oe(b|0,q|0,33554432,0)|0;r=Dd(r|0,D|0,26)|0;d=D;w=oe(z|0,y|0,x|0,w|0)|0;u=oe(w|0,D|0,v|0,u|0)|0;s=oe(u|0,D|0,t|0,s|0)|0;l=oe(s|0,D|0,o|0,l|0)|0;l=oe(l|0,D|0,r|0,d|0)|0;o=D;d=Pd(r|0,d|0,26)|0;d=le(b|0,q|0,d|0,D|0)|0;q=oe(l|0,o|0,16777216,0)|0;q=Dd(q|0,D|0,25)|0;b=D;r=Ed(q|0,b|0,19,0)|0;n=oe(r|0,D|0,m|0,n|0)|0;m=D;b=Pd(q|0,b|0,25)|0;b=le(l|0,o|0,b|0,D|0)|0;o=oe(n|0,m|0,33554432,0)|0;o=Dd(o|0,D|0,26)|0;l=D;k=oe(p|0,k|0,o|0,l|0)|0;l=Pd(o|0,l|0,26)|0;l=le(n|0,m|0,l|0,D|0)|0;c[a>>2]=l;c[a+4>>2]=k;c[a+8>>2]=j;c[a+12>>2]=i;c[a+16>>2]=h;c[a+20>>2]=g;c[a+24>>2]=f;c[a+28>>2]=e;c[a+32>>2]=d;c[a+36>>2]=b;return}function sa(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;n=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;p=d[g+4>>0]|d[g+4+1>>0]<<8|d[g+4+2>>0]<<16|d[g+4+3>>0]<<24;h=d[g+8>>0]|d[g+8+1>>0]<<8|d[g+8+2>>0]<<16|d[g+8+3>>0]<<24;i=d[g+8+4>>0]|d[g+8+4+1>>0]<<8|d[g+8+4+2>>0]<<16|d[g+8+4+3>>0]<<24;f=Pd(e|0,f|0,56)|0;g=D;if((c+e+(0-(e&7))|0)==(c|0)){o=h^2037671283;l=i^1952801890;m=n^1886610805;k=p^1936682341;j=h^1852075885;s=i^1685025377;i=n^1852142177;h=p^1819895653}else{u=c;r=h^2037671283;l=i^1952801890;o=n^1886610805;m=p^1936682341;k=h^1852075885;j=i^1685025377;i=n^1852142177;h=p^1819895653;while(1){v=u;t=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;v=d[v+4>>0]|d[v+4+1>>0]<<8|d[v+4+2>>0]<<16|d[v+4+3>>0]<<24;p=t^r;r=v^l;m=oe(o|0,m|0,k|0,j|0)|0;n=D;q=Pd(k|0,j|0,13)|0;s=D;x=Rd(k|0,j|0,51)|0;s=(s|D)^n;h=oe(p|0,r|0,i|0,h|0)|0;i=D;o=Pd(p|0,r|0,16)|0;j=D;k=Rd(p|0,r|0,48)|0;j=(j|D)^i;n=oe((o|k)^h|0,j|0,n|0,m|0)|0;r=D;l=Pd((o|k)^h|0,j|0,21)|0;p=D;j=Rd((o|k)^h|0,j|0,43)|0;p=(p|D)^r;i=oe(h|0,i|0,(q|x)^m|0,s|0)|0;h=D;k=Pd((q|x)^m|0,s|0,17)|0;o=D;s=Rd((q|x)^m|0,s|0,47)|0;o=h^(o|D);r=oe(n|0,r|0,i^(k|s)|0,o|0)|0;m=D;x=Pd(i^(k|s)|0,o|0,13)|0;q=D;o=Rd(i^(k|s)|0,o|0,51)|0;q=(q|D)^m;i=oe((l|j)^n|0,p|0,h|0,i|0)|0;h=D;s=Pd((l|j)^n|0,p|0,16)|0;k=D;p=Rd((l|j)^n|0,p|0,48)|0;k=(k|D)^h;m=oe((s|p)^i|0,k|0,m|0,r|0)|0;n=D;j=Pd((s|p)^i|0,k|0,21)|0;l=D;k=Rd((s|p)^i|0,k|0,43)|0;l=(l|D)^n;h=oe(i|0,h|0,(x|o)^r|0,q|0)|0;i=D;p=Pd((x|o)^r|0,q|0,17)|0;s=D;q=Rd((x|o)^r|0,q|0,47)|0;s=(s|D)^i;u=u+8|0;if((u|0)==(c+e+(0-(e&7))|0)){c=c+e+(0-(e&7))|0;o=(j|k)^m;m=m^t;k=n^v;j=(p|q)^h;break}else{r=(j|k)^m;o=m^t;m=n^v;k=(p|q)^h;j=s}}}switch(e&7){case 7:{f=Pd(d[c+6>>0]|0|0,0,48)|0|f;g=D|g;w=5;break}case 6:{w=5;break}case 5:{w=6;break}case 4:{w=7;break}case 3:{w=8;break}case 2:{w=9;break}case 1:{w=10;break}default:{}}if((w|0)==5){x=Pd(d[c+5>>0]|0|0,0,40)|0;g=D|g;f=x|f;w=6}if((w|0)==6){g=d[c+4>>0]|0|g;w=7}if((w|0)==7){x=Pd(d[c+3>>0]|0|0,0,24)|0;f=x|f;g=D|g;w=8}if((w|0)==8){x=Pd(d[c+2>>0]|0|0,0,16)|0;f=x|f;g=D|g;w=9}if((w|0)==9){x=Pd(d[c+1>>0]|0|0,0,8)|0;f=x|f;g=D|g;w=10}if((w|0)==10)f=d[c>>0]|0|f;u=f^o;n=g^l;e=oe(m|0,k|0,j|0,s|0)|0;q=D;m=Pd(j|0,s|0,13)|0;r=D;p=Rd(j|0,s|0,51)|0;r=(r|D)^q;v=oe(u|0,n|0,i|0,h|0)|0;c=D;w=Pd(u|0,n|0,16)|0;x=D;n=Rd(u|0,n|0,48)|0;x=(x|D)^c;q=oe((w|n)^v|0,x|0,q|0,e|0)|0;u=D;o=Pd((w|n)^v|0,x|0,21)|0;t=D;x=Rd((w|n)^v|0,x|0,43)|0;t=(t|D)^u;c=oe(v|0,c|0,(m|p)^e|0,r|0)|0;v=D;n=Pd((m|p)^e|0,r|0,17)|0;w=D;r=Rd((m|p)^e|0,r|0,47)|0;w=v^(w|D);u=oe(q|0,u|0,c^(n|r)|0,w|0)|0;e=D;p=Pd(c^(n|r)|0,w|0,13)|0;s=D;w=Rd(c^(n|r)|0,w|0,51)|0;s=(s|D)^e;c=oe((o|x)^q|0,t|0,v|0,c|0)|0;v=D;r=Pd((o|x)^q|0,t|0,16)|0;n=D;t=Rd((o|x)^q|0,t|0,48)|0;n=(n|D)^v;e=oe((r|t)^c|0,n|0,e|0,u|0)|0;q=D;x=Pd((r|t)^c|0,n|0,21)|0;o=D;n=Rd((r|t)^c|0,n|0,43)|0;o=(o|D)^q;v=oe(c|0,v|0,(p|w)^u|0,s|0)|0;c=D;t=Pd((p|w)^u|0,s|0,17)|0;r=D;s=Rd((p|w)^u|0,s|0,47)|0;r=(r|D)^c;q=oe(e^f|0,q^g|0,(t|s)^v|0,r|0)|0;u=D;w=Pd((t|s)^v|0,r|0,13)|0;p=D;r=Rd((t|s)^v|0,r|0,51)|0;p=u^(p|D);v=oe((x|n)^e|0,o|0,c^255|0,v|0)|0;c=D;s=Pd((x|n)^e|0,o|0,16)|0;t=D;o=Rd((x|n)^e|0,o|0,48)|0;t=(t|D)^c;u=oe((s|o)^v|0,t|0,u|0,q|0)|0;e=D;n=Pd((s|o)^v|0,t|0,21)|0;x=D;t=Rd((s|o)^v|0,t|0,43)|0;x=(x|D)^e;c=oe(v|0,c|0,q^(w|r)|0,p|0)|0;v=D;o=Pd(q^(w|r)|0,p|0,17)|0;s=D;p=Rd(q^(w|r)|0,p|0,47)|0;s=(s|D)^v;e=oe(u|0,e|0,(o|p)^c|0,s|0)|0;r=D;w=Pd((o|p)^c|0,s|0,13)|0;q=D;s=Rd((o|p)^c|0,s|0,51)|0;q=(q|D)^r;c=oe((n|t)^u|0,x|0,v|0,c|0)|0;v=D;p=Pd((n|t)^u|0,x|0,16)|0;o=D;x=Rd((n|t)^u|0,x|0,48)|0;o=(o|D)^v;r=oe((p|x)^c|0,o|0,r|0,e|0)|0;u=D;t=Pd((p|x)^c|0,o|0,21)|0;n=D;o=Rd((p|x)^c|0,o|0,43)|0;n=(n|D)^u;v=oe(c|0,v|0,(w|s)^e|0,q|0)|0;c=D;x=Pd((w|s)^e|0,q|0,17)|0;p=D;q=Rd((w|s)^e|0,q|0,47)|0;p=(p|D)^c;u=oe(r|0,u|0,(x|q)^v|0,p|0)|0;e=D;s=Pd((x|q)^v|0,p|0,13)|0;w=D;p=Rd((x|q)^v|0,p|0,51)|0;w=(w|D)^e;v=oe((t|o)^r|0,n|0,c|0,v|0)|0;c=D;q=Pd((t|o)^r|0,n|0,16)|0;x=D;n=Rd((t|o)^r|0,n|0,48)|0;x=(x|D)^c;e=oe((q|n)^v|0,x|0,e|0,u|0)|0;r=D;o=Pd((q|n)^v|0,x|0,21)|0;t=D;x=Rd((q|n)^v|0,x|0,43)|0;t=(t|D)^r;c=oe(v|0,c|0,(s|p)^u|0,w|0)|0;v=D;n=Pd((s|p)^u|0,w|0,17)|0;q=D;w=Rd((s|p)^u|0,w|0,47)|0;q=(q|D)^v;r=oe(e|0,r|0,(n|w)^c|0,q|0)|0;u=D;p=Pd((n|w)^c|0,q|0,13)|0;s=D;q=Rd((n|w)^c|0,q|0,51)|0;u=(s|D)^u;c=oe((o|x)^e|0,t|0,v|0,c|0)|0;v=D;s=Pd((o|x)^e|0,t|0,16)|0;w=D;t=Rd((o|x)^e|0,t|0,48)|0;w=(w|D)^v;e=Pd((s|t)^c|0,w|0,21)|0;x=D;w=Rd((s|t)^c|0,w|0,43)|0;x=x|D;v=oe(c|0,v|0,(p|q)^r|0,u|0)|0;c=D;t=Pd((p|q)^r|0,u|0,17)|0;s=D;u=Rd((p|q)^r|0,u|0,47)|0;x=(s|D)^c^v^x;a[b>>0]=(t|u)^v^c^(e|w);a[b+1>>0]=((t|u)^v^c^(e|w))>>8;a[b+2>>0]=((t|u)^v^c^(e|w))>>16;a[b+3>>0]=((t|u)^v^c^(e|w))>>24;a[b+4>>0]=x;a[b+4+1>>0]=x>>8;a[b+4+2>>0]=x>>16;a[b+4+3>>0]=x>>24;return 0}function ta(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if(!a)return;h=c[8495]|0;if((a+-8|0)>>>0<h>>>0)ba();b=c[a+-4>>2]|0;if((b&3|0)==1)ba();n=a+-8+(b&-8)|0;do if(!(b&1)){e=c[a+-8>>2]|0;if(!(b&3))return;k=a+-8+(0-e)|0;j=e+(b&-8)|0;if(k>>>0<h>>>0)ba();if((k|0)==(c[8496]|0)){a=c[n+4>>2]|0;if((a&3|0)!=3){q=k;f=j;break}c[8493]=j;c[n+4>>2]=a&-2;c[k+4>>2]=j|1;c[k+j>>2]=j;return}if(e>>>0<256){a=c[k+8>>2]|0;b=c[k+12>>2]|0;if((a|0)!=(34004+(e>>>3<<1<<2)|0)){if(a>>>0<h>>>0)ba();if((c[a+12>>2]|0)!=(k|0))ba()}if((b|0)==(a|0)){c[8491]=c[8491]&~(1<<(e>>>3));q=k;f=j;break}if((b|0)!=(34004+(e>>>3<<1<<2)|0)){if(b>>>0<h>>>0)ba();if((c[b+8>>2]|0)!=(k|0))ba();else d=b+8|0}else d=b+8|0;c[a+12>>2]=b;c[d>>2]=a;q=k;f=j;break}g=c[k+24>>2]|0;a=c[k+12>>2]|0;do if((a|0)==(k|0)){a=c[k+16+4>>2]|0;if(!a){a=c[k+16>>2]|0;if(!a){i=0;break}else e=k+16|0}else e=k+16+4|0;while(1){b=a+20|0;d=c[b>>2]|0;if(d|0){a=d;e=b;continue}b=a+16|0;d=c[b>>2]|0;if(!d)break;else{a=d;e=b}}if(e>>>0<h>>>0)ba();else{c[e>>2]=0;i=a;break}}else{b=c[k+8>>2]|0;if(b>>>0<h>>>0)ba();if((c[b+12>>2]|0)!=(k|0))ba();if((c[a+8>>2]|0)==(k|0)){c[b+12>>2]=a;c[a+8>>2]=b;i=a;break}else ba()}while(0);if(g){a=c[k+28>>2]|0;if((k|0)==(c[34268+(a<<2)>>2]|0)){c[34268+(a<<2)>>2]=i;if(!i){c[8492]=c[8492]&~(1<<a);q=k;f=j;break}}else{if(g>>>0<(c[8495]|0)>>>0)ba();if((c[g+16>>2]|0)==(k|0))c[g+16>>2]=i;else c[g+20>>2]=i;if(!i){q=k;f=j;break}}b=c[8495]|0;if(i>>>0<b>>>0)ba();c[i+24>>2]=g;a=c[k+16>>2]|0;do if(a|0)if(a>>>0<b>>>0)ba();else{c[i+16>>2]=a;c[a+24>>2]=i;break}while(0);a=c[k+16+4>>2]|0;if(a)if(a>>>0<(c[8495]|0)>>>0)ba();else{c[i+20>>2]=a;c[a+24>>2]=i;q=k;f=j;break}else{q=k;f=j}}else{q=k;f=j}}else{q=a+-8|0;f=b&-8}while(0);if(q>>>0>=n>>>0)ba();d=c[n+4>>2]|0;if(!(d&1))ba();if(!(d&2)){if((n|0)==(c[8497]|0)){p=(c[8494]|0)+f|0;c[8494]=p;c[8497]=q;c[q+4>>2]=p|1;if((q|0)!=(c[8496]|0))return;c[8496]=0;c[8493]=0;return}if((n|0)==(c[8496]|0)){p=(c[8493]|0)+f|0;c[8493]=p;c[8496]=q;c[q+4>>2]=p|1;c[q+p>>2]=p;return}f=(d&-8)+f|0;do if(d>>>0>=256){g=c[n+24>>2]|0;a=c[n+12>>2]|0;do if((a|0)==(n|0)){a=c[n+16+4>>2]|0;if(!a){a=c[n+16>>2]|0;if(!a){m=0;break}else e=n+16|0}else e=n+16+4|0;while(1){b=a+20|0;d=c[b>>2]|0;if(d|0){a=d;e=b;continue}b=a+16|0;d=c[b>>2]|0;if(!d)break;else{a=d;e=b}}if(e>>>0<(c[8495]|0)>>>0)ba();else{c[e>>2]=0;m=a;break}}else{b=c[n+8>>2]|0;if(b>>>0<(c[8495]|0)>>>0)ba();if((c[b+12>>2]|0)!=(n|0))ba();if((c[a+8>>2]|0)==(n|0)){c[b+12>>2]=a;c[a+8>>2]=b;m=a;break}else ba()}while(0);if(g|0){a=c[n+28>>2]|0;if((n|0)==(c[34268+(a<<2)>>2]|0)){c[34268+(a<<2)>>2]=m;if(!m){c[8492]=c[8492]&~(1<<a);break}}else{if(g>>>0<(c[8495]|0)>>>0)ba();if((c[g+16>>2]|0)==(n|0))c[g+16>>2]=m;else c[g+20>>2]=m;if(!m)break}b=c[8495]|0;if(m>>>0<b>>>0)ba();c[m+24>>2]=g;a=c[n+16>>2]|0;do if(a|0)if(a>>>0<b>>>0)ba();else{c[m+16>>2]=a;c[a+24>>2]=m;break}while(0);a=c[n+16+4>>2]|0;if(a|0)if(a>>>0<(c[8495]|0)>>>0)ba();else{c[m+20>>2]=a;c[a+24>>2]=m;break}}}else{a=c[n+8>>2]|0;b=c[n+12>>2]|0;if((a|0)!=(34004+(d>>>3<<1<<2)|0)){if(a>>>0<(c[8495]|0)>>>0)ba();if((c[a+12>>2]|0)!=(n|0))ba()}if((b|0)==(a|0)){c[8491]=c[8491]&~(1<<(d>>>3));break}if((b|0)!=(34004+(d>>>3<<1<<2)|0)){if(b>>>0<(c[8495]|0)>>>0)ba();if((c[b+8>>2]|0)!=(n|0))ba();else l=b+8|0}else l=b+8|0;c[a+12>>2]=b;c[l>>2]=a}while(0);c[q+4>>2]=f|1;c[q+f>>2]=f;if((q|0)==(c[8496]|0)){c[8493]=f;return}}else{c[n+4>>2]=d&-2;c[q+4>>2]=f|1;c[q+f>>2]=f}b=f>>>3;if(f>>>0<256){a=c[8491]|0;if(a&1<<b){a=c[34004+(b<<1<<2)+8>>2]|0;if(a>>>0<(c[8495]|0)>>>0)ba();else{o=a;p=34004+(b<<1<<2)+8|0}}else{c[8491]=a|1<<b;o=34004+(b<<1<<2)|0;p=34004+(b<<1<<2)+8|0}c[p>>2]=q;c[o+12>>2]=q;c[q+8>>2]=o;c[q+12>>2]=34004+(b<<1<<2);return}a=f>>>8;if(a)if(f>>>0>16777215)a=31;else{p=a<<((a+1048320|0)>>>16&8)<<(((a<<((a+1048320|0)>>>16&8))+520192|0)>>>16&4);a=14-(((a<<((a+1048320|0)>>>16&8))+520192|0)>>>16&4|(a+1048320|0)>>>16&8|(p+245760|0)>>>16&2)+(p<<((p+245760|0)>>>16&2)>>>15)|0;a=f>>>(a+7|0)&1|a<<1}else a=0;e=34268+(a<<2)|0;c[q+28>>2]=a;c[q+20>>2]=0;c[q+16>>2]=0;b=c[8492]|0;d=1<<a;do if(b&d){b=f<<((a|0)==31?0:25-(a>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f|0)){a=130;break}d=e+16+(b>>>31<<2)|0;a=c[d>>2]|0;if(!a){a=127;break}else{b=b<<1;e=a}}if((a|0)==127)if(d>>>0<(c[8495]|0)>>>0)ba();else{c[d>>2]=q;c[q+24>>2]=e;c[q+12>>2]=q;c[q+8>>2]=q;break}else if((a|0)==130){a=e+8|0;b=c[a>>2]|0;p=c[8495]|0;if(b>>>0>=p>>>0&e>>>0>=p>>>0){c[b+12>>2]=q;c[a>>2]=q;c[q+8>>2]=b;c[q+12>>2]=e;c[q+24>>2]=0;break}else ba()}}else{c[8492]=b|d;c[e>>2]=q;c[q+24>>2]=e;c[q+12>>2]=q;c[q+8>>2]=q}while(0);q=(c[8499]|0)+-1|0;c[8499]=q;if(!q)a=34420;else return;while(1){a=c[a>>2]|0;if(!a)break;else a=a+8|0}c[8499]=-1;return}function ua(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=c[a+4>>2]|0;do if(!(d&1)){l=c[a>>2]|0;if(!(d&3))return;j=c[8495]|0;if((a+(0-l)|0)>>>0<j>>>0)ba();if((a+(0-l)|0)==(c[8496]|0)){d=c[a+b+4>>2]|0;if((d&3|0)!=3){q=a+(0-l)|0;h=l+b|0;break}c[8493]=l+b;c[a+b+4>>2]=d&-2;c[a+(0-l)+4>>2]=l+b|1;c[a+(0-l)+(l+b)>>2]=l+b;return}if(l>>>0<256){d=c[a+(0-l)+8>>2]|0;e=c[a+(0-l)+12>>2]|0;if((d|0)!=(34004+(l>>>3<<1<<2)|0)){if(d>>>0<j>>>0)ba();if((c[d+12>>2]|0)!=(a+(0-l)|0))ba()}if((e|0)==(d|0)){c[8491]=c[8491]&~(1<<(l>>>3));q=a+(0-l)|0;h=l+b|0;break}if((e|0)!=(34004+(l>>>3<<1<<2)|0)){if(e>>>0<j>>>0)ba();if((c[e+8>>2]|0)!=(a+(0-l)|0))ba();else f=e+8|0}else f=e+8|0;c[d+12>>2]=e;c[f>>2]=d;q=a+(0-l)|0;h=l+b|0;break}i=c[a+(0-l)+24>>2]|0;d=c[a+(0-l)+12>>2]|0;do if((d|0)==(a+(0-l)|0)){e=a+(0-l)+16|0;d=c[e+4>>2]|0;if(!d){d=c[e>>2]|0;if(!d){k=0;break}}else e=e+4|0;while(1){f=d+20|0;g=c[f>>2]|0;if(g|0){d=g;e=f;continue}f=d+16|0;g=c[f>>2]|0;if(!g)break;else{d=g;e=f}}if(e>>>0<j>>>0)ba();else{c[e>>2]=0;k=d;break}}else{e=c[a+(0-l)+8>>2]|0;if(e>>>0<j>>>0)ba();if((c[e+12>>2]|0)!=(a+(0-l)|0))ba();if((c[d+8>>2]|0)==(a+(0-l)|0)){c[e+12>>2]=d;c[d+8>>2]=e;k=d;break}else ba()}while(0);if(i){d=c[a+(0-l)+28>>2]|0;if((a+(0-l)|0)==(c[34268+(d<<2)>>2]|0)){c[34268+(d<<2)>>2]=k;if(!k){c[8492]=c[8492]&~(1<<d);q=a+(0-l)|0;h=l+b|0;break}}else{if(i>>>0<(c[8495]|0)>>>0)ba();if((c[i+16>>2]|0)==(a+(0-l)|0))c[i+16>>2]=k;else c[i+20>>2]=k;if(!k){q=a+(0-l)|0;h=l+b|0;break}}e=c[8495]|0;if(k>>>0<e>>>0)ba();c[k+24>>2]=i;d=c[a+(0-l)+16>>2]|0;do if(d|0)if(d>>>0<e>>>0)ba();else{c[k+16>>2]=d;c[d+24>>2]=k;break}while(0);d=c[a+(0-l)+16+4>>2]|0;if(d)if(d>>>0<(c[8495]|0)>>>0)ba();else{c[k+20>>2]=d;c[d+24>>2]=k;q=a+(0-l)|0;h=l+b|0;break}else{q=a+(0-l)|0;h=l+b|0}}else{q=a+(0-l)|0;h=l+b|0}}else{q=a;h=b}while(0);j=c[8495]|0;if((a+b|0)>>>0<j>>>0)ba();f=c[a+b+4>>2]|0;if(!(f&2)){if((a+b|0)==(c[8497]|0)){p=(c[8494]|0)+h|0;c[8494]=p;c[8497]=q;c[q+4>>2]=p|1;if((q|0)!=(c[8496]|0))return;c[8496]=0;c[8493]=0;return}if((a+b|0)==(c[8496]|0)){p=(c[8493]|0)+h|0;c[8493]=p;c[8496]=q;c[q+4>>2]=p|1;c[q+p>>2]=p;return}h=(f&-8)+h|0;do if(f>>>0>=256){i=c[a+b+24>>2]|0;d=c[a+b+12>>2]|0;do if((d|0)==(a+b|0)){d=c[a+b+16+4>>2]|0;if(!d){d=c[a+b+16>>2]|0;if(!d){n=0;break}else g=a+b+16|0}else g=a+b+16+4|0;while(1){e=d+20|0;f=c[e>>2]|0;if(f|0){d=f;g=e;continue}e=d+16|0;f=c[e>>2]|0;if(!f)break;else{d=f;g=e}}if(g>>>0<j>>>0)ba();else{c[g>>2]=0;n=d;break}}else{e=c[a+b+8>>2]|0;if(e>>>0<j>>>0)ba();if((c[e+12>>2]|0)!=(a+b|0))ba();if((c[d+8>>2]|0)==(a+b|0)){c[e+12>>2]=d;c[d+8>>2]=e;n=d;break}else ba()}while(0);if(i|0){d=c[a+b+28>>2]|0;if((a+b|0)==(c[34268+(d<<2)>>2]|0)){c[34268+(d<<2)>>2]=n;if(!n){c[8492]=c[8492]&~(1<<d);break}}else{if(i>>>0<(c[8495]|0)>>>0)ba();if((c[i+16>>2]|0)==(a+b|0))c[i+16>>2]=n;else c[i+20>>2]=n;if(!n)break}e=c[8495]|0;if(n>>>0<e>>>0)ba();c[n+24>>2]=i;d=c[a+b+16>>2]|0;do if(d|0)if(d>>>0<e>>>0)ba();else{c[n+16>>2]=d;c[d+24>>2]=n;break}while(0);d=c[a+b+16+4>>2]|0;if(d|0)if(d>>>0<(c[8495]|0)>>>0)ba();else{c[n+20>>2]=d;c[d+24>>2]=n;break}}}else{d=c[a+b+8>>2]|0;e=c[a+b+12>>2]|0;if((d|0)!=(34004+(f>>>3<<1<<2)|0)){if(d>>>0<j>>>0)ba();if((c[d+12>>2]|0)!=(a+b|0))ba()}if((e|0)==(d|0)){c[8491]=c[8491]&~(1<<(f>>>3));break}if((e|0)!=(34004+(f>>>3<<1<<2)|0)){if(e>>>0<j>>>0)ba();if((c[e+8>>2]|0)!=(a+b|0))ba();else m=e+8|0}else m=e+8|0;c[d+12>>2]=e;c[m>>2]=d}while(0);c[q+4>>2]=h|1;c[q+h>>2]=h;if((q|0)==(c[8496]|0)){c[8493]=h;return}}else{c[a+b+4>>2]=f&-2;c[q+4>>2]=h|1;c[q+h>>2]=h}e=h>>>3;if(h>>>0<256){d=c[8491]|0;if(d&1<<e){d=c[34004+(e<<1<<2)+8>>2]|0;if(d>>>0<(c[8495]|0)>>>0)ba();else{o=d;p=34004+(e<<1<<2)+8|0}}else{c[8491]=d|1<<e;o=34004+(e<<1<<2)|0;p=34004+(e<<1<<2)+8|0}c[p>>2]=q;c[o+12>>2]=q;c[q+8>>2]=o;c[q+12>>2]=34004+(e<<1<<2);return}d=h>>>8;if(d)if(h>>>0>16777215)d=31;else{p=d<<((d+1048320|0)>>>16&8)<<(((d<<((d+1048320|0)>>>16&8))+520192|0)>>>16&4);d=14-(((d<<((d+1048320|0)>>>16&8))+520192|0)>>>16&4|(d+1048320|0)>>>16&8|(p+245760|0)>>>16&2)+(p<<((p+245760|0)>>>16&2)>>>15)|0;d=h>>>(d+7|0)&1|d<<1}else d=0;g=34268+(d<<2)|0;c[q+28>>2]=d;c[q+20>>2]=0;c[q+16>>2]=0;e=c[8492]|0;f=1<<d;if(!(e&f)){c[8492]=e|f;c[g>>2]=q;c[q+24>>2]=g;c[q+12>>2]=q;c[q+8>>2]=q;return}e=h<<((d|0)==31?0:25-(d>>>1)|0);g=c[g>>2]|0;while(1){if((c[g+4>>2]&-8|0)==(h|0)){d=127;break}f=g+16+(e>>>31<<2)|0;d=c[f>>2]|0;if(!d){d=124;break}else{e=e<<1;g=d}}if((d|0)==124){if(f>>>0<(c[8495]|0)>>>0)ba();c[f>>2]=q;c[q+24>>2]=g;c[q+12>>2]=q;c[q+8>>2]=q;return}else if((d|0)==127){d=g+8|0;e=c[d>>2]|0;p=c[8495]|0;if(!(e>>>0>=p>>>0&g>>>0>=p>>>0))ba();c[e+12>>2]=q;c[d>>2]=q;c[q+8>>2]=e;c[q+12>>2]=g;c[q+24>>2]=0;return}}function va(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0;V=i;U=i=i+63&-64;i=i+64|0;if(!((g|0)==0&(h|0)==0)){if(h>>>0>63|(h|0)==63&g>>>0>4294967232)ba();G=c[b>>2]|0;H=c[b+4>>2]|0;I=c[b+8>>2]|0;J=c[b+12>>2]|0;K=c[b+16>>2]|0;L=c[b+20>>2]|0;M=c[b+24>>2]|0;N=c[b+28>>2]|0;O=c[b+32>>2]|0;P=c[b+36>>2]|0;Q=c[b+40>>2]|0;R=c[b+44>>2]|0;S=c[b+56>>2]|0;T=c[b+60>>2]|0;j=0;C=c[b+52>>2]|0;A=c[b+48>>2]|0;E=h;F=g;while(1){B=E>>>0<0|(E|0)==0&F>>>0<64;if(B){h=U;g=h+64|0;do{a[h>>0]=0;h=h+1|0}while((h|0)<(g|0));h=0;do{a[U+h>>0]=a[e+h>>0]|0;h=h+1|0}while(0<E>>>0|0==(E|0)&h>>>0<F>>>0);j=f;e=U;f=U}h=G;k=H;l=I;m=J;n=K;o=L;p=M;q=N;r=O;s=P;t=Q;u=T;v=S;w=C;x=A;y=R;g=20;do{na=h+n|0;ca=na^x;aa=(ca<<16|ca>>>16)+r|0;ma=aa^n;ca=(ma<<12|ma>>>20)+na^(ca<<16|ca>>>16);z=(ca<<8|ca>>>24)+aa^(ma<<12|ma>>>20);ja=k+o|0;X=ja^w;W=(X<<16|X>>>16)+s|0;ia=W^o;X=(ia<<12|ia>>>20)+ja^(X<<16|X>>>16);ka=(X<<8|X>>>24)+W^(ia<<12|ia>>>20);ea=l+p|0;Y=ea^v;la=(Y<<16|Y>>>16)+t|0;da=la^p;Y=(da<<12|da>>>20)+ea^(Y<<16|Y>>>16);fa=(Y<<8|Y>>>24)+la^(da<<12|da>>>20);Z=m+q|0;ha=Z^u;ga=(ha<<16|ha>>>16)+y|0;_=ga^q;ha=(_<<12|_>>>20)+Z^(ha<<16|ha>>>16);$=(ha<<8|ha>>>24)+ga^(_<<12|_>>>20);na=(ka<<7|ka>>>25)+((ma<<12|ma>>>20)+na)|0;ma=(na^(ha<<8|ha>>>24))<<16|(na^(ha<<8|ha>>>24))>>>16;ka=ma+((Y<<8|Y>>>24)+la)^(ka<<7|ka>>>25);h=(ka<<12|ka>>>20)+na|0;na=h^ma;u=na<<8|na>>>24;t=u+(ma+((Y<<8|Y>>>24)+la))|0;ka=t^(ka<<12|ka>>>20);o=ka<<7|ka>>>25;ja=(fa<<7|fa>>>25)+((ia<<12|ia>>>20)+ja)|0;ia=(ja^(ca<<8|ca>>>24))<<16|(ja^(ca<<8|ca>>>24))>>>16;fa=ia+((ha<<8|ha>>>24)+ga)^(fa<<7|fa>>>25);k=(fa<<12|fa>>>20)+ja|0;ja=k^ia;x=ja<<8|ja>>>24;y=x+(ia+((ha<<8|ha>>>24)+ga))|0;fa=y^(fa<<12|fa>>>20);p=fa<<7|fa>>>25;ea=($<<7|$>>>25)+((da<<12|da>>>20)+ea)|0;da=(ea^(X<<8|X>>>24))<<16|(ea^(X<<8|X>>>24))>>>16;$=da+((ca<<8|ca>>>24)+aa)^($<<7|$>>>25);l=($<<12|$>>>20)+ea|0;ea=l^da;w=ea<<8|ea>>>24;r=w+(da+((ca<<8|ca>>>24)+aa))|0;$=r^($<<12|$>>>20);q=$<<7|$>>>25;Z=(z<<7|z>>>25)+((_<<12|_>>>20)+Z)|0;Y=(Z^(Y<<8|Y>>>24))<<16|(Z^(Y<<8|Y>>>24))>>>16;z=Y+((X<<8|X>>>24)+W)^(z<<7|z>>>25);m=(z<<12|z>>>20)+Z|0;Z=m^Y;v=Z<<8|Z>>>24;s=v+(Y+((X<<8|X>>>24)+W))|0;z=s^(z<<12|z>>>20);n=z<<7|z>>>25;g=g+-2|0}while((g|0)!=0);z=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)^h+G;Z=e+4|0;Z=(d[Z>>0]|d[Z+1>>0]<<8|d[Z+2>>0]<<16|d[Z+3>>0]<<24)^k+H;_=e+8|0;_=(d[_>>0]|d[_+1>>0]<<8|d[_+2>>0]<<16|d[_+3>>0]<<24)^l+I;$=e+12|0;$=(d[$>>0]|d[$+1>>0]<<8|d[$+2>>0]<<16|d[$+3>>0]<<24)^m+J;aa=e+16|0;aa=(d[aa>>0]|d[aa+1>>0]<<8|d[aa+2>>0]<<16|d[aa+3>>0]<<24)^n+K;ca=e+20|0;ca=(d[ca>>0]|d[ca+1>>0]<<8|d[ca+2>>0]<<16|d[ca+3>>0]<<24)^o+L;da=e+24|0;da=(d[da>>0]|d[da+1>>0]<<8|d[da+2>>0]<<16|d[da+3>>0]<<24)^p+M;ea=e+28|0;ea=(d[ea>>0]|d[ea+1>>0]<<8|d[ea+2>>0]<<16|d[ea+3>>0]<<24)^q+N;fa=e+32|0;fa=(d[fa>>0]|d[fa+1>>0]<<8|d[fa+2>>0]<<16|d[fa+3>>0]<<24)^r+O;ga=e+36|0;ga=(d[ga>>0]|d[ga+1>>0]<<8|d[ga+2>>0]<<16|d[ga+3>>0]<<24)^s+P;ha=e+40|0;ha=(d[ha>>0]|d[ha+1>>0]<<8|d[ha+2>>0]<<16|d[ha+3>>0]<<24)^t+Q;ia=e+44|0;ia=(d[ia>>0]|d[ia+1>>0]<<8|d[ia+2>>0]<<16|d[ia+3>>0]<<24)^y+R;ja=e+48|0;ja=(d[ja>>0]|d[ja+1>>0]<<8|d[ja+2>>0]<<16|d[ja+3>>0]<<24)^x+A;ka=e+52|0;ka=(d[ka>>0]|d[ka+1>>0]<<8|d[ka+2>>0]<<16|d[ka+3>>0]<<24)^w+C;la=e+56|0;la=(d[la>>0]|d[la+1>>0]<<8|d[la+2>>0]<<16|d[la+3>>0]<<24)^v+S;ma=e+60|0;ma=(d[ma>>0]|d[ma+1>>0]<<8|d[ma+2>>0]<<16|d[ma+3>>0]<<24)^u+T;g=A+1|0;h=((g|0)==0&1)+C|0;a[f>>0]=z;a[f+1>>0]=z>>8;a[f+2>>0]=z>>16;a[f+3>>0]=z>>24;na=f+4|0;a[na>>0]=Z;a[na+1>>0]=Z>>8;a[na+2>>0]=Z>>16;a[na+3>>0]=Z>>24;na=f+8|0;a[na>>0]=_;a[na+1>>0]=_>>8;a[na+2>>0]=_>>16;a[na+3>>0]=_>>24;na=f+12|0;a[na>>0]=$;a[na+1>>0]=$>>8;a[na+2>>0]=$>>16;a[na+3>>0]=$>>24;na=f+16|0;a[na>>0]=aa;a[na+1>>0]=aa>>8;a[na+2>>0]=aa>>16;a[na+3>>0]=aa>>24;na=f+20|0;a[na>>0]=ca;a[na+1>>0]=ca>>8;a[na+2>>0]=ca>>16;a[na+3>>0]=ca>>24;na=f+24|0;a[na>>0]=da;a[na+1>>0]=da>>8;a[na+2>>0]=da>>16;a[na+3>>0]=da>>24;na=f+28|0;a[na>>0]=ea;a[na+1>>0]=ea>>8;a[na+2>>0]=ea>>16;a[na+3>>0]=ea>>24;na=f+32|0;a[na>>0]=fa;a[na+1>>0]=fa>>8;a[na+2>>0]=fa>>16;a[na+3>>0]=fa>>24;na=f+36|0;a[na>>0]=ga;a[na+1>>0]=ga>>8;a[na+2>>0]=ga>>16;a[na+3>>0]=ga>>24;na=f+40|0;a[na>>0]=ha;a[na+1>>0]=ha>>8;a[na+2>>0]=ha>>16;a[na+3>>0]=ha>>24;na=f+44|0;a[na>>0]=ia;a[na+1>>0]=ia>>8;a[na+2>>0]=ia>>16;a[na+3>>0]=ia>>24;na=f+48|0;a[na>>0]=ja;a[na+1>>0]=ja>>8;a[na+2>>0]=ja>>16;a[na+3>>0]=ja>>24;na=f+52|0;a[na>>0]=ka;a[na+1>>0]=ka>>8;a[na+2>>0]=ka>>16;a[na+3>>0]=ka>>24;na=f+56|0;a[na>>0]=la;a[na+1>>0]=la>>8;a[na+2>>0]=la>>16;a[na+3>>0]=la>>24;na=f+60|0;a[na>>0]=ma;a[na+1>>0]=ma>>8;a[na+2>>0]=ma>>16;a[na+3>>0]=ma>>24;if(E>>>0<0|(E|0)==0&F>>>0<65)break;na=oe(F|0,E|0,-64,-1)|0;e=e+64|0;f=f+64|0;C=h;A=g;E=D;F=na}if((B?F|0:0)?(a[j>>0]=z,(F|0)!=1):0){e=1;do{a[j+e>>0]=a[f+e>>0]|0;e=e+1|0}while((e|0)!=(F|0))}c[b+48>>2]=g;c[b+52>>2]=h}i=V;return}function wa(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0;j=i;k=i=i+63&-64;i=i+320|0;h=k+280|0;g=h+32|0;do{a[h>>0]=a[e>>0]|0;h=h+1|0;e=e+1|0}while((h|0)<(g|0));a[k+280>>0]=(d[k+280>>0]|0)&248;a[k+280+31>>0]=(d[k+280+31>>0]|0)&63|64;ya(k+240|0,f);Ud(k+200|0);re(k+160|0);hc(k+120|0,k+240|0);Ud(k+80|0);e=0;g=254;while(1){B=e;e=(d[k+280+(g>>>3)>>0]|0)>>>(g&7)&1;B=e^B;db(k+200|0,k+120|0,B);db(k+160|0,k+80|0,B);Jb(k+40|0,k+120|0,k+80|0);Jb(k,k+200|0,k+160|0);Kb(k+200|0,k+200|0,k+160|0);Kb(k+160|0,k+120|0,k+80|0);pa(k+80|0,k+40|0,k+200|0);pa(k+160|0,k+160|0,k);ra(k+40|0,k);ra(k,k+200|0);Kb(k+120|0,k+80|0,k+160|0);Jb(k+160|0,k+80|0,k+160|0);pa(k+200|0,k,k+40|0);Jb(k,k,k+40|0);ra(k+160|0,k+160|0);B=c[k>>2]|0;A=c[k+4>>2]|0;z=c[k+8>>2]|0;y=c[k+12>>2]|0;x=c[k+16>>2]|0;s=c[k+20>>2]|0;v=c[k+24>>2]|0;E=c[k+28>>2]|0;t=c[k+32>>2]|0;C=c[k+36>>2]|0;B=Ed(B|0,((B|0)<0)<<31>>31|0,121666,0)|0;q=D;A=Ed(A|0,((A|0)<0)<<31>>31|0,121666,0)|0;r=D;z=Ed(z|0,((z|0)<0)<<31>>31|0,121666,0)|0;o=D;y=Ed(y|0,((y|0)<0)<<31>>31|0,121666,0)|0;p=D;x=Ed(x|0,((x|0)<0)<<31>>31|0,121666,0)|0;m=D;s=Ed(s|0,((s|0)<0)<<31>>31|0,121666,0)|0;n=D;v=Ed(v|0,((v|0)<0)<<31>>31|0,121666,0)|0;f=D;E=Ed(E|0,((E|0)<0)<<31>>31|0,121666,0)|0;l=D;t=Ed(t|0,((t|0)<0)<<31>>31|0,121666,0)|0;u=D;C=Ed(C|0,((C|0)<0)<<31>>31|0,121666,0)|0;h=D;F=oe(C|0,h|0,16777216,0)|0;F=Dd(F|0,D|0,25)|0;w=D;G=Ed(F|0,w|0,19,0)|0;q=oe(G|0,D|0,B|0,q|0)|0;B=D;w=Pd(F|0,w|0,25)|0;w=le(C|0,h|0,w|0,D|0)|0;h=D;C=oe(A|0,r|0,16777216,0)|0;C=Dd(C|0,D|0,25)|0;F=D;o=oe(C|0,F|0,z|0,o|0)|0;z=D;F=Pd(C|0,F|0,25)|0;F=le(A|0,r|0,F|0,D|0)|0;r=D;A=oe(y|0,p|0,16777216,0)|0;A=Dd(A|0,D|0,25)|0;C=D;m=oe(A|0,C|0,x|0,m|0)|0;x=D;C=Pd(A|0,C|0,25)|0;C=le(y|0,p|0,C|0,D|0)|0;p=D;y=oe(s|0,n|0,16777216,0)|0;y=Dd(y|0,D|0,25)|0;A=D;f=oe(y|0,A|0,v|0,f|0)|0;v=D;A=Pd(y|0,A|0,25)|0;A=le(s|0,n|0,A|0,D|0)|0;n=D;s=oe(E|0,l|0,16777216,0)|0;s=Dd(s|0,D|0,25)|0;y=D;u=oe(s|0,y|0,t|0,u|0)|0;t=D;y=Pd(s|0,y|0,25)|0;y=le(E|0,l|0,y|0,D|0)|0;l=D;E=oe(q|0,B|0,33554432,0)|0;E=Dd(E|0,D|0,26)|0;s=D;r=oe(F|0,r|0,E|0,s|0)|0;s=Pd(E|0,s|0,26)|0;s=le(q|0,B|0,s|0,D|0)|0;B=oe(o|0,z|0,33554432,0)|0;B=Dd(B|0,D|0,26)|0;q=D;p=oe(C|0,p|0,B|0,q|0)|0;q=Pd(B|0,q|0,26)|0;q=le(o|0,z|0,q|0,D|0)|0;z=oe(m|0,x|0,33554432,0)|0;z=Dd(z|0,D|0,26)|0;o=D;n=oe(A|0,n|0,z|0,o|0)|0;o=Pd(z|0,o|0,26)|0;o=le(m|0,x|0,o|0,D|0)|0;x=oe(f|0,v|0,33554432,0)|0;x=Dd(x|0,D|0,26)|0;m=D;l=oe(y|0,l|0,x|0,m|0)|0;m=Pd(x|0,m|0,26)|0;m=le(f|0,v|0,m|0,D|0)|0;v=oe(u|0,t|0,33554432,0)|0;v=Dd(v|0,D|0,26)|0;f=D;h=oe(w|0,h|0,v|0,f|0)|0;f=Pd(v|0,f|0,26)|0;f=le(u|0,t|0,f|0,D|0)|0;c[k+80>>2]=s;c[k+80+4>>2]=r;c[k+80+8>>2]=q;c[k+80+12>>2]=p;c[k+80+16>>2]=o;c[k+80+20>>2]=n;c[k+80+24>>2]=m;c[k+80+28>>2]=l;c[k+80+32>>2]=f;c[k+80+36>>2]=h;ra(k+120|0,k+120|0);Kb(k+40|0,k+40|0,k+80|0);pa(k+80|0,k+240|0,k+160|0);pa(k+160|0,k,k+40|0);if((g|0)<=0)break;else g=g+-1|0}db(k+200|0,k+120|0,e);db(k+160|0,k+80|0,e);Ia(k+160|0,k+160|0);pa(k+200|0,k+200|0,k+160|0);La(b,k+200|0);i=j;return 0}function xa(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;if(!f){H=857760878;I=2036477234;J=1634760805;G=1797285236}else{H=d[f+4>>0]|d[f+4+1>>0]<<8|d[f+4+2>>0]<<16|d[f+4+3>>0]<<24;I=d[f+8>>0]|d[f+8+1>>0]<<8|d[f+8+2>>0]<<16|d[f+8+3>>0]<<24;J=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;G=d[f+12>>0]|d[f+12+1>>0]<<8|d[f+12+2>>0]<<16|d[f+12+3>>0]<<24}F=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;E=d[e+4>>0]|d[e+4+1>>0]<<8|d[e+4+2>>0]<<16|d[e+4+3>>0]<<24;D=d[e+8>>0]|d[e+8+1>>0]<<8|d[e+8+2>>0]<<16|d[e+8+3>>0]<<24;C=d[e+12>>0]|d[e+12+1>>0]<<8|d[e+12+2>>0]<<16|d[e+12+3>>0]<<24;B=d[c>>0]|d[c+1>>0]<<8|d[c+2>>0]<<16|d[c+3>>0]<<24;A=d[c+4>>0]|d[c+4+1>>0]<<8|d[c+4+2>>0]<<16|d[c+4+3>>0]<<24;z=d[c+8>>0]|d[c+8+1>>0]<<8|d[c+8+2>>0]<<16|d[c+8+3>>0]<<24;y=d[c+12>>0]|d[c+12+1>>0]<<8|d[c+12+2>>0]<<16|d[c+12+3>>0]<<24;x=d[e+16>>0]|d[e+16+1>>0]<<8|d[e+16+2>>0]<<16|d[e+16+3>>0]<<24;w=d[e+20>>0]|d[e+20+1>>0]<<8|d[e+20+2>>0]<<16|d[e+20+3>>0]<<24;v=d[e+24>>0]|d[e+24+1>>0]<<8|d[e+24+2>>0]<<16|d[e+24+3>>0]<<24;f=d[e+28>>0]|d[e+28+1>>0]<<8|d[e+28+2>>0]<<16|d[e+28+3>>0]<<24;c=F;e=E;g=D;h=C;i=B;j=A;k=z;l=y;m=x;n=f;o=v;p=w;q=20;r=H;s=I;t=G;u=J;while(1){T=u+p|0;T=(T>>>25|T<<7)^h;Q=T+u|0;Q=(Q>>>23|Q<<9)^k;N=((Q+T|0)>>>19|Q+T<<13)^p;W=((N+Q|0)>>>14|N+Q<<18)^u;P=c+r|0;P=(P>>>25|P<<7)^l;M=P+r|0;M=(M>>>23|M<<9)^o;Z=((M+P|0)>>>19|M+P<<13)^c;S=((Z+M|0)>>>14|Z+M<<18)^r;L=i+s|0;L=(L>>>25|L<<7)^n;Y=L+s|0;Y=(Y>>>23|Y<<9)^e;V=((Y+L|0)>>>19|Y+L<<13)^i;O=((V+Y|0)>>>14|V+Y<<18)^s;X=m+t|0;X=g^(X>>>25|X<<7);U=X+t|0;U=(U>>>23|U<<9)^j;R=((U+X|0)>>>19|U+X<<13)^m;K=((R+U|0)>>>14|R+U<<18)^t;c=((W+X|0)>>>25|W+X<<7)^Z;Z=c+W|0;e=(Z>>>23|Z<<9)^Y;Y=e+c|0;g=(Y>>>19|Y<<13)^X;X=g+e|0;u=(X>>>14|X<<18)^W;i=((S+T|0)>>>25|S+T<<7)^V;V=i+S|0;j=(V>>>23|V<<9)^U;U=j+i|0;h=(U>>>19|U<<13)^T;T=h+j|0;r=(T>>>14|T<<18)^S;m=((O+P|0)>>>25|O+P<<7)^R;R=m+O|0;k=(R>>>23|R<<9)^Q;Q=k+m|0;l=(Q>>>19|Q<<13)^P;P=l+k|0;s=(P>>>14|P<<18)^O;p=((K+L|0)>>>25|K+L<<7)^N;N=p+K|0;o=(N>>>23|N<<9)^M;M=o+p|0;n=(M>>>19|M<<13)^L;L=n+o|0;t=(L>>>14|L<<18)^K;if((q|0)<=2)break;else q=q+-2|0}K=u+J|0;L=c+F|0;M=e+E|0;N=g+D|0;O=h+C|0;P=r+H|0;Q=i+B|0;R=j+A|0;S=k+z|0;T=l+y|0;U=s+I|0;V=m+x|0;W=p+w|0;X=o+v|0;Y=n+f|0;Z=t+G|0;a[b>>0]=K;a[b+1>>0]=K>>8;a[b+2>>0]=K>>16;a[b+3>>0]=K>>24;a[b+4>>0]=L;a[b+4+1>>0]=L>>8;a[b+4+2>>0]=L>>16;a[b+4+3>>0]=L>>24;a[b+8>>0]=M;a[b+8+1>>0]=M>>8;a[b+8+2>>0]=M>>16;a[b+8+3>>0]=M>>24;a[b+12>>0]=N;a[b+12+1>>0]=N>>8;a[b+12+2>>0]=N>>16;a[b+12+3>>0]=N>>24;a[b+16>>0]=O;a[b+16+1>>0]=O>>8;a[b+16+2>>0]=O>>16;a[b+16+3>>0]=O>>24;a[b+20>>0]=P;a[b+20+1>>0]=P>>8;a[b+20+2>>0]=P>>16;a[b+20+3>>0]=P>>24;a[b+24>>0]=Q;a[b+24+1>>0]=Q>>8;a[b+24+2>>0]=Q>>16;a[b+24+3>>0]=Q>>24;a[b+28>>0]=R;a[b+28+1>>0]=R>>8;a[b+28+2>>0]=R>>16;a[b+28+3>>0]=R>>24;a[b+32>>0]=S;a[b+32+1>>0]=S>>8;a[b+32+2>>0]=S>>16;a[b+32+3>>0]=S>>24;a[b+36>>0]=T;a[b+36+1>>0]=T>>8;a[b+36+2>>0]=T>>16;a[b+36+3>>0]=T>>24;a[b+40>>0]=U;a[b+40+1>>0]=U>>8;a[b+40+2>>0]=U>>16;a[b+40+3>>0]=U>>24;a[b+44>>0]=V;a[b+44+1>>0]=V>>8;a[b+44+2>>0]=V>>16;a[b+44+3>>0]=V>>24;a[b+48>>0]=W;a[b+48+1>>0]=W>>8;a[b+48+2>>0]=W>>16;a[b+48+3>>0]=W>>24;a[b+52>>0]=X;a[b+52+1>>0]=X>>8;a[b+52+2>>0]=X>>16;a[b+52+3>>0]=X>>24;a[b+56>>0]=Y;a[b+56+1>>0]=Y>>8;a[b+56+2>>0]=Y>>16;a[b+56+3>>0]=Y>>24;a[b+60>>0]=Z;a[b+60+1>>0]=Z>>8;a[b+60+2>>0]=Z>>16;a[b+60+3>>0]=Z>>24;return 0}function ya(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0;J=d[b>>0]|0;h=Pd(d[b+1>>0]|0|0,0,8)|0;k=D;F=Pd(d[b+2>>0]|0|0,0,16)|0;k=k|D;E=Pd(d[b+3>>0]|0|0,0,24)|0;k=k|D;B=d[b+4>>0]|0;C=Pd(d[b+5>>0]|0|0,0,8)|0;j=D;l=Pd(d[b+6>>0]|0|0,0,16)|0;j=Pd(C|B|l|0,j|D|0,6)|0;l=D;B=d[b+7>>0]|0;C=Pd(d[b+8>>0]|0|0,0,8)|0;w=D;i=Pd(d[b+9>>0]|0|0,0,16)|0;w=Pd(C|B|i|0,w|D|0,5)|0;i=D;B=d[b+10>>0]|0;C=Pd(d[b+11>>0]|0|0,0,8)|0;H=D;G=Pd(d[b+12>>0]|0|0,0,16)|0;H=Pd(C|B|G|0,H|D|0,3)|0;G=D;B=d[b+13>>0]|0;C=Pd(d[b+14>>0]|0|0,0,8)|0;s=D;g=Pd(d[b+15>>0]|0|0,0,16)|0;s=Pd(C|B|g|0,s|D|0,2)|0;g=D;B=d[b+16>>0]|0;C=Pd(d[b+17>>0]|0|0,0,8)|0;y=D;A=Pd(d[b+18>>0]|0|0,0,16)|0;y=y|D;z=Pd(d[b+19>>0]|0|0,0,24)|0;y=y|D;q=d[b+20>>0]|0;x=Pd(d[b+21>>0]|0|0,0,8)|0;p=D;e=Pd(d[b+22>>0]|0|0,0,16)|0;p=Pd(x|q|e|0,p|D|0,7)|0;e=D;q=d[b+23>>0]|0;x=Pd(d[b+24>>0]|0|0,0,8)|0;v=D;u=Pd(d[b+25>>0]|0|0,0,16)|0;v=Pd(x|q|u|0,v|D|0,5)|0;u=D;q=d[b+26>>0]|0;x=Pd(d[b+27>>0]|0|0,0,8)|0;n=D;o=Pd(d[b+28>>0]|0|0,0,16)|0;n=Pd(x|q|o|0,n|D|0,4)|0;o=D;q=d[b+29>>0]|0;x=Pd(d[b+30>>0]|0|0,0,8)|0;r=D;b=Pd(d[b+31>>0]|0|0,0,16)|0;r=Pd(x|q|b|0,r|D|0,2)|0;b=oe(r&33554428|0,0,16777216,0)|0;b=Rd(b|0,D|0,25)|0;q=D;x=le(0,0,b|0,q|0)|0;k=oe(x&19|0,0,h|J|F|E|0,k|0)|0;E=D;q=Pd(b|0,q|0,25)|0;b=D;F=oe(j|0,l|0,16777216,0)|0;F=Rd(F|0,D|0,25)|0;J=D;i=oe(w|0,i|0,F|0,J|0)|0;w=D;J=Pd(F|0,J|0,25)|0;J=le(j|0,l|0,J|0,D|0)|0;l=D;j=oe(H|0,G|0,16777216,0)|0;j=Rd(j|0,D|0,25)|0;F=D;g=oe(s|0,g|0,j|0,F|0)|0;s=D;F=Pd(j|0,F|0,25)|0;j=D;h=oe(C|B|A|z|0,y|0,16777216,0)|0;h=Rd(h|0,D|0,25)|0;x=D;e=oe(p|0,e|0,h|0,x|0)|0;p=D;x=Pd(h|0,x|0,25)|0;h=D;f=oe(v|0,u|0,16777216,0)|0;f=Rd(f|0,D|0,25)|0;t=D;o=oe(n|0,o|0,f|0,t|0)|0;n=D;t=Pd(f|0,t|0,25)|0;f=D;I=oe(k|0,E|0,33554432,0)|0;I=Dd(I|0,D|0,26)|0;m=D;l=oe(J|0,l|0,I|0,m|0)|0;m=Pd(I|0,m|0,26)|0;m=le(k|0,E|0,m|0,D|0)|0;E=oe(i|0,w|0,33554432,0)|0;E=Dd(E|0,D|0,26)|0;k=D;G=oe(E|0,k|0,H|0,G|0)|0;j=le(G|0,D|0,F|0,j|0)|0;k=Pd(E|0,k|0,26)|0;k=le(i|0,w|0,k|0,D|0)|0;w=oe(g|0,s|0,33554432,0)|0;w=Dd(w|0,D|0,26)|0;i=D;y=oe(w|0,i|0,C|B|A|z|0,y|0)|0;h=le(y|0,D|0,x|0,h|0)|0;i=Pd(w|0,i|0,26)|0;i=le(g|0,s|0,i|0,D|0)|0;s=oe(e|0,p|0,33554432,0)|0;s=Dd(s|0,D|0,26)|0;g=D;u=oe(s|0,g|0,v|0,u|0)|0;f=le(u|0,D|0,t|0,f|0)|0;g=Pd(s|0,g|0,26)|0;g=le(e|0,p|0,g|0,D|0)|0;p=oe(o|0,n|0,33554432,0)|0;p=Dd(p|0,D|0,26)|0;e=D;r=oe(r&33554428|0,0,p|0,e|0)|0;b=le(r|0,D|0,q|0,b|0)|0;e=Pd(p|0,e|0,26)|0;e=le(o|0,n|0,e|0,D|0)|0;c[a>>2]=m;c[a+4>>2]=l;c[a+8>>2]=k;c[a+12>>2]=j;c[a+16>>2]=i;c[a+20>>2]=h;c[a+24>>2]=g;c[a+28>>2]=f;c[a+32>>2]=e;c[a+36>>2]=b;return}function za(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;r=i;p=i=i+63&-64;i=i+240|0;ya(a+40|0,b);c[a+80>>2]=1;e=a+84|0;f=e+36|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));ra(p+160|0,a+40|0);pa(p+120|0,p+160|0,464);g=c[a+80>>2]|0;f=c[a+84>>2]|0;e=c[a+88>>2]|0;o=c[a+92>>2]|0;n=c[a+96>>2]|0;m=c[a+100>>2]|0;l=c[a+104>>2]|0;k=c[a+108>>2]|0;j=c[a+112>>2]|0;h=c[a+116>>2]|0;B=(c[p+160>>2]|0)-g|0;A=(c[p+160+4>>2]|0)-f|0;z=(c[p+160+8>>2]|0)-e|0;y=(c[p+160+12>>2]|0)-o|0;x=(c[p+160+16>>2]|0)-n|0;w=(c[p+160+20>>2]|0)-m|0;v=(c[p+160+24>>2]|0)-l|0;u=(c[p+160+28>>2]|0)-k|0;t=(c[p+160+32>>2]|0)-j|0;s=(c[p+160+36>>2]|0)-h|0;c[p+160>>2]=B;c[p+160+4>>2]=A;c[p+160+8>>2]=z;c[p+160+12>>2]=y;c[p+160+16>>2]=x;c[p+160+20>>2]=w;c[p+160+24>>2]=v;c[p+160+28>>2]=u;c[p+160+32>>2]=t;c[p+160+36>>2]=s;f=f+(c[p+120+4>>2]|0)|0;e=e+(c[p+120+8>>2]|0)|0;o=o+(c[p+120+12>>2]|0)|0;n=n+(c[p+120+16>>2]|0)|0;m=m+(c[p+120+20>>2]|0)|0;l=l+(c[p+120+24>>2]|0)|0;k=k+(c[p+120+28>>2]|0)|0;j=j+(c[p+120+32>>2]|0)|0;h=h+(c[p+120+36>>2]|0)|0;c[p+120>>2]=g+(c[p+120>>2]|0);c[p+120+4>>2]=f;c[p+120+8>>2]=e;c[p+120+12>>2]=o;c[p+120+16>>2]=n;c[p+120+20>>2]=m;c[p+120+24>>2]=l;c[p+120+28>>2]=k;c[p+120+32>>2]=j;c[p+120+36>>2]=h;ra(p+80|0,p+120|0);pa(p+80|0,p+80|0,p+120|0);ra(a,p+80|0);pa(a,a,p+120|0);pa(a,a,p+160|0);Ka(a,a);pa(a,a,p+80|0);pa(a,a,p+160|0);ra(p+40|0,a);pa(p+40|0,p+40|0,p+120|0);h=c[p+40>>2]|0;j=c[p+40+4>>2]|0;k=c[p+40+8>>2]|0;l=c[p+40+12>>2]|0;m=c[p+40+16>>2]|0;n=c[p+40+20>>2]|0;o=c[p+40+24>>2]|0;e=c[p+40+28>>2]|0;f=c[p+40+32>>2]|0;g=c[p+40+36>>2]|0;c[p>>2]=h-B;c[p+4>>2]=j-A;c[p+8>>2]=k-z;c[p+12>>2]=l-y;c[p+16>>2]=m-x;c[p+20>>2]=n-w;c[p+24>>2]=o-v;c[p+28>>2]=e-u;c[p+32>>2]=f-t;c[p+36>>2]=g-s;La(p+200|0,p);if(zd(p+200|0,34492)|0){t=(c[p+160+4>>2]|0)+j|0;u=(c[p+160+8>>2]|0)+k|0;v=(c[p+160+12>>2]|0)+l|0;w=(c[p+160+16>>2]|0)+m|0;x=(c[p+160+20>>2]|0)+n|0;y=(c[p+160+24>>2]|0)+o|0;z=(c[p+160+28>>2]|0)+e|0;A=(c[p+160+32>>2]|0)+f|0;B=(c[p+160+36>>2]|0)+g|0;c[p>>2]=(c[p+160>>2]|0)+h;c[p+4>>2]=t;c[p+8>>2]=u;c[p+12>>2]=v;c[p+16>>2]=w;c[p+20>>2]=x;c[p+24>>2]=y;c[p+28>>2]=z;c[p+32>>2]=A;c[p+36>>2]=B;La(p+200|0,p);if(!(zd(p+200|0,34492)|0)){pa(a,a,504);q=4}else e=-1}else q=4;if((q|0)==4){La(p+200|0,a);if(((d[p+200>>0]|0)&1|0)==((d[b+31>>0]|0)>>>7|0))$b(a,a);pa(a+120|0,a,a+40|0);e=0}i=r;return e|0}function Aa(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;if(!f){o=1797285236;g=2036477234;h=857760878;f=1634760805}else{o=d[f+12>>0]|d[f+12+1>>0]<<8|d[f+12+2>>0]<<16|d[f+12+3>>0]<<24;g=d[f+8>>0]|d[f+8+1>>0]<<8|d[f+8+2>>0]<<16|d[f+8+3>>0]<<24;h=d[f+4>>0]|d[f+4+1>>0]<<8|d[f+4+2>>0]<<16|d[f+4+3>>0]<<24;f=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24}p=d[e+28>>0]|d[e+28+1>>0]<<8|d[e+28+2>>0]<<16|d[e+28+3>>0]<<24;q=d[e+24>>0]|d[e+24+1>>0]<<8|d[e+24+2>>0]<<16|d[e+24+3>>0]<<24;r=d[e+20>>0]|d[e+20+1>>0]<<8|d[e+20+2>>0]<<16|d[e+20+3>>0]<<24;s=d[e+16>>0]|d[e+16+1>>0]<<8|d[e+16+2>>0]<<16|d[e+16+3>>0]<<24;t=d[c+12>>0]|d[c+12+1>>0]<<8|d[c+12+2>>0]<<16|d[c+12+3>>0]<<24;u=d[c+8>>0]|d[c+8+1>>0]<<8|d[c+8+2>>0]<<16|d[c+8+3>>0]<<24;v=d[c+4>>0]|d[c+4+1>>0]<<8|d[c+4+2>>0]<<16|d[c+4+3>>0]<<24;k=d[c>>0]|d[c+1>>0]<<8|d[c+2>>0]<<16|d[c+3>>0]<<24;l=d[e+12>>0]|d[e+12+1>>0]<<8|d[e+12+2>>0]<<16|d[e+12+3>>0]<<24;m=d[e+8>>0]|d[e+8+1>>0]<<8|d[e+8+2>>0]<<16|d[e+8+3>>0]<<24;n=d[e+4>>0]|d[e+4+1>>0]<<8|d[e+4+2>>0]<<16|d[e+4+3>>0]<<24;i=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;j=20;e=h;c=f;f=o;while(1){D=r+c|0;D=(D>>>25|D<<7)^l;A=D+c|0;A=(A>>>23|A<<9)^u;x=((A+D|0)>>>19|A+D<<13)^r;G=((x+A|0)>>>14|x+A<<18)^c;z=e+i|0;z=t^(z>>>25|z<<7);w=z+e|0;w=q^(w>>>23|w<<9);J=((w+z|0)>>>19|w+z<<13)^i;C=((J+w|0)>>>14|J+w<<18)^e;h=g+k|0;h=p^(h>>>25|h<<7);I=h+g|0;I=(I>>>23|I<<9)^n;F=((I+h|0)>>>19|I+h<<13)^k;y=((F+I|0)>>>14|F+I<<18)^g;H=f+s|0;H=(H>>>25|H<<7)^m;E=H+f|0;E=(E>>>23|E<<9)^v;B=((E+H|0)>>>19|E+H<<13)^s;o=((B+E|0)>>>14|B+E<<18)^f;i=((G+H|0)>>>25|G+H<<7)^J;J=i+G|0;n=(J>>>23|J<<9)^I;I=n+i|0;m=(I>>>19|I<<13)^H;H=m+n|0;c=(H>>>14|H<<18)^G;k=((C+D|0)>>>25|C+D<<7)^F;F=k+C|0;v=(F>>>23|F<<9)^E;E=v+k|0;l=(E>>>19|E<<13)^D;D=l+v|0;e=(D>>>14|D<<18)^C;s=((y+z|0)>>>25|y+z<<7)^B;B=s+y|0;u=(B>>>23|B<<9)^A;A=u+s|0;t=(A>>>19|A<<13)^z;z=t+u|0;g=(z>>>14|z<<18)^y;r=((o+h|0)>>>25|o+h<<7)^x;x=r+o|0;q=(x>>>23|x<<9)^w;w=q+r|0;p=(w>>>19|w<<13)^h;h=p+q|0;f=(h>>>14|h<<18)^o;if((j|0)<=2)break;else j=j+-2|0}a[b>>0]=c;a[b+1>>0]=c>>8;a[b+2>>0]=c>>16;a[b+3>>0]=c>>24;a[b+4>>0]=e;a[b+4+1>>0]=e>>8;a[b+4+2>>0]=e>>16;a[b+4+3>>0]=e>>24;a[b+8>>0]=g;a[b+8+1>>0]=g>>8;a[b+8+2>>0]=g>>16;a[b+8+3>>0]=g>>24;a[b+12>>0]=f;a[b+12+1>>0]=f>>8;a[b+12+2>>0]=f>>16;a[b+12+3>>0]=f>>24;a[b+16>>0]=k;a[b+16+1>>0]=k>>8;a[b+16+2>>0]=k>>16;a[b+16+3>>0]=k>>24;a[b+20>>0]=v;a[b+20+1>>0]=v>>8;a[b+20+2>>0]=v>>16;a[b+20+3>>0]=v>>24;a[b+24>>0]=u;a[b+24+1>>0]=u>>8;a[b+24+2>>0]=u>>16;a[b+24+3>>0]=u>>24;a[b+28>>0]=t;a[b+28+1>>0]=t>>8;a[b+28+2>>0]=t>>16;a[b+28+3>>0]=t>>24;return 0}function Ba(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;t=a[b+80>>0]|0?0:16777216;u=c[b+4>>2]|0;p=c[b+8>>2]|0;q=c[b+12>>2]|0;r=c[b+16>>2]|0;l=c[b+20>>2]|0;k=c[b+24>>2]|0;j=c[b+28>>2]|0;i=c[b+32>>2]|0;h=c[b+36>>2]|0;if(g>>>0>0|(g|0)==0&f>>>0>15){s=c[b>>2]|0;n=f;while(1){z=((d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)&67108863)+l|0;A=e+3|0;A=((d[A>>0]|d[A+1>>0]<<8|d[A+2>>0]<<16|d[A+3>>0]<<24)>>>2&67108863)+k|0;y=e+6|0;y=((d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24)>>>4&67108863)+j|0;x=e+9|0;x=((d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24)>>>6)+i|0;l=e+12|0;l=((d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24)>>>8|t)+h|0;h=Ed(z|0,0,s|0,0)|0;f=D;j=Ed(A|0,0,r*5|0,0)|0;f=oe(j|0,D|0,h|0,f|0)|0;h=D;j=Ed(y|0,0,q*5|0,0)|0;j=oe(f|0,h|0,j|0,D|0)|0;h=D;f=Ed(x|0,0,p*5|0,0)|0;f=oe(j|0,h|0,f|0,D|0)|0;h=D;j=Ed(l|0,0,u*5|0,0)|0;j=oe(f|0,h|0,j|0,D|0)|0;h=D;f=Ed(z|0,0,u|0,0)|0;m=D;w=Ed(A|0,0,s|0,0)|0;m=oe(w|0,D|0,f|0,m|0)|0;f=D;w=Ed(y|0,0,r*5|0,0)|0;w=oe(m|0,f|0,w|0,D|0)|0;f=D;m=Ed(x|0,0,q*5|0,0)|0;m=oe(w|0,f|0,m|0,D|0)|0;f=D;w=Ed(l|0,0,p*5|0,0)|0;w=oe(m|0,f|0,w|0,D|0)|0;f=D;m=Ed(z|0,0,p|0,0)|0;o=D;v=Ed(A|0,0,u|0,0)|0;o=oe(v|0,D|0,m|0,o|0)|0;m=D;v=Ed(y|0,0,s|0,0)|0;v=oe(o|0,m|0,v|0,D|0)|0;m=D;o=Ed(x|0,0,r*5|0,0)|0;o=oe(v|0,m|0,o|0,D|0)|0;m=D;v=Ed(l|0,0,q*5|0,0)|0;v=oe(o|0,m|0,v|0,D|0)|0;m=D;o=Ed(z|0,0,q|0,0)|0;i=D;k=Ed(A|0,0,p|0,0)|0;i=oe(k|0,D|0,o|0,i|0)|0;o=D;k=Ed(y|0,0,u|0,0)|0;k=oe(i|0,o|0,k|0,D|0)|0;o=D;i=Ed(x|0,0,s|0,0)|0;i=oe(k|0,o|0,i|0,D|0)|0;o=D;k=Ed(l|0,0,r*5|0,0)|0;k=oe(i|0,o|0,k|0,D|0)|0;o=D;i=Ed(z|0,0,r|0,0)|0;z=D;A=Ed(A|0,0,q|0,0)|0;z=oe(A|0,D|0,i|0,z|0)|0;i=D;y=Ed(y|0,0,p|0,0)|0;y=oe(z|0,i|0,y|0,D|0)|0;i=D;x=Ed(x|0,0,u|0,0)|0;x=oe(y|0,i|0,x|0,D|0)|0;i=D;l=Ed(l|0,0,s|0,0)|0;l=oe(x|0,i|0,l|0,D|0)|0;i=D;h=Rd(j|0,h|0,26)|0;h=oe(w|0,f|0,h|0,0)|0;f=Rd(h|0,D|0,26)|0;f=oe(v|0,m|0,f|0,0)|0;m=Rd(f|0,D|0,26)|0;m=oe(k|0,o|0,m|0,0)|0;o=Rd(m|0,D|0,26)|0;o=oe(l|0,i|0,o|0,0)|0;i=Rd(o|0,D|0,26)|0;n=oe(n|0,g|0,-16,-1)|0;g=D;if(!(g>>>0>0|(g|0)==0&n>>>0>15)){l=(i*5|0)+j&67108863;k=(((i*5|0)+(j&67108863)|0)>>>26)+(h&67108863)|0;j=f&67108863;i=m&67108863;h=o&67108863;break}else{l=(i*5|0)+j&67108863;k=(((i*5|0)+(j&67108863)|0)>>>26)+(h&67108863)|0;j=f&67108863;i=m&67108863;h=o&67108863;e=e+16|0}}}c[b+20>>2]=l;c[b+24>>2]=k;c[b+28>>2]=j;c[b+32>>2]=i;c[b+36>>2]=h;return}function Ca(b,e,f,g,h,i,j,k,l,m,n){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;v=Ed(l|0,0,k|0,0)|0;u=D;do if(u>>>0>0|(u|0)==0&v>>>0>1073741823){c[(Zf()|0)>>2]=27;b=-1}else{if(j>>>0>0|(j|0)==0&i>>>0>4294967295){c[(Zf()|0)>>2]=27;b=-1;break}u=oe(i|0,j|0,-1,-1)|0;if(j>>>0<0|(j|0)==0&i>>>0<2|((u&i|0)!=0|(D&j|0)!=0)){c[(Zf()|0)>>2]=22;b=-1;break}if((k|0)==0|(l|0)==0){c[(Zf()|0)>>2]=22;b=-1;break}if(!(k>>>0>16777215?1:(33554431/(l>>>0)|0)>>>0<k>>>0)?!(0<j>>>0|(0==(j|0)?(33554431/(k>>>0)|0)>>>0<i>>>0:0)):0){v=S(k<<7,l)|0;p=Ed(k<<7|0,0,i|0,j|0)|0;if((p+v|0)>>>0<p>>>0){c[(Zf()|0)>>2]=12;b=-1;break}o=p+v+(k<<8|64)|0;if(o>>>0<(k<<8|64)>>>0){c[(Zf()|0)>>2]=12;b=-1;break}if((c[b+8>>2]|0)>>>0<o>>>0?(je(b),(Nc(b,o)|0)==0):0){b=-1;break}t=c[b+4>>2]|0;s=t+v+p|0;Tb(e,f,g,h,t,v);q=s+(k<<5<<2)|0;h=0;do{r=t+(S(k<<7,h)|0)|0;if(k<<5|0){b=0;do{g=r+(b<<2)|0;c[s+(b<<2)>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;b=b+1|0}while((b|0)!=(k<<5|0))}if(!((i|0)==0&(j|0)==0)){p=0;g=0;do{if(!(k<<5&1073741792))wb(s,q,s+(k<<6<<2)|0,k);else{o=Ed(p|0,g|0,k<<5|0,0)|0;b=0;do{c[t+v+(o<<2)+(b<<2)>>2]=c[s+(b<<2)>>2];b=b+1|0}while((b|0)!=(k<<5&1073741792|0));wb(s,q,s+(k<<6<<2)|0,k);o=Ed(p|1|0,g|0,k<<5|0,0)|0;b=0;do{c[t+v+(o<<2)+(b<<2)>>2]=c[q+(b<<2)>>2];b=b+1|0}while((b|0)!=(k<<5&1073741792|0))}wb(q,s,s+(k<<6<<2)|0,k);p=oe(p|0,g|0,2,0)|0;g=D}while(g>>>0<j>>>0|(g|0)==(j|0)&p>>>0<i>>>0);p=0;g=0;do{if(!(k<<5&1073741792))wb(s,q,s+(k<<6<<2)|0,k);else{o=Ed(c[s+((k<<7)+-64)>>2]&u|0,0,k<<5|0,0)|0;b=0;do{w=s+(b<<2)|0;c[w>>2]=c[w>>2]^c[t+v+(o<<2)+(b<<2)>>2];b=b+1|0}while((b|0)!=(k<<5&1073741792|0));wb(s,q,s+(k<<6<<2)|0,k);o=Ed(c[q+((k<<7)+-64)>>2]&u|0,0,k<<5|0,0)|0;b=0;do{w=q+(b<<2)|0;c[w>>2]=c[w>>2]^c[t+v+(o<<2)+(b<<2)>>2];b=b+1|0}while((b|0)!=(k<<5&1073741792|0))}wb(q,s,s+(k<<6<<2)|0,k);p=oe(p|0,g|0,2,0)|0;g=D}while(g>>>0<j>>>0|(g|0)==(j|0)&p>>>0<i>>>0)}if(k<<5|0){b=0;do{w=r+(b<<2)|0;g=c[s+(b<<2)>>2]|0;a[w>>0]=g;a[w+1>>0]=g>>8;a[w+2>>0]=g>>16;a[w+3>>0]=g>>24;b=b+1|0}while((b|0)!=(k<<5|0))}h=h+1|0}while((h|0)!=(l|0));Tb(e,f,t,v,m,n);b=0;break}c[(Zf()|0)>>2]=12;b=-1}while(0);return b|0}function Da(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;r=i;o=i=i+63&-64;i=i+32|0;do if(f>>>0>=12){h=e;j=32952;k=h+12|0;do{a[h>>0]=a[j>>0]|0;h=h+1|0;j=j+1|0}while((h|0)<(k|0));h=jb(g)|0;if(!h){a[o+12+9>>0]=57;a[o+12+8>>0]=49;b[o>>1]=d[o+12+8>>0]|d[o+12+8+1>>0]<<8;a[o+2>>0]=0;l=kc(o)|0;m=e+11+l|0;if((f+-11|0)>>>0<=l>>>0){h=-31;break}tc(e+11|0,o|0,l+1|0)|0;if((f+-11-l|0)>>>0>=4){a[m>>0]=36;a[m+1>>0]=109;a[m+2>>0]=61;a[m+3>>0]=0;h=10;j=c[g+44>>2]|0;while(1){k=h+-1|0;a[o+12+k>>0]=(j>>>0)%10|0|48;if(j>>>0>9&(k|0)!=0){h=k;j=(j>>>0)/10|0}else break}h=11-h|0;tc(o|0,o+12+k|0,h|0)|0;a[o+h>>0]=0;h=kc(o)|0;e=m+3+h|0;n=f+-11-l+-3-h|0;if((f+-11-l+-3|0)>>>0<=h>>>0){h=-31;break}tc(m+3|0,o|0,h+1|0)|0;if(n>>>0>=4){a[e>>0]=44;a[e+1>>0]=116;a[e+2>>0]=61;a[e+3>>0]=0;h=10;j=c[g+40>>2]|0;while(1){k=h+-1|0;a[o+12+k>>0]=(j>>>0)%10|0|48;if(j>>>0>9&(k|0)!=0){h=k;j=(j>>>0)/10|0}else break}l=11-h|0;tc(o|0,o+12+k|0,l|0)|0;a[o+l>>0]=0;l=kc(o)|0;m=e+3+l|0;if((n+-3|0)>>>0<=l>>>0){h=-31;break}tc(e+3|0,o|0,l+1|0)|0;if((n+-3-l|0)>>>0>=4){a[m>>0]=44;a[m+1>>0]=112;a[m+2>>0]=61;a[m+3>>0]=0;h=10;j=c[g+48>>2]|0;while(1){k=h+-1|0;a[o+12+k>>0]=(j>>>0)%10|0|48;if(j>>>0>9&(k|0)!=0){h=k;j=(j>>>0)/10|0}else break}j=11-h|0;tc(o|0,o+12+k|0,j|0)|0;a[o+j>>0]=0;j=kc(o)|0;e=m+3+j|0;h=n+-3-l+-3-j|0;if((n+-3-l+-3|0)>>>0<=j>>>0){h=-31;break}tc(m+3|0,o|0,j+1|0)|0;if(c[g+36>>2]|0){if(h>>>0<7){h=-31;break}a[e>>0]=a[32945]|0;a[e+1>>0]=a[32946]|0;a[e+2>>0]=a[32947]|0;a[e+3>>0]=a[32948]|0;a[e+4>>0]=a[32949]|0;a[e+5>>0]=a[32950]|0;a[e+6>>0]=a[32951]|0;j=Lb(e+6|0,h+-6|0,c[g+32>>2]|0,c[g+36>>2]|0)|0;if((j|0)==-1){h=-31;break}else{e=e+6+j|0;h=h+-6-((j|0)==-1?0:j)|0}}if(c[g+20>>2]|0){k=e+1|0;j=h+-1|0;if(h>>>0>=2?(a[e>>0]=36,a[e+1>>0]=0,o=Lb(k,j,c[g+16>>2]|0,c[g+20>>2]|0)|0,q=j-((o|0)==-1?0:o)|0,p=(o|0)==-1?k:k+o|0,(o|0)!=-1):0)if(c[g+4>>2]|0)if(q>>>0<2)h=-31;else{a[p>>0]=36;a[p+1>>0]=0;g=(Lb(p+1|0,q+-1|0,c[g>>2]|0,c[g+4>>2]|0)|0)!=-1;i=r;return (g?0:-31)|0}else h=0;else h=-31}else h=0}else h=-31}else h=-31}else h=-31}}else h=-31;while(0);i=r;return h|0}function Ea(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(!b)if(!e){if(f|0){c[f>>2]=(a>>>0)%(d>>>0);c[f+4>>2]=0}e=0;f=(a>>>0)/(d>>>0)>>>0;return (D=e,f)|0}else{if(!f){e=0;f=0;return (D=e,f)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;e=0;f=0;return (D=e,f)|0}do if(d){if(e|0){h=(V(e|0)|0)-(V(b|0)|0)|0;if(h>>>0<=31){n=h+1|0;i=a>>>((h+1|0)>>>0)&h-31>>31|b<<31-h;m=b>>>((h+1|0)>>>0)&h-31>>31;g=0;h=a<<31-h;break}if(!f){e=0;f=0;return (D=e,f)|0}c[f>>2]=a|0;c[f+4>>2]=b|b&0;e=0;f=0;return (D=e,f)|0}if(d-1&d|0){h=(V(d|0)|0)+33-(V(b|0)|0)|0;n=h;i=32-h-1>>31&b>>>((h-32|0)>>>0)|(b<<32-h|a>>>(h>>>0))&h-32>>31;m=h-32>>31&b>>>(h>>>0);g=a<<64-h&32-h>>31;h=(b<<64-h|a>>>((h-32|0)>>>0))&32-h>>31|a<<32-h&h-33>>31;break}if(f|0){c[f>>2]=d-1&a;c[f+4>>2]=0}if((d|0)==1){e=b|b&0;f=a|0|0;return (D=e,f)|0}else{f=id(d|0)|0;e=b>>>(f>>>0)|0;f=b<<32-f|a>>>(f>>>0)|0;return (D=e,f)|0}}else{if(!e){if(f|0){c[f>>2]=(b>>>0)%(d>>>0);c[f+4>>2]=0}e=0;f=(b>>>0)/(d>>>0)>>>0;return (D=e,f)|0}if(!a){if(f|0){c[f>>2]=0;c[f+4>>2]=(b>>>0)%(e>>>0)}d=0;f=(b>>>0)/(e>>>0)>>>0;return (D=d,f)|0}if(!(e-1&e)){if(f|0){c[f>>2]=a|0;c[f+4>>2]=e-1&b|b&0}d=0;f=b>>>((id(e|0)|0)>>>0);return (D=d,f)|0}h=(V(e|0)|0)-(V(b|0)|0)|0;if(h>>>0<=30){n=h+1|0;i=b<<31-h|a>>>((h+1|0)>>>0);m=b>>>((h+1|0)>>>0);g=0;h=a<<31-h;break}if(!f){e=0;f=0;return (D=e,f)|0}c[f>>2]=a|0;c[f+4>>2]=b|b&0;e=0;f=0;return (D=e,f)|0}while(0);if(!n){j=h;b=m;a=0;h=0}else{k=oe(d|0|0,e|e&0|0,-1,-1)|0;l=D;j=h;b=m;a=n;h=0;do{p=j;j=g>>>31|j<<1;g=h|g<<1;p=i<<1|p>>>31|0;o=i>>>31|b<<1|0;le(k|0,l|0,p|0,o|0)|0;n=D;m=n>>31|((n|0)<0?-1:0)<<1;h=m&1;i=le(p|0,o|0,m&(d|0)|0,(((n|0)<0?-1:0)>>31|((n|0)<0?-1:0)<<1)&(e|e&0)|0)|0;b=D;a=a-1|0}while((a|0)!=0);a=0}if(f|0){c[f>>2]=i;c[f+4>>2]=b}o=(g|0)>>>31|j<<1|(0<<1|g>>>31)&0|a;p=(g<<1|0>>>31)&-2|h;return (D=o,p)|0}function Fa(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;h=i=i+63&-64;i=i+2400|0;Gb(h+2136|0,d);Gb(h+1880|0,f);Rb(h+480|0,e);bb(h+1760|0,e);dc(h+320|0,h+1760|0);Zc(h,h+320|0);Qb(h+320|0,h,h+480|0);Zc(h+160|0,h+320|0);Rb(h+480+160|0,h+160|0);Qb(h+320|0,h,h+480+160|0);Zc(h+160|0,h+320|0);Rb(h+480+320|0,h+160|0);Qb(h+320|0,h,h+480+320|0);Zc(h+160|0,h+320|0);Rb(h+480+480|0,h+160|0);Qb(h+320|0,h,h+480+480|0);Zc(h+160|0,h+320|0);Rb(h+480+640|0,h+160|0);Qb(h+320|0,h,h+480+640|0);Zc(h+160|0,h+320|0);Rb(h+480+800|0,h+160|0);Qb(h+320|0,h,h+480+800|0);Zc(h+160|0,h+320|0);Rb(h+480+960|0,h+160|0);Qb(h+320|0,h,h+480+960|0);Zc(h+160|0,h+320|0);Rb(h+480+1120|0,h+160|0);d=b;e=d+40|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(e|0));c[b+40>>2]=1;d=b+44|0;e=d+36|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(e|0));c[b+80>>2]=1;d=b+84|0;e=d+36|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(e|0));d=255;while(1){if(a[h+2136+d>>0]|0)break;if(a[h+1880+d>>0]|0)break;e=d+-1|0;if((d|0)>0)d=e;else{d=e;break}}if((d|0)>-1)while(1){dc(h+320|0,b);e=a[h+2136+d>>0]|0;if(e<<24>>24<=0){if(e<<24>>24<0){Zc(h+160|0,h+320|0);Pb(h+320|0,h+160|0,h+480+((((e<<24>>24)/-2|0)<<24>>24)*160|0)|0)}}else{Zc(h+160|0,h+320|0);Qb(h+320|0,h+160|0,h+480+(((e&255)>>>1&255)*160|0)|0)}e=a[h+1880+d>>0]|0;if(e<<24>>24<=0){if(e<<24>>24<0){Zc(h+160|0,h+320|0);Ub(h+320|0,h+160|0,584+((((e<<24>>24)/-2|0)<<24>>24)*120|0)|0)}}else{Zc(h+160|0,h+320|0);Vb(h+320|0,h+160|0,584+(((e&255)>>>1&255)*120|0)|0)}ud(b,h+320|0);if((d|0)>0)d=d+-1|0;else break}i=g;return}function Ga(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;u=i;v=i=i+63&-64;i=i+64|0;b=v;d=a;e=b+64|0;do{c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0}while((b|0)<(e|0));b=0;e=c[v+60>>2]|0;f=c[v+44>>2]|0;g=c[v+12>>2]|0;h=c[v+28>>2]|0;j=c[v>>2]|0;k=c[v+48>>2]|0;l=c[v+16>>2]|0;m=c[v+32>>2]|0;n=c[v+20>>2]|0;d=c[v+4>>2]|0;o=c[v+36>>2]|0;p=c[v+52>>2]|0;q=c[v+40>>2]|0;r=c[v+24>>2]|0;s=c[v+56>>2]|0;t=c[v+8>>2]|0;do{F=k+j|0;F=(F<<7|F>>>25)^l;C=F+j|0;C=(C<<9|C>>>23)^m;z=(C+F<<13|(C+F|0)>>>19)^k;I=(z+C<<18|(z+C|0)>>>14)^j;B=d+n|0;B=(B<<7|B>>>25)^o;y=B+n|0;y=(y<<9|y>>>23)^p;L=(y+B<<13|(y+B|0)>>>19)^d;E=(L+y<<18|(L+y|0)>>>14)^n;x=r+q|0;x=(x<<7|x>>>25)^s;K=x+q|0;K=(K<<9|K>>>23)^t;H=(K+x<<13|(K+x|0)>>>19)^r;A=(H+K<<18|(H+K|0)>>>14)^q;J=f+e|0;J=(J<<7|J>>>25)^g;G=J+e|0;G=(G<<9|G>>>23)^h;D=(G+J<<13|(G+J|0)>>>19)^f;w=(D+G<<18|(D+G|0)>>>14)^e;d=(J+I<<7|(J+I|0)>>>25)^L;L=d+I|0;t=(L<<9|L>>>23)^K;K=t+d|0;g=(K<<13|K>>>19)^J;J=g+t|0;j=(J<<18|J>>>14)^I;r=(F+E<<7|(F+E|0)>>>25)^H;H=r+E|0;h=(H<<9|H>>>23)^G;G=h+r|0;l=(G<<13|G>>>19)^F;F=l+h|0;n=(F<<18|F>>>14)^E;f=(B+A<<7|(B+A|0)>>>25)^D;D=f+A|0;m=(D<<9|D>>>23)^C;C=m+f|0;o=(C<<13|C>>>19)^B;B=o+m|0;q=(B<<18|B>>>14)^A;k=(x+w<<7|(x+w|0)>>>25)^z;z=k+w|0;p=(z<<9|z>>>23)^y;y=p+k|0;s=(y<<13|y>>>19)^x;x=s+p|0;e=(x<<18|x>>>14)^w;b=b+2|0}while(b>>>0<8);c[v>>2]=j;c[v+48>>2]=k;c[v+16>>2]=l;c[v+32>>2]=m;c[v+20>>2]=n;c[v+4>>2]=d;c[v+36>>2]=o;c[v+52>>2]=p;c[v+40>>2]=q;c[v+24>>2]=r;c[v+56>>2]=s;c[v+8>>2]=t;c[v+60>>2]=e;c[v+44>>2]=f;c[v+12>>2]=g;c[v+28>>2]=h;c[a>>2]=(c[a>>2]|0)+j;b=1;while(1){L=a+(b<<2)|0;c[L>>2]=(c[L>>2]|0)+d;b=b+1|0;if((b|0)==16)break;d=c[v+(b<<2)>>2]|0}i=u;return}function Ha(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;h=i=i+63&-64;i=i+128|0;e=Rd(d<<24>>24|0,((d<<24>>24|0)<0)<<31>>31|0,63)|0;c[a>>2]=1;f=a+4|0;j=f+36|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(j|0));c[a+40>>2]=1;f=a+44|0;j=f+76|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(j|0));o=(d<<24>>24)-((d<<24>>24&0-e)<<1)&255;xd(a,1544+(b*960|0)|0,((o^1)+-1|0)>>>31&255);xd(a,1544+(b*960|0)+120|0,((o^2)+-1|0)>>>31&255);xd(a,1544+(b*960|0)+240|0,((o^3)+-1|0)>>>31&255);xd(a,1544+(b*960|0)+360|0,((o^4)+-1|0)>>>31&255);xd(a,1544+(b*960|0)+480|0,((o^5)+-1|0)>>>31&255);xd(a,1544+(b*960|0)+600|0,((o^6)+-1|0)>>>31&255);xd(a,1544+(b*960|0)+720|0,((o^7)+-1|0)>>>31&255);xd(a,1544+(b*960|0)+840|0,((o^8)+-1|0)>>>31&255);o=c[a+44>>2]|0;n=c[a+48>>2]|0;m=c[a+52>>2]|0;l=c[a+56>>2]|0;k=c[a+60>>2]|0;b=c[a+64>>2]|0;d=c[a+68>>2]|0;f=c[a+72>>2]|0;j=c[a+76>>2]|0;c[h>>2]=c[a+40>>2];c[h+4>>2]=o;c[h+8>>2]=n;c[h+12>>2]=m;c[h+16>>2]=l;c[h+20>>2]=k;c[h+24>>2]=b;c[h+28>>2]=d;c[h+32>>2]=f;c[h+36>>2]=j;j=c[a+4>>2]|0;f=c[a+8>>2]|0;d=c[a+12>>2]|0;b=c[a+16>>2]|0;k=c[a+20>>2]|0;l=c[a+24>>2]|0;m=c[a+28>>2]|0;n=c[a+32>>2]|0;o=c[a+36>>2]|0;c[h+40>>2]=c[a>>2];c[h+44>>2]=j;c[h+48>>2]=f;c[h+52>>2]=d;c[h+56>>2]=b;c[h+60>>2]=k;c[h+64>>2]=l;c[h+68>>2]=m;c[h+72>>2]=n;c[h+76>>2]=o;o=0-(c[a+84>>2]|0)|0;n=0-(c[a+88>>2]|0)|0;m=0-(c[a+92>>2]|0)|0;l=0-(c[a+96>>2]|0)|0;k=0-(c[a+100>>2]|0)|0;b=0-(c[a+104>>2]|0)|0;d=0-(c[a+108>>2]|0)|0;f=0-(c[a+112>>2]|0)|0;j=0-(c[a+116>>2]|0)|0;c[h+80>>2]=0-(c[a+80>>2]|0);c[h+84>>2]=o;c[h+88>>2]=n;c[h+92>>2]=m;c[h+96>>2]=l;c[h+100>>2]=k;c[h+104>>2]=b;c[h+108>>2]=d;c[h+112>>2]=f;c[h+116>>2]=j;xd(a,h,e&255);i=g;return}function Ia(a,b){a=a|0;b=b|0;var c=0,d=0;c=i;d=i=i+63&-64;i=i+160|0;ra(d+120|0,b);ra(d+80|0,d+120|0);ra(d+80|0,d+80|0);pa(d+80|0,b,d+80|0);pa(d+120|0,d+120|0,d+80|0);ra(d+40|0,d+120|0);pa(d+80|0,d+80|0,d+40|0);ra(d+40|0,d+80|0);b=1;do{ra(d+40|0,d+40|0);b=b+1|0}while((b|0)!=5);pa(d+80|0,d+40|0,d+80|0);ra(d+40|0,d+80|0);b=1;do{ra(d+40|0,d+40|0);b=b+1|0}while((b|0)!=10);pa(d+40|0,d+40|0,d+80|0);ra(d,d+40|0);b=1;do{ra(d,d);b=b+1|0}while((b|0)!=20);pa(d+40|0,d,d+40|0);ra(d+40|0,d+40|0);b=1;do{ra(d+40|0,d+40|0);b=b+1|0}while((b|0)!=10);pa(d+80|0,d+40|0,d+80|0);ra(d+40|0,d+80|0);b=1;do{ra(d+40|0,d+40|0);b=b+1|0}while((b|0)!=50);pa(d+40|0,d+40|0,d+80|0);ra(d,d+40|0);b=1;do{ra(d,d);b=b+1|0}while((b|0)!=100);pa(d+40|0,d,d+40|0);ra(d+40|0,d+40|0);b=1;do{ra(d+40|0,d+40|0);b=b+1|0}while((b|0)!=50);pa(d+80|0,d+40|0,d+80|0);ra(d+80|0,d+80|0);b=1;do{ra(d+80|0,d+80|0);b=b+1|0}while((b|0)!=5);pa(a,d+80|0,d+120|0);i=c;return}function Ja(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;k=i;j=i=i+63&-64;i=i+16|0;f=c[b+36>>2]|0;g=c[b+20>>2]|0;h=c[b+4>>2]|0;c[b+36>>2]=0;c[b+20>>2]=0;c[b+4>>2]=0;l=(sc(d,32920,8)|0)==0;d=l?d+8|0:d;a:do if((l?(sc(d,32929,3)|0)==0:0)?(e=jc(d+3|0,j)|0,(e|0)!=0):0)if((c[j>>2]|0)==19)if(!(sc(e,32933,3)|0)){d=jc(e+3|0,j)|0;if(!d){d=-32;break}c[b+44>>2]=c[j>>2];if(!(sc(d,32937,3)|0)){d=jc(d+3|0,j)|0;if(!d){d=-32;break}c[b+40>>2]=c[j>>2];if(!(sc(d,32941,3)|0)){d=jc(d+3|0,j)|0;if(!d){d=-32;break}l=c[j>>2]|0;c[b+48>>2]=l;c[b+52>>2]=l;do if(!(sc(d,32945,6)|0)){c[j>>2]=f;d=ub(c[b+32>>2]|0,j,d+6|0)|0;if(!d){d=-32;break a}else{c[b+36>>2]=c[j>>2];break}}while(0);e=a[d>>0]|0;if(e<<24>>24)if(e<<24>>24==36){c[j>>2]=g;d=ub(c[b+16>>2]|0,j,d+1|0)|0;if(!d){d=-32;break}c[b+20>>2]=c[j>>2];e=a[d>>0]|0;if(e<<24>>24)if(e<<24>>24==36){c[j>>2]=h;e=ub(c[b>>2]|0,j,d+1|0)|0;if(!e){d=-32;break}c[b+4>>2]=c[j>>2];d=jb(b)|0;if(!d)d=(a[e>>0]|0)==0?0:-32}else d=-32;else d=0}else d=-32;else d=0}else d=-32}else d=-32}else d=-32;else d=-26;else d=-32;while(0);i=k;return d|0}function Ka(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=i;e=i=i+63&-64;i=i+128|0;ra(e+80|0,b);ra(e+40|0,e+80|0);ra(e+40|0,e+40|0);pa(e+40|0,b,e+40|0);pa(e+80|0,e+80|0,e+40|0);ra(e+80|0,e+80|0);pa(e+80|0,e+40|0,e+80|0);ra(e+40|0,e+80|0);c=1;do{ra(e+40|0,e+40|0);c=c+1|0}while((c|0)!=5);pa(e+80|0,e+40|0,e+80|0);ra(e+40|0,e+80|0);c=1;do{ra(e+40|0,e+40|0);c=c+1|0}while((c|0)!=10);pa(e+40|0,e+40|0,e+80|0);ra(e,e+40|0);c=1;do{ra(e,e);c=c+1|0}while((c|0)!=20);pa(e+40|0,e,e+40|0);ra(e+40|0,e+40|0);c=1;do{ra(e+40|0,e+40|0);c=c+1|0}while((c|0)!=10);pa(e+80|0,e+40|0,e+80|0);ra(e+40|0,e+80|0);c=1;do{ra(e+40|0,e+40|0);c=c+1|0}while((c|0)!=50);pa(e+40|0,e+40|0,e+80|0);ra(e,e+40|0);c=1;do{ra(e,e);c=c+1|0}while((c|0)!=100);pa(e+40|0,e,e+40|0);ra(e+40|0,e+40|0);c=1;do{ra(e+40|0,e+40|0);c=c+1|0}while((c|0)!=50);pa(e+80|0,e+40|0,e+80|0);ra(e+80|0,e+80|0);ra(e+80|0,e+80|0);pa(a,e+80|0,b);i=d;return}function La(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;m=c[d>>2]|0;h=c[d+4>>2]|0;i=c[d+8>>2]|0;j=c[d+12>>2]|0;p=c[d+16>>2]|0;f=c[d+20>>2]|0;g=c[d+24>>2]|0;n=c[d+28>>2]|0;e=c[d+32>>2]|0;d=c[d+36>>2]|0;o=((((((((((((((d*19|0)+16777216|0)>>>25)+m>>26)+h>>25)+i>>26)+j>>25)+p>>26)+f>>25)+g>>26)+n>>25)+e>>26)+d>>25)*19|0)+m>>26;m=((((((((((((((d*19|0)+16777216|0)>>>25)+m>>26)+h>>25)+i>>26)+j>>25)+p>>26)+f>>25)+g>>26)+n>>25)+e>>26)+d>>25)*19|0)+m-(o<<26)|0;l=o+h-(o+h>>25<<25)|0;k=(o+h>>25)+i-((o+h>>25)+i>>26<<26)|0;q=((o+h>>25)+i>>26)+j>>25;j=((o+h>>25)+i>>26)+j-(q<<25)|0;i=q+p-(q+p>>26<<26)|0;h=(q+p>>26)+f-((q+p>>26)+f>>25<<25)|0;o=((q+p>>26)+f>>25)+g>>26;g=((q+p>>26)+f>>25)+g-(o<<26)|0;f=o+n-(o+n>>25<<25)|0;d=((o+n>>25)+e>>26)+d|0;e=(o+n>>25)+e-((o+n>>25)+e>>26<<26)|0;a[b>>0]=m;a[b+1>>0]=m>>>8;a[b+2>>0]=m>>>16;a[b+3>>0]=l<<2|m>>>24;a[b+4>>0]=l>>>6;a[b+5>>0]=l>>>14;a[b+6>>0]=k<<3|l>>>22;a[b+7>>0]=k>>>5;a[b+8>>0]=k>>>13;a[b+9>>0]=j<<5|k>>>21;a[b+10>>0]=j>>>3;a[b+11>>0]=j>>>11;a[b+12>>0]=i<<6|j>>>19;a[b+13>>0]=i>>>2;a[b+14>>0]=i>>>10;a[b+15>>0]=i>>>18;a[b+16>>0]=h;a[b+17>>0]=h>>>8;a[b+18>>0]=h>>>16;a[b+19>>0]=g<<1|h>>>24;a[b+20>>0]=g>>>7;a[b+21>>0]=g>>>15;a[b+22>>0]=f<<3|g>>>23;a[b+23>>0]=f>>>5;a[b+24>>0]=f>>>13;a[b+25>>0]=e<<4|f>>>21;a[b+26>>0]=e>>>4;a[b+27>>0]=e>>>12;a[b+28>>0]=e>>>20|(d&33554431)<<6;a[b+29>>0]=d>>>2;a[b+30>>0]=d>>>10;a[b+31>>0]=(d&33554431)>>>18;return}function Ma(b,e,f,g,h,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;s=i;t=i=i+63&-64;i=i+112|0;if(!((f|0)==0&(g|0)==0)){n=t+16|0;m=n+32|0;do{a[n>>0]=a[l>>0]|0;n=n+1|0;l=l+1|0}while((n|0)<(m|0));n=d[h+4>>0]|d[h+4+1>>0]<<8|d[h+4+2>>0]<<16|d[h+4+3>>0]<<24;c[t>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;c[t+4>>2]=n;a[t+8>>0]=j;n=Rd(j|0,k|0,8)|0;a[t+9>>0]=n;n=Rd(j|0,k|0,16)|0;a[t+10>>0]=n;n=Rd(j|0,k|0,24)|0;a[t+11>>0]=n;a[t+12>>0]=k;n=Rd(j|0,k|0,40)|0;a[t+13>>0]=n;n=Rd(j|0,k|0,48)|0;a[t+14>>0]=n;n=Rd(j|0,k|0,56)|0;a[t+15>>0]=n;if(g>>>0>0|(g|0)==0&f>>>0>63){do{xa(t+48|0,t,t+16|0,0)|0;l=0;do{a[b+l>>0]=a[t+48+l>>0]^a[e+l>>0];l=l+1|0}while((l|0)!=64);l=1;m=8;while(1){n=t+m|0;l=(d[n>>0]|0)+l|0;a[n>>0]=l;m=m+1|0;if((m|0)==16)break;else l=l>>>8}f=oe(f|0,g|0,-64,-1)|0;g=D;b=b+64|0;e=e+64|0}while(g>>>0>0|(g|0)==0&f>>>0>63);if(!((f|0)==0&(g|0)==0)){p=b;q=f;r=e;o=8}}else{p=b;q=f;r=e;o=8}if((o|0)==8?(xa(t+48|0,t,t+16|0,0)|0,q|0):0){l=0;do{a[p+l>>0]=a[t+48+l>>0]^a[r+l>>0];l=l+1|0}while((l|0)!=(q|0))}fd(t+48|0,64);fd(t+16|0,32)}i=s;return 0}function Na(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=c[b+72>>2]|0;m=c[b+72+4>>2]|0;k=Rd(o|0,m|0,3)|0;l=Pd(e|0,f|0,3)|0;n=D;i=Rd(e|0,f|0,61)|0;j=D;m=oe(o|0,m|0,l|0,n|0)|0;o=D;c[b+72>>2]=m;c[b+72+4>>2]=o;g=c[b+64>>2]|0;h=c[b+64+4>>2]|0;if(o>>>0<n>>>0|(o|0)==(n|0)&m>>>0<l>>>0){g=oe(g|0,h|0,1,0)|0;h=D;c[b+64>>2]=g;c[b+64+4>>2]=h}j=oe(g|0,h|0,i|0,j|0)|0;c[b+64>>2]=j;c[b+64+4>>2]=D;j=le(128,0,k&127|0,0)|0;g=D;if(g>>>0>f>>>0|(g|0)==(f|0)&j>>>0>e>>>0){if(!((e|0)==0&(f|0)==0)){g=0;h=0;do{n=a[d+g>>0]|0;o=oe(g|0,h|0,k&127|0,0)|0;a[b+80+o>>0]=n;g=oe(g|0,h|0,1,0)|0;h=D}while(h>>>0<f>>>0|(h|0)==(f|0)&g>>>0<e>>>0)}}else{if(!((j|0)==0&(g|0)==0)){h=0;i=0;do{n=a[d+h>>0]|0;o=oe(h|0,i|0,k&127|0,0)|0;a[b+80+o>>0]=n;h=oe(h|0,i|0,1,0)|0;i=D}while(i>>>0<g>>>0|(i|0)==(g|0)&h>>>0<j>>>0)}ha(b,b+80|0);g=le(e|0,f|0,j|0,g|0)|0;h=D;if(h>>>0>0|(h|0)==0&g>>>0>127){i=d+j|0;do{ha(b,i);i=i+128|0;g=oe(g|0,h|0,-128,-1)|0;h=D}while(h>>>0>0|(h|0)==0&g>>>0>127);j=i}else j=d+j|0;g=g&127;if(!((g|0)==0&0==0)){h=0;i=0;do{a[b+80+h>>0]=a[j+h>>0]|0;h=oe(h|0,i|0,1,0)|0;i=D}while(i>>>0<0|(i|0)==0&h>>>0<g>>>0)}}return 0}function Oa(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;f=c[b+56>>2]|0;g=c[b+56+4>>2]|0;if(!((f|0)==0&(g|0)==0)){a[b+64+f>>0]=1;e=oe(f|0,g|0,1,0)|0;h=D;if(h>>>0<0|(h|0)==0&e>>>0<16){h=le(14,0,f|0,g|0)|0;Hc(b+64+e|0,0,h+1|0)|0}a[b+80>>0]=1;Ba(b,b+64|0,16,0)}g=c[b+24>>2]|0;h=(c[b+28>>2]|0)+(g>>>26)|0;k=(h>>>26)+(c[b+32>>2]|0)|0;i=(k>>>26)+(c[b+36>>2]|0)|0;e=((i>>>26)*5|0)+(c[b+20>>2]|0)|0;l=((((e&67108863)+5|0)>>>26)+((e>>>26)+(g&67108863))|0)>>>26;j=(i|-67108864)+((((l+(h&67108863)|0)>>>26)+(k&67108863)|0)>>>26)|0;g=(((e&67108863)+5|0)>>>26)+((e>>>26)+(g&67108863))&67108863&(j>>>31)+-1|j>>31&(e>>>26)+(g&67108863);k=((l+(h&67108863)|0)>>>26)+k&67108863&(j>>>31)+-1|j>>31&(k&67108863);e=oe(e+5&67108863&(j>>>31)+-1|j>>31&(e&67108863)|g<<26|0,0,c[b+40>>2]|0,0)|0;f=D;g=oe(g>>>6|(l+h&67108863&(j>>>31)+-1|j>>31&(h&67108863))<<20|0,0,c[b+44>>2]|0,0)|0;f=oe(g|0,D|0,f|0,0)|0;g=D;h=oe((l+h&67108863&(j>>>31)+-1|j>>31&(h&67108863))>>>12|k<<14|0,0,c[b+48>>2]|0,0)|0;g=oe(h|0,D|0,g|0,0)|0;h=D;i=oe(k>>>18|((j>>>31)+-1&j|j>>31&i)<<8|0,0,c[b+52>>2]|0,0)|0;h=oe(i|0,D|0,h|0,0)|0;a[d>>0]=e;a[d+1>>0]=e>>8;a[d+2>>0]=e>>16;a[d+3>>0]=e>>24;a[d+4>>0]=f;a[d+4+1>>0]=f>>8;a[d+4+2>>0]=f>>16;a[d+4+3>>0]=f>>24;a[d+8>>0]=g;a[d+8+1>>0]=g>>8;a[d+8+2>>0]=g>>16;a[d+8+3>>0]=g>>24;a[d+12>>0]=h;a[d+12+1>>0]=h>>8;a[d+12+2>>0]=h>>16;a[d+12+3>>0]=h>>24;fd(b,88);return}function Pa(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;g=i;h=i=i+63&-64;i=i+592|0;f=0;do{k=a[e+f>>0]|0;j=f<<1;a[h+520+j>>0]=k&15;a[h+520+(j|1)>>0]=(k&255)>>>4;f=f+1|0}while((f|0)!=32);f=0;e=0;do{k=h+520+e|0;j=(d[k>>0]|0)+f|0;f=(j<<24)+134217728>>28;a[k>>0]=j-(f<<4);e=e+1|0}while((e|0)!=63);a[h+520+63>>0]=(d[h+520+63>>0]|0)+f;f=b;e=f+40|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(e|0));c[b+40>>2]=1;f=b+44|0;e=f+36|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(e|0));c[b+80>>2]=1;f=b+84|0;e=f+76|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(e|0));f=1;do{Ha(h,(f|0)/2|0,a[h+520+f>>0]|0);Vb(h+240|0,b,h);Zc(b,h+240|0);f=f+2|0}while((f|0)<64);bb(h+400|0,b);dc(h+240|0,h+400|0);ud(h+120|0,h+240|0);dc(h+240|0,h+120|0);ud(h+120|0,h+240|0);dc(h+240|0,h+120|0);ud(h+120|0,h+240|0);dc(h+240|0,h+120|0);Zc(b,h+240|0);f=0;do{Ha(h,(f|0)/2|0,a[h+520+f>>0]|0);Vb(h+240|0,b,h);Zc(b,h+240|0);f=f+2|0}while((f|0)<64);i=g;return}function Qa(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0;m=i;n=i=i+63&-64;i=i+192|0;if((e+-1&255)>63)ba();if((f|0)!=0&g<<24>>24!=0?(g&255)<=64:0){a[n+128>>0]=e;a[n+128+1>>0]=g;a[n+128+2>>0]=1;a[n+128+3>>0]=1;k=n+128+4|0;l=k+28|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(l|0));if(!h){k=n+128+32|0;l=k+16|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(l|0))}else{k=n+128+32|0;e=h;l=k+16|0;do{a[k>>0]=a[e>>0]|0;k=k+1|0;e=e+1|0}while((k|0)<(l|0))}if(!j){k=n+128+48|0;l=k+16|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(l|0))}else{k=n+128+48|0;e=j;l=k+16|0;do{a[k>>0]=a[e>>0]|0;k=k+1|0;e=e+1|0}while((k|0)<(l|0))}Hc(b+64|0,0,293)|0;k=b;e=400;l=k+64|0;do{c[k>>2]=c[e>>2];k=k+4|0;e=e+4|0}while((k|0)<(l|0));e=0;do{k=n+128+(e<<3)|0;j=b+(e<<3)|0;l=c[j+4>>2]^(d[k+4>>0]|d[k+4+1>>0]<<8|d[k+4+2>>0]<<16|d[k+4+3>>0]<<24);c[j>>2]=c[j>>2]^(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24);c[j+4>>2]=l;e=e+1|0}while((e|0)!=8);Hc(n+(g&255)|0,0,(g<<24>>24<0?0:128-(g&255)|0)|0)|0;tc(n|0,f|0,g&255|0)|0;ib(b,n,128,0);fd(n,128);i=m;return}ba()}function Ra(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=c[b+56>>2]|0;g=c[b+56+4>>2]|0;if(!((h|0)==0&(g|0)==0)){j=le(16,0,h|0,g|0)|0;l=D;k=l>>>0>f>>>0|(l|0)==(f|0)&j>>>0>e>>>0?e:j;l=l>>>0>f>>>0|(l|0)==(f|0)&j>>>0>e>>>0?f:l;if(!((k|0)==0&(l|0)==0)){j=0;i=0;do{n=a[d+j>>0]|0;h=oe(h|0,g|0,j|0,i|0)|0;a[b+64+h>>0]=n;j=oe(j|0,i|0,1,0)|0;i=D;h=c[b+56>>2]|0;g=c[b+56+4>>2]|0}while(i>>>0<l>>>0|(i|0)==(l|0)&j>>>0<k>>>0)}n=oe(h|0,g|0,k|0,l|0)|0;j=D;c[b+56>>2]=n;c[b+56+4>>2]=j;if(!(j>>>0<0|(j|0)==0&n>>>0<16)){e=le(e|0,f|0,k|0,l|0)|0;f=D;Ba(b,b+64|0,16,0);c[b+56>>2]=0;c[b+56+4>>2]=0;d=d+k|0;m=6}}else m=6;if((m|0)==6){g=e&-16;if(f>>>0>0|(f|0)==0&e>>>0>15){h=le(e|0,f|0,g|0,f|0)|0;n=D;Ba(b,d,g,f);i=d+g|0;g=n}else{i=d;h=e;g=f}if(!((h|0)==0&(g|0)==0)){e=0;d=0;do{m=a[i+e>>0]|0;n=oe(c[b+56>>2]|0,c[b+56+4>>2]|0,e|0,d|0)|0;a[b+64+n>>0]=m;e=oe(e|0,d|0,1,0)|0;d=D}while(d>>>0<g>>>0|(d|0)==(g|0)&e>>>0<h>>>0);n=oe(c[b+56>>2]|0,c[b+56+4>>2]|0,h|0,g|0)|0;c[b+56>>2]=n;c[b+56+4>>2]=D}}return}function Sa(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=i=i+63&-64;i=i+368|0;if(!((a|0)==0|(b|0)==0)){yc(f,0,0,64)|0;c[f+360>>2]=c[b+48>>2];ue(f,f+360|0,4,0)|0;c[f+360>>2]=c[b+4>>2];ue(f,f+360|0,4,0)|0;c[f+360>>2]=c[b+44>>2];ue(f,f+360|0,4,0)|0;c[f+360>>2]=c[b+40>>2];ue(f,f+360|0,4,0)|0;c[f+360>>2]=19;ue(f,f+360|0,4,0)|0;c[f+360>>2]=d;ue(f,f+360|0,4,0)|0;c[f+360>>2]=c[b+12>>2];ue(f,f+360|0,4,0)|0;d=c[b+8>>2]|0;if(d|0?(ue(f,d,c[b+12>>2]|0,0)|0,c[b+56>>2]&1|0):0){fd(c[b+8>>2]|0,c[b+12>>2]|0);c[b+12>>2]=0}c[f+360>>2]=c[b+20>>2];ue(f,f+360|0,4,0)|0;d=c[b+16>>2]|0;if(d|0)ue(f,d,c[b+20>>2]|0,0)|0;c[f+360>>2]=c[b+28>>2];ue(f,f+360|0,4,0)|0;d=c[b+24>>2]|0;if(d|0?(ue(f,d,c[b+28>>2]|0,0)|0,c[b+56>>2]&2|0):0){fd(c[b+24>>2]|0,c[b+28>>2]|0);c[b+28>>2]=0}c[f+360>>2]=c[b+36>>2];ue(f,f+360|0,4,0)|0;d=c[b+32>>2]|0;if(d|0)ue(f,d,c[b+36>>2]|0,0)|0;Fd(f,a,64)|0}i=e;return}function Ta(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;k=i;l=i=i+63&-64;i=i+496|0;c[l+360>>2]=d;if(d>>>0<65){if((yc(l,0,0,d)|0)>=0){ue(l,l+360|0,4,0)|0;ue(l,e,f,0)|0;Fd(l,b,d)|0}}else a:do if((yc(l,0,0,64)|0)>=0?(ue(l,l+360|0,4,0)|0,ue(l,e,f,0)|0,(Fd(l,l+432|0,64)|0)>=0):0){g=b;h=l+432|0;j=g+32|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(j|0));g=l+368|0;h=l+432|0;j=g+64|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(j|0));if((d+-32|0)>>>0>64){f=d+-32|0;e=b+32|0;do{if((Cc(l+432|0,64,l+368|0,64,0,0,0)|0)<0)break a;g=e;h=l+432|0;j=g+32|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(j|0));f=f+-32|0;e=e+32|0;g=l+368|0;h=l+432|0;j=g+64|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(j|0))}while(f>>>0>64)}else{f=d+-32|0;e=b+32|0}if((Cc(l+432|0,f,l+368|0,64,0,0,0)|0)>=0)tc(e|0,l+432|0,f|0)|0}while(0);fd(l,357);i=k;return}function Ua(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;a:do if(!((e|0)==0&(f|0)==0)){j=c[b+32>>2]|0;g=c[b+32+4>>2]|0;i=Rd(j|0,g|0,3)|0;h=Pd(e|0,f|0,3)|0;h=oe(j|0,g|0,h|0,D|0)|0;c[b+32>>2]=h;c[b+32+4>>2]=D;if(0>f>>>0|0==(f|0)&(64-(i&63)|0)>>>0>e>>>0){g=0;h=0;while(1){k=a[d+g>>0]|0;j=oe(g|0,h|0,i&63|0,0)|0;a[b+40+j>>0]=k;g=oe(g|0,h|0,1,0)|0;h=D;if(!(h>>>0<f>>>0|(h|0)==(f|0)&g>>>0<e>>>0))break a}}if(64-(i&63)|0){g=0;h=0;do{j=a[d+g>>0]|0;k=oe(g|0,h|0,i&63|0,0)|0;a[b+40+k>>0]=j;g=oe(g|0,h|0,1,0)|0;h=D}while(h>>>0<0|(h|0)==0&g>>>0<(64-(i&63)|0)>>>0)}ka(b,b+40|0);g=le(e|0,f|0,64-(i&63)|0,0)|0;h=D;if(h>>>0>0|(h|0)==0&g>>>0>63){e=d+(64-(i&63))|0;do{ka(b,e);e=e+64|0;g=oe(g|0,h|0,-64,-1)|0;h=D}while(h>>>0>0|(h|0)==0&g>>>0>63);f=e}else f=d+(64-(i&63))|0;g=g&63;if(!((g|0)==0&0==0)){h=0;e=0;do{a[b+40+h>>0]=a[f+h>>0]|0;h=oe(h|0,e|0,1,0)|0;e=D}while(e>>>0<0|(e|0)==0&h>>>0<g>>>0)}}while(0);return 0}function Va(a,b,e,f,g,h,j){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;k=i;l=i=i+63&-64;i=i+64|0;if(!((e|0)==0&(f|0)==0)){c[l>>2]=1634760805;c[l+4>>2]=857760878;c[l+8>>2]=2036477234;c[l+12>>2]=1797285236;c[l+16>>2]=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24;c[l+20>>2]=d[j+4>>0]|d[j+4+1>>0]<<8|d[j+4+2>>0]<<16|d[j+4+3>>0]<<24;c[l+24>>2]=d[j+8>>0]|d[j+8+1>>0]<<8|d[j+8+2>>0]<<16|d[j+8+3>>0]<<24;c[l+28>>2]=d[j+12>>0]|d[j+12+1>>0]<<8|d[j+12+2>>0]<<16|d[j+12+3>>0]<<24;c[l+32>>2]=d[j+16>>0]|d[j+16+1>>0]<<8|d[j+16+2>>0]<<16|d[j+16+3>>0]<<24;c[l+36>>2]=d[j+20>>0]|d[j+20+1>>0]<<8|d[j+20+2>>0]<<16|d[j+20+3>>0]<<24;c[l+40>>2]=d[j+24>>0]|d[j+24+1>>0]<<8|d[j+24+2>>0]<<16|d[j+24+3>>0]<<24;c[l+44>>2]=d[j+28>>0]|d[j+28+1>>0]<<8|d[j+28+2>>0]<<16|d[j+28+3>>0]<<24;c[l+48>>2]=h;c[l+52>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;c[l+56>>2]=d[g+4>>0]|d[g+4+1>>0]<<8|d[g+4+2>>0]<<16|d[g+4+3>>0]<<24;c[l+60>>2]=d[g+8>>0]|d[g+8+1>>0]<<8|d[g+8+2>>0]<<16|d[g+8+3>>0]<<24;va(l,b,a,e,f);fd(l,64)}i=k;return 0}function Wa(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;j=i=i+63&-64;i=i+64|0;if(!((b|0)==0&(e|0)==0)){c[j>>2]=1634760805;c[j+4>>2]=857760878;c[j+8>>2]=2036477234;c[j+12>>2]=1797285236;c[j+16>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;c[j+20>>2]=d[g+4>>0]|d[g+4+1>>0]<<8|d[g+4+2>>0]<<16|d[g+4+3>>0]<<24;c[j+24>>2]=d[g+8>>0]|d[g+8+1>>0]<<8|d[g+8+2>>0]<<16|d[g+8+3>>0]<<24;c[j+28>>2]=d[g+12>>0]|d[g+12+1>>0]<<8|d[g+12+2>>0]<<16|d[g+12+3>>0]<<24;c[j+32>>2]=d[g+16>>0]|d[g+16+1>>0]<<8|d[g+16+2>>0]<<16|d[g+16+3>>0]<<24;c[j+36>>2]=d[g+20>>0]|d[g+20+1>>0]<<8|d[g+20+2>>0]<<16|d[g+20+3>>0]<<24;c[j+40>>2]=d[g+24>>0]|d[g+24+1>>0]<<8|d[g+24+2>>0]<<16|d[g+24+3>>0]<<24;c[j+44>>2]=d[g+28>>0]|d[g+28+1>>0]<<8|d[g+28+2>>0]<<16|d[g+28+3>>0]<<24;c[j+48>>2]=0;c[j+52>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;c[j+56>>2]=d[f+4>>0]|d[f+4+1>>0]<<8|d[f+4+2>>0]<<16|d[f+4+3>>0]<<24;c[j+60>>2]=d[f+8>>0]|d[f+8+1>>0]<<8|d[f+8+2>>0]<<16|d[f+8+3>>0]<<24;Hc(a|0,0,b|0)|0;va(j,a,a,b,e);fd(j,64)}i=h;return 0}function Xa(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;n=i;m=i=i+63&-64;i=i+592|0;h=32;g=1;j=0;while(1){h=h+-1|0;k=a[b+32+h>>0]|0;l=a[33097+h>>0]|0;g=g&255;j=((k&255)-(l&255)|0)>>>8&g|j&255;if(!h)break;else g=(((l^k)&255)+65535|0)>>>8&g}a:do if(j){h=0;do{g=0;j=0;do{j=a[16+(h<<5)+g>>0]^a[b+g>>0]|j;g=g+1|0}while((g|0)!=32);h=h+1|0;if(!(j<<24>>24)){g=-1;break a}}while(h>>>0<12);if(!(za(m+328|0,f)|0)){g=0;h=0;do{h=a[f+g>>0]|h;g=g+1|0}while((g|0)!=32);if(h<<24>>24){nd(m)|0;Na(m,b,32,0)|0;Na(m,f,32,0)|0;Na(m,c,d,e)|0;rc(m,m+520|0)|0;oa(m+520|0);Fa(m+208|0,m+520|0,m+328|0,b+32|0);vc(m+488|0,m+208|0);g=zd(m+488|0,b)|0;g=((m+488|0)==(b|0)?-1:g)|(Dc(b,m+488|0,32)|0)}else g=-1}else g=-1}else g=-1;while(0);i=n;return g|0}function Ya(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;k=i;l=i=i+63&-64;i=i+352|0;Aa(l+256|0,g,h,0)|0;if(b>>>0>=d>>>0?0<f>>>0|0==(f|0)&(b-d|0)>>>0<e>>>0:0)j=5;else if(d>>>0>=b>>>0?0<f>>>0|0==(f|0)&(d-b|0)>>>0<e>>>0:0)j=5;if((j|0)==5){Xc(b|0,d|0,e|0)|0;d=b}h=l+288|0;j=h+32|0;do{a[h>>0]=0;h=h+1|0}while((h|0)<(j|0));h=f>>>0>0|(f|0)==0&e>>>0>32?32:e;j=f>>>0>0|(f|0)==0&e>>>0>32?0:f;if(!((h|0)==0&(j|0)==0)){m=oe((f>>>0<0|(f|0)==0&e>>>0<32?e:32)|0,(f>>>0<0|(f|0)==0&e>>>0<32?f:0)|0,-1,0)|0;tc(l+288+32|0,d|0,m+1|0)|0}m=oe(h|0,j|0,32,0)|0;Wd(l+288|0,l+288|0,m,D,g+16|0,l+256|0)|0;Se(l,l+288|0)|0;if(!((h|0)==0&(j|0)==0)){m=oe((f>>>0<0|(f|0)==0&e>>>0<32?e:32)|0,(f>>>0<0|(f|0)==0&e>>>0<32?f:0)|0,-1,0)|0;tc(b|0,l+288+32|0,m+1|0)|0}fd(l+288|0,64);if(f>>>0>0|(f|0)==0&e>>>0>32){m=le(e|0,f|0,h|0,j|0)|0;Ma(b+h|0,d+h|0,m,D,g+16|0,1,0,l+256|0)|0}fd(l+256|0,32);ne(l,b,e,f)|0;Re(l,c)|0;fd(l,256);i=k;return 0}function Za(a,b,e,f,g,h,j,k){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0;l=i;m=i=i+63&-64;i=i+64|0;if(!((e|0)==0&(f|0)==0)){c[m>>2]=1634760805;c[m+4>>2]=857760878;c[m+8>>2]=2036477234;c[m+12>>2]=1797285236;c[m+16>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;c[m+20>>2]=d[k+4>>0]|d[k+4+1>>0]<<8|d[k+4+2>>0]<<16|d[k+4+3>>0]<<24;c[m+24>>2]=d[k+8>>0]|d[k+8+1>>0]<<8|d[k+8+2>>0]<<16|d[k+8+3>>0]<<24;c[m+28>>2]=d[k+12>>0]|d[k+12+1>>0]<<8|d[k+12+2>>0]<<16|d[k+12+3>>0]<<24;c[m+32>>2]=d[k+16>>0]|d[k+16+1>>0]<<8|d[k+16+2>>0]<<16|d[k+16+3>>0]<<24;c[m+36>>2]=d[k+20>>0]|d[k+20+1>>0]<<8|d[k+20+2>>0]<<16|d[k+20+3>>0]<<24;c[m+40>>2]=d[k+24>>0]|d[k+24+1>>0]<<8|d[k+24+2>>0]<<16|d[k+24+3>>0]<<24;c[m+44>>2]=d[k+28>>0]|d[k+28+1>>0]<<8|d[k+28+2>>0]<<16|d[k+28+3>>0]<<24;c[m+48>>2]=h;c[m+52>>2]=j;c[m+56>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;c[m+60>>2]=d[g+4>>0]|d[g+4+1>>0]<<8|d[g+4+2>>0]<<16|d[g+4+3>>0]<<24;va(m,b,a,e,f);fd(m,64)}i=l;return 0}function _a(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;k=i;l=i=i+63&-64;i=i+1024|0;if(c[e+20>>2]|0){j=0;do{a[b+64>>0]=0;a[b+64+1>>0]=0;a[b+64+2>>0]=0;a[b+64+3>>0]=0;a[b+68>>0]=j;a[b+68+1>>0]=j>>8;a[b+68+2>>0]=j>>16;a[b+68+3>>0]=j>>24;Ta(l,1024,b,72);g=S(c[e+16>>2]|0,j)|0;h=c[(c[e>>2]|0)+4>>2]|0;f=0;do{o=l+(f<<3)|0;n=d[o+4>>0]|d[o+4+1>>0]<<8|d[o+4+2>>0]<<16|d[o+4+3>>0]<<24;m=h+(g<<10)+(f<<3)|0;c[m>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;c[m+4>>2]=n;f=f+1|0}while((f|0)!=128);a[b+64>>0]=1;a[b+64+1>>0]=0;a[b+64+2>>0]=0;a[b+64+3>>0]=0;Ta(l,1024,b,72);g=(S(c[e+16>>2]|0,j)|0)+1|0;h=c[(c[e>>2]|0)+4>>2]|0;f=0;do{m=l+(f<<3)|0;n=d[m+4>>0]|d[m+4+1>>0]<<8|d[m+4+2>>0]<<16|d[m+4+3>>0]<<24;o=h+(g<<10)+(f<<3)|0;c[o>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;c[o+4>>2]=n;f=f+1|0}while((f|0)!=128);j=j+1|0}while(j>>>0<(c[e+20>>2]|0)>>>0)}fd(l,1024);i=k;return}function $a(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;j=i=i+63&-64;i=i+64|0;if(!((b|0)==0&(e|0)==0)){c[j>>2]=1634760805;c[j+4>>2]=857760878;c[j+8>>2]=2036477234;c[j+12>>2]=1797285236;c[j+16>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;c[j+20>>2]=d[g+4>>0]|d[g+4+1>>0]<<8|d[g+4+2>>0]<<16|d[g+4+3>>0]<<24;c[j+24>>2]=d[g+8>>0]|d[g+8+1>>0]<<8|d[g+8+2>>0]<<16|d[g+8+3>>0]<<24;c[j+28>>2]=d[g+12>>0]|d[g+12+1>>0]<<8|d[g+12+2>>0]<<16|d[g+12+3>>0]<<24;c[j+32>>2]=d[g+16>>0]|d[g+16+1>>0]<<8|d[g+16+2>>0]<<16|d[g+16+3>>0]<<24;c[j+36>>2]=d[g+20>>0]|d[g+20+1>>0]<<8|d[g+20+2>>0]<<16|d[g+20+3>>0]<<24;c[j+40>>2]=d[g+24>>0]|d[g+24+1>>0]<<8|d[g+24+2>>0]<<16|d[g+24+3>>0]<<24;c[j+44>>2]=d[g+28>>0]|d[g+28+1>>0]<<8|d[g+28+2>>0]<<16|d[g+28+3>>0]<<24;c[j+48>>2]=0;c[j+52>>2]=0;c[j+56>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;c[j+60>>2]=d[f+4>>0]|d[f+4+1>>0]<<8|d[f+4+2>>0]<<16|d[f+4+3>>0]<<24;Hc(a|0,0,b|0)|0;va(j,a,a,b,e);fd(j,64)}i=h;return 0}function ab(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(e<<24>>24?(e&255)<=64:0){if((c[b+80>>2]|0)==0?(c[b+80+4>>2]|0)==0:0){f=c[b+352>>2]|0;do if(f>>>0>128){f=c[b+64>>2]|0;i=c[b+64+4>>2]|0;j=oe(f|0,i|0,128,0)|0;c[b+64>>2]=j;c[b+64+4>>2]=D;f=oe((i>>>0>4294967295|(i|0)==-1&f>>>0>4294967167)&1|0,0,c[b+72>>2]|0,c[b+72+4>>2]|0)|0;c[b+72>>2]=f;c[b+72+4>>2]=D;ia(b,b+96|0);f=(c[b+352>>2]|0)+-128|0;c[b+352>>2]=f;if(f>>>0<129){tc(b+96|0,b+224|0,f|0)|0;g=b+72|0;h=c[b+352>>2]|0;break}else fa(32331,32363,343,32407)}else{g=b+72|0;h=f}while(0);j=oe(c[b+64>>2]|0,c[b+64+4>>2]|0,h|0,0)|0;f=D;c[b+64>>2]=j;c[b+64+4>>2]=f;i=g;i=oe((f>>>0<0|(f|0)==0&j>>>0<h>>>0)&1|0,0,c[i>>2]|0,c[i+4>>2]|0)|0;j=g;c[j>>2]=i;c[j+4>>2]=D;if(a[b+356>>0]|0){c[b+88>>2]=-1;c[b+88+4>>2]=-1}c[b+80>>2]=-1;c[b+80+4>>2]=-1;Hc(b+96+h|0,0,256-h|0)|0;ia(b,b+96|0);tc(d|0,b|0,e&255|0)|0;f=0}else f=-1;return f|0}ba();return 0}function bb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=c[b+4>>2]|0;k=c[b+8>>2]|0;j=c[b+12>>2]|0;i=c[b+16>>2]|0;h=c[b+20>>2]|0;g=c[b+24>>2]|0;f=c[b+28>>2]|0;e=c[b+32>>2]|0;d=c[b+36>>2]|0;c[a>>2]=c[b>>2];c[a+4>>2]=l;c[a+8>>2]=k;c[a+12>>2]=j;c[a+16>>2]=i;c[a+20>>2]=h;c[a+24>>2]=g;c[a+28>>2]=f;c[a+32>>2]=e;c[a+36>>2]=d;d=c[b+44>>2]|0;e=c[b+48>>2]|0;f=c[b+52>>2]|0;g=c[b+56>>2]|0;h=c[b+60>>2]|0;i=c[b+64>>2]|0;j=c[b+68>>2]|0;k=c[b+72>>2]|0;l=c[b+76>>2]|0;c[a+40>>2]=c[b+40>>2];c[a+44>>2]=d;c[a+48>>2]=e;c[a+52>>2]=f;c[a+56>>2]=g;c[a+60>>2]=h;c[a+64>>2]=i;c[a+68>>2]=j;c[a+72>>2]=k;c[a+76>>2]=l;l=c[b+84>>2]|0;k=c[b+88>>2]|0;j=c[b+92>>2]|0;i=c[b+96>>2]|0;h=c[b+100>>2]|0;g=c[b+104>>2]|0;f=c[b+108>>2]|0;e=c[b+112>>2]|0;d=c[b+116>>2]|0;c[a+80>>2]=c[b+80>>2];c[a+84>>2]=l;c[a+88>>2]=k;c[a+92>>2]=j;c[a+96>>2]=i;c[a+100>>2]=h;c[a+104>>2]=g;c[a+108>>2]=f;c[a+112>>2]=e;c[a+116>>2]=d;return}function cb(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;j=i;k=i=i+63&-64;i=i+96|0;c[k>>2]=(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)&67108863;c[k+4>>2]=(d[h+3>>0]|d[h+3+1>>0]<<8|d[h+3+2>>0]<<16|d[h+3+3>>0]<<24)>>>2&67108611;c[k+8>>2]=(d[h+6>>0]|d[h+6+1>>0]<<8|d[h+6+2>>0]<<16|d[h+6+3>>0]<<24)>>>4&67092735;c[k+12>>2]=(d[h+9>>0]|d[h+9+1>>0]<<8|d[h+9+2>>0]<<16|d[h+9+3>>0]<<24)>>>6&66076671;c[k+16>>2]=(d[h+12>>0]|d[h+12+1>>0]<<8|d[h+12+2>>0]<<16|d[h+12+3>>0]<<24)>>>8&1048575;c[k+20>>2]=0;c[k+20+4>>2]=0;c[k+20+8>>2]=0;c[k+20+12>>2]=0;c[k+20+16>>2]=0;c[k+40>>2]=d[h+16>>0]|d[h+16+1>>0]<<8|d[h+16+2>>0]<<16|d[h+16+3>>0]<<24;c[k+44>>2]=d[h+20>>0]|d[h+20+1>>0]<<8|d[h+20+2>>0]<<16|d[h+20+3>>0]<<24;c[k+48>>2]=d[h+24>>0]|d[h+24+1>>0]<<8|d[h+24+2>>0]<<16|d[h+24+3>>0]<<24;c[k+52>>2]=d[h+28>>0]|d[h+28+1>>0]<<8|d[h+28+2>>0]<<16|d[h+28+3>>0]<<24;c[k+56>>2]=0;c[k+56+4>>2]=0;a[k+80>>0]=0;Ra(k,e,f,g);Oa(k,b);i=j;return 0}function db(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;x=c[a>>2]|0;v=c[a+4>>2]|0;t=c[a+8>>2]|0;r=c[a+12>>2]|0;p=c[a+16>>2]|0;n=c[a+20>>2]|0;l=c[a+24>>2]|0;j=c[a+28>>2]|0;h=c[a+32>>2]|0;f=c[a+36>>2]|0;w=c[b>>2]|0;u=c[b+4>>2]|0;s=c[b+8>>2]|0;q=c[b+12>>2]|0;o=c[b+16>>2]|0;m=c[b+20>>2]|0;k=c[b+24>>2]|0;i=c[b+28>>2]|0;g=c[b+32>>2]|0;e=c[b+36>>2]|0;c[a>>2]=(w^x)&0-d^x;c[a+4>>2]=(u^v)&0-d^v;c[a+8>>2]=(s^t)&0-d^t;c[a+12>>2]=(q^r)&0-d^r;c[a+16>>2]=(o^p)&0-d^p;c[a+20>>2]=(m^n)&0-d^n;c[a+24>>2]=(k^l)&0-d^l;c[a+28>>2]=(i^j)&0-d^j;c[a+32>>2]=(g^h)&0-d^h;c[a+36>>2]=(e^f)&0-d^f;c[b>>2]=(w^x)&0-d^w;c[b+4>>2]=(u^v)&0-d^u;c[b+8>>2]=(s^t)&0-d^s;c[b+12>>2]=(q^r)&0-d^q;c[b+16>>2]=(o^p)&0-d^o;c[b+20>>2]=(m^n)&0-d^m;c[b+24>>2]=(k^l)&0-d^k;c[b+28>>2]=(i^j)&0-d^i;c[b+32>>2]=(g^h)&0-d^g;c[b+36>>2]=(e^f)&0-d^e;return}function eb(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;k=i;j=i=i+63&-64;i=i+96|0;Aa(j,f,g,0)|0;fb(j+32|0,32,0,f+16|0,j)|0;if(!($d(c,b,d,e,j+32|0)|0))if(!a)c=0;else{if(b>>>0>=a>>>0?0<e>>>0|0==(e|0)&(b-a|0)>>>0<d>>>0:0)h=8;else if(a>>>0>=b>>>0?0<e>>>0|0==(e|0)&(a-b|0)>>>0<d>>>0:0)h=8;if((h|0)==8){Xc(a|0,b|0,d|0)|0;b=a}c=e>>>0>0|(e|0)==0&d>>>0>32?32:d;g=e>>>0>0|(e|0)==0&d>>>0>32?0:e;if((c|0)==0&(g|0)==0)Wd(j+32|0,j+32|0,32,0,f+16|0,j)|0;else{h=oe((e>>>0<0|(e|0)==0&d>>>0<32?d:32)|0,(e>>>0<0|(e|0)==0&d>>>0<32?e:0)|0,-1,0)|0;tc(j+32+32|0,b|0,h+1|0)|0;l=oe(c|0,g|0,32,0)|0;Wd(j+32|0,j+32|0,l,D,f+16|0,j)|0;tc(a|0,j+32+32|0,h+1|0)|0}if(e>>>0>0|(e|0)==0&d>>>0>32){l=le(d|0,e|0,c|0,g|0)|0;Ma(a+c|0,b+c|0,l,D,f+16|0,1,0,j)|0}fd(j,32);c=0}else{fd(j,32);c=-1}i=k;return c|0}function fb(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=i;p=i=i+63&-64;i=i+112|0;if(!((e|0)==0&(f|0)==0)){k=p+16|0;j=k+32|0;do{a[k>>0]=a[h>>0]|0;k=k+1|0;h=h+1|0}while((k|0)<(j|0));k=d[g+4>>0]|d[g+4+1>>0]<<8|d[g+4+2>>0]<<16|d[g+4+3>>0]<<24;c[p>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;c[p+4>>2]=k;c[p+8>>2]=0;c[p+8+4>>2]=0;if(f>>>0>0|(f|0)==0&e>>>0>63){do{xa(b,p,p+16|0,0)|0;h=1;j=8;while(1){k=p+j|0;h=(d[k>>0]|0)+h|0;a[k>>0]=h;j=j+1|0;if((j|0)==16)break;else h=h>>>8}e=oe(e|0,f|0,-64,-1)|0;f=D;b=b+64|0}while(f>>>0>0|(f|0)==0&e>>>0>63);if(!((e|0)==0&(f|0)==0)){m=b;n=e;l=7}}else{m=b;n=e;l=7}if((l|0)==7?(xa(p+48|0,p,p+16|0,0)|0,n|0):0){h=0;do{a[m+h>>0]=a[p+48+h>>0]|0;h=h+1|0}while((h|0)!=(n|0))}fd(p+48|0,64);fd(p+16|0,32)}i=o;return 0}function gb(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;k=i;l=i=i+63&-64;i=i+64|0;if((e+-1&255)>63)ba();a[l>>0]=e;a[l+1>>0]=0;a[l+2>>0]=1;a[l+3>>0]=1;h=l+4|0;j=h+28|0;do{a[h>>0]=0;h=h+1|0}while((h|0)<(j|0));if(!f){h=l+32|0;j=h+16|0;do{a[h>>0]=0;h=h+1|0}while((h|0)<(j|0))}else{h=l+32|0;e=f;j=h+16|0;do{a[h>>0]=a[e>>0]|0;h=h+1|0;e=e+1|0}while((h|0)<(j|0))}if(!g){h=l+48|0;j=h+16|0;do{a[h>>0]=0;h=h+1|0}while((h|0)<(j|0))}else{h=l+48|0;e=g;j=h+16|0;do{a[h>>0]=a[e>>0]|0;h=h+1|0;e=e+1|0}while((h|0)<(j|0))}Hc(b+64|0,0,293)|0;h=b;e=400;j=h+64|0;do{c[h>>2]=c[e>>2];h=h+4|0;e=e+4|0}while((h|0)<(j|0));e=0;do{h=l+(e<<3)|0;g=b+(e<<3)|0;j=c[g+4>>2]^(d[h+4>>0]|d[h+4+1>>0]<<8|d[h+4+2>>0]<<16|d[h+4+3>>0]<<24);c[g>>2]=c[g>>2]^(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24);c[g+4>>2]=j;e=e+1|0}while((e|0)!=8);i=k;return}function hb(b,e){b=b|0;e=e|0;c[b>>2]=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)&67108863;c[b+4>>2]=(d[e+3>>0]|d[e+3+1>>0]<<8|d[e+3+2>>0]<<16|d[e+3+3>>0]<<24)>>>2&67108611;c[b+8>>2]=(d[e+6>>0]|d[e+6+1>>0]<<8|d[e+6+2>>0]<<16|d[e+6+3>>0]<<24)>>>4&67092735;c[b+12>>2]=(d[e+9>>0]|d[e+9+1>>0]<<8|d[e+9+2>>0]<<16|d[e+9+3>>0]<<24)>>>6&66076671;c[b+16>>2]=(d[e+12>>0]|d[e+12+1>>0]<<8|d[e+12+2>>0]<<16|d[e+12+3>>0]<<24)>>>8&1048575;c[b+20>>2]=0;c[b+20+4>>2]=0;c[b+20+8>>2]=0;c[b+20+12>>2]=0;c[b+20+16>>2]=0;c[b+40>>2]=d[e+16>>0]|d[e+16+1>>0]<<8|d[e+16+2>>0]<<16|d[e+16+3>>0]<<24;c[b+44>>2]=d[e+20>>0]|d[e+20+1>>0]<<8|d[e+20+2>>0]<<16|d[e+20+3>>0]<<24;c[b+48>>2]=d[e+24>>0]|d[e+24+1>>0]<<8|d[e+24+2>>0]<<16|d[e+24+3>>0]<<24;c[b+52>>2]=d[e+28>>0]|d[e+28+1>>0]<<8|d[e+28+2>>0]<<16|d[e+28+3>>0]<<24;c[b+56>>2]=0;c[b+56+4>>2]=0;a[b+80>>0]=0;return 0}function ib(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;a:do if(!((e|0)==0&(f|0)==0)){g=c[b+352>>2]|0;j=f;while(1){i=256-g|0;f=b+96+g|0;if(!(j>>>0>0|(j|0)==0&e>>>0>i>>>0))break;tc(f|0,d|0,i|0)|0;c[b+352>>2]=(c[b+352>>2]|0)+i;f=c[b+64>>2]|0;g=c[b+64+4>>2]|0;h=oe(f|0,g|0,128,0)|0;c[b+64>>2]=h;c[b+64+4>>2]=D;f=oe((g>>>0>4294967295|(g|0)==-1&f>>>0>4294967167)&1|0,0,c[b+72>>2]|0,c[b+72+4>>2]|0)|0;c[b+72>>2]=f;c[b+72+4>>2]=D;ia(b,b+96|0);f=b+96|0;g=b+224|0;h=f+128|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));g=(c[b+352>>2]|0)+-128|0;c[b+352>>2]=g;e=le(e|0,j|0,i|0,0)|0;f=D;if((e|0)==0&(f|0)==0)break a;else{d=d+i|0;j=f}}tc(f|0,d|0,e|0)|0;j=oe(c[b+352>>2]|0,0,e|0,j|0)|0;c[b+352>>2]=j}while(0);return}function jb(a){a=a|0;var b=0,d=0;do if(a)if(c[a>>2]|0)if((c[a+4>>2]|0)>>>0>=16){if((c[a+8>>2]|0)==0?c[a+12>>2]|0:0){b=-18;break}b=c[a+20>>2]|0;if(!(c[a+16>>2]|0)){if(b|0){b=-19;break}}else if(b>>>0<8){b=-6;break}if((c[a+24>>2]|0)==0?c[a+28>>2]|0:0){b=-20;break}if((c[a+32>>2]|0)==0?c[a+36>>2]|0:0){b=-21;break}b=c[a+44>>2]|0;if(b>>>0>=8)if(b>>>0<=2097152){d=c[a+48>>2]|0;if(b>>>0>=d<<3>>>0)if((c[a+40>>2]|0)>>>0>=3)if(d)if(d>>>0<=16777215){b=c[a+52>>2]|0;if(!b)b=-28;else b=b>>>0>16777215?-29:0}else b=-17;else b=-16;else b=-12;else b=-14}else b=-15;else b=-14}else b=-2;else b=-1;else b=-25;while(0);return b|0}function kb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;l=i;k=i=i+63&-64;i=i+64|0;e=k+4+4|0;f=e+52|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));e=kc(a)|0;c[k+36>>2]=e;c[k+20>>2]=e;c[k+4>>2]=e;h=na(e)|0;c[k+32>>2]=h;f=na(e)|0;c[k+16>>2]=f;g=na(e)|0;c[k>>2]=g;do if((f|0)==0|(g|0)==0|(h|0)==0){ta(h);ta(f);ta(g);e=-22}else{j=na(e)|0;if(!j){ta(h);ta(f);ta(g);e=-22;break}e=Ja(k,a)|0;if(e|0){ta(c[k+32>>2]|0);ta(c[k+16>>2]|0);ta(c[k>>2]|0);ta(j);break}d=xb(c[k+40>>2]|0,c[k+44>>2]|0,c[k+52>>2]|0,b,d,c[k+16>>2]|0,c[k+20>>2]|0,j,c[k+4>>2]|0,0,0)|0;ta(c[k+32>>2]|0);ta(c[k+16>>2]|0);if((d|0)==0?(Dc(j,c[k>>2]|0,c[k+4>>2]|0)|0)==0:0)e=0;else e=-35;ta(j);ta(c[k>>2]|0)}while(0);i=l;return e|0}function lb(a,b,d,e,f,g,h,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0;n=i;i=i+352|0;we(n+280|0,64,0,l,m)|0;Se(n,n+280|0)|0;fd(n+280|0,64);ne(n,h,j,k)|0;b=le(0,0,j|0,k|0)|0;ne(n,34460,b&15,0)|0;ne(n,d,e,f)|0;b=le(0,0,e|0,f|0)|0;ne(n,34460,b&15,0)|0;c[n+256>>2]=j;c[n+256+4>>2]=k;ne(n,n+256|0,8,0)|0;c[n+256>>2]=e;c[n+256+4>>2]=f;ne(n,n+256|0,8,0)|0;Re(n,n+264|0)|0;fd(n,256);b=Ad(n+264|0,g)|0;fd(n+264|0,16);do if(a)if(!b){Ld(a,d,e,f,l,1,m)|0;b=0;break}else{Hc(a|0,0,e|0)|0;b=-1;break}while(0);i=n;return b|0}function mb(b,e,f,g,h,i,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;a:do if(!g){n=0;m=0;k=0;l=0}else{n=0;m=0;k=0;q=0;while(1){p=n<<24>>24==0;while(1){l=d[f+k>>0]|0;o=(((l&223)+201&255)+65526^((l&223)+201&255)+65520)>>>8;if((o|((l^48)+65526|0)>>>8)&255|0)break;if(!((h|0)!=0&p)){l=0;break a}if(!(Ke(h,l)|0)){n=0;l=0;break a}k=k+1|0;if(k>>>0>=g>>>0){n=0;l=0;break a}}l=o&(l&223)+201|((l^48)+65526|0)>>>8&(l^48);if(m>>>0>=e>>>0)break;if(p)l=l<<4&255;else{a[b+m>>0]=l|q&255;m=m+1|0;l=q}n=(n&255^255)&255;k=k+1|0;if(k>>>0<g>>>0)q=l;else{l=0;break a}}c[(Zf()|0)>>2]=34;l=-1}while(0);if(j|0)c[j>>2]=f+(((n<<24>>24!=0)<<31>>31)+k);if(i|0)c[i>>2]=m;return l|0}function nb(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;k=i;l=i=i+63&-64;i=i+192|0;if((e+-1&255)>63)ba();if((f|0)!=0&g<<24>>24!=0?(g&255)<=64:0){a[l+128>>0]=e;a[l+128+1>>0]=g;a[l+128+2>>0]=1;a[l+128+3>>0]=1;e=l+128+4|0;j=e+60|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(j|0));Hc(b+64|0,0,293)|0;e=b;h=400;j=e+64|0;do{c[e>>2]=c[h>>2];e=e+4|0;h=h+4|0}while((e|0)<(j|0));e=0;do{m=l+128+(e<<3)|0;j=b+(e<<3)|0;h=c[j+4>>2]^(d[m+4>>0]|d[m+4+1>>0]<<8|d[m+4+2>>0]<<16|d[m+4+3>>0]<<24);c[j>>2]=c[j>>2]^(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24);c[j+4>>2]=h;e=e+1|0}while((e|0)!=8);Hc(l+(g&255)|0,0,(g<<24>>24<0?0:128-(g&255)|0)|0)|0;tc(l|0,f|0,g&255|0)|0;ib(b,l,128,0);fd(l,128);i=k;return}ba()}function ob(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;i=b>>>0<0|(b|0)==0&a>>>0<32768?32768:a;h=b>>>0<0|(b|0)==0&a>>>0<32768?0:b;c[g>>2]=8;a:do if(h>>>0<0|(h|0)==0&i>>>0<d>>>5>>>0){c[f>>2]=1;a=Te(i|0,h|0,c[g>>2]<<2|0,0)|0;c[e>>2]=1;a=Rd(a|0,D|0,1)|0;b=D;h=1;do{g=Pd(1,0,h|0)|0;f=D;h=h+1|0;if(f>>>0>b>>>0|(f|0)==(b|0)&g>>>0>a>>>0)break a;c[e>>2]=h}while(h>>>0<63)}else{c[e>>2]=1;b=1;while(1){j=Pd(1,0,b|0)|0;k=D;a=b+1|0;if(k>>>0>0|(k|0)==0&j>>>0>d>>>11>>>0){a=b;break}c[e>>2]=a;if(a>>>0<63)b=a;else break}e=Rd(i|0,h|0,2)|0;e=Rd(e|0,D|0,a|0)|0;j=D;k=j>>>0>0|(j|0)==0&e>>>0>1073741823?1073741823:e;c[f>>2]=(k>>>0)/((c[g>>2]|0)>>>0)|0}while(0);return}function pb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;m=i;l=i=i+63&-64;i=i+2048|0;if((a|0)!=0&(b|0)!=0){k=(c[b>>2]|0)+4|0;f=c[b+16>>2]|0;tc(l|0,(c[k>>2]|0)+(f<<10)+-1024|0,1024)|0;g=c[b+20>>2]|0;if(g>>>0>1){d=1;do{h=f+-1+(S(f,d)|0)|0;j=c[k>>2]|0;e=0;do{p=j+(h<<10)+(e<<3)|0;n=l+(e<<3)|0;o=c[n+4>>2]^c[p+4>>2];c[n>>2]=c[n>>2]^c[p>>2];c[n+4>>2]=o;e=e+1|0}while((e|0)!=128);d=d+1|0}while((d|0)!=(g|0))}tc(l+1024|0,l|0,1024)|0;Ta(c[a>>2]|0,c[a+4>>2]|0,l+1024|0,1024);fd(l,1024);fd(l+1024|0,1024);e=c[b>>2]|0;if(e|0?(c[a+56>>2]&1|0)!=0:0){fd(c[e+4>>2]|0,c[b+8>>2]<<10);e=c[b>>2]|0}d=c[e>>2]|0;if(d|0)ta(d);ta(e)}i=m;return}function qb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;a:do if((e|0)!=0&(b&3|0)!=0){f=e;while(1){if((a[b>>0]|0)==(d&255)<<24>>24)break a;b=b+1|0;e=f+-1|0;if((e|0)!=0&(b&3|0)!=0)f=e;else{f=e;e=(e|0)!=0;g=5;break}}}else{f=e;e=(e|0)!=0;g=5}while(0);b:do if((g|0)==5)if(e){if((a[b>>0]|0)!=(d&255)<<24>>24){e=S(d&255,16843009)|0;c:do if(f>>>0>3)while(1){h=c[b>>2]^e;if((h&-2139062144^-2139062144)&h+-16843009|0)break;b=b+4|0;f=f+-4|0;if(f>>>0<=3){g=11;break c}}else g=11;while(0);if((g|0)==11)if(!f){f=0;break}while(1){if((a[b>>0]|0)==(d&255)<<24>>24)break b;b=b+1|0;f=f+-1|0;if(!f){f=0;break}}}}else f=0;while(0);return (f|0?b:0)|0}function rb(a){a=a|0;var b=0,d=0,e=0,f=0;if(a>>>0>=4294967168){c[(Zf()|0)>>2]=12;f=0;return f|0}f=a>>>0<11?16:a+11&-8;e=na(f+76|0)|0;if(!e){f=0;return f|0}do if(e&63){a=((e+63&-64)+-8-(e+-8)|0)>>>0>15?(e+63&-64)+-8|0:(e+63&-64)+56|0;b=a-(e+-8)|0;d=c[e+-4>>2]|0;if(!(d&3)){c[a>>2]=(c[e+-8>>2]|0)+b;c[a+4>>2]=(d&-8)-b;break}else{c[a+4>>2]=(d&-8)-b|c[a+4>>2]&1|2;c[a+((d&-8)-b)+4>>2]=c[a+((d&-8)-b)+4>>2]|1;c[e+-4>>2]=b|c[e+-4>>2]&1|2;c[a+4>>2]=c[a+4>>2]|1;ua(e+-8|0,b);break}}else a=e+-8|0;while(0);b=a+4|0;d=c[b>>2]|0;if(d&3|0?(d&-8)>>>0>(f+16|0)>>>0:0){e=a+f|0;c[b>>2]=f|d&1|2;c[e+4>>2]=(d&-8)-f|3;c[e+((d&-8)-f)+4>>2]=c[e+((d&-8)-f)+4>>2]|1;ua(e,(d&-8)-f|0)}f=a+8|0;return f|0}function sb(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;h=i;i=i+192|0;if(d>>>0>128){nd(b)|0;Na(b,c,d,0)|0;rc(b,h)|0;d=64;c=h}nd(b)|0;e=h+64|0;f=e+128|0;do{a[e>>0]=54;e=e+1|0}while((e|0)<(f|0));g=(d|0)==0;if(!g?(a[h+64>>0]=a[c>>0]^54,(d|0)!=1):0){e=1;do{f=h+64+e|0;a[f>>0]=a[f>>0]^a[c+e>>0];e=e+1|0}while((e|0)!=(d|0))}Na(b,h+64|0,128,0)|0;nd(b+208|0)|0;e=h+64|0;f=e+128|0;do{a[e>>0]=92;e=e+1|0}while((e|0)<(f|0));if(!g?(a[h+64>>0]=a[c>>0]^92,(d|0)!=1):0){e=1;do{g=h+64+e|0;a[g>>0]=a[g>>0]^a[c+e>>0];e=e+1|0}while((e|0)!=(d|0))}Na(b+208|0,h+64|0,128,0)|0;fd(h+64|0,128);fd(h,64);i=h;return 0}function tb(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;h=i;i=i+96|0;if(d>>>0>64){Sc(b)|0;Ua(b,c,d,0)|0;Fb(b,h)|0;d=32;c=h}Sc(b)|0;e=h+32|0;f=e+64|0;do{a[e>>0]=54;e=e+1|0}while((e|0)<(f|0));g=(d|0)==0;if(!g?(a[h+32>>0]=a[c>>0]^54,(d|0)!=1):0){e=1;do{f=h+32+e|0;a[f>>0]=a[f>>0]^a[c+e>>0];e=e+1|0}while((e|0)!=(d|0))}Ua(b,h+32|0,64,0)|0;Sc(b+104|0)|0;e=h+32|0;f=e+64|0;do{a[e>>0]=92;e=e+1|0}while((e|0)<(f|0));if(!g?(a[h+32>>0]=a[c>>0]^92,(d|0)!=1):0){e=1;do{g=h+32+e|0;a[g>>0]=a[g>>0]^a[c+e>>0];e=e+1|0}while((e|0)!=(d|0))}Ua(b+104|0,h+32|0,64,0)|0;fd(h+32|0,64);fd(h,32);i=h;return 0}function ub(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=0;h=0;i=0;a:while(1){while(1){g=a[e>>0]|0;g=((0-((0-(g^47)|0)>>>8&63^63|(0-(g^43)|0)>>>8&62^62|((g+65439|0)>>>8^255)&g+185&((122-g|0)>>>8&255^255)|((g+-65|0)>>>8^255)&g+-65&((90-g|0)>>>8&255^255)|((g+65488|0)>>>8^255)&g+4&((57-g|0)>>>8&255^255))|0)>>>8&255^255)&(0-(g^65)|0)>>>8|((0-(g^47)|0)>>>8&63^63|(0-(g^43)|0)>>>8&62^62|((g+65439|0)>>>8^255)&g+185&((122-g|0)>>>8&255^255)|((g+-65|0)>>>8^255)&g+-65&((90-g|0)>>>8&255^255)|((g+65488|0)>>>8^255)&g+4&((57-g|0)>>>8&255^255));if((g|0)==255){j=7;break a}e=e+1|0;h=g+(h<<6)|0;g=f+6|0;if(g>>>0>7)break;else f=g}f=f+-2|0;if(i>>>0>=(c[d>>2]|0)>>>0){e=0;break}a[b>>0]=h>>>f;b=b+1|0;i=i+1|0}if((j|0)==7)if(f>>>0<=4?((1<<f)+-1&h|0)==0:0)c[d>>2]=i;else e=0;return e|0}function vb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=c[a>>2]|0;u=c[a+4>>2]|0;s=c[a+8>>2]|0;q=c[a+12>>2]|0;o=c[a+16>>2]|0;m=c[a+20>>2]|0;k=c[a+24>>2]|0;i=c[a+28>>2]|0;g=c[a+32>>2]|0;e=c[a+36>>2]|0;v=(c[b+4>>2]^u)&0-d;t=(c[b+8>>2]^s)&0-d;r=(c[b+12>>2]^q)&0-d;p=(c[b+16>>2]^o)&0-d;n=(c[b+20>>2]^m)&0-d;l=(c[b+24>>2]^k)&0-d;j=(c[b+28>>2]^i)&0-d;h=(c[b+32>>2]^g)&0-d;f=(c[b+36>>2]^e)&0-d;c[a>>2]=(c[b>>2]^w)&0-d^w;c[a+4>>2]=v^u;c[a+8>>2]=t^s;c[a+12>>2]=r^q;c[a+16>>2]=p^o;c[a+20>>2]=n^m;c[a+24>>2]=l^k;c[a+28>>2]=j^i;c[a+32>>2]=h^g;c[a+36>>2]=f^e;return}function wb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=0;do{c[d+(f<<2)>>2]=c[a+((e<<5)+-16<<2)+(f<<2)>>2];f=f+1|0}while((f|0)!=16);if(e<<1|0){i=0;j=0;while(1){g=i<<4;f=0;do{h=d+(f<<2)|0;c[h>>2]=c[h>>2]^c[a+(g<<2)+(f<<2)>>2];f=f+1|0}while((f|0)!=16);Ga(d);h=i<<3;f=0;do{c[b+(h<<2)+(f<<2)>>2]=c[d+(f<<2)>>2];f=f+1|0}while((f|0)!=16);f=0;do{k=d+(f<<2)|0;c[k>>2]=c[k>>2]^c[a+((g|16)<<2)+(f<<2)>>2];f=f+1|0}while((f|0)!=16);Ga(d);f=0;do{c[b+(h+(e<<4)<<2)+(f<<2)>>2]=c[d+(f<<2)>>2];f=f+1|0}while((f|0)!=16);if((j|0)==(((e<<1)+-1|0)>>>1|0))break;else{i=i+2|0;j=j+1|0}}}return}function xb(a,b,d,e,f,g,h,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0;p=i;o=i=i+63&-64;i=i+64|0;n=na(k)|0;do if(!n)a=-22;else{c[o>>2]=n;c[o+4>>2]=k;c[o+8>>2]=e;c[o+12>>2]=f;c[o+16>>2]=g;c[o+20>>2]=h;c[o+24>>2]=0;c[o+24+4>>2]=0;c[o+24+8>>2]=0;c[o+24+12>>2]=0;c[o+40>>2]=a;c[o+44>>2]=b;c[o+48>>2]=d;c[o+52>>2]=d;c[o+56>>2]=4;a=_b(o)|0;if(a|0){fd(n,k);ta(n);break}if(j|0)tc(j|0,n|0,k|0)|0;if((l|0)!=0&(m|0)!=0?Da(l,m,o)|0:0){fd(n,k);fd(l,m);ta(n);a=-31;break}fd(n,k);ta(n);a=0}while(0);i=p;return a|0}function yb(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=i;p=i=i+63&-64;i=i+48|0;if((((((a[g>>0]|0)==36?(a[g+1>>0]|0)==55:0)?(a[g+2>>0]|0)==36:0)?(k=qb(32982,d[g+3>>0]|0,65)|0,(k|0)!=0):0)?(l=Pd(1,0,k-32982|0)|0,m=D,j=cd(p+4|0,g+4|0)|0,(j|0)!=0):0)?(n=cd(p,j)|0,(n|0)!=0):0){j=gf(n)|0;if(!j)j=kc(n)|0;else j=j-n|0;k=j+(n-g)|0;if((!((k+45|0)>>>0>102|(k+45|0)>>>0<j>>>0)?(Ca(b,e,f,n,j,l,m,c[p+4>>2]|0,c[p>>2]|0,p+8|0,32)|0)==0:0)?(tc(h|0,g|0,k|0)|0,a[h+k>>0]=36,o=Yb(h+k+1|0,h+102-(h+k+1)|0,p+8|0)|0,fd(p+8|0,32),(o|0)!=0&o>>>0<(h+102|0)>>>0):0)a[o>>0]=0;else h=0}else h=0;i=q;return h|0}function zb(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;k=i;l=i=i+63&-64;i=i+560|0;xc(l+496|0,j,32,0)|0;a[l+496>>0]=(d[l+496>>0]|0)&248;a[l+496+31>>0]=(d[l+496+31>>0]|0)&63|64;nd(l)|0;Na(l,l+496+32|0,32,0)|0;Na(l,f,g,h)|0;rc(l,l+432|0)|0;Xc(b+32|0,j+32|0,32)|0;oa(l+432|0);Pa(l+208|0,l+432|0);vc(b,l+208|0);nd(l)|0;Na(l,b,64,0)|0;Na(l,f,g,h)|0;rc(l,l+368|0)|0;oa(l+368|0);ja(b+32|0,l+368|0,l+496|0,l+432|0);fd(l+496|0,64);if(e|0){c[e>>2]=64;c[e+4>>2]=0}i=k;return 0}function Ab(a,b,d,e,f,g,h,j,k,l,m,n){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;l=i;i=i+336|0;we(l+264|0,64,0,m,n)|0;Se(l,l+264|0)|0;fd(l+264|0,64);ne(l,h,j,k)|0;h=le(0,0,j|0,k|0)|0;ne(l,34460,h&15,0)|0;Ld(a,e,f,g,m,1,n)|0;ne(l,a,f,g)|0;h=le(0,0,f|0,g|0)|0;ne(l,34460,h&15,0)|0;c[l+256>>2]=j;c[l+256+4>>2]=k;ne(l,l+256|0,8,0)|0;c[l+256>>2]=f;c[l+256+4>>2]=g;ne(l,l+256|0,8,0)|0;Re(l,b)|0;fd(l,256);if(d|0){c[d>>2]=16;c[d+4>>2]=0}i=l;return 0}function Bb(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;a:do if(b>>>0<=63?(g=Ed(d|0,0,c|0,0)|0,i=D,!(i>>>0>0|(i|0)==0&g>>>0>1073741823)):0){a[f>>0]=36;a[f+1>>0]=55;a[f+2>>0]=36;a[f+3>>0]=a[32982+b>>0]|0;b=f+4|0;g=0;while(1){i=b;b=b+1|0;a[i>>0]=a[32982+(c&63)>>0]|0;g=g+6|0;if(g>>>0>=30)break;else c=c>>>6}if(b){g=d;d=f+58-b|0;c=0;while(1){if(!d){f=0;break a}i=b;b=b+1|0;a[i>>0]=a[32982+(g&63)>>0]|0;c=c+6|0;if(c>>>0>=30)break;else{g=g>>>6;d=d+-1|0}}if((b|0)!=0?(h=Yb(b,f+58-b|0,e)|0,(h|0)!=0&h>>>0<(f+58|0)>>>0):0)a[h>>0]=0;else f=0}else f=0}else f=0;while(0);return f|0}function Cb(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;k=i;j=i=i+63&-64;i=i+32|0;a:do if(((b|0)!=0?(d=c[b+20>>2]|0,(d|0)!=0):0)?(c[b+4>>2]|0)!=0:0){h=0;while(1){g=0;do{if(!d)d=0;else{f=g&255;e=0;do{c[j>>2]=h;c[j+4>>2]=e;a[j+8>>0]=f;c[j+12>>2]=0;c[j+16>>2]=c[j>>2];c[j+16+4>>2]=c[j+4>>2];c[j+16+8>>2]=c[j+8>>2];c[j+16+12>>2]=c[j+12>>2];d=la(b,j+16|0)|0;e=e+1|0;if(d|0)break a;d=c[b+20>>2]|0}while(e>>>0<d>>>0)}g=g+1|0}while(g>>>0<4);h=h+1|0;if(h>>>0>=(c[b+4>>2]|0)>>>0){d=0;break}}}else d=0;while(0);i=k;return d|0}function Db(a,b,d,e,f,g,h,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0;n=i;i=i+352|0;Ge(n+280|0,64,0,l,m)|0;Se(n,n+280|0)|0;fd(n+280|0,64);ne(n,h,j,k)|0;c[n+256>>2]=j;c[n+256+4>>2]=k;ne(n,n+256|0,8,0)|0;ne(n,d,e,f)|0;c[n+256>>2]=e;c[n+256+4>>2]=f;ne(n,n+256|0,8,0)|0;Re(n,n+264|0)|0;fd(n,256);b=Ad(n+264|0,g)|0;fd(n+264|0,16);do if(a)if(!b){Id(a,d,e,f,l,1,0,m)|0;b=0;break}else{Hc(a|0,0,e|0)|0;b=-1;break}while(0);i=n;return b|0}function Eb(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=(c[d>>2]|0)==0;do if(j){g=a[d+8>>0]|0;if(!(g<<24>>24)){g=(c[d+12>>2]|0)+-1|0;break}g=S(c[b+12>>2]|0,g&255)|0;h=c[d+12>>2]|0;if(!f){g=(((h|0)==0)<<31>>31)+g|0;break}else{g=h+-1+g|0;break}}else{g=(c[b+16>>2]|0)-(c[b+12>>2]|0)|0;h=c[d+12>>2]|0;if(!f){g=(((h|0)==0)<<31>>31)+g|0;break}else{g=h+-1+g|0;break}}while(0);Ed(e|0,0,e|0,0)|0;Ed(g|0,0,D|0,0)|0;f=le(g+-1|0,0,D|0,0)|0;e=D;if(!j?(i=a[d+8>>0]|0,i<<24>>24!=3):0){g=S(c[b+12>>2]|0,(i&255)+1|0)|0;h=0}else{g=0;h=0}j=oe(f|0,e|0,g|0,h|0)|0;b=Bd(j|0,D|0,c[b+16>>2]|0,0)|0;return b|0}function Fb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;f=i;e=i=i+63&-64;i=i+16|0;h=c[b+32>>2]|0;g=c[b+32+4>>2]|0;a[e+7>>0]=h;j=Rd(h|0,g|0,8)|0;a[e+6>>0]=j;j=Rd(h|0,g|0,16)|0;a[e+5>>0]=j;j=Rd(h|0,g|0,24)|0;a[e+4>>0]=j;a[e+3>>0]=g;j=Rd(h|0,g|0,40)|0;a[e+2>>0]=j;j=Rd(h|0,g|0,48)|0;a[e+1>>0]=j;j=Rd(h|0,g|0,56)|0;a[e>>0]=j;g=Rd(h|0,g|0,3)|0;Ua(b,32719,((g&63)>>>0<56?56:120)-(g&63)|0,0)|0;Ua(b,e,8,0)|0;e=0;do{j=d+(e<<2)|0;h=c[b+(e<<2)>>2]|0;a[j+3>>0]=h;a[j+2>>0]=h>>>8;a[j+1>>0]=h>>>16;a[j>>0]=h>>>24;e=e+1|0}while((e|0)!=8);fd(b,104);i=f;return 0}function Gb(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0,i=0;e=0;do{a[b+e>>0]=(d[c+(e>>3)>>0]|0)>>>(e&7)&1;e=e+1|0}while((e|0)!=256);h=0;do{i=b+h|0;a:do if(a[i>>0]|0){g=1;do{e=g+h|0;if((e|0)>=256)break a;c=a[b+e>>0]|0;b:do if(c<<24>>24){f=a[i>>0]|0;c=c<<24>>24<<g;if((f+c|0)<16){a[i>>0]=f+c;a[b+e>>0]=0;break}if((f-c|0)<=-16)break a;a[i>>0]=f-c;while(1){c=b+e|0;if(!(a[c>>0]|0))break;a[c>>0]=0;e=e+1|0;if((e|0)>=256)break b}a[c>>0]=1}while(0);g=g+1|0}while((g|0)<7)}while(0);h=h+1|0}while((h|0)!=256);return}function Hb(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0;n=i;l=i=i+63&-64;i=i+128|0;k=b;m=k+102|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(m|0));do if(!(f>>>0>0|(f|0)==0&e>>>0>4294967295)){ob(g,h,j,l+8|0,l+4|0,l);Gd(l+88|0,32);if(!(Bb(c[l+8>>2]|0,c[l>>2]|0,c[l+4>>2]|0,l+88|0,l+24|0)|0)){c[(Zf()|0)>>2]=22;b=-1;break}We(l+12|0);m=(yb(l+12|0,d,e,l+24|0,b)|0)==0;je(l+12|0);if(m){c[(Zf()|0)>>2]=22;b=-1}else b=0}else{c[(Zf()|0)>>2]=27;b=-1}while(0);i=n;return b|0}function Ib(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;h=i;j=i=i+63&-64;i=i+64|0;if((e+-1&255)>63)ba();a[j>>0]=e;a[j+1>>0]=0;a[j+2>>0]=1;a[j+3>>0]=1;e=j+4|0;g=e+60|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(g|0));Hc(b+64|0,0,293)|0;e=b;f=400;g=e+64|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(g|0));e=0;do{k=j+(e<<3)|0;g=b+(e<<3)|0;f=c[g+4>>2]^(d[k+4>>0]|d[k+4+1>>0]<<8|d[k+4+2>>0]<<16|d[k+4+3>>0]<<24);c[g>>2]=c[g>>2]^(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24);c[g+4>>2]=f;e=e+1|0}while((e|0)!=8);i=h;return}function Jb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=(c[b+4>>2]|0)-(c[d+4>>2]|0)|0;l=(c[b+8>>2]|0)-(c[d+8>>2]|0)|0;k=(c[b+12>>2]|0)-(c[d+12>>2]|0)|0;j=(c[b+16>>2]|0)-(c[d+16>>2]|0)|0;i=(c[b+20>>2]|0)-(c[d+20>>2]|0)|0;h=(c[b+24>>2]|0)-(c[d+24>>2]|0)|0;g=(c[b+28>>2]|0)-(c[d+28>>2]|0)|0;f=(c[b+32>>2]|0)-(c[d+32>>2]|0)|0;e=(c[b+36>>2]|0)-(c[d+36>>2]|0)|0;c[a>>2]=(c[b>>2]|0)-(c[d>>2]|0);c[a+4>>2]=m;c[a+8>>2]=l;c[a+12>>2]=k;c[a+16>>2]=j;c[a+20>>2]=i;c[a+24>>2]=h;c[a+28>>2]=g;c[a+32>>2]=f;c[a+36>>2]=e;return}function Kb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=(c[d+4>>2]|0)+(c[b+4>>2]|0)|0;l=(c[d+8>>2]|0)+(c[b+8>>2]|0)|0;k=(c[d+12>>2]|0)+(c[b+12>>2]|0)|0;j=(c[d+16>>2]|0)+(c[b+16>>2]|0)|0;i=(c[d+20>>2]|0)+(c[b+20>>2]|0)|0;h=(c[d+24>>2]|0)+(c[b+24>>2]|0)|0;g=(c[d+28>>2]|0)+(c[b+28>>2]|0)|0;f=(c[d+32>>2]|0)+(c[b+32>>2]|0)|0;e=(c[d+36>>2]|0)+(c[b+36>>2]|0)|0;c[a>>2]=(c[d>>2]|0)+(c[b>>2]|0);c[a+4>>2]=m;c[a+8>>2]=l;c[a+12>>2]=k;c[a+16>>2]=j;c[a+20>>2]=i;c[a+24>>2]=h;c[a+28>>2]=g;c[a+32>>2]=f;c[a+36>>2]=e;return}function Lb(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0;switch(((f>>>0)%3|0)&3){case 2:{g=((f>>>0)/3|0)<<2|1;h=3;break}case 1:{g=((f>>>0)/3|0)<<2;h=3;break}default:g=((f>>>0)/3|0)<<2}if((h|0)==3)g=g+2|0;if(g>>>0<c>>>0){if(f){i=0;c=0;do{f=f+-1|0;h=e;e=e+1|0;i=d[h>>0]|0|i<<8;c=c+8|0;if(c>>>0>5)while(1){c=c+-6|0;h=b+1|0;a[b>>0]=td(i>>>c&63)|0;if(c>>>0>5)b=h;else{b=h;break}}}while((f|0)!=0);if(c){a[b>>0]=td(i<<6-c&63)|0;b=b+1|0}}a[b>>0]=0}else g=-1;return g|0}function Mb(b,d){b=b|0;d=d|0;var e=0,f=0;a:do if(!(d&255))b=b+(kc(b)|0)|0;else{if(b&3)do{f=a[b>>0]|0;if(f<<24>>24==0?1:f<<24>>24==(d&255)<<24>>24)break a;b=b+1|0}while((b&3|0)!=0);f=S(d&255,16843009)|0;e=c[b>>2]|0;b:do if(!((e&-2139062144^-2139062144)&e+-16843009))do{e=e^f;if((e&-2139062144^-2139062144)&e+-16843009|0)break b;b=b+4|0;e=c[b>>2]|0}while(!((e&-2139062144^-2139062144)&e+-16843009|0));while(0);while(1){f=a[b>>0]|0;if(f<<24>>24==0?1:f<<24>>24==(d&255)<<24>>24)break;else b=b+1|0}}while(0);return b|0}function Nb(a,b,d,e,f,g,h,j,k,l,m,n){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;l=i;i=i+336|0;Ge(l+264|0,64,0,m,n)|0;Se(l,l+264|0)|0;fd(l+264|0,64);ne(l,h,j,k)|0;c[l+256>>2]=j;c[l+256+4>>2]=k;ne(l,l+256|0,8,0)|0;Id(a,e,f,g,m,1,0,n)|0;ne(l,a,f,g)|0;c[l+256>>2]=f;c[l+256+4>>2]=g;ne(l,l+256|0,8,0)|0;Re(l,b)|0;fd(l,256);if(d|0){c[d>>2]=16;c[d+4>>2]=0}i=l;return 0}function Ob(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;g=i;f=i=i+63&-64;i=i+80|0;a:do if((a|0)==0|(b|0)==0)d=-25;else{e=c[a+8>>2]|0;do if((e|0?((e<<10>>>0)/(e>>>0)|0|0)==1024:0)?(d=na(12)|0,c[a>>2]=d,d|0):0){d=Od(f,e<<10)|0;c[(Zf()|0)>>2]=d;if(d|0){c[f>>2]=0;break}d=c[f>>2]|0;if(d|0){c[c[a>>2]>>2]=d;c[(c[a>>2]|0)+4>>2]=d;c[(c[a>>2]|0)+8>>2]=e<<10;Sa(f+8|0,b,c[a+28>>2]|0);fd(f+8+64|0,8);_a(f+8|0,a);fd(f+8|0,72);d=0;break a}}while(0);d=-22}while(0);i=g;return d|0}function Pb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=i;e=i=i+63&-64;i=i+48|0;Kb(a,b+40|0,b);Jb(a+40|0,b+40|0,b);pa(a+80|0,a,c+40|0);pa(a+40|0,a+40|0,c);pa(a+120|0,c+120|0,b+120|0);pa(a,b+80|0,c+80|0);Kb(e,a,a);Jb(a,a+80|0,a+40|0);Kb(a+40|0,a+80|0,a+40|0);Jb(a+80|0,e,a+120|0);Kb(a+120|0,e,a+120|0);i=d;return}function Qb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=i;e=i=i+63&-64;i=i+48|0;Kb(a,b+40|0,b);Jb(a+40|0,b+40|0,b);pa(a+80|0,a,c);pa(a+40|0,a+40|0,c+40|0);pa(a+120|0,c+120|0,b+120|0);pa(a,b+80|0,c+80|0);Kb(e,a,a);Jb(a,a+80|0,a+40|0);Kb(a+40|0,a+80|0,a+40|0);Kb(a+80|0,e,a+120|0);Jb(a+120|0,e,a+120|0);i=d;return}function Rb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;Kb(a,b+40|0,b);Jb(a+40|0,b+40|0,b);l=c[b+84>>2]|0;k=c[b+88>>2]|0;j=c[b+92>>2]|0;i=c[b+96>>2]|0;h=c[b+100>>2]|0;g=c[b+104>>2]|0;f=c[b+108>>2]|0;e=c[b+112>>2]|0;d=c[b+116>>2]|0;c[a+80>>2]=c[b+80>>2];c[a+84>>2]=l;c[a+88>>2]=k;c[a+92>>2]=j;c[a+96>>2]=i;c[a+100>>2]=h;c[a+104>>2]=g;c[a+108>>2]=f;c[a+112>>2]=e;c[a+116>>2]=d;pa(a+120|0,b+120|0,544);return}function Sb(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0;g=i;h=i=i+63&-64;i=i+320|0;f=h+280|0;e=f+32|0;do{a[f>>0]=a[c>>0]|0;f=f+1|0;c=c+1|0}while((f|0)<(e|0));a[h+280>>0]=(d[h+280>>0]|0)&248;a[h+280+31>>0]=(d[h+280+31>>0]|0)&63|64;Pa(h+40|0,h+280|0);Kb(h+240|0,h+40+80|0,h+40+40|0);Jb(h+200|0,h+40+80|0,h+40+40|0);Ia(h+200|0,h+200|0);pa(h,h+240|0,h+200|0);La(b,h);i=g;return 0}function Tb(b,c,d,e,f,g){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;j=i=i+63&-64;i=i+464|0;tb(j+208|0,b,c)|0;De(j+208|0,d,e,0)|0;if(g|0){b=0;c=0;do{b=b+1|0;a[j+448+3>>0]=b;a[j+448+2>>0]=b>>>8;a[j+448+1>>0]=b>>>16;a[j+448>>0]=b>>>24;tc(j|0,j+208|0,208)|0;De(j,j+448|0,4,0)|0;pd(j,j+416|0)|0;e=g-c|0;tc(f+c|0,j+416|0,(e>>>0>32?32:e)|0)|0;c=b<<5}while(c>>>0<g>>>0)}fd(j+208|0,208);i=h;return}function Ub(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=i;e=i=i+63&-64;i=i+48|0;Kb(a,b+40|0,b);Jb(a+40|0,b+40|0,b);pa(a+80|0,a,c+40|0);pa(a+40|0,a+40|0,c);pa(a+120|0,c+80|0,b+120|0);Kb(e,b+80|0,b+80|0);Jb(a,a+80|0,a+40|0);Kb(a+40|0,a+80|0,a+40|0);Jb(a+80|0,e,a+120|0);Kb(a+120|0,e,a+120|0);i=d;return}function Vb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=i;e=i=i+63&-64;i=i+48|0;Kb(a,b+40|0,b);Jb(a+40|0,b+40|0,b);pa(a+80|0,a,c);pa(a+40|0,a+40|0,c+40|0);pa(a+120|0,c+80|0,b+120|0);Kb(e,b+80|0,b+80|0);Jb(a,a+80|0,a+40|0);Kb(a+40|0,a+80|0,a+40|0);Kb(a+80|0,e,a+120|0);Jb(a+120|0,e,a+120|0);i=d;return}function Wb(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0;n=i;l=i=i+63&-64;i=i+16|0;k=b;m=k+128|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(m|0));do if(!((h|f)>>>0>0|(h|f|0)==0&(g|e)>>>0>4294967295|j>>>0>2147484671))if(h>>>0<0|(h|0)==0&g>>>0<3|j>>>0<8192){c[(Zf()|0)>>2]=22;b=-1;break}else{Gd(l,16);b=((ae(g,j>>>10,d,e,l,b)|0)!=0)<<31>>31;break}else{c[(Zf()|0)>>2]=27;b=-1}while(0);i=n;return b|0}function Xb(a,b,c,d,e,f,g,h,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;k=i;l=i=i+63&-64;i=i+368|0;if((b|0)==0&((e|0)!=0|(f|0)!=0))ba();if(!a)ba();if((d+-1&255)>63)ba();if(!((c|0)!=0|g<<24>>24==0))ba();if((g&255)>64)ba();if(!(g<<24>>24))gb(l,d,h,j);else Qa(l,d,c,g,h,j);ib(l,b,e,f);ab(l,a,d)|0;i=k;return}function Yb(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;g=0;a:while(1){if(g>>>0<32){k=0;f=0;j=g}else break;do{i=j;j=j+1|0;f=(d[e+i>>0]|0)<<k|f;k=k+8|0}while(j>>>0<32&k>>>0<24);g=c;i=b;h=0;while(1){if(!g){b=0;break a}l=i;i=i+1|0;a[l>>0]=a[32982+(f&63)>>0]|0;h=h+6|0;if(h>>>0>=k>>>0)break;else{f=f>>>6;g=g+-1|0}}l=(i|0)==0;c=(l?0:b-i|0)+c|0;if(l){b=0;break}else{g=j;b=i}}return b|0}function Zb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(e>>>3|0){f=0;do{g=b+(f<<3)|0;h=d+(f<<3)|0;i=c[h>>2]|0;h=c[h+4>>2]|0;a[g+7>>0]=i;j=Rd(i|0,h|0,8)|0;a[g+6>>0]=j;j=Rd(i|0,h|0,16)|0;a[g+5>>0]=j;j=Rd(i|0,h|0,24)|0;a[g+4>>0]=j;a[g+3>>0]=h;j=Rd(i|0,h|0,40)|0;a[g+2>>0]=j;j=Rd(i|0,h|0,48)|0;a[g+1>>0]=j;h=Rd(i|0,h|0,56)|0;a[g>>0]=h;f=f+1|0}while((f|0)!=(e>>>3|0))}return}function _b(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;e=i;d=i=i+63&-64;i=i+48|0;b=jb(a)|0;if(!b){f=c[a+44>>2]|0;b=c[a+48>>2]|0;f=((f>>>0<b<<3>>>0?b<<3:f)>>>0)/(b<<2>>>0)|0;g=S(f,b<<2)|0;c[d>>2]=0;c[d+4>>2]=c[a+40>>2];c[d+8>>2]=g;c[d+12>>2]=f;c[d+16>>2]=f<<2;c[d+20>>2]=b;c[d+24>>2]=c[a+52>>2];c[d+28>>2]=1;b=Ob(d,a)|0;if(!b){b=Cb(d)|0;if(!b){pb(a,d);b=0}}}i=e;return b|0}function $b(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=0-(c[b+4>>2]|0)|0;k=0-(c[b+8>>2]|0)|0;j=0-(c[b+12>>2]|0)|0;i=0-(c[b+16>>2]|0)|0;h=0-(c[b+20>>2]|0)|0;g=0-(c[b+24>>2]|0)|0;f=0-(c[b+28>>2]|0)|0;e=0-(c[b+32>>2]|0)|0;d=0-(c[b+36>>2]|0)|0;c[a>>2]=0-(c[b>>2]|0);c[a+4>>2]=l;c[a+8>>2]=k;c[a+12>>2]=j;c[a+16>>2]=i;c[a+20>>2]=h;c[a+24>>2]=g;c[a+28>>2]=f;c[a+32>>2]=e;c[a+36>>2]=d;return}function ac(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;do if((l|0)==1){if((g|d|j)>>>0>0|(g|d|j|0)==0&(f|b|i)>>>0>4294967295|k>>>0>2147484671){c[(Zf()|0)>>2]=27;a=-1;break}if(d>>>0<0|(d|0)==0&b>>>0<16|(j>>>0<0|(j|0)==0&i>>>0<3)|k>>>0<8192){c[(Zf()|0)>>2]=22;a=-1;break}else{a=((Xd(i,k>>>10,e,f,h,a,b)|0)!=0)<<31>>31;break}}else a=-1;while(0);return a|0}function bc(a,b,d,e,f,g,h,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0;n=i;m=i=i+63&-64;i=i+16|0;Hc(a|0,0,b|0)|0;if((g|d)>>>0>0|(g|d|0)==0&(f|b)>>>0>4294967295){c[(Zf()|0)>>2]=27;a=-1}else{ob(j,k,l,m+8|0,m+4|0,m);l=Pd(1,0,c[m+8>>2]|0)|0;a=Lc(e,f,h,32,l,D,c[m>>2]|0,c[m+4>>2]|0,a,b)|0}i=n;return a|0}function cc(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;j=i=i+63&-64;i=i+368|0;if((b|0)==0&((e|0)!=0|(f|0)!=0))ba();if(!a)ba();if((d+-1&255)>63)ba();if(!((c|0)!=0|g<<24>>24==0))ba();if((g&255)>64)ba();if(!(g<<24>>24))Ib(j,d);else nb(j,d,c,g);ib(j,b,e,f);ab(j,a,d)|0;i=h;return}function dc(a,b){a=a|0;b=b|0;var c=0,d=0;c=i;d=i=i+63&-64;i=i+48|0;ra(a,b);ra(a+80|0,b+40|0);qa(a+120|0,b+80|0);Kb(a+40|0,b,b+40|0);ra(d,a+40|0);Kb(a+40|0,a+80|0,a);Jb(a+80|0,a+80|0,a);Jb(a,d,a+40|0);Jb(a+120|0,a+120|0,a+80|0);i=c;return}function ec(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;j=i=i+63&-64;i=i+16|0;Xc(a+64|0,d|0,e|0)|0;zb(a,j,a+64|0,e,f,g)|0;if((c[j>>2]|0)==64&(c[j+4>>2]|0)==0)if(b|0){a=oe(e|0,f|0,64,0)|0;c[b>>2]=a;c[b+4>>2]=D;a=0}else a=0;else{if(b|0){c[b>>2]=0;c[b+4>>2]=0}j=oe(e|0,f|0,64,0)|0;Hc(a|0,0,j|0)|0;a=-1}i=h;return a|0}function fc(a,b){a=a|0;b=b|0;var c=0,d=0;d=i;c=i=i+63&-64;i=i+240|0;if(!(za(c+80|0,b)|0)){Ud(c);Jb(c,c,c+80+40|0);Ia(c,c);Ud(c+40|0);Kb(c+40|0,c+40|0,c+80+40|0);pa(c+40|0,c+40|0,c);La(a,c+40|0);a=0}else a=-1;i=d;return a|0}function gc(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;e=oe(e|0,f|0,-64,-1)|0;f=D;do if(f>>>0>0|(f|0)==0&e>>>0>4294967231)h=7;else{if(Xa(d,d+64|0,e,f,g)|0){Hc(a|0,0,e|0)|0;h=7;break}if(b|0){c[b>>2]=e;c[b+4>>2]=f}Xc(a|0,d+64|0,e|0)|0;e=0}while(0);if((h|0)==7)if(!b)e=-1;else{c[b>>2]=0;c[b+4>>2]=0;e=-1}return e|0}function hc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=c[b+4>>2]|0;k=c[b+8>>2]|0;j=c[b+12>>2]|0;i=c[b+16>>2]|0;h=c[b+20>>2]|0;g=c[b+24>>2]|0;f=c[b+28>>2]|0;e=c[b+32>>2]|0;d=c[b+36>>2]|0;c[a>>2]=c[b>>2];c[a+4>>2]=l;c[a+8>>2]=k;c[a+12>>2]=j;c[a+16>>2]=i;c[a+20>>2]=h;c[a+24>>2]=g;c[a+28>>2]=f;c[a+32>>2]=e;c[a+36>>2]=d;return}function ic(b,c,d,e,f,g){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;j=i;h=i=i+63&-64;i=i+32|0;if(!(e>>>0<0|(e|0)==0&d>>>0<32)?(bd(h,32,0,f,g)|0,k=oe(d|0,e|0,-32,-1)|0,($d(c+16|0,c+32|0,k,D,h)|0)==0):0){Td(b,c,d,e,f,g)|0;c=b+32|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(c|0));b=0}else b=-1;i=j;return b|0}function jc(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;i=a[b>>0]|0;a:do if((i+-48&255)<=9){g=0;h=b;f=i;while(1){e=(f<<24>>24)+-48|0;f=g*10|0;if(g>>>0>429496729|e>>>0>~f>>>0){e=0;break a}g=e+f|0;e=h+1|0;f=a[e>>0]|0;if((f+-48&255)>9)break;else h=e}if((e|0)!=(b|0)?(h|0)==(b|0)|i<<24>>24!=48:0)c[d>>2]=g;else e=0}else e=0;while(0);return e|0}function kc(b){b=b|0;var d=0,e=0,f=0;a:do if(!(b&3)){d=b;f=4}else{d=b;e=b;while(1){if(!(a[d>>0]|0)){d=e;break a}d=d+1|0;e=d;if(!(e&3)){f=4;break}}}while(0);if((f|0)==4){while(1){e=c[d>>2]|0;if(!((e&-2139062144^-2139062144)&e+-16843009))d=d+4|0;else break}if((e&255)<<24>>24)do d=d+1|0;while((a[d>>0]|0)!=0)}return d-b|0}function lc(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;k=i;i=i+96|0;if(!(Ve(k+32|0,k)|0)){g=b;h=k+32|0;j=g+32|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(j|0));Uc(k+64|0,k+32|0,f);b=qd(b+32|0,c,d,e,k+64|0,f,k)|0;fd(k,32);fd(k+32|0,32);fd(k+64|0,24)}else b=-1;i=k;return b|0}function mc(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;h=i;f=i=i+63&-64;i=i+128|0;if((qb(b,0,102)|0)==(b+101|0)){We(f);e=f+12|0;g=e+102|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(g|0));d=(yb(f,c,d,b,f+12|0)|0)==0;je(f);if(!d){e=Dc(f+12|0,b,102)|0;fd(f+12|0,102)}else e=-1}else e=-1;i=h;return e|0}function nc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;do if(!(c>>>0>64|(d+-1|0)>>>0>63)){if(d>>>0>=256)fa(32441,32461,77,32633);if(c>>>0>=256)fa(32540,32461,78,32633);if((b|0)==0|(c|0)==0){gb(a,d&255,e,f);a=0;break}else{Qa(a,d&255,b,c&255,e,f);a=0;break}}else a=-1;while(0);return a|0}function oc(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if(g>>>0>0|(g|0)==0&f>>>0>15){d=oe(f|0,g|0,-16,-1)|0;a=lb(a,0,e,d,D,e+f+-16|0,h,i,j,k,l)|0}else a=-1;if(b|0){f=oe(f|0,g|0,-16,-1)|0;g=(a|0)==0;c[b>>2]=g?f:0;c[b+4>>2]=g?D:0}return a|0}function pc(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if(g>>>0>0|(g|0)==0&f>>>0>15){d=oe(f|0,g|0,-16,-1)|0;a=Db(a,0,e,d,D,e+f+-16|0,h,i,j,k,l)|0}else a=-1;if(b|0){f=oe(f|0,g|0,-16,-1)|0;g=(a|0)==0;c[b>>2]=g?f:0;c[b+4>>2]=g?D:0}return a|0}function qc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=i=i+63&-64;i=i+112|0;c[g+32>>2]=0;c[g+32+4>>2]=0;c[g>>2]=c[8066];c[g+4>>2]=c[8067];c[g+8>>2]=c[8068];c[g+12>>2]=c[8069];c[g+16>>2]=c[8070];c[g+20>>2]=c[8071];c[g+24>>2]=c[8072];c[g+28>>2]=c[8073];Ua(g,b,d,e)|0;Fb(g,a)|0;i=f;return 0}function rc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=i=i+63&-64;i=i+16|0;Zb(e,a+64|0,16);f=Rd(c[a+72>>2]|0,c[a+72+4>>2]|0,3)|0;f=le((0<0|0==0&(f&127)>>>0<112?112:240)|0,(0<0|0==0&(f&127)>>>0<112?0:0)|0,f&127|0,0)|0;Na(a,32783,f,D)|0;Na(a,e,16,0)|0;Zb(b,a,64);fd(a,208);i=d;return 0}function sc(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0;if(!e)f=0;else{f=a[b>>0]|0;a:do if(!(f<<24>>24))f=0;else while(1){e=e+-1|0;g=a[c>>0]|0;if(!(f<<24>>24==g<<24>>24&((e|0)!=0&g<<24>>24!=0)))break a;b=b+1|0;c=c+1|0;f=a[b>>0]|0;if(!(f<<24>>24)){f=0;break}}while(0);f=(f&255)-(d[c>>0]|0)|0}return f|0}function tc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return da(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if(!e)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function uc(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;do if(!((b+-1|0)>>>0>63|g>>>0>64)){if(b>>>0>=256)fa(32441,32461,36,32560);if(g>>>0<256){Xb(a,c,f,b&255,d,e,g&255,h,i);j=0;break}else fa(32540,32461,37,32560)}else j=-1;while(0);return j|0}function vc(b,c){b=b|0;c=c|0;var e=0,f=0;e=i;f=i=i+63&-64;i=i+160|0;Ia(f+80|0,c+80|0);pa(f+40|0,c,f+80|0);pa(f,c+40|0,f+80|0);La(b,f);La(f+120|0,f+40|0);a[b+31>>0]=(d[b+31>>0]|0)^(d[f+120>>0]|0)<<7;i=e;return}function wc(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0;if(!(f>>>0<2147483647&f<<1>>>0<c>>>0))ba();if(!f)c=0;else{c=0;do{h=d[e+c>>0]|0;g=c<<1;a[b+g>>0]=(h>>>4)+87+(((h>>>4)+65526|0)>>>8&217);a[b+(g|1)>>0]=(((h&15)<<8)+22272+((h&15)+65526&55552)|0)>>>8;c=c+1|0}while((c|0)!=(f|0));c=f<<1}a[b+c>>0]=0;return b|0}function xc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;g=i;h=i=i+63&-64;i=i+208|0;c[h+64>>2]=0;c[h+64+4>>2]=0;c[h+64+8>>2]=0;c[h+64+12>>2]=0;f=h;j=400;k=f+64|0;do{c[f>>2]=c[j>>2];f=f+4|0;j=j+4|0}while((f|0)<(k|0));Na(h,b,d,e)|0;rc(h,a)|0;i=g;return 0}function yc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;do if(!(c>>>0>64|(d+-1|0)>>>0>63)){if(d>>>0>=256)fa(32441,32461,53,32601);if(c>>>0>=256)fa(32540,32461,54,32601);if((b|0)==0|(c|0)==0){Ib(a,d&255);a=0;break}else{nb(a,d&255,b,c&255);a=0;break}}else a=-1;while(0);return a|0}function zc(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if(f>>>0>4294967295|(f|0)==-1&e>>>0>4294967279)ba();Ab(a,a+e|0,0,d,e,f,g,h,i,0,k,l)|0;if(b|0){k=oe(e|0,f|0,16,0)|0;c[b>>2]=k;c[b+4>>2]=D}return 0}function Ac(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if(f>>>0>4294967295|(f|0)==-1&e>>>0>4294967279)ba();Nb(a,a+e|0,0,d,e,f,g,h,i,0,k,l)|0;if(b|0){k=oe(e|0,f|0,16,0)|0;c[b>>2]=k;c[b+4>>2]=D}return 0}function Bc(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0;f=i;g=i=i+63&-64;i=i+160|0;xc(c,e,32,0)|0;a[c>>0]=(d[c>>0]|0)&248;a[c+31>>0]=(d[c+31>>0]|0)&63|64;Pa(g,c);vc(b,g);Xc(c|0,e|0,32)|0;Xc(c+32|0,b|0,32)|0;i=f;return 0}function Cc(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;do if(!((b+-1|0)>>>0>63|g>>>0>64)){if(b>>>0>=256)fa(32441,32461,18,32513);if(g>>>0<256){cc(a,c,f,b&255,d,e,g&255);h=0;break}else fa(32540,32461,19,32513)}else h=-1;while(0);return h|0}function Dc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;g=i;f=i=i+63&-64;i=i+16|0;c[f+4>>2]=b;c[f>>2]=d;if(!e)b=0;else{d=0;b=0;do{b=a[(c[f>>2]|0)+d>>0]^a[(c[f+4>>2]|0)+d>>0]|b;d=d+1|0}while((d|0)!=(e|0))}i=g;return (((b&255)+511|0)>>>8&1)+-1|0}function Ec(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;g=i;h=i=i+63&-64;i=i+64|0;xc(h,d,32,0)|0;d=c;e=h;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));fd(h,64);h=Qe(b,c)|0;i=g;return h|0}function Fc(b,c){b=b|0;c=c|0;var e=0,f=0,g=0;f=i;g=i=i+63&-64;i=i+64|0;xc(g,c,32,0)|0;a[g>>0]=(d[g>>0]|0)&248;a[g+31>>0]=(d[g+31>>0]|0)&63|64;c=g;e=b+32|0;do{a[b>>0]=a[c>>0]|0;b=b+1|0;c=c+1|0}while((b|0)<(e|0));fd(g,64);i=f;return 0}function Gc(b,c,d,e,f,g){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;if(e>>>0<0|(e|0)==0&d>>>0<32)b=-1;else{Td(b,c,d,e,f,g)|0;c=oe(d|0,e|0,-32,-1)|0;he(b+16|0,b+32|0,c,D,b)|0;c=b+16|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(c|0));b=0}return b|0}function Hc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(f&~3|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function Ic(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;h=i;g=i=i+63&-64;i=i+32|0;if(d>>>0<0|(d|0)==0&c>>>0<48)a=-1;else{c=oe(c|0,d|0,-32,-1)|0;d=D;Uc(g,b,e);a=dd(a,b+32|0,c,d,g,b,f)|0}i=h;return a|0}function Jc(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=i;i=i+480|0;sb(g,f,32)|0;Ce(g,c,d,e)|0;od(g,g+416|0)|0;c=g+416|0;d=b+32|0;do{a[b>>0]=a[c>>0]|0;b=b+1|0;c=c+1|0}while((b|0)<(d|0));i=g;return 0}function Kc(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;j=i;h=i=i+63&-64;i=i+32|0;if(!(Vc(h,f,g)|0)){a=Yd(a,b,c,d,e,h)|0;fd(h,32)}else a=-1;i=j;return a|0}function Lc(a,b,c,d,e,f,g,h,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0;l=i;m=i=i+63&-64;i=i+16|0;We(m);k=Ca(m,a,b,c,d,e,f,g,h,j,k)|0;je(m);i=l;return k|0}function Mc(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;j=i;h=i=i+63&-64;i=i+32|0;if(!(Vc(h,f,g)|0)){a=ce(a,b,c,d,e,h)|0;fd(h,32)}else a=-1;i=j;return a|0}function Nc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;e=i;d=i=i+63&-64;i=i+16|0;f=Od(d,b)|0;c[(Zf()|0)>>2]=f;if(!f)d=c[d>>2]|0;else{c[d>>2]=0;d=0}c[a>>2]=d;c[a+4>>2]=d;c[a+8>>2]=d|0?b:0;i=e;return d|0}function Oc(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;j=i;k=i=i+63&-64;i=i+32|0;Aa(k,e,h,0)|0;Ma(a,b,c,d,e+16|0,f,g,k)|0;fd(k,32);i=j;return 0}function Pc(a){a=a|0;var b=0,d=0;d=a+15&-16|0;b=c[k>>2]|0;a=b+d|0;if((d|0)>0&(a|0)<(b|0)|(a|0)<0){_()|0;ca(12);return -1}c[k>>2]=a;if((a|0)>(Z()|0)?(Y()|0)==0:0){ca(12);c[k>>2]=b;return -1}return b|0}function Qc(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0;j=i;i=i+32|0;if(!(Je(j,g,h)|0)){a=eb(a,b,c,d,e,f,j)|0;fd(j,32)}else a=-1;i=j;return a|0}function Rc(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0;j=i;i=i+32|0;if(!(Je(j,g,h)|0)){Ya(a,b,c,d,e,f,j)|0;fd(j,32);a=0}else a=-1;i=j;return a|0}function Sc(a){a=a|0;c[a+32>>2]=0;c[a+32+4>>2]=0;c[a>>2]=c[8066];c[a+4>>2]=c[8067];c[a+8>>2]=c[8068];c[a+12>>2]=c[8069];c[a+16>>2]=c[8070];c[a+20>>2]=c[8071];c[a+24>>2]=c[8072];c[a+28>>2]=c[8073];return 0}function Tc(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if((l|0)==1)a=ac(a,b,d,e,f,g,h,i,j,k,1)|0;else{c[(Zf()|0)>>2]=22;a=-1}return a|0}function Uc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=i;e=i=i+63&-64;i=i+368|0;He(e,0,0,24)|0;xe(e,b,32,0)|0;xe(e,c,32,0)|0;Ne(e,a,24)|0;i=d;return}function Vc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=i;d=i=i+63&-64;i=i+32|0;if(!(_c(d,c,b)|0)){Aa(a,34476,d,0)|0;a=0}else a=-1;i=e;return a|0}function Wc(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=i;i=i+32|0;Jc(f,b,c,d,e)|0;e=zd(a,f)|0;e=((f|0)==(a|0)?-1:e)|(Dc(f,a,32)|0);i=f;return e|0}function Xc(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else tc(b,c,d)|0;return b|0}function Yc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=S(b&65535,a&65535)|0;e=(c>>>16)+(S(b&65535,a>>>16)|0)|0;d=S(b>>>16,a&65535)|0;return (D=(e>>>16)+(S(b>>>16,a>>>16)|0)+(((e&65535)+d|0)>>>16)|0,e+d<<16|c&65535|0)|0}function Zc(a,b){a=a|0;b=b|0;pa(a,b,b+120|0);pa(a+40|0,b+40|0,b+80|0);pa(a+80|0,b+80|0,b+120|0);pa(a+120|0,b,b+40|0);return}function _c(b,c,d){b=b|0;c=c|0;d=d|0;if(!(wa(b,c,d)|0)){c=0;d=0;do{d=a[b+c>>0]|d;c=c+1|0}while((c|0)!=32);c=0-(((d&255)+511|0)>>>8&1)|0}else c=-1;return c|0}function $c(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=i;i=i+64|0;ld(f,b,c,d,e)|0;e=yd(a,f)|0;e=((f|0)==(a|0)?-1:e)|(Dc(f,a,64)|0);i=f;return e|0}function ad(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=i;i=i+32|0;md(f,b,c,d,e)|0;e=zd(a,f)|0;e=((f|0)==(a|0)?-1:e)|(Dc(f,a,32)|0);i=f;return e|0}function bd(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=i=i+63&-64;i=i+32|0;Aa(g,d,e,0)|0;fb(a,b,c,d+16|0,g)|0;fd(g,32);i=f;return 0}function cd(a,b){a=a|0;b=b|0;var e=0,f=0,g=0;e=0;g=0;do{f=qb(32982,d[b>>0]|0,65)|0;if(!f){b=0;e=0;break}b=b+1|0;e=f-32982<<g|e;g=g+6|0}while(g>>>0<30);c[a>>2]=e;return b|0}function dd(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;if(d>>>0<0|(d|0)==0&c>>>0<16)a=-1;else{d=oe(c|0,d|0,-16,-1)|0;a=Qc(a,b+16|0,b,d,D,e,f,g)|0}return a|0}function ed(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=i=i+63&-64;i=i+16|0;cb(g,b,c,d,e)|0;e=Ad(a,g)|0;i=f;return e|0}function fd(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;f=i=i+63&-64;i=i+16|0;c[f>>2]=b;if(d|0){b=0;do{a[(c[f>>2]|0)+b>>0]=0;b=b+1|0}while((b|0)!=(d|0))}i=e;return}function gd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=0;do{g=b+(d<<3)|0;e=a+(d<<3)|0;f=c[e+4>>2]^c[g+4>>2];c[e>>2]=c[e>>2]^c[g>>2];c[e+4>>2]=f;d=d+1|0}while((d|0)!=128);return}function hd(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(d>>>0<0|(d|0)==0&c>>>0<16)a=-1;else{d=oe(c|0,d|0,-16,-1)|0;a=eb(a,b+16|0,b,d,D,e,f)|0}return a|0}function id(b){b=b|0;var c=0;c=a[n+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[n+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return (a[n+(b>>>24)>>0]|0)+24|0}function jd(b,c){b=b|0;c=c|0;var d=0,e=0;e=i;i=i+64|0;od(b,e)|0;b=e;d=c+32|0;do{a[c>>0]=a[b>>0]|0;c=c+1|0;b=b+1|0}while((c|0)<(d|0));i=e;return 0}function kd(b,c,d){b=b|0;c=c|0;d=d|0;if(!(d>>>0<1|(d|0)==1&c>>>0<0))fa(33884,33904,172,33930);if(c|0){d=0;do{a[b+d>>0]=$(0)|0;d=d+1|0}while((d|0)!=(c|0))}return}function ld(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=i;i=i+416|0;sb(f,e,32)|0;Na(f,b,c,d)|0;od(f,a)|0;i=f;return 0}function md(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=i;i=i+208|0;tb(f,e,32)|0;Ua(f,b,c,d)|0;pd(f,a)|0;i=f;return 0}function nd(a){a=a|0;var b=0,d=0;c[a+64>>2]=0;c[a+64+4>>2]=0;c[a+64+8>>2]=0;c[a+64+12>>2]=0;b=400;d=a+64|0;do{c[a>>2]=c[b>>2];a=a+4|0;b=b+4|0}while((a|0)<(d|0));return 0}function od(a,b){a=a|0;b=b|0;var c=0;c=i;i=i+64|0;rc(a,c)|0;Na(a+208|0,c,64,0)|0;rc(a+208|0,b)|0;fd(c,64);i=c;return 0}function pd(a,b){a=a|0;b=b|0;var c=0;c=i;i=i+32|0;Fb(a,c)|0;Ua(a+104|0,c,32,0)|0;Fb(a+104|0,b)|0;fd(c,32);i=c;return 0}function qd(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;if(d>>>0>0|(d|0)==0&c>>>0>4294967279)a=-1;else a=Rc(a+16|0,a,b,c,d,e,f,g)|0;return a|0}function rd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if(e>>>0>0|(e|0)==0&d>>>0>4294967295){c[(Zf()|0)>>2]=27;a=-1}else a=((df(a,b,d)|0)!=0)<<31>>31;return a|0}function sd(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(d>>>0>0|(d|0)==0&c>>>0>4294967279)a=-1;else{Ya(a+16|0,a,b,c,d,e,f)|0;a=0}return a|0}function td(a){a=a|0;return (0-(a^62)|0)>>>8&43^43|(a+65510|0)>>>8&255&a+65|(0-(a^63)|0)>>>8&47^47|(a+65484|0)>>>8&a+71&((a+65510|0)>>>8&255^255)|(a+65474|0)>>>8&a+252&((a+65484|0)>>>8&255^255)|0}function ud(a,b){a=a|0;b=b|0;pa(a,b,b+120|0);pa(a+40|0,b+40|0,b+80|0);pa(a+80|0,b+80|0,b+120|0);return}function vd(a,b){a=a|0;b=b|0;var c=0,d=0;c=i;d=i=i+63&-64;i=i+32|0;Gd(d,32);Bc(a,b,d)|0;fd(d,32);i=c;return 0}function wd(a){a=a|0;var b=0;if(a>>>0<2)a=0;else{do b=$(0)|0;while(b>>>0<(((0-a|0)>>>0)%(a>>>0)|0)>>>0);a=(b>>>0)%(a>>>0)|0}return a|0}function xd(a,b,c){a=a|0;b=b|0;c=c|0;vb(a,b,c&255);vb(a+40|0,b+40|0,c&255);vb(a+80|0,b+80|0,c&255);return}function yd(b,c){b=b|0;c=c|0;var d=0,e=0;d=0;e=0;do{d=(a[c+e>>0]^a[b+e>>0])&255|d;e=e+1|0}while((e|0)!=64);return ((d+511|0)>>>8&1)+-1|0}function zd(b,c){b=b|0;c=c|0;var d=0,e=0;d=0;e=0;do{d=(a[c+e>>0]^a[b+e>>0])&255|d;e=e+1|0}while((e|0)!=32);return ((d+511|0)>>>8&1)+-1|0}function Ad(b,c){b=b|0;c=c|0;var d=0,e=0;d=0;e=0;do{d=(a[c+e>>0]^a[b+e>>0])&255|d;e=e+1|0}while((e|0)!=16);return ((d+511|0)>>>8&1)+-1|0}function Bd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;i=i+16|0;Ea(a,b,d,e,f|0)|0;i=f;return (D=c[f+4>>2]|0,c[f>>2]|0)|0}function Cd(){}function Dd(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){D=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}D=(b|0)<0?-1:0;return b>>c-32|0}function Ed(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=Yc(a,c)|0;f=D;return (D=(S(b,c)|0)+(S(d,a)|0)+f|f&0,e|0|0)|0}function Fd(a,b,c){a=a|0;b=b|0;c=c|0;if(c>>>0<256)return ab(a,b,c&255)|0;else fa(32441,32461,106,32679);return 0}function Gd(b,c){b=b|0;c=c|0;var d=0;if(c|0){d=0;do{a[b+d>>0]=$(0)|0;d=d+1|0}while((d|0)!=(c|0))}return}function Hd(b,c){b=b|0;c=c|0;var d=0;d=c;do{if(!d){c=0;break}d=d+-1|0;c=b+d|0}while((a[c>>0]|0)!=36);return c|0}function Id(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return Za(a,b,c,d,e,f,g,h)|0}function Jd(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return eb(a,b,c,d,e,f,g)|0}function Kd(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Kc(a,b,c,d,e,f,g)|0}function Ld(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Va(a,b,c,d,e,f,g)|0}function Md(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Ya(a,b,c,d,e,f,g)|0;return 0}function Nd(){var a=0;a=aa(30)|0;if((a|0)>0)c[8489]=a;else a=c[8489]|0;if(a>>>0<16)ba();else{Gd(34524,16);return}}function Od(a,b){a=a|0;b=b|0;var d=0;if(b>>>0<=4294967168?(d=rb(b)|0,(d|0)!=0):0){c[a>>2]=d;a=0}else a=12;return a|0}function Pd(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){D=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}D=a<<c-32;return 0}function Qd(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Mc(a,b,c,d,e,f,g)|0}function Rd(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){D=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}D=0;return b>>>c-32|0}function Sd(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Cc(a,b,c,d,e,f,g)|0}function Td(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Oc(a,b,c,d,e,0,0,f)|0;return 0}function Ud(a){a=a|0;var b=0;c[a>>2]=1;a=a+4|0;b=a+36|0;do{c[a>>2]=0;a=a+4|0}while((a|0)<(b|0));return}function Vd(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Wb(a,b,c,d,e,f,g)|0}function Wd(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Ma(a,b,c,d,e,0,0,f)|0;return 0}function Xd(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return xb(a,b,1,c,d,e,16,f,g,0,0)|0}function Yd(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return ic(a,b,c,d,e,f)|0}function Zd(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Va(a,b,c,d,e,0,f)|0}function _d(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;zb(a,b,c,d,e,f)|0;return 0}function $d(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return ed(a,b,c,d,e)|0}function ae(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return xb(a,b,1,c,d,e,16,0,32,f,128)|0}function be(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Za(a,b,c,d,e,0,0,f)|0}function ce(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Gc(a,b,c,d,e,f)|0}function de(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Td(a,b,c,d,e,f)|0;return 0}function ee(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Yd(a,b,c,d,e,f)|0}function fe(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Xa(a,b,c,d,e)|0}function ge(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return gc(a,b,c,d,e,f)|0}function he(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return cb(a,b,c,d,e)|0}function ie(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return $d(a,b,c,d,e)|0}function je(a){a=a|0;var b=0;b=c[a>>2]|0;if(b|0)ta(b);c[a+4>>2]=0;c[a>>2]=0;c[a+8>>2]=0;return}function ke(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return ce(a,b,c,d,e,f)|0}function le(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return (D=d,a-c>>>0|0)|0}function me(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return ec(a,b,c,d,e,f)|0}function ne(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Fe(a,b,c,d)|0}function oe(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return (D=b+d+(a+c>>>0>>>0<a>>>0|0)>>>0,a+c>>>0|0)|0}function pe(){var a=0;if(!(c[8488]|0)){pf();Nd();c[8488]=1;a=0}else a=1;return a|0}function qe(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Wc(a,b,c,d,e)|0}function re(a){a=a|0;var b=0;b=a+40|0;do{c[a>>2]=0;a=a+4|0}while((a|0)<(b|0));return}function se(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;sa(a,b,c,d,e)|0;return 0}function te(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return he(a,b,c,d,e)|0}function ue(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ib(a,b,c,d);return 0}function ve(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ce(a,b,c,d)|0;return 0}function we(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Wa(a,b,c,d,e)|0}function xe(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ue(a,b,c,d)|0;return 0}function ye(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Jc(a,b,c,d,e)|0;return 0}function ze(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;bd(a,b,c,d,e)|0;return 0}function Ae(a,b){a=a|0;b=b|0;Gd(b,32);return Qe(a,b)|0}function Be(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return ne(a,b,c,d)|0}function Ce(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Na(a,b,c,d)|0;return 0}function De(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ua(a,b,c,d)|0;return 0}function Ee(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return rd(a,b,c,d)|0}function Fe(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ra(a,b,c,d);return 0}function Ge(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return $a(a,b,c,d,e)|0}function He(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return yc(a,b,c,d)|0}function Ie(a,b,c){a=a|0;b=b|0;c=c|0;return Ec(a,b,c)|0}function Je(a,b,c){a=a|0;b=b|0;c=c|0;return Vc(a,b,c)|0}function Ke(b,c){b=b|0;c=c|0;b=Mb(b,c)|0;return ((a[b>>0]|0)==(c&255)<<24>>24?b:0)|0}function Le(a,b,c){a=a|0;b=b|0;c=c|0;sb(a,b,c)|0;return 0}function Me(a,b,c){a=a|0;b=b|0;c=c|0;Bc(a,b,c)|0;return 0}function Ne(a,b,c){a=a|0;b=b|0;c=c|0;return Fd(a,b,c)|0}function Oe(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+15&-16;return b|0}function Pe(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;xc(a,b,c,d)|0;return 0}function Qe(a,b){a=a|0;b=b|0;return Sb(a,b)|0}function Re(a,b){a=a|0;b=b|0;return $e(a,b)|0}function Se(a,b){a=a|0;b=b|0;return hb(a,b)|0}function Te(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Ea(a,b,c,d,0)|0}function Ue(a,b,c){a=a|0;b=b|0;c=c|0;return _c(a,b,c)|0}function Ve(a,b){a=a|0;b=b|0;return Ae(a,b)|0}function We(a){a=a|0;c[a+4>>2]=0;c[a>>2]=0;c[a+8>>2]=0;return}function Xe(a,b){a=a|0;b=b|0;return Re(a,b)|0}function Ye(a,b){a=a|0;b=b|0;Xc(a|0,b+32|0,32)|0;return 0}function Ze(a,b){a=a|0;b=b|0;return Qe(a,b)|0}function _e(a,b){a=a|0;b=b|0;return Se(a,b)|0}function $e(a,b){a=a|0;b=b|0;Oa(a,b);return 0}function af(a,b){a=a|0;b=b|0;if(!o){o=a;p=b}}function bf(a,b){a=a|0;b=b|0;Xc(a|0,b|0,32)|0;return 0}function cf(a,b){a=a|0;b=b|0;vd(a,b)|0;return 0}function df(a,b,c){a=a|0;b=b|0;c=c|0;return kb(a,b,c)|0}function ef(a,b){a=a|0;b=b|0;tc(a|0,b|0,1024)|0;return}function ff(a,b){a=a|0;b=b|0;i=a;j=b}function gf(a){a=a|0;return Hd(a,(kc(a)|0)+1|0)|0}function hf(){return 1073741824}function jf(){return 16777216}function kf(a){a=a|0;Hc(a|0,0,1024)|0;return}function lf(){return 524288}function mf(){return 33047}function nf(){return $(0)|0}function of(){return 102}function pf(){ea(1);return}function qf(){return 33554432}function rf(){return 536870912}function sf(){return 12}function tf(){return 134217728}function uf(){return 33138}function vf(){return 416}function wf(){return 4}function xf(a){a=a|0;i=a}function yf(){return 32911}function zf(){return 32323}function Af(a){a=a|0;D=a}function Bf(){return 33051}function Cf(){return 6}function Df(){return 256}function Ef(){return 208}function Ff(){return 104}function Gf(){return 384}function Hf(){return 33079}function If(){return 33062}function Jf(){return 3}function Kf(){return 9}function Lf(){return 33129}function Mf(){return 32964}function Nf(){return 32974}function Of(){return 33942}function Pf(){return 33089}function Qf(){return 1}function Rf(){return 32712}function Sf(){return 128}function Tf(){return 32296}function Uf(){return 8}function Vf(){return 24}function Wf(){return D|0}function Xf(){return 48}function Yf(){return 16}function Zf(){return 33960}function _f(){return i|0}function $f(){return 64}function ag(){return 32}function bg(){return 0}

// EMSCRIPTEN_END_FUNCS
return{_crypto_onetimeauth_poly1305_init:Se,_crypto_hash_sha512_init:nd,_crypto_hash_primitive:Rf,_crypto_onetimeauth_bytes:Yf,_crypto_box_open:Kd,_crypto_stream_chacha20_ietf_noncebytes:sf,_crypto_stream_salsa20_xor:Wd,_randombytes_buf:Gd,_crypto_auth_hmacsha512_verify:$c,_crypto_generichash_blake2b_keybytes_min:Yf,_crypto_sign_open:ge,_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive:hf,_crypto_sign_ed25519_keypair:vd,_crypto_scalarmult_curve25519_base:Qe,_crypto_stream_salsa20:fb,_crypto_sign_ed25519_open:gc,_sodium_init:pe,_crypto_pwhash_scryptsalsa208sha256:bc,_crypto_scalarmult_primitive:Bf,_crypto_box_noncebytes:Vf,_crypto_aead_chacha20poly1305_ietf_keybytes:ag,_crypto_aead_chacha20poly1305_ietf_encrypt_detached:Ab,_crypto_scalarmult_base:Ze,_crypto_aead_chacha20poly1305_abytes:Yf,_crypto_auth_bytes:ag,_crypto_pwhash_opslimit_sensitive:Uf,_crypto_pwhash_strbytes:Sf,_crypto_auth_hmacsha512256_update:ve,_sbrk:Pc,_memcpy:tc,_crypto_onetimeauth_poly1305:he,_crypto_sign_secretkeybytes:$f,_crypto_generichash_primitive:zf,_crypto_auth_hmacsha512256:Jc,_crypto_box_seed_keypair:Ie,_crypto_auth_hmacsha512_init:sb,_crypto_generichash_blake2b_keybytes_max:$f,_crypto_box_curve25519xsalsa20poly1305_macbytes:Yf,_bitshift64Lshr:Rd,_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive:jf,_crypto_sign_ed25519_sk_to_pk:Ye,_crypto_verify_16_bytes:Yf,_crypto_stream_xsalsa20:bd,_crypto_scalarmult_curve25519:_c,_crypto_box_open_easy_afternm:hd,_crypto_auth_hmacsha512:ld,_crypto_stream_chacha20_ietf_xor_ic:Ld,_crypto_hash:Pe,_crypto_box_curve25519xsalsa20poly1305_seedbytes:ag,_crypto_box_zerobytes:ag,_crypto_stream_salsa20_keybytes:ag,_crypto_auth_hmacsha512256_keybytes:ag,_crypto_aead_chacha20poly1305_keybytes:ag,_crypto_hash_sha512_bytes:$f,_crypto_verify_32:zd,_crypto_generichash_blake2b_final:Fd,_crypto_generichash_blake2b_init_salt_personal:nc,_crypto_box_seal:lc,_crypto_core_hsalsa20_outputbytes:ag,_free:ta,_crypto_sign_ed25519_publickeybytes:ag,_crypto_core_hsalsa20_keybytes:ag,_crypto_sign_primitive:Pf,_crypto_scalarmult_curve25519_bytes:ag,_crypto_auth_keybytes:ag,_crypto_box:Qd,_crypto_stream_xsalsa20_noncebytes:Vf,_crypto_onetimeauth_poly1305_keybytes:ag,_crypto_box_beforenm:Je,_crypto_box_curve25519xsalsa20poly1305_open_afternm:Yd,_crypto_pwhash_scryptsalsa208sha256_saltbytes:ag,_crypto_aead_chacha20poly1305_npubbytes:Uf,_crypto_stream_primitive:Lf,_crypto_pwhash_argon2i_str_verify:rd,_crypto_pwhash_memlimit_sensitive:rf,_crypto_shorthash:se,_crypto_onetimeauth_poly1305_bytes:Yf,_crypto_secretbox_detached:Ya,_crypto_box_curve25519xsalsa20poly1305_seed_keypair:Ec,_crypto_box_primitive:Tf,_crypto_pwhash_str:Vd,_crypto_box_detached_afternm:Md,_crypto_stream_salsa20_xor_ic:Ma,_crypto_secretbox_xsalsa20poly1305_boxzerobytes:Yf,_crypto_core_salsa20_constbytes:Yf,_crypto_auth_hmacsha512_keybytes:ag,_crypto_auth:ye,_crypto_auth_hmacsha512256_final:jd,_randombytes_random:nf,_crypto_stream_chacha20_keybytes:ag,_crypto_pwhash_str_verify:Ee,_crypto_sign_keypair:cf,_crypto_auth_hmacsha256_statebytes:Ef,_crypto_generichash_keybytes_min:Yf,_crypto_generichash_statebytes:Gf,_randombytes:kd,_crypto_aead_chacha20poly1305_encrypt_detached:Nb,_randombytes_implementation_name:uf,_crypto_core_salsa20_keybytes:ag,_sodium_library_version_major:Kf,_crypto_hash_sha256_statebytes:Ff,_crypto_pwhash_strprefix:Mf,_crypto_box_afternm:ke,_crypto_secretbox_primitive:If,_i64Add:oe,_malloc:na,_crypto_scalarmult_curve25519_scalarbytes:ag,_crypto_box_curve25519xsalsa20poly1305_keypair:Ae,_crypto_hash_sha256_init:Sc,_crypto_sign_ed25519_detached:zb,_crypto_pwhash_scryptsalsa208sha256_str_verify:mc,_crypto_generichash_init:He,_crypto_generichash_keybytes_max:$f,_crypto_sign_ed25519_pk_to_curve25519:fc,_crypto_stream_chacha20_ietf_xor:Zd,_crypto_verify_64:yd,_crypto_sign_publickeybytes:ag,_crypto_shorthash_siphash24:sa,_crypto_box_beforenmbytes:ag,_crypto_stream_chacha20_ietf:we,_crypto_generichash:Sd,_crypto_sign_ed25519:ec,_crypto_box_curve25519xsalsa20poly1305_open:Kc,_crypto_pwhash_opslimit_interactive:wf,_sodium_hex2bin:mb,_crypto_onetimeauth_poly1305_final:Re,_crypto_auth_hmacsha256_init:tb,_crypto_aead_chacha20poly1305_ietf_encrypt:zc,_crypto_aead_chacha20poly1305_ietf_nsecbytes:bg,_crypto_box_curve25519xsalsa20poly1305_noncebytes:Vf,_crypto_secretbox:ce,_crypto_box_boxzerobytes:Yf,_crypto_pwhash_argon2i_saltbytes:Yf,_crypto_hash_sha512_update:Na,_crypto_onetimeauth_poly1305_verify:$d,_crypto_box_curve25519xsalsa20poly1305_beforenmbytes:ag,_crypto_generichash_blake2b_init:yc,_crypto_aead_chacha20poly1305_ietf_decrypt:oc,_crypto_auth_hmacsha512256_init:Le,_crypto_pwhash_primitive:Nf,_crypto_onetimeauth_keybytes:ag,_crypto_pwhash_argon2i:ac,_crypto_auth_hmacsha512_final:od,_crypto_sign_ed25519_seedbytes:ag,_crypto_auth_hmacsha512256_verify:Wc,_crypto_auth_hmacsha256_final:pd,_crypto_box_secretkeybytes:ag,_crypto_verify_16:Ad,_crypto_stream_chacha20_noncebytes:Uf,_crypto_onetimeauth_update:Be,_crypto_aead_chacha20poly1305_encrypt:Ac,_crypto_core_salsa20:xa,_crypto_pwhash_scryptsalsa208sha256_ll:Lc,_crypto_box_detached:Rc,_crypto_stream_xsalsa20_xor:Td,_crypto_sign_seedbytes:ag,_memset:Hc,_crypto_pwhash_scryptsalsa208sha256_str:Hb,_crypto_generichash_blake2b_saltbytes:Yf,_bitshift64Ashr:Dd,_bitshift64Shl:Pd,_sodium_version_string:Of,_crypto_box_open_detached:Qc,_crypto_scalarmult_bytes:ag,_crypto_secretbox_xsalsa20poly1305:Gc,_crypto_pwhash:Tc,_crypto_auth_verify:qe,_crypto_sign_ed25519_seed_keypair:Bc,_crypto_secretbox_xsalsa20poly1305_zerobytes:ag,_crypto_onetimeauth_poly1305_update:ne,_crypto_sign_detached:_d,_crypto_verify_32_bytes:ag,_crypto_box_curve25519xsalsa20poly1305_zerobytes:ag,_crypto_generichash_blake2b_keybytes:ag,_crypto_sign_ed25519_secretkeybytes:$f,_crypto_stream_xor:de,_crypto_stream_xsalsa20_xor_ic:Oc,_crypto_verify_64_bytes:$f,_randombytes_stir:pf,_crypto_secretbox_easy:sd,_crypto_pwhash_argon2i_strprefix:Mf,_crypto_auth_hmacsha256_update:De,_crypto_pwhash_scryptsalsa208sha256_strbytes:of,_crypto_stream_chacha20:Ge,_crypto_stream_xsalsa20_keybytes:ag,_crypto_sign:me,_crypto_pwhash_argon2i_str:Wb,_crypto_box_open_detached_afternm:Jd,_crypto_pwhash_argon2i_memlimit_sensitive:rf,_crypto_box_sealbytes:Xf,_crypto_onetimeauth:te,_crypto_auth_hmacsha512_statebytes:vf,_crypto_secretbox_boxzerobytes:Yf,_i64Subtract:le,_crypto_pwhash_alg_default:Qf,_crypto_pwhash_scryptsalsa208sha256_strprefix:mf,_crypto_onetimeauth_primitive:yf,_crypto_box_seedbytes:ag,_crypto_hash_sha256_update:Ua,_crypto_core_hsalsa20_constbytes:Yf,_crypto_box_curve25519xsalsa20poly1305:Mc,_crypto_generichash_blake2b_statebytes:Gf,_crypto_box_curve25519xsalsa20poly1305_boxzerobytes:Yf,_crypto_generichash_blake2b_bytes_min:Yf,_crypto_pwhash_opslimit_moderate:Cf,_crypto_secretbox_open:Yd,_crypto_hash_sha256_bytes:ag,_crypto_core_salsa20_inputbytes:Yf,_crypto_box_macbytes:Yf,_crypto_shorthash_bytes:Uf,_crypto_box_publickeybytes:ag,___udivdi3:Te,_crypto_aead_chacha20poly1305_decrypt_detached:Db,_crypto_auth_hmacsha256_verify:ad,_crypto_pwhash_argon2i_strbytes:Sf,___muldsi3:Yc,_sodium_library_version_minor:Jf,_crypto_scalarmult_scalarbytes:ag,_crypto_onetimeauth_statebytes:Df,_crypto_auth_hmacsha256_bytes:ag,_crypto_sign_seed_keypair:Me,_crypto_pwhash_argon2i_opslimit_interactive:wf,_crypto_stream_salsa20_noncebytes:Uf,_crypto_shorthash_keybytes:Yf,___udivmoddi4:Ea,_crypto_box_curve25519xsalsa20poly1305_afternm:ce,_crypto_stream_noncebytes:Vf,_crypto_aead_chacha20poly1305_decrypt:pc,_sodium_bin2hex:wc,_crypto_secretbox_open_easy:hd,_crypto_aead_chacha20poly1305_ietf_decrypt_detached:lb,_crypto_pwhash_memlimit_interactive:qf,_crypto_hash_sha512_final:rc,_crypto_generichash_final:Ne,_crypto_secretbox_xsalsa20poly1305_keybytes:ag,_crypto_auth_hmacsha512_update:Ce,_crypto_pwhash_saltbytes:Yf,_crypto_auth_hmacsha256:md,_crypto_secretbox_noncebytes:Vf,_crypto_box_keypair:Ve,_crypto_secretbox_xsalsa20poly1305_macbytes:Yf,_crypto_box_open_afternm:ee,_crypto_auth_hmacsha512_bytes:$f,_crypto_generichash_keybytes:ag,_crypto_hash_bytes:$f,_crypto_generichash_bytes_min:Yf,_crypto_pwhash_argon2i_alg_argon2i13:Qf,_crypto_secretbox_macbytes:Yf,_crypto_secretbox_keybytes:ag,_crypto_auth_hmacsha256_keybytes:ag,_crypto_pwhash_argon2i_opslimit_sensitive:Uf,_crypto_aead_chacha20poly1305_ietf_abytes:Yf,_randombytes_close:bg,_crypto_pwhash_argon2i_memlimit_moderate:tf,_crypto_generichash_blake2b_bytes_max:$f,_crypto_generichash_blake2b:Cc,_crypto_generichash_bytes:ag,_crypto_generichash_bytes_max:$f,_crypto_secretbox_open_detached:eb,_crypto_sign_ed25519_sk_to_seed:bf,_crypto_sign_ed25519_sk_to_curve25519:Fc,_crypto_core_salsa20_outputbytes:$f,_crypto_box_easy_afternm:sd,___muldi3:Ed,_crypto_generichash_blake2b_personalbytes:Yf,_crypto_stream_chacha20_xor_ic:Id,___uremdi3:Bd,_crypto_sign_verify_detached:fe,_crypto_pwhash_argon2i_opslimit_moderate:Cf,_crypto_onetimeauth_verify:ie,_crypto_box_open_easy:dd,_crypto_stream:ze,_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive:qf,_crypto_box_curve25519xsalsa20poly1305_secretkeybytes:ag,_crypto_aead_chacha20poly1305_nsecbytes:bg,_crypto_hash_sha512_statebytes:Ef,_crypto_sign_bytes:$f,_crypto_secretbox_zerobytes:ag,_crypto_generichash_update:xe,_crypto_scalarmult:Ue,_crypto_shorthash_primitive:Hf,_crypto_hash_sha512:xc,_llvm_cttz_i32:id,_crypto_stream_chacha20_xor:be,_crypto_box_seal_open:Ic,_crypto_box_easy:qd,_crypto_sign_ed25519_verify_detached:Xa,_memmove:Xc,_crypto_sign_ed25519_bytes:$f,_crypto_generichash_blake2b_update:ue,_crypto_hash_sha256:qc,_crypto_box_curve25519xsalsa20poly1305_beforenm:Vc,_crypto_pwhash_alg_argon2i13:Qf,_crypto_core_hsalsa20_inputbytes:Yf,_crypto_onetimeauth_final:Xe,_crypto_generichash_blake2b_bytes:ag,_crypto_auth_hmacsha512256_bytes:ag,_crypto_generichash_blake2b_salt_personal:uc,_randombytes_uniform:wd,_crypto_shorthash_siphash24_bytes:Uf,_crypto_auth_hmacsha512256_statebytes:vf,_crypto_shorthash_siphash24_keybytes:Yf,_crypto_secretbox_xsalsa20poly1305_noncebytes:Vf,_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive:lf,_crypto_core_hsalsa20:Aa,_crypto_pwhash_argon2i_memlimit_interactive:qf,_crypto_hash_sha256_final:Fb,_crypto_secretbox_xsalsa20poly1305_open:ic,_crypto_stream_keybytes:ag,_crypto_box_curve25519xsalsa20poly1305_publickeybytes:ag,_crypto_onetimeauth_init:_e,_crypto_aead_chacha20poly1305_ietf_npubbytes:sf,_crypto_pwhash_memlimit_moderate:tf,runPostSets:Cd,stackAlloc:Oe,stackSave:_f,stackRestore:xf,establishStackSpace:ff,setThrew:af,setTempRet0:Af,getTempRet0:Wf}})


// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg,Module.asmLibraryArg,buffer);var _crypto_onetimeauth_poly1305_init=Module["_crypto_onetimeauth_poly1305_init"]=asm["_crypto_onetimeauth_poly1305_init"];var _crypto_hash_sha512_init=Module["_crypto_hash_sha512_init"]=asm["_crypto_hash_sha512_init"];var _crypto_stream_xsalsa20_noncebytes=Module["_crypto_stream_xsalsa20_noncebytes"]=asm["_crypto_stream_xsalsa20_noncebytes"];var _crypto_auth_hmacsha256_verify=Module["_crypto_auth_hmacsha256_verify"]=asm["_crypto_auth_hmacsha256_verify"];var _crypto_onetimeauth_bytes=Module["_crypto_onetimeauth_bytes"]=asm["_crypto_onetimeauth_bytes"];var _crypto_shorthash_primitive=Module["_crypto_shorthash_primitive"]=asm["_crypto_shorthash_primitive"];var _crypto_box_open=Module["_crypto_box_open"]=asm["_crypto_box_open"];var _crypto_stream_chacha20_ietf_noncebytes=Module["_crypto_stream_chacha20_ietf_noncebytes"]=asm["_crypto_stream_chacha20_ietf_noncebytes"];var _crypto_stream_salsa20_xor=Module["_crypto_stream_salsa20_xor"]=asm["_crypto_stream_salsa20_xor"];var _crypto_auth_hmacsha512_verify=Module["_crypto_auth_hmacsha512_verify"]=asm["_crypto_auth_hmacsha512_verify"];var _crypto_generichash_blake2b_keybytes_min=Module["_crypto_generichash_blake2b_keybytes_min"]=asm["_crypto_generichash_blake2b_keybytes_min"];var _crypto_generichash_blake2b_bytes=Module["_crypto_generichash_blake2b_bytes"]=asm["_crypto_generichash_blake2b_bytes"];var _crypto_pwhash_saltbytes=Module["_crypto_pwhash_saltbytes"]=asm["_crypto_pwhash_saltbytes"];var _crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive"]=asm["_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive"];var _crypto_box_seal_open=Module["_crypto_box_seal_open"]=asm["_crypto_box_seal_open"];var _crypto_scalarmult_curve25519_base=Module["_crypto_scalarmult_curve25519_base"]=asm["_crypto_scalarmult_curve25519_base"];var _bitshift64Lshr=Module["_bitshift64Lshr"]=asm["_bitshift64Lshr"];var _sodium_bin2hex=Module["_sodium_bin2hex"]=asm["_sodium_bin2hex"];var _crypto_pwhash_scryptsalsa208sha256=Module["_crypto_pwhash_scryptsalsa208sha256"]=asm["_crypto_pwhash_scryptsalsa208sha256"];var _crypto_scalarmult_primitive=Module["_crypto_scalarmult_primitive"]=asm["_crypto_scalarmult_primitive"];var _crypto_secretbox_xsalsa20poly1305_open=Module["_crypto_secretbox_xsalsa20poly1305_open"]=asm["_crypto_secretbox_xsalsa20poly1305_open"];var _crypto_box_noncebytes=Module["_crypto_box_noncebytes"]=asm["_crypto_box_noncebytes"];var _crypto_aead_chacha20poly1305_ietf_keybytes=Module["_crypto_aead_chacha20poly1305_ietf_keybytes"]=asm["_crypto_aead_chacha20poly1305_ietf_keybytes"];var _crypto_aead_chacha20poly1305_ietf_encrypt_detached=Module["_crypto_aead_chacha20poly1305_ietf_encrypt_detached"]=asm["_crypto_aead_chacha20poly1305_ietf_encrypt_detached"];var _crypto_scalarmult_base=Module["_crypto_scalarmult_base"]=asm["_crypto_scalarmult_base"];var _crypto_aead_chacha20poly1305_abytes=Module["_crypto_aead_chacha20poly1305_abytes"]=asm["_crypto_aead_chacha20poly1305_abytes"];var _crypto_auth_bytes=Module["_crypto_auth_bytes"]=asm["_crypto_auth_bytes"];var _crypto_onetimeauth=Module["_crypto_onetimeauth"]=asm["_crypto_onetimeauth"];var _crypto_stream_chacha20_keybytes=Module["_crypto_stream_chacha20_keybytes"]=asm["_crypto_stream_chacha20_keybytes"];var _crypto_sign_open=Module["_crypto_sign_open"]=asm["_crypto_sign_open"];var _crypto_auth_hmacsha512256_update=Module["_crypto_auth_hmacsha512256_update"]=asm["_crypto_auth_hmacsha512256_update"];var _sbrk=Module["_sbrk"]=asm["_sbrk"];var _memcpy=Module["_memcpy"]=asm["_memcpy"];var _crypto_onetimeauth_poly1305=Module["_crypto_onetimeauth_poly1305"]=asm["_crypto_onetimeauth_poly1305"];var _crypto_sign_ed25519_keypair=Module["_crypto_sign_ed25519_keypair"]=asm["_crypto_sign_ed25519_keypair"];var _crypto_pwhash=Module["_crypto_pwhash"]=asm["_crypto_pwhash"];var _crypto_auth_hmacsha512256=Module["_crypto_auth_hmacsha512256"]=asm["_crypto_auth_hmacsha512256"];var _crypto_shorthash_siphash24_keybytes=Module["_crypto_shorthash_siphash24_keybytes"]=asm["_crypto_shorthash_siphash24_keybytes"];var _crypto_box_seed_keypair=Module["_crypto_box_seed_keypair"]=asm["_crypto_box_seed_keypair"];var _crypto_auth_hmacsha512_init=Module["_crypto_auth_hmacsha512_init"]=asm["_crypto_auth_hmacsha512_init"];var _crypto_generichash_blake2b_keybytes_max=Module["_crypto_generichash_blake2b_keybytes_max"]=asm["_crypto_generichash_blake2b_keybytes_max"];var _crypto_box_beforenmbytes=Module["_crypto_box_beforenmbytes"]=asm["_crypto_box_beforenmbytes"];var _crypto_pwhash_scryptsalsa208sha256_memlimit_interactive=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive"]=asm["_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive"];var _crypto_sign_ed25519_sk_to_pk=Module["_crypto_sign_ed25519_sk_to_pk"]=asm["_crypto_sign_ed25519_sk_to_pk"];var _crypto_auth_hmacsha512_update=Module["_crypto_auth_hmacsha512_update"]=asm["_crypto_auth_hmacsha512_update"];var ___udivmoddi4=Module["___udivmoddi4"]=asm["___udivmoddi4"];var _crypto_stream_xsalsa20=Module["_crypto_stream_xsalsa20"]=asm["_crypto_stream_xsalsa20"];var _crypto_scalarmult_curve25519=Module["_crypto_scalarmult_curve25519"]=asm["_crypto_scalarmult_curve25519"];var _crypto_box_open_easy_afternm=Module["_crypto_box_open_easy_afternm"]=asm["_crypto_box_open_easy_afternm"];var _crypto_auth_hmacsha512=Module["_crypto_auth_hmacsha512"]=asm["_crypto_auth_hmacsha512"];var _crypto_stream_chacha20_ietf_xor_ic=Module["_crypto_stream_chacha20_ietf_xor_ic"]=asm["_crypto_stream_chacha20_ietf_xor_ic"];var _crypto_hash_sha256_update=Module["_crypto_hash_sha256_update"]=asm["_crypto_hash_sha256_update"];var _crypto_box_curve25519xsalsa20poly1305_seedbytes=Module["_crypto_box_curve25519xsalsa20poly1305_seedbytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_seedbytes"];var _crypto_box_zerobytes=Module["_crypto_box_zerobytes"]=asm["_crypto_box_zerobytes"];var _crypto_stream_salsa20_keybytes=Module["_crypto_stream_salsa20_keybytes"]=asm["_crypto_stream_salsa20_keybytes"];var _crypto_auth_hmacsha512256_keybytes=Module["_crypto_auth_hmacsha512256_keybytes"]=asm["_crypto_auth_hmacsha512256_keybytes"];var _randombytes_uniform=Module["_randombytes_uniform"]=asm["_randombytes_uniform"];var _crypto_aead_chacha20poly1305_keybytes=Module["_crypto_aead_chacha20poly1305_keybytes"]=asm["_crypto_aead_chacha20poly1305_keybytes"];var _crypto_hash_sha512_bytes=Module["_crypto_hash_sha512_bytes"]=asm["_crypto_hash_sha512_bytes"];var _crypto_onetimeauth_statebytes=Module["_crypto_onetimeauth_statebytes"]=asm["_crypto_onetimeauth_statebytes"];var _crypto_generichash_blake2b_final=Module["_crypto_generichash_blake2b_final"]=asm["_crypto_generichash_blake2b_final"];var _crypto_generichash_blake2b_init_salt_personal=Module["_crypto_generichash_blake2b_init_salt_personal"]=asm["_crypto_generichash_blake2b_init_salt_personal"];var _crypto_box_seal=Module["_crypto_box_seal"]=asm["_crypto_box_seal"];var _crypto_sign_ed25519_publickeybytes=Module["_crypto_sign_ed25519_publickeybytes"]=asm["_crypto_sign_ed25519_publickeybytes"];var _free=Module["_free"]=asm["_free"];var runPostSets=Module["runPostSets"]=asm["runPostSets"];var _crypto_core_hsalsa20_keybytes=Module["_crypto_core_hsalsa20_keybytes"]=asm["_crypto_core_hsalsa20_keybytes"];var _crypto_sign_primitive=Module["_crypto_sign_primitive"]=asm["_crypto_sign_primitive"];var ___uremdi3=Module["___uremdi3"]=asm["___uremdi3"];var _crypto_scalarmult_curve25519_bytes=Module["_crypto_scalarmult_curve25519_bytes"]=asm["_crypto_scalarmult_curve25519_bytes"];var _crypto_auth_keybytes=Module["_crypto_auth_keybytes"]=asm["_crypto_auth_keybytes"];var _crypto_box=Module["_crypto_box"]=asm["_crypto_box"];var _crypto_onetimeauth_poly1305_keybytes=Module["_crypto_onetimeauth_poly1305_keybytes"]=asm["_crypto_onetimeauth_poly1305_keybytes"];var _crypto_box_curve25519xsalsa20poly1305_open_afternm=Module["_crypto_box_curve25519xsalsa20poly1305_open_afternm"]=asm["_crypto_box_curve25519xsalsa20poly1305_open_afternm"];var _crypto_pwhash_scryptsalsa208sha256_saltbytes=Module["_crypto_pwhash_scryptsalsa208sha256_saltbytes"]=asm["_crypto_pwhash_scryptsalsa208sha256_saltbytes"];var _crypto_aead_chacha20poly1305_npubbytes=Module["_crypto_aead_chacha20poly1305_npubbytes"]=asm["_crypto_aead_chacha20poly1305_npubbytes"];var _crypto_stream_primitive=Module["_crypto_stream_primitive"]=asm["_crypto_stream_primitive"];var _crypto_pwhash_argon2i_str_verify=Module["_crypto_pwhash_argon2i_str_verify"]=asm["_crypto_pwhash_argon2i_str_verify"];var _crypto_onetimeauth_poly1305_final=Module["_crypto_onetimeauth_poly1305_final"]=asm["_crypto_onetimeauth_poly1305_final"];var _crypto_shorthash=Module["_crypto_shorthash"]=asm["_crypto_shorthash"];var _crypto_onetimeauth_poly1305_bytes=Module["_crypto_onetimeauth_poly1305_bytes"]=asm["_crypto_onetimeauth_poly1305_bytes"];var _crypto_secretbox_detached=Module["_crypto_secretbox_detached"]=asm["_crypto_secretbox_detached"];var _crypto_box_curve25519xsalsa20poly1305_seed_keypair=Module["_crypto_box_curve25519xsalsa20poly1305_seed_keypair"]=asm["_crypto_box_curve25519xsalsa20poly1305_seed_keypair"];var _crypto_box_primitive=Module["_crypto_box_primitive"]=asm["_crypto_box_primitive"];var _crypto_pwhash_str=Module["_crypto_pwhash_str"]=asm["_crypto_pwhash_str"];var _crypto_box_detached_afternm=Module["_crypto_box_detached_afternm"]=asm["_crypto_box_detached_afternm"];var _crypto_stream_salsa20_xor_ic=Module["_crypto_stream_salsa20_xor_ic"]=asm["_crypto_stream_salsa20_xor_ic"];var _crypto_secretbox_xsalsa20poly1305_boxzerobytes=Module["_crypto_secretbox_xsalsa20poly1305_boxzerobytes"]=asm["_crypto_secretbox_xsalsa20poly1305_boxzerobytes"];var _crypto_auth_hmacsha256_init=Module["_crypto_auth_hmacsha256_init"]=asm["_crypto_auth_hmacsha256_init"];var _crypto_auth_hmacsha512_keybytes=Module["_crypto_auth_hmacsha512_keybytes"]=asm["_crypto_auth_hmacsha512_keybytes"];var _crypto_auth=Module["_crypto_auth"]=asm["_crypto_auth"];var _crypto_auth_hmacsha512256_final=Module["_crypto_auth_hmacsha512256_final"]=asm["_crypto_auth_hmacsha512256_final"];var _randombytes_random=Module["_randombytes_random"]=asm["_randombytes_random"];var _crypto_onetimeauth_verify=Module["_crypto_onetimeauth_verify"]=asm["_crypto_onetimeauth_verify"];var _crypto_pwhash_str_verify=Module["_crypto_pwhash_str_verify"]=asm["_crypto_pwhash_str_verify"];var _crypto_sign_keypair=Module["_crypto_sign_keypair"]=asm["_crypto_sign_keypair"];var _crypto_sign_ed25519_open=Module["_crypto_sign_ed25519_open"]=asm["_crypto_sign_ed25519_open"];var _crypto_generichash_keybytes_min=Module["_crypto_generichash_keybytes_min"]=asm["_crypto_generichash_keybytes_min"];var _crypto_generichash_statebytes=Module["_crypto_generichash_statebytes"]=asm["_crypto_generichash_statebytes"];var _crypto_aead_chacha20poly1305_encrypt_detached=Module["_crypto_aead_chacha20poly1305_encrypt_detached"]=asm["_crypto_aead_chacha20poly1305_encrypt_detached"];var _crypto_core_salsa20_keybytes=Module["_crypto_core_salsa20_keybytes"]=asm["_crypto_core_salsa20_keybytes"];var _crypto_aead_chacha20poly1305_ietf_nsecbytes=Module["_crypto_aead_chacha20poly1305_ietf_nsecbytes"]=asm["_crypto_aead_chacha20poly1305_ietf_nsecbytes"];var _crypto_pwhash_strprefix=Module["_crypto_pwhash_strprefix"]=asm["_crypto_pwhash_strprefix"];var _crypto_box_afternm=Module["_crypto_box_afternm"]=asm["_crypto_box_afternm"];var _crypto_auth_hmacsha512256_bytes=Module["_crypto_auth_hmacsha512256_bytes"]=asm["_crypto_auth_hmacsha512256_bytes"];var _crypto_box_curve25519xsalsa20poly1305_keypair=Module["_crypto_box_curve25519xsalsa20poly1305_keypair"]=asm["_crypto_box_curve25519xsalsa20poly1305_keypair"];var _crypto_hash_sha256_init=Module["_crypto_hash_sha256_init"]=asm["_crypto_hash_sha256_init"];var _crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive"]=asm["_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive"];var _crypto_pwhash_scryptsalsa208sha256_str_verify=Module["_crypto_pwhash_scryptsalsa208sha256_str_verify"]=asm["_crypto_pwhash_scryptsalsa208sha256_str_verify"];var _crypto_hash_primitive=Module["_crypto_hash_primitive"]=asm["_crypto_hash_primitive"];var _crypto_scalarmult_curve25519_scalarbytes=Module["_crypto_scalarmult_curve25519_scalarbytes"]=asm["_crypto_scalarmult_curve25519_scalarbytes"];var _crypto_sign_ed25519_pk_to_curve25519=Module["_crypto_sign_ed25519_pk_to_curve25519"]=asm["_crypto_sign_ed25519_pk_to_curve25519"];var _crypto_verify_64=Module["_crypto_verify_64"]=asm["_crypto_verify_64"];var _crypto_aead_chacha20poly1305_nsecbytes=Module["_crypto_aead_chacha20poly1305_nsecbytes"]=asm["_crypto_aead_chacha20poly1305_nsecbytes"];var _crypto_shorthash_siphash24=Module["_crypto_shorthash_siphash24"]=asm["_crypto_shorthash_siphash24"];var _crypto_box_curve25519xsalsa20poly1305_macbytes=Module["_crypto_box_curve25519xsalsa20poly1305_macbytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_macbytes"];var _crypto_stream_chacha20_ietf=Module["_crypto_stream_chacha20_ietf"]=asm["_crypto_stream_chacha20_ietf"];var _crypto_generichash=Module["_crypto_generichash"]=asm["_crypto_generichash"];var _crypto_sign_ed25519=Module["_crypto_sign_ed25519"]=asm["_crypto_sign_ed25519"];var _crypto_core_hsalsa20_outputbytes=Module["_crypto_core_hsalsa20_outputbytes"]=asm["_crypto_core_hsalsa20_outputbytes"];var _crypto_pwhash_opslimit_interactive=Module["_crypto_pwhash_opslimit_interactive"]=asm["_crypto_pwhash_opslimit_interactive"];var _crypto_box_curve25519xsalsa20poly1305_noncebytes=Module["_crypto_box_curve25519xsalsa20poly1305_noncebytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_noncebytes"];var _crypto_pwhash_memlimit_sensitive=Module["_crypto_pwhash_memlimit_sensitive"]=asm["_crypto_pwhash_memlimit_sensitive"];var _crypto_core_salsa20_constbytes=Module["_crypto_core_salsa20_constbytes"]=asm["_crypto_core_salsa20_constbytes"];var _crypto_box_boxzerobytes=Module["_crypto_box_boxzerobytes"]=asm["_crypto_box_boxzerobytes"];var _sodium_library_version_major=Module["_sodium_library_version_major"]=asm["_sodium_library_version_major"];var _crypto_verify_16_bytes=Module["_crypto_verify_16_bytes"]=asm["_crypto_verify_16_bytes"];var _crypto_aead_chacha20poly1305_ietf_encrypt=Module["_crypto_aead_chacha20poly1305_ietf_encrypt"]=asm["_crypto_aead_chacha20poly1305_ietf_encrypt"];var _crypto_pwhash_argon2i_saltbytes=Module["_crypto_pwhash_argon2i_saltbytes"]=asm["_crypto_pwhash_argon2i_saltbytes"];var _crypto_hash_sha512_update=Module["_crypto_hash_sha512_update"]=asm["_crypto_hash_sha512_update"];var _crypto_onetimeauth_poly1305_verify=Module["_crypto_onetimeauth_poly1305_verify"]=asm["_crypto_onetimeauth_poly1305_verify"];var _crypto_box_beforenm=Module["_crypto_box_beforenm"]=asm["_crypto_box_beforenm"];var _crypto_generichash_blake2b_init=Module["_crypto_generichash_blake2b_init"]=asm["_crypto_generichash_blake2b_init"];var _crypto_aead_chacha20poly1305_ietf_decrypt=Module["_crypto_aead_chacha20poly1305_ietf_decrypt"]=asm["_crypto_aead_chacha20poly1305_ietf_decrypt"];var _crypto_stream_chacha20_ietf_xor=Module["_crypto_stream_chacha20_ietf_xor"]=asm["_crypto_stream_chacha20_ietf_xor"];var _crypto_pwhash_primitive=Module["_crypto_pwhash_primitive"]=asm["_crypto_pwhash_primitive"];var _crypto_scalarmult=Module["_crypto_scalarmult"]=asm["_crypto_scalarmult"];var _crypto_onetimeauth_keybytes=Module["_crypto_onetimeauth_keybytes"]=asm["_crypto_onetimeauth_keybytes"];var _crypto_pwhash_argon2i=Module["_crypto_pwhash_argon2i"]=asm["_crypto_pwhash_argon2i"];var _crypto_auth_hmacsha512256_verify=Module["_crypto_auth_hmacsha512256_verify"]=asm["_crypto_auth_hmacsha512256_verify"];var _crypto_auth_hmacsha256_final=Module["_crypto_auth_hmacsha256_final"]=asm["_crypto_auth_hmacsha256_final"];var _crypto_box_secretkeybytes=Module["_crypto_box_secretkeybytes"]=asm["_crypto_box_secretkeybytes"];var _crypto_verify_16=Module["_crypto_verify_16"]=asm["_crypto_verify_16"];var _crypto_aead_chacha20poly1305_ietf_npubbytes=Module["_crypto_aead_chacha20poly1305_ietf_npubbytes"]=asm["_crypto_aead_chacha20poly1305_ietf_npubbytes"];var _crypto_onetimeauth_update=Module["_crypto_onetimeauth_update"]=asm["_crypto_onetimeauth_update"];var _crypto_aead_chacha20poly1305_encrypt=Module["_crypto_aead_chacha20poly1305_encrypt"]=asm["_crypto_aead_chacha20poly1305_encrypt"];var _crypto_secretbox_zerobytes=Module["_crypto_secretbox_zerobytes"]=asm["_crypto_secretbox_zerobytes"];var _crypto_core_salsa20=Module["_crypto_core_salsa20"]=asm["_crypto_core_salsa20"];var _llvm_cttz_i32=Module["_llvm_cttz_i32"]=asm["_llvm_cttz_i32"];var _crypto_box_curve25519xsalsa20poly1305_beforenmbytes=Module["_crypto_box_curve25519xsalsa20poly1305_beforenmbytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_beforenmbytes"];var _crypto_pwhash_scryptsalsa208sha256_ll=Module["_crypto_pwhash_scryptsalsa208sha256_ll"]=asm["_crypto_pwhash_scryptsalsa208sha256_ll"];var _crypto_box_detached=Module["_crypto_box_detached"]=asm["_crypto_box_detached"];var _randombytes_buf=Module["_randombytes_buf"]=asm["_randombytes_buf"];var _crypto_box_open_detached_afternm=Module["_crypto_box_open_detached_afternm"]=asm["_crypto_box_open_detached_afternm"];var _crypto_sign_seedbytes=Module["_crypto_sign_seedbytes"]=asm["_crypto_sign_seedbytes"];var _crypto_pwhash_scryptsalsa208sha256_strbytes=Module["_crypto_pwhash_scryptsalsa208sha256_strbytes"]=asm["_crypto_pwhash_scryptsalsa208sha256_strbytes"];var _crypto_generichash_blake2b_saltbytes=Module["_crypto_generichash_blake2b_saltbytes"]=asm["_crypto_generichash_blake2b_saltbytes"];var _bitshift64Ashr=Module["_bitshift64Ashr"]=asm["_bitshift64Ashr"];var _crypto_box_open_detached=Module["_crypto_box_open_detached"]=asm["_crypto_box_open_detached"];var _crypto_scalarmult_bytes=Module["_crypto_scalarmult_bytes"]=asm["_crypto_scalarmult_bytes"];var _crypto_secretbox_xsalsa20poly1305=Module["_crypto_secretbox_xsalsa20poly1305"]=asm["_crypto_secretbox_xsalsa20poly1305"];var _crypto_auth_verify=Module["_crypto_auth_verify"]=asm["_crypto_auth_verify"];var _crypto_sign_ed25519_seed_keypair=Module["_crypto_sign_ed25519_seed_keypair"]=asm["_crypto_sign_ed25519_seed_keypair"];var _crypto_secretbox_xsalsa20poly1305_zerobytes=Module["_crypto_secretbox_xsalsa20poly1305_zerobytes"]=asm["_crypto_secretbox_xsalsa20poly1305_zerobytes"];var _crypto_onetimeauth_poly1305_update=Module["_crypto_onetimeauth_poly1305_update"]=asm["_crypto_onetimeauth_poly1305_update"];var _crypto_auth_hmacsha512256_init=Module["_crypto_auth_hmacsha512256_init"]=asm["_crypto_auth_hmacsha512256_init"];var _crypto_auth_hmacsha256=Module["_crypto_auth_hmacsha256"]=asm["_crypto_auth_hmacsha256"];var _crypto_pwhash_strbytes=Module["_crypto_pwhash_strbytes"]=asm["_crypto_pwhash_strbytes"];var _crypto_stream_xor=Module["_crypto_stream_xor"]=asm["_crypto_stream_xor"];var _crypto_stream_xsalsa20_xor_ic=Module["_crypto_stream_xsalsa20_xor_ic"]=asm["_crypto_stream_xsalsa20_xor_ic"];var _crypto_verify_64_bytes=Module["_crypto_verify_64_bytes"]=asm["_crypto_verify_64_bytes"];var _randombytes_stir=Module["_randombytes_stir"]=asm["_randombytes_stir"];var _crypto_secretbox_easy=Module["_crypto_secretbox_easy"]=asm["_crypto_secretbox_easy"];var _crypto_box_open_easy=Module["_crypto_box_open_easy"]=asm["_crypto_box_open_easy"];var _crypto_pwhash_argon2i_strprefix=Module["_crypto_pwhash_argon2i_strprefix"]=asm["_crypto_pwhash_argon2i_strprefix"];var _crypto_auth_hmacsha256_update=Module["_crypto_auth_hmacsha256_update"]=asm["_crypto_auth_hmacsha256_update"];var _crypto_pwhash_scryptsalsa208sha256_str=Module["_crypto_pwhash_scryptsalsa208sha256_str"]=asm["_crypto_pwhash_scryptsalsa208sha256_str"];var _memset=Module["_memset"]=asm["_memset"];var _crypto_stream_salsa20=Module["_crypto_stream_salsa20"]=asm["_crypto_stream_salsa20"];var _crypto_pwhash_argon2i_str=Module["_crypto_pwhash_argon2i_str"]=asm["_crypto_pwhash_argon2i_str"];var _crypto_hash=Module["_crypto_hash"]=asm["_crypto_hash"];var _crypto_pwhash_argon2i_memlimit_sensitive=Module["_crypto_pwhash_argon2i_memlimit_sensitive"]=asm["_crypto_pwhash_argon2i_memlimit_sensitive"];var _crypto_pwhash_argon2i_opslimit_sensitive=Module["_crypto_pwhash_argon2i_opslimit_sensitive"]=asm["_crypto_pwhash_argon2i_opslimit_sensitive"];var _crypto_box_sealbytes=Module["_crypto_box_sealbytes"]=asm["_crypto_box_sealbytes"];var _crypto_auth_hmacsha512_final=Module["_crypto_auth_hmacsha512_final"]=asm["_crypto_auth_hmacsha512_final"];var _crypto_auth_hmacsha512_statebytes=Module["_crypto_auth_hmacsha512_statebytes"]=asm["_crypto_auth_hmacsha512_statebytes"];var _crypto_secretbox_boxzerobytes=Module["_crypto_secretbox_boxzerobytes"]=asm["_crypto_secretbox_boxzerobytes"];var _i64Subtract=Module["_i64Subtract"]=asm["_i64Subtract"];var _crypto_pwhash_alg_default=Module["_crypto_pwhash_alg_default"]=asm["_crypto_pwhash_alg_default"];var _crypto_pwhash_scryptsalsa208sha256_strprefix=Module["_crypto_pwhash_scryptsalsa208sha256_strprefix"]=asm["_crypto_pwhash_scryptsalsa208sha256_strprefix"];var _crypto_onetimeauth_primitive=Module["_crypto_onetimeauth_primitive"]=asm["_crypto_onetimeauth_primitive"];var _crypto_box_seedbytes=Module["_crypto_box_seedbytes"]=asm["_crypto_box_seedbytes"];var _crypto_stream_chacha20=Module["_crypto_stream_chacha20"]=asm["_crypto_stream_chacha20"];var _crypto_core_hsalsa20_constbytes=Module["_crypto_core_hsalsa20_constbytes"]=asm["_crypto_core_hsalsa20_constbytes"];var _crypto_generichash_bytes=Module["_crypto_generichash_bytes"]=asm["_crypto_generichash_bytes"];var _crypto_secretbox=Module["_crypto_secretbox"]=asm["_crypto_secretbox"];var _crypto_generichash_blake2b_statebytes=Module["_crypto_generichash_blake2b_statebytes"]=asm["_crypto_generichash_blake2b_statebytes"];var _crypto_box_open_afternm=Module["_crypto_box_open_afternm"]=asm["_crypto_box_open_afternm"];var _crypto_generichash_blake2b_bytes_min=Module["_crypto_generichash_blake2b_bytes_min"]=asm["_crypto_generichash_blake2b_bytes_min"];var _crypto_pwhash_opslimit_moderate=Module["_crypto_pwhash_opslimit_moderate"]=asm["_crypto_pwhash_opslimit_moderate"];var _crypto_secretbox_open=Module["_crypto_secretbox_open"]=asm["_crypto_secretbox_open"];var _crypto_auth_hmacsha512_bytes=Module["_crypto_auth_hmacsha512_bytes"]=asm["_crypto_auth_hmacsha512_bytes"];var _crypto_core_salsa20_inputbytes=Module["_crypto_core_salsa20_inputbytes"]=asm["_crypto_core_salsa20_inputbytes"];var _crypto_box_macbytes=Module["_crypto_box_macbytes"]=asm["_crypto_box_macbytes"];var _crypto_secretbox_macbytes=Module["_crypto_secretbox_macbytes"]=asm["_crypto_secretbox_macbytes"];var _crypto_shorthash_bytes=Module["_crypto_shorthash_bytes"]=asm["_crypto_shorthash_bytes"];var _crypto_box_publickeybytes=Module["_crypto_box_publickeybytes"]=asm["_crypto_box_publickeybytes"];var _crypto_generichash_keybytes=Module["_crypto_generichash_keybytes"]=asm["_crypto_generichash_keybytes"];var _crypto_generichash_primitive=Module["_crypto_generichash_primitive"]=asm["_crypto_generichash_primitive"];var _crypto_sign_secretkeybytes=Module["_crypto_sign_secretkeybytes"]=asm["_crypto_sign_secretkeybytes"];var _crypto_pwhash_argon2i_strbytes=Module["_crypto_pwhash_argon2i_strbytes"]=asm["_crypto_pwhash_argon2i_strbytes"];var ___muldsi3=Module["___muldsi3"]=asm["___muldsi3"];var _crypto_hash_sha512_statebytes=Module["_crypto_hash_sha512_statebytes"]=asm["_crypto_hash_sha512_statebytes"];var _crypto_scalarmult_scalarbytes=Module["_crypto_scalarmult_scalarbytes"]=asm["_crypto_scalarmult_scalarbytes"];var _crypto_verify_32=Module["_crypto_verify_32"]=asm["_crypto_verify_32"];var _crypto_auth_hmacsha256_bytes=Module["_crypto_auth_hmacsha256_bytes"]=asm["_crypto_auth_hmacsha256_bytes"];var _crypto_auth_hmacsha256_statebytes=Module["_crypto_auth_hmacsha256_statebytes"]=asm["_crypto_auth_hmacsha256_statebytes"];var _crypto_pwhash_argon2i_opslimit_interactive=Module["_crypto_pwhash_argon2i_opslimit_interactive"]=asm["_crypto_pwhash_argon2i_opslimit_interactive"];var _crypto_aead_chacha20poly1305_decrypt=Module["_crypto_aead_chacha20poly1305_decrypt"]=asm["_crypto_aead_chacha20poly1305_decrypt"];var _crypto_stream_salsa20_noncebytes=Module["_crypto_stream_salsa20_noncebytes"]=asm["_crypto_stream_salsa20_noncebytes"];var _crypto_shorthash_keybytes=Module["_crypto_shorthash_keybytes"]=asm["_crypto_shorthash_keybytes"];var _malloc=Module["_malloc"]=asm["_malloc"];var _crypto_stream_noncebytes=Module["_crypto_stream_noncebytes"]=asm["_crypto_stream_noncebytes"];var _crypto_generichash_keybytes_max=Module["_crypto_generichash_keybytes_max"]=asm["_crypto_generichash_keybytes_max"];var _sodium_version_string=Module["_sodium_version_string"]=asm["_sodium_version_string"];var _memmove=Module["_memmove"]=asm["_memmove"];var _crypto_aead_chacha20poly1305_ietf_decrypt_detached=Module["_crypto_aead_chacha20poly1305_ietf_decrypt_detached"]=asm["_crypto_aead_chacha20poly1305_ietf_decrypt_detached"];var _crypto_hash_sha512_final=Module["_crypto_hash_sha512_final"]=asm["_crypto_hash_sha512_final"];var _crypto_pwhash_memlimit_interactive=Module["_crypto_pwhash_memlimit_interactive"]=asm["_crypto_pwhash_memlimit_interactive"];var _crypto_secretbox_xsalsa20poly1305_keybytes=Module["_crypto_secretbox_xsalsa20poly1305_keybytes"]=asm["_crypto_secretbox_xsalsa20poly1305_keybytes"];var _crypto_aead_chacha20poly1305_decrypt_detached=Module["_crypto_aead_chacha20poly1305_decrypt_detached"]=asm["_crypto_aead_chacha20poly1305_decrypt_detached"];var _crypto_sign=Module["_crypto_sign"]=asm["_crypto_sign"];var _crypto_box_curve25519xsalsa20poly1305_zerobytes=Module["_crypto_box_curve25519xsalsa20poly1305_zerobytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_zerobytes"];var _crypto_secretbox_noncebytes=Module["_crypto_secretbox_noncebytes"]=asm["_crypto_secretbox_noncebytes"];var _crypto_box_keypair=Module["_crypto_box_keypair"]=asm["_crypto_box_keypair"];var _crypto_secretbox_xsalsa20poly1305_macbytes=Module["_crypto_secretbox_xsalsa20poly1305_macbytes"]=asm["_crypto_secretbox_xsalsa20poly1305_macbytes"];var _crypto_box_curve25519xsalsa20poly1305_boxzerobytes=Module["_crypto_box_curve25519xsalsa20poly1305_boxzerobytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_boxzerobytes"];var _crypto_hash_sha256_bytes=Module["_crypto_hash_sha256_bytes"]=asm["_crypto_hash_sha256_bytes"];var ___udivdi3=Module["___udivdi3"]=asm["___udivdi3"];var _crypto_hash_bytes=Module["_crypto_hash_bytes"]=asm["_crypto_hash_bytes"];var _sodium_hex2bin=Module["_sodium_hex2bin"]=asm["_sodium_hex2bin"];var _sodium_init=Module["_sodium_init"]=asm["_sodium_init"];var _crypto_box_curve25519xsalsa20poly1305_afternm=Module["_crypto_box_curve25519xsalsa20poly1305_afternm"]=asm["_crypto_box_curve25519xsalsa20poly1305_afternm"];var _crypto_auth_hmacsha256_keybytes=Module["_crypto_auth_hmacsha256_keybytes"]=asm["_crypto_auth_hmacsha256_keybytes"];var _crypto_secretbox_keybytes=Module["_crypto_secretbox_keybytes"]=asm["_crypto_secretbox_keybytes"];var _crypto_box_easy=Module["_crypto_box_easy"]=asm["_crypto_box_easy"];var _randombytes=Module["_randombytes"]=asm["_randombytes"];var _crypto_sign_publickeybytes=Module["_crypto_sign_publickeybytes"]=asm["_crypto_sign_publickeybytes"];var _randombytes_close=Module["_randombytes_close"]=asm["_randombytes_close"];var _crypto_pwhash_argon2i_memlimit_moderate=Module["_crypto_pwhash_argon2i_memlimit_moderate"]=asm["_crypto_pwhash_argon2i_memlimit_moderate"];var _crypto_generichash_blake2b_bytes_max=Module["_crypto_generichash_blake2b_bytes_max"]=asm["_crypto_generichash_blake2b_bytes_max"];var _crypto_generichash_blake2b=Module["_crypto_generichash_blake2b"]=asm["_crypto_generichash_blake2b"];var _crypto_stream_chacha20_noncebytes=Module["_crypto_stream_chacha20_noncebytes"]=asm["_crypto_stream_chacha20_noncebytes"];var _crypto_hash_sha256_statebytes=Module["_crypto_hash_sha256_statebytes"]=asm["_crypto_hash_sha256_statebytes"];var _crypto_secretbox_open_detached=Module["_crypto_secretbox_open_detached"]=asm["_crypto_secretbox_open_detached"];var _crypto_sign_ed25519_sk_to_seed=Module["_crypto_sign_ed25519_sk_to_seed"]=asm["_crypto_sign_ed25519_sk_to_seed"];var _crypto_core_salsa20_outputbytes=Module["_crypto_core_salsa20_outputbytes"]=asm["_crypto_core_salsa20_outputbytes"];var _crypto_sign_ed25519_secretkeybytes=Module["_crypto_sign_ed25519_secretkeybytes"]=asm["_crypto_sign_ed25519_secretkeybytes"];var _crypto_pwhash_opslimit_sensitive=Module["_crypto_pwhash_opslimit_sensitive"]=asm["_crypto_pwhash_opslimit_sensitive"];var ___muldi3=Module["___muldi3"]=asm["___muldi3"];var _crypto_generichash_blake2b_personalbytes=Module["_crypto_generichash_blake2b_personalbytes"]=asm["_crypto_generichash_blake2b_personalbytes"];var _bitshift64Shl=Module["_bitshift64Shl"]=asm["_bitshift64Shl"];var _crypto_box_curve25519xsalsa20poly1305_open=Module["_crypto_box_curve25519xsalsa20poly1305_open"]=asm["_crypto_box_curve25519xsalsa20poly1305_open"];var _crypto_sign_verify_detached=Module["_crypto_sign_verify_detached"]=asm["_crypto_sign_verify_detached"];var _crypto_pwhash_argon2i_opslimit_moderate=Module["_crypto_pwhash_argon2i_opslimit_moderate"]=asm["_crypto_pwhash_argon2i_opslimit_moderate"];var _crypto_pwhash_alg_argon2i13=Module["_crypto_pwhash_alg_argon2i13"]=asm["_crypto_pwhash_alg_argon2i13"];var _randombytes_implementation_name=Module["_randombytes_implementation_name"]=asm["_randombytes_implementation_name"];var _crypto_box_curve25519xsalsa20poly1305=Module["_crypto_box_curve25519xsalsa20poly1305"]=asm["_crypto_box_curve25519xsalsa20poly1305"];var _crypto_stream=Module["_crypto_stream"]=asm["_crypto_stream"];var _crypto_sign_ed25519_detached=Module["_crypto_sign_ed25519_detached"]=asm["_crypto_sign_ed25519_detached"];var _crypto_generichash_init=Module["_crypto_generichash_init"]=asm["_crypto_generichash_init"];var _i64Add=Module["_i64Add"]=asm["_i64Add"];var _crypto_sign_ed25519_sk_to_curve25519=Module["_crypto_sign_ed25519_sk_to_curve25519"]=asm["_crypto_sign_ed25519_sk_to_curve25519"];var _crypto_sign_bytes=Module["_crypto_sign_bytes"]=asm["_crypto_sign_bytes"];var _crypto_secretbox_primitive=Module["_crypto_secretbox_primitive"]=asm["_crypto_secretbox_primitive"];var _crypto_generichash_update=Module["_crypto_generichash_update"]=asm["_crypto_generichash_update"];var _crypto_generichash_blake2b_update=Module["_crypto_generichash_blake2b_update"]=asm["_crypto_generichash_blake2b_update"];var _crypto_verify_32_bytes=Module["_crypto_verify_32_bytes"]=asm["_crypto_verify_32_bytes"];var _crypto_aead_chacha20poly1305_ietf_abytes=Module["_crypto_aead_chacha20poly1305_ietf_abytes"]=asm["_crypto_aead_chacha20poly1305_ietf_abytes"];var _crypto_generichash_blake2b_keybytes=Module["_crypto_generichash_blake2b_keybytes"]=asm["_crypto_generichash_blake2b_keybytes"];var _crypto_generichash_bytes_min=Module["_crypto_generichash_bytes_min"]=asm["_crypto_generichash_bytes_min"];var _crypto_box_curve25519xsalsa20poly1305_secretkeybytes=Module["_crypto_box_curve25519xsalsa20poly1305_secretkeybytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_secretkeybytes"];var _crypto_stream_xsalsa20_xor=Module["_crypto_stream_xsalsa20_xor"]=asm["_crypto_stream_xsalsa20_xor"];var _crypto_sign_detached=Module["_crypto_sign_detached"]=asm["_crypto_sign_detached"];var _crypto_hash_sha512=Module["_crypto_hash_sha512"]=asm["_crypto_hash_sha512"];var _crypto_generichash_bytes_max=Module["_crypto_generichash_bytes_max"]=asm["_crypto_generichash_bytes_max"];var _crypto_box_easy_afternm=Module["_crypto_box_easy_afternm"]=asm["_crypto_box_easy_afternm"];var _crypto_stream_chacha20_xor_ic=Module["_crypto_stream_chacha20_xor_ic"]=asm["_crypto_stream_chacha20_xor_ic"];var _crypto_sign_ed25519_verify_detached=Module["_crypto_sign_ed25519_verify_detached"]=asm["_crypto_sign_ed25519_verify_detached"];var _crypto_sign_ed25519_bytes=Module["_crypto_sign_ed25519_bytes"]=asm["_crypto_sign_ed25519_bytes"];var _crypto_stream_xsalsa20_keybytes=Module["_crypto_stream_xsalsa20_keybytes"]=asm["_crypto_stream_xsalsa20_keybytes"];var _crypto_hash_sha256=Module["_crypto_hash_sha256"]=asm["_crypto_hash_sha256"];var _crypto_sign_ed25519_seedbytes=Module["_crypto_sign_ed25519_seedbytes"]=asm["_crypto_sign_ed25519_seedbytes"];var _sodium_library_version_minor=Module["_sodium_library_version_minor"]=asm["_sodium_library_version_minor"];var _crypto_core_hsalsa20_inputbytes=Module["_crypto_core_hsalsa20_inputbytes"]=asm["_crypto_core_hsalsa20_inputbytes"];var _crypto_onetimeauth_final=Module["_crypto_onetimeauth_final"]=asm["_crypto_onetimeauth_final"];var _crypto_secretbox_open_easy=Module["_crypto_secretbox_open_easy"]=asm["_crypto_secretbox_open_easy"];var _crypto_generichash_final=Module["_crypto_generichash_final"]=asm["_crypto_generichash_final"];var _crypto_generichash_blake2b_salt_personal=Module["_crypto_generichash_blake2b_salt_personal"]=asm["_crypto_generichash_blake2b_salt_personal"];var _crypto_pwhash_argon2i_alg_argon2i13=Module["_crypto_pwhash_argon2i_alg_argon2i13"]=asm["_crypto_pwhash_argon2i_alg_argon2i13"];var _crypto_shorthash_siphash24_bytes=Module["_crypto_shorthash_siphash24_bytes"]=asm["_crypto_shorthash_siphash24_bytes"];var _crypto_auth_hmacsha512256_statebytes=Module["_crypto_auth_hmacsha512256_statebytes"]=asm["_crypto_auth_hmacsha512256_statebytes"];var _crypto_sign_seed_keypair=Module["_crypto_sign_seed_keypair"]=asm["_crypto_sign_seed_keypair"];var _crypto_secretbox_xsalsa20poly1305_noncebytes=Module["_crypto_secretbox_xsalsa20poly1305_noncebytes"]=asm["_crypto_secretbox_xsalsa20poly1305_noncebytes"];var _crypto_pwhash_scryptsalsa208sha256_opslimit_interactive=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive"]=asm["_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive"];var _crypto_box_curve25519xsalsa20poly1305_beforenm=Module["_crypto_box_curve25519xsalsa20poly1305_beforenm"]=asm["_crypto_box_curve25519xsalsa20poly1305_beforenm"];var _crypto_pwhash_argon2i_memlimit_interactive=Module["_crypto_pwhash_argon2i_memlimit_interactive"]=asm["_crypto_pwhash_argon2i_memlimit_interactive"];var _crypto_hash_sha256_final=Module["_crypto_hash_sha256_final"]=asm["_crypto_hash_sha256_final"];var _crypto_stream_chacha20_xor=Module["_crypto_stream_chacha20_xor"]=asm["_crypto_stream_chacha20_xor"];var _crypto_stream_keybytes=Module["_crypto_stream_keybytes"]=asm["_crypto_stream_keybytes"];var _crypto_box_curve25519xsalsa20poly1305_publickeybytes=Module["_crypto_box_curve25519xsalsa20poly1305_publickeybytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_publickeybytes"];var _crypto_onetimeauth_init=Module["_crypto_onetimeauth_init"]=asm["_crypto_onetimeauth_init"];var _crypto_core_hsalsa20=Module["_crypto_core_hsalsa20"]=asm["_crypto_core_hsalsa20"];var _crypto_pwhash_memlimit_moderate=Module["_crypto_pwhash_memlimit_moderate"]=asm["_crypto_pwhash_memlimit_moderate"];Runtime.stackAlloc=asm["stackAlloc"];Runtime.stackSave=asm["stackSave"];Runtime.stackRestore=asm["stackRestore"];Runtime.establishStackSpace=asm["establishStackSpace"];Runtime.setTempRet0=asm["setTempRet0"];Runtime.getTempRet0=asm["getTempRet0"];function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var preloadStartTime=null;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};Module["callMain"]=Module.callMain=function callMain(args){args=args||[];ensureInitRuntime();var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0)}}var argv=[allocate(intArrayFromString(Module["thisProgram"]),"i8",ALLOC_NORMAL)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),"i8",ALLOC_NORMAL));pad()}argv.push(0);argv=allocate(argv,"i32",ALLOC_NORMAL);try{var ret=Module["_main"](argc,argv,0);exit(ret,true)}catch(e){if(e instanceof ExitStatus){return}else if(e=="SimulateInfiniteLoop"){Module["noExitRuntime"]=true;return}else{if(e&&typeof e==="object"&&e.stack)Module.printErr("exception thrown: "+[e,e.stack]);throw e}}finally{calledMain=true}};function run(args){args=args||Module["arguments"];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(Module["_main"]&&shouldRunNow)Module["callMain"](args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1);doRun()}),1)}else{doRun()}}Module["run"]=Module.run=run;function exit(status,implicit){if(implicit&&Module["noExitRuntime"]){return}if(Module["noExitRuntime"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status)}if(ENVIRONMENT_IS_NODE){process["exit"](status)}else if(ENVIRONMENT_IS_SHELL&&typeof quit==="function"){quit(status)}throw new ExitStatus(status)}Module["exit"]=Module.exit=exit;var abortDecorators=[];function abort(what){if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;var extra="\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";var output="abort("+what+") at "+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach((function(decorator){output=decorator(output,what)}))}throw output}Module["abort"]=Module.abort=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=true;if(Module["noInitialRun"]){shouldRunNow=false}run()




var nacl = (function () {
    'use strict';
    var exports = {};

    //---------------------------------------------------------------------------
    // Horrifying UTF-8 and hex codecs

    function encode_utf8(s) {
	return encode_latin1(unescape(encodeURIComponent(s)));
    }

    function encode_latin1(s) {
	var result = new Uint8Array(s.length);
	for (var i = 0; i < s.length; i++) {
	    var c = s.charCodeAt(i);
	    if ((c & 0xff) !== c) throw {message: "Cannot encode string in Latin1", str: s};
	    result[i] = (c & 0xff);
	}
	return result;
    }

    function decode_utf8(bs) {
	return decodeURIComponent(escape(decode_latin1(bs)));
    }

    function decode_latin1(bs) {
	var encoded = [];
	for (var i = 0; i < bs.length; i++) {
	    encoded.push(String.fromCharCode(bs[i]));
	}
	return encoded.join('');
    }

    function to_hex(bs) {
	var encoded = [];
	for (var i = 0; i < bs.length; i++) {
	    encoded.push("0123456789abcdef"[(bs[i] >> 4) & 15]);
	    encoded.push("0123456789abcdef"[bs[i] & 15]);
	}
	return encoded.join('');
    }

    function from_hex(s) {
        var result = new Uint8Array(s.length / 2);
        for (var i = 0; i < s.length / 2; i++) {
            result[i] = parseInt(s.substr(2*i,2),16);
        }
        return result;
    }

    //---------------------------------------------------------------------------
    // Allocation

    function MALLOC(nbytes) {
	var result = nacl_raw._malloc(nbytes);
	if (result === 0) {
	    throw {message: "malloc() failed", nbytes: nbytes};
	}
	return result;
    }

    function FREE(pointer) {
	nacl_raw._free(pointer);
    }

    //---------------------------------------------------------------------------

    function injectBytes(bs, leftPadding) {
	var p = leftPadding || 0;
	var address = MALLOC(bs.length + p);
	nacl_raw.HEAPU8.set(bs, address + p);
	for (var i = address; i < address + p; i++) {
	    nacl_raw.HEAPU8[i] = 0;
	}
	return address;
    }

    function check_injectBytes(function_name, what, thing, expected_length, leftPadding) {
	check_length(function_name, what, thing, expected_length);
	return injectBytes(thing, leftPadding);
    }

    function extractBytes(address, length) {
	var result = new Uint8Array(length);
	result.set(nacl_raw.HEAPU8.subarray(address, address + length));
	return result;
    }

    //---------------------------------------------------------------------------

    function check(function_name, result) {
	if (result !== 0) {
	    throw {message: "nacl_raw." + function_name + " signalled an error"};
	}
    }

    function check_length(function_name, what, thing, expected_length) {
	if (thing.length !== expected_length) {
	    throw {message: "nacl." + function_name + " expected " +
	           expected_length + "-byte " + what + " but got length " + thing.length};
	}
    }

    function Target(length) {
	this.length = length;
	this.address = MALLOC(length);
    }

    Target.prototype.extractBytes = function (offset) {
	var result = extractBytes(this.address + (offset || 0), this.length - (offset || 0));
	FREE(this.address);
	this.address = null;
	return result;
    };

    function free_all(addresses) {
	for (var i = 0; i < addresses.length; i++) {
	    FREE(addresses[i]);
	}
    }

    //---------------------------------------------------------------------------
    // Randomness

    function random_bytes(count) {
      var bs = new Target(count);
      nacl_raw._randombytes_buf(bs.address, count);
      return bs.extractBytes();
    }

    nacl_raw._randombytes_stir();

    //---------------------------------------------------------------------------
    // Boxing

    function crypto_box_keypair() {
      var pk = new Target(nacl_raw._crypto_box_publickeybytes());
      var sk = new Target(nacl_raw._crypto_box_secretkeybytes());
      check("_crypto_box_keypair", nacl_raw._crypto_box_keypair(pk.address, sk.address));
      return {boxPk: pk.extractBytes(), boxSk: sk.extractBytes()};
    }

    function crypto_box_random_nonce() {
      return random_bytes(nacl_raw._crypto_box_noncebytes());
    }

    function crypto_box(msg, nonce, pk, sk) {
      var m = injectBytes(msg, nacl_raw._crypto_box_zerobytes());
      var na = check_injectBytes("crypto_box", "nonce", nonce, nacl_raw._crypto_box_noncebytes());
      var pka = check_injectBytes("crypto_box", "pk", pk, nacl_raw._crypto_box_publickeybytes());
      var ska = check_injectBytes("crypto_box", "sk", sk, nacl_raw._crypto_box_secretkeybytes());
      var c = new Target(msg.length + nacl_raw._crypto_box_zerobytes());
      check("_crypto_box", nacl_raw._crypto_box(c.address, m, c.length, 0, na, pka, ska));
      free_all([m, na, pka, ska]);
      return c.extractBytes(nacl_raw._crypto_box_boxzerobytes());
    }

    function crypto_box_open(ciphertext, nonce, pk, sk) {
      var c = injectBytes(ciphertext, nacl_raw._crypto_box_boxzerobytes());
      var na = check_injectBytes("crypto_box_open",
                                 "nonce", nonce, nacl_raw._crypto_box_noncebytes());
      var pka = check_injectBytes("crypto_box_open",
                                  "pk", pk, nacl_raw._crypto_box_publickeybytes());
      var ska = check_injectBytes("crypto_box_open",
                                  "sk", sk, nacl_raw._crypto_box_secretkeybytes());
      var m = new Target(ciphertext.length + nacl_raw._crypto_box_boxzerobytes());
      check("_crypto_box_open", nacl_raw._crypto_box_open(m.address, c, m.length, 0, na, pka, ska));
      free_all([c, na, pka, ska]);
      return m.extractBytes(nacl_raw._crypto_box_zerobytes());
    }

    function crypto_box_precompute(pk, sk) {
      var pka = check_injectBytes("crypto_box_precompute",
				  "pk", pk, nacl_raw._crypto_box_publickeybytes());
      var ska = check_injectBytes("crypto_box_precompute",
				  "sk", sk, nacl_raw._crypto_box_secretkeybytes());
      var k = new Target(nacl_raw._crypto_box_beforenmbytes());
      check("_crypto_box_beforenm",
	    nacl_raw._crypto_box_beforenm(k.address, pka, ska));
      free_all([pka, ska]);
      return {boxK: k.extractBytes()};
    }

    function crypto_box_precomputed(msg, nonce, state) {
      var m = injectBytes(msg, nacl_raw._crypto_box_zerobytes());
      var na = check_injectBytes("crypto_box_precomputed",
				 "nonce", nonce, nacl_raw._crypto_box_noncebytes());
      var ka = check_injectBytes("crypto_box_precomputed",
				 "boxK", state.boxK, nacl_raw._crypto_box_beforenmbytes());
      var c = new Target(msg.length + nacl_raw._crypto_box_zerobytes());
      check("_crypto_box_afternm",
	    nacl_raw._crypto_box_afternm(c.address, m, c.length, 0, na, ka));
      free_all([m, na, ka]);
      return c.extractBytes(nacl_raw._crypto_box_boxzerobytes());
    }

    function crypto_box_open_precomputed(ciphertext, nonce, state) {
      var c = injectBytes(ciphertext, nacl_raw._crypto_box_boxzerobytes());
      var na = check_injectBytes("crypto_box_open_precomputed",
				 "nonce", nonce, nacl_raw._crypto_box_noncebytes());
      var ka = check_injectBytes("crypto_box_open_precomputed",
				 "boxK", state.boxK, nacl_raw._crypto_box_beforenmbytes());
      var m = new Target(ciphertext.length + nacl_raw._crypto_box_boxzerobytes());
      check("_crypto_box_open_afternm",
	    nacl_raw._crypto_box_open_afternm(m.address, c, m.length, 0, na, ka));
      free_all([c, na, ka]);
      return m.extractBytes(nacl_raw._crypto_box_zerobytes());
    }

    //---------------------------------------------------------------------------
    // Hashing

    function crypto_hash(bs) {
      var address = injectBytes(bs);
      var hash = new Target(nacl_raw._crypto_hash_bytes());
      check("_crypto_hash", nacl_raw._crypto_hash(hash.address, address, bs.length, 0));
      FREE(address);
      return hash.extractBytes();
    }

    function crypto_hash_sha256(bs) {
      var address = injectBytes(bs);
      var hash = new Target(nacl_raw._crypto_hash_sha256_bytes());
      check("_crypto_hash_sha256",
	    nacl_raw._crypto_hash_sha256(hash.address, address, bs.length, 0));
      FREE(address);
      return hash.extractBytes();
    }

    function crypto_hash_string(s) {
      return crypto_hash(encode_utf8(s));
    }

    //---------------------------------------------------------------------------
    // Symmetric-key encryption

    function crypto_stream_random_nonce() {
      return random_bytes(nacl_raw._crypto_stream_noncebytes());
    }

    function crypto_stream(len, nonce, key) {
      var na = check_injectBytes("crypto_stream",
				 "nonce", nonce, nacl_raw._crypto_stream_noncebytes());
      var ka = check_injectBytes("crypto_stream",
				 "key", key, nacl_raw._crypto_stream_keybytes());
      var out = new Target(len);
      check("_crypto_stream", nacl_raw._crypto_stream(out.address, len, 0, na, ka));
      free_all([na, ka]);
      return out.extractBytes();
    }

    function crypto_stream_xor(msg, nonce, key) {
      var na = check_injectBytes("crypto_stream_xor",
				 "nonce", nonce, nacl_raw._crypto_stream_noncebytes());
      var ka = check_injectBytes("crypto_stream_xor",
				 "key", key, nacl_raw._crypto_stream_keybytes());
      var ma = injectBytes(msg);
      var out = new Target(msg.length);
      check("_crypto_stream_xor",
	    nacl_raw._crypto_stream_xor(out.address, ma, msg.length, 0, na, ka));
      free_all([na, ka, ma]);
      return out.extractBytes();
    }

    //---------------------------------------------------------------------------
    // One-time authentication

    function crypto_onetimeauth(msg, key) {
      var ka = check_injectBytes("crypto_onetimeauth",
				 "key", key, nacl_raw._crypto_onetimeauth_keybytes());
      var ma = injectBytes(msg);
      var authenticator = new Target(nacl_raw._crypto_onetimeauth_bytes());
      check("_crypto_onetimeauth",
	    nacl_raw._crypto_onetimeauth(authenticator.address, ma, msg.length, 0, ka));
      free_all([ka, ma]);
      return authenticator.extractBytes();
    }

    function crypto_onetimeauth_verify(authenticator, msg, key) {
      if (authenticator.length != nacl_raw._crypto_onetimeauth_bytes()) return false;
      var ka = check_injectBytes("crypto_onetimeauth_verify",
				 "key", key, nacl_raw._crypto_onetimeauth_keybytes());
      var ma = injectBytes(msg);
      var aa = injectBytes(authenticator);
      var result = nacl_raw._crypto_onetimeauth_verify(aa, ma, msg.length, 0, ka);
      free_all([ka, ma, aa]);
      return (result == 0);
    }

    //---------------------------------------------------------------------------
    // Authentication

    function crypto_auth(msg, key) {
      var ka = check_injectBytes("crypto_auth", "key", key, nacl_raw._crypto_auth_keybytes());
      var ma = injectBytes(msg);
      var authenticator = new Target(nacl_raw._crypto_auth_bytes());
      check("_crypto_auth", nacl_raw._crypto_auth(authenticator.address, ma, msg.length, 0, ka));
      free_all([ka, ma]);
      return authenticator.extractBytes();
    }

    function crypto_auth_verify(authenticator, msg, key) {
      if (authenticator.length != nacl_raw._crypto_auth_bytes()) return false;
      var ka = check_injectBytes("crypto_auth_verify",
				 "key", key, nacl_raw._crypto_auth_keybytes());
      var ma = injectBytes(msg);
      var aa = injectBytes(authenticator);
      var result = nacl_raw._crypto_auth_verify(aa, ma, msg.length, 0, ka);
      free_all([ka, ma, aa]);
      return (result == 0);
    }

    //---------------------------------------------------------------------------
    // Authenticated symmetric-key encryption

    function crypto_secretbox_random_nonce() {
      return random_bytes(nacl_raw._crypto_secretbox_noncebytes());
    }

    function crypto_secretbox(msg, nonce, key) {
      var m = injectBytes(msg, nacl_raw._crypto_secretbox_zerobytes());
      var na = check_injectBytes("crypto_secretbox",
				 "nonce", nonce, nacl_raw._crypto_secretbox_noncebytes());
      var ka = check_injectBytes("crypto_secretbox",
				 "key", key, nacl_raw._crypto_secretbox_keybytes());
      var c = new Target(msg.length + nacl_raw._crypto_secretbox_zerobytes());
      check("_crypto_secretbox", nacl_raw._crypto_secretbox(c.address, m, c.length, 0, na, ka));
      free_all([m, na, ka]);
      return c.extractBytes(nacl_raw._crypto_secretbox_boxzerobytes());
    }

    function crypto_secretbox_open(ciphertext, nonce, key) {
      var c = injectBytes(ciphertext, nacl_raw._crypto_secretbox_boxzerobytes());
      var na = check_injectBytes("crypto_secretbox_open",
				 "nonce", nonce, nacl_raw._crypto_secretbox_noncebytes());
      var ka = check_injectBytes("crypto_secretbox_open",
				 "key", key, nacl_raw._crypto_secretbox_keybytes());
      var m = new Target(ciphertext.length + nacl_raw._crypto_secretbox_boxzerobytes());
      check("_crypto_secretbox_open",
	    nacl_raw._crypto_secretbox_open(m.address, c, m.length, 0, na, ka));
      free_all([c, na, ka]);
      return m.extractBytes(nacl_raw._crypto_secretbox_zerobytes());
    }

    //---------------------------------------------------------------------------
    // Signing

    function crypto_sign_keypair() {
      var pk = new Target(nacl_raw._crypto_sign_publickeybytes());
      var sk = new Target(nacl_raw._crypto_sign_secretkeybytes());
      check("_crypto_sign_keypair", nacl_raw._crypto_sign_keypair(pk.address, sk.address));
      return {signPk: pk.extractBytes(), signSk: sk.extractBytes()};
    }

    function crypto_sign(msg, sk) {
      var ma = injectBytes(msg);
      var ska = check_injectBytes("crypto_sign", "sk", sk, nacl_raw._crypto_sign_secretkeybytes());
      var sm = new Target(msg.length + nacl_raw._crypto_sign_bytes());
      var smlen = new Target(8);
      check("_crypto_sign",
	    nacl_raw._crypto_sign(sm.address, smlen.address, ma, msg.length, 0, ska));
      free_all([ma, ska]);
      sm.length = nacl_raw.HEAPU32[smlen.address >> 2];
      FREE(smlen.address);
      return sm.extractBytes();
    }

    function crypto_sign_detached(msg, sk) {
      // WARNING: Experimental. Works for ed25519 but not necessarily other implementations.
      var signed_msg = crypto_sign(msg, sk);
      return signed_msg.subarray(0, nacl_raw._crypto_sign_bytes());
    }

    function crypto_sign_open(sm, pk) {
      var sma = injectBytes(sm);
      var pka = check_injectBytes("crypto_sign_open",
				  "pk", pk, nacl_raw._crypto_sign_publickeybytes());
      var m = new Target(sm.length);
      var mlen = new Target(8);
      if (nacl_raw._crypto_sign_open(m.address, mlen.address, sma, sm.length, 0, pka) === 0) {
	free_all([sma, pka]);
	m.length = nacl_raw.HEAPU32[mlen.address >> 2];
	FREE(mlen.address);
	return m.extractBytes();
      } else {
	free_all([sma, pka, m.address, mlen.address]);
	return null;
      }
    }

    function crypto_sign_verify_detached(detached_signature, msg, pk) {
      // WARNING: Experimental. Works for ed25519 but not necessarily other implementations.
      var signed_msg = new Uint8Array(detached_signature.length + msg.length);
      signed_msg.set(detached_signature, 0);
      signed_msg.set(msg, detached_signature.length);
      return crypto_sign_open(signed_msg, pk) !== null;
    }

    //---------------------------------------------------------------------------
    // Keys

    function crypto_sign_seed_keypair(bs) {
      var seeda = check_injectBytes("crypto_sign_seed_keypair",
				    "seed", bs, nacl_raw._crypto_sign_secretkeybytes() / 2);
      var pk = new Target(nacl_raw._crypto_sign_publickeybytes());
      var sk = new Target(nacl_raw._crypto_sign_secretkeybytes());
      check("_crypto_sign_seed_keypair",
	    nacl_raw._crypto_sign_seed_keypair(pk.address, sk.address, seeda));
      FREE(seeda);
      return {signPk: pk.extractBytes(), signSk: sk.extractBytes()};
    }

    function crypto_box_seed_keypair(bs) {
      var hash = new Uint8Array(crypto_hash(bs));
      return crypto_box_keypair_from_raw_sk(hash.subarray(0,
							  nacl_raw._crypto_box_secretkeybytes()));
    }

    function crypto_box_keypair_from_raw_sk(sk) {
      return {boxPk: crypto_scalarmult_base(sk), boxSk: sk};
    }

    //---------------------------------------------------------------------------
    // Scalarmult

    function crypto_scalarmult(n,p) {
      var na = check_injectBytes("crypto_scalarmult", "n", n,
				 nacl_raw._crypto_scalarmult_curve25519_scalarbytes());
      var pa = check_injectBytes("crypto_scalarmult", "p", p,
				 nacl_raw._crypto_scalarmult_curve25519_bytes());
      var q = new Target(nacl_raw._crypto_scalarmult_curve25519_bytes());
      check("_crypto_scalarmult_curve25519",
            nacl_raw._crypto_scalarmult_curve25519(q.address, na, pa));
      FREE(na);
      FREE(pa);
      return q.extractBytes();
    }

    function crypto_scalarmult_base(n) {
      var na = check_injectBytes("crypto_scalarmult_base", "n", n,
				 nacl_raw._crypto_scalarmult_curve25519_scalarbytes());
      var q = new Target(nacl_raw._crypto_scalarmult_curve25519_bytes());
      check("_crypto_scalarmult_curve25519_base",
            nacl_raw._crypto_scalarmult_curve25519_base(q.address, na));
      FREE(na);
      return q.extractBytes();
    }

    //---------------------------------------------------------------------------

    exports.crypto_auth_BYTES = nacl_raw._crypto_auth_bytes();
    exports.crypto_auth_KEYBYTES = nacl_raw._crypto_auth_keybytes();
    exports.crypto_box_BEFORENMBYTES = nacl_raw._crypto_box_beforenmbytes();
    exports.crypto_box_BOXZEROBYTES = nacl_raw._crypto_box_boxzerobytes();
    exports.crypto_box_NONCEBYTES = nacl_raw._crypto_box_noncebytes();
    exports.crypto_box_PUBLICKEYBYTES = nacl_raw._crypto_box_publickeybytes();
    exports.crypto_box_SECRETKEYBYTES = nacl_raw._crypto_box_secretkeybytes();
    exports.crypto_box_ZEROBYTES = nacl_raw._crypto_box_zerobytes();
    exports.crypto_hash_BYTES = nacl_raw._crypto_hash_bytes();
    exports.crypto_hash_sha256_BYTES = nacl_raw._crypto_hash_sha256_bytes();
    // exports.crypto_hashblocks_BLOCKBYTES = nacl_raw._crypto_hashblocks_blockbytes();
    // exports.crypto_hashblocks_STATEBYTES = nacl_raw._crypto_hashblocks_statebytes();
    exports.crypto_onetimeauth_BYTES = nacl_raw._crypto_onetimeauth_bytes();
    exports.crypto_onetimeauth_KEYBYTES = nacl_raw._crypto_onetimeauth_keybytes();
    exports.crypto_secretbox_BOXZEROBYTES = nacl_raw._crypto_secretbox_boxzerobytes();
    exports.crypto_secretbox_KEYBYTES = nacl_raw._crypto_secretbox_keybytes();
    exports.crypto_secretbox_NONCEBYTES = nacl_raw._crypto_secretbox_noncebytes();
    exports.crypto_secretbox_ZEROBYTES = nacl_raw._crypto_secretbox_zerobytes();
    exports.crypto_sign_BYTES = nacl_raw._crypto_sign_bytes();
    exports.crypto_sign_PUBLICKEYBYTES = nacl_raw._crypto_sign_publickeybytes();
    exports.crypto_sign_SECRETKEYBYTES = nacl_raw._crypto_sign_secretkeybytes();
    // exports.crypto_stream_BEFORENMBYTES = nacl_raw._crypto_stream_beforenmbytes();
    exports.crypto_stream_KEYBYTES = nacl_raw._crypto_stream_keybytes();
    exports.crypto_stream_NONCEBYTES = nacl_raw._crypto_stream_noncebytes();
    exports.crypto_scalarmult_SCALARBYTES = nacl_raw._crypto_scalarmult_curve25519_scalarbytes();
    exports.crypto_scalarmult_BYTES = nacl_raw._crypto_scalarmult_curve25519_bytes();

    exports.encode_utf8 = encode_utf8;
    exports.encode_latin1 = encode_latin1;
    exports.decode_utf8 = decode_utf8;
    exports.decode_latin1 = decode_latin1;
    exports.to_hex = to_hex;
    exports.from_hex = from_hex;

    exports.random_bytes = random_bytes;

    exports.crypto_box_keypair = crypto_box_keypair;
    exports.crypto_box_random_nonce = crypto_box_random_nonce;
    exports.crypto_box = crypto_box;
    exports.crypto_box_open = crypto_box_open;
    exports.crypto_box_precompute = crypto_box_precompute;
    exports.crypto_box_precomputed = crypto_box_precomputed;
    exports.crypto_box_open_precomputed = crypto_box_open_precomputed;

    exports.crypto_stream_random_nonce = crypto_stream_random_nonce;
    exports.crypto_stream = crypto_stream;
    exports.crypto_stream_xor = crypto_stream_xor;

    exports.crypto_onetimeauth = crypto_onetimeauth;
    exports.crypto_onetimeauth_verify = crypto_onetimeauth_verify;

    exports.crypto_auth = crypto_auth;
    exports.crypto_auth_verify = crypto_auth_verify;

    exports.crypto_secretbox_random_nonce = crypto_secretbox_random_nonce;
    exports.crypto_secretbox = crypto_secretbox;
    exports.crypto_secretbox_open = crypto_secretbox_open;

    exports.crypto_sign_keypair = crypto_sign_keypair;
    exports.crypto_sign = crypto_sign;
    exports.crypto_sign_detached = crypto_sign_detached;
    exports.crypto_sign_open = crypto_sign_open;
    exports.crypto_sign_verify_detached = crypto_sign_verify_detached;

    exports.crypto_hash = crypto_hash;
    exports.crypto_hash_sha256 = crypto_hash_sha256;
    exports.crypto_hash_string = crypto_hash_string;

    exports.crypto_sign_seed_keypair = crypto_sign_seed_keypair;
    exports.crypto_box_seed_keypair = crypto_box_seed_keypair;
    exports.crypto_box_keypair_from_raw_sk = crypto_box_keypair_from_raw_sk;
    // Backwards-compatibility:
    exports.crypto_sign_keypair_from_seed = crypto_sign_seed_keypair;
    exports.crypto_box_keypair_from_seed = crypto_box_seed_keypair;

    exports.crypto_scalarmult = crypto_scalarmult;
    exports.crypto_scalarmult_base = crypto_scalarmult_base;

    return exports;
})();
      nacl.nacl_raw = nacl_raw;

      if (on_ready_call_needed) {
        on_ready(nacl);
      }

      return "nacl_factory API has changed -- see js-nacl README";
    })((typeof window !== 'undefined') ? window : undefined_reference_value,
       (typeof document !== 'undefined') ? document : undefined_reference_value);
  }
};

// export common.js module to allow one js file for browser and node.js
if (typeof module !== 'undefined' && module.exports) {
    module.exports = nacl_factory;
}


/***/ }),
/* 155 */
/***/ (function(module, exports) {

exports = module.exports = stringify
exports.getSerialize = serializer

function stringify(obj, replacer, spaces, cycleReplacer) {
  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)
}

function serializer(replacer, cycleReplacer) {
  var stack = [], keys = []

  if (cycleReplacer == null) cycleReplacer = function(key, value) {
    if (stack[0] === value) return "[Circular ~]"
    return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]"
  }

  return function(key, value) {
    if (stack.length > 0) {
      var thisPos = stack.indexOf(this)
      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)
      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)
      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)
    }
    else stack.push(value)

    return replacer == null ? value : replacer.call(this, key, value)
  }
}


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

var prr = __webpack_require__(158)

function init (type, message, cause) {
  if (!!message && typeof message != 'string') {
    message = message.message || message.name
  }
  prr(this, {
      type    : type
    , name    : type
      // can be passed just a 'cause'
    , cause   : typeof message != 'string' ? message : cause
    , message : message
  }, 'ewr')
}

// generic prototype, not intended to be actually used - helpful for `instanceof`
function CustomError (message, cause) {
  Error.call(this)
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, this.constructor)
  init.call(this, 'CustomError', message, cause)
}

CustomError.prototype = new Error()

function createError (errno, type, proto) {
  var err = function (message, cause) {
    init.call(this, type, message, cause)
    //TODO: the specificity here is stupid, errno should be available everywhere
    if (type == 'FilesystemError') {
      this.code    = this.cause.code
      this.path    = this.cause.path
      this.errno   = this.cause.errno
      this.message =
        (errno.errno[this.cause.errno]
          ? errno.errno[this.cause.errno].description
          : this.cause.message)
        + (this.cause.path ? ' [' + this.cause.path + ']' : '')
    }
    Error.call(this)
    if (Error.captureStackTrace)
      Error.captureStackTrace(this, err)
  }
  err.prototype = !!proto ? new proto() : new CustomError()
  return err
}

module.exports = function (errno) {
  var ce = function (type, proto) {
    return createError(errno, type, proto)
  }
  return {
      CustomError     : CustomError
    , FilesystemError : ce('FilesystemError')
    , createError     : ce
  }
}


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

var all = module.exports.all = [
  {
    errno: -2,
    code: 'ENOENT',
    description: 'no such file or directory'
  },
  {
    errno: -1,
    code: 'UNKNOWN',
    description: 'unknown error'
  },
  {
    errno: 0,
    code: 'OK',
    description: 'success'
  },
  {
    errno: 1,
    code: 'EOF',
    description: 'end of file'
  },
  {
    errno: 2,
    code: 'EADDRINFO',
    description: 'getaddrinfo error'
  },
  {
    errno: 3,
    code: 'EACCES',
    description: 'permission denied'
  },
  {
    errno: 4,
    code: 'EAGAIN',
    description: 'resource temporarily unavailable'
  },
  {
    errno: 5,
    code: 'EADDRINUSE',
    description: 'address already in use'
  },
  {
    errno: 6,
    code: 'EADDRNOTAVAIL',
    description: 'address not available'
  },
  {
    errno: 7,
    code: 'EAFNOSUPPORT',
    description: 'address family not supported'
  },
  {
    errno: 8,
    code: 'EALREADY',
    description: 'connection already in progress'
  },
  {
    errno: 9,
    code: 'EBADF',
    description: 'bad file descriptor'
  },
  {
    errno: 10,
    code: 'EBUSY',
    description: 'resource busy or locked'
  },
  {
    errno: 11,
    code: 'ECONNABORTED',
    description: 'software caused connection abort'
  },
  {
    errno: 12,
    code: 'ECONNREFUSED',
    description: 'connection refused'
  },
  {
    errno: 13,
    code: 'ECONNRESET',
    description: 'connection reset by peer'
  },
  {
    errno: 14,
    code: 'EDESTADDRREQ',
    description: 'destination address required'
  },
  {
    errno: 15,
    code: 'EFAULT',
    description: 'bad address in system call argument'
  },
  {
    errno: 16,
    code: 'EHOSTUNREACH',
    description: 'host is unreachable'
  },
  {
    errno: 17,
    code: 'EINTR',
    description: 'interrupted system call'
  },
  {
    errno: 18,
    code: 'EINVAL',
    description: 'invalid argument'
  },
  {
    errno: 19,
    code: 'EISCONN',
    description: 'socket is already connected'
  },
  {
    errno: 20,
    code: 'EMFILE',
    description: 'too many open files'
  },
  {
    errno: 21,
    code: 'EMSGSIZE',
    description: 'message too long'
  },
  {
    errno: 22,
    code: 'ENETDOWN',
    description: 'network is down'
  },
  {
    errno: 23,
    code: 'ENETUNREACH',
    description: 'network is unreachable'
  },
  {
    errno: 24,
    code: 'ENFILE',
    description: 'file table overflow'
  },
  {
    errno: 25,
    code: 'ENOBUFS',
    description: 'no buffer space available'
  },
  {
    errno: 26,
    code: 'ENOMEM',
    description: 'not enough memory'
  },
  {
    errno: 27,
    code: 'ENOTDIR',
    description: 'not a directory'
  },
  {
    errno: 28,
    code: 'EISDIR',
    description: 'illegal operation on a directory'
  },
  {
    errno: 29,
    code: 'ENONET',
    description: 'machine is not on the network'
  },
  {
    errno: 31,
    code: 'ENOTCONN',
    description: 'socket is not connected'
  },
  {
    errno: 32,
    code: 'ENOTSOCK',
    description: 'socket operation on non-socket'
  },
  {
    errno: 33,
    code: 'ENOTSUP',
    description: 'operation not supported on socket'
  },
  {
    errno: 34,
    code: 'ENOENT',
    description: 'no such file or directory'
  },
  {
    errno: 35,
    code: 'ENOSYS',
    description: 'function not implemented'
  },
  {
    errno: 36,
    code: 'EPIPE',
    description: 'broken pipe'
  },
  {
    errno: 37,
    code: 'EPROTO',
    description: 'protocol error'
  },
  {
    errno: 38,
    code: 'EPROTONOSUPPORT',
    description: 'protocol not supported'
  },
  {
    errno: 39,
    code: 'EPROTOTYPE',
    description: 'protocol wrong type for socket'
  },
  {
    errno: 40,
    code: 'ETIMEDOUT',
    description: 'connection timed out'
  },
  {
    errno: 41,
    code: 'ECHARSET',
    description: 'invalid Unicode character'
  },
  {
    errno: 42,
    code: 'EAIFAMNOSUPPORT',
    description: 'address family for hostname not supported'
  },
  {
    errno: 44,
    code: 'EAISERVICE',
    description: 'servname not supported for ai_socktype'
  },
  {
    errno: 45,
    code: 'EAISOCKTYPE',
    description: 'ai_socktype not supported'
  },
  {
    errno: 46,
    code: 'ESHUTDOWN',
    description: 'cannot send after transport endpoint shutdown'
  },
  {
    errno: 47,
    code: 'EEXIST',
    description: 'file already exists'
  },
  {
    errno: 48,
    code: 'ESRCH',
    description: 'no such process'
  },
  {
    errno: 49,
    code: 'ENAMETOOLONG',
    description: 'name too long'
  },
  {
    errno: 50,
    code: 'EPERM',
    description: 'operation not permitted'
  },
  {
    errno: 51,
    code: 'ELOOP',
    description: 'too many symbolic links encountered'
  },
  {
    errno: 52,
    code: 'EXDEV',
    description: 'cross-device link not permitted'
  },
  {
    errno: 53,
    code: 'ENOTEMPTY',
    description: 'directory not empty'
  },
  {
    errno: 54,
    code: 'ENOSPC',
    description: 'no space left on device'
  },
  {
    errno: 55,
    code: 'EIO',
    description: 'i/o error'
  },
  {
    errno: 56,
    code: 'EROFS',
    description: 'read-only file system'
  },
  {
    errno: 57,
    code: 'ENODEV',
    description: 'no such device'
  },
  {
    errno: 58,
    code: 'ESPIPE',
    description: 'invalid seek'
  },
  {
    errno: 59,
    code: 'ECANCELED',
    description: 'operation canceled'
  }
]

module.exports.errno = {}
module.exports.code = {}

all.forEach(function (error) {
  module.exports.errno[error.errno] = error
  module.exports.code[error.code] = error
})

module.exports.custom = __webpack_require__(156)(module.exports)
module.exports.create = module.exports.custom.createError


/***/ }),
/* 158 */
/***/ (function(module, exports) {

/*!
  * prr
  * (c) 2013 Rod Vagg <rod@vagg.org>
  * https://github.com/rvagg/prr
  * License: MIT
  */

(function (name, context, definition) {
  if (typeof module != 'undefined' && module.exports)
    module.exports = definition()
  else
    context[name] = definition()
})('prr', this, function() {

  var setProperty = typeof Object.defineProperty == 'function'
      ? function (obj, key, options) {
          Object.defineProperty(obj, key, options)
          return obj
        }
      : function (obj, key, options) { // < es5
          obj[key] = options.value
          return obj
        }

    , makeOptions = function (value, options) {
        var oo = typeof options == 'object'
          , os = !oo && typeof options == 'string'
          , op = function (p) {
              return oo
                ? !!options[p]
                : os
                  ? options.indexOf(p[0]) > -1
                  : false
            }

        return {
            enumerable   : op('enumerable')
          , configurable : op('configurable')
          , writable     : op('writable')
          , value        : value
        }
      }

    , prr = function (obj, key, value, options) {
        var k

        options = makeOptions(value, options)

        if (typeof key == 'object') {
          for (k in key) {
            if (Object.hasOwnProperty.call(key, k)) {
              options.value = key[k]
              setProperty(obj, k, options)
            }
          }
          return obj
        }

        return setProperty(obj, key, options)
      }

  return prr
})

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(0)
var Readable = __webpack_require__(179).Readable
var extend = __webpack_require__(26)

module.exports = ReadStream
inherits(ReadStream, Readable)

function ReadStream (iterator, options) {
  if (!(this instanceof ReadStream)) return new ReadStream(iterator, options)
  options = options || {}
  Readable.call(this, extend(options, {
    objectMode: true
  }))
  this._iterator = iterator
  this._destroyed = false
  this._options = options
  this.on('end', this._cleanup.bind(this))
}

ReadStream.prototype._read = function () {
  var self = this
  var options = this._options
  if (this._destroyed) return

  this._iterator.next(function (err, key, value) {
    if (self._destroyed) return
    if (err) return self.emit('error', err)
    if (key === undefined && value === undefined) {
      self.push(null)
    } else if (options.keys !== false && options.values === false) {
      self.push(key)
    } else if (options.keys === false && options.values !== false) {
      self.push(value)
    } else {
      self.push({ key: key, value: value })
    }
  })
}

ReadStream.prototype.destroy =
ReadStream.prototype._cleanup = function () {
  var self = this
  if (this._destroyed) return
  this._destroyed = true

  this._iterator.end(function (err) {
    if (err) return self.emit('error', err)
    self.emit('close')
  })
}


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

/* Copyright (c) 2012-2018 LevelUP contributors
 * See list at <https://github.com/level/levelup#contributing>
 * MIT License
 * <https://github.com/level/levelup/blob/master/LICENSE.md>
 */

var WriteError = __webpack_require__(69).WriteError
var promisify = __webpack_require__(70)

function Batch (levelup) {
  this._levelup = levelup
  this.batch = levelup.db.batch()
  this.ops = []
  this.length = 0
}

Batch.prototype.put = function (key, value) {
  try {
    this.batch.put(key, value)
  } catch (e) {
    throw new WriteError(e)
  }

  this.ops.push({ type: 'put', key: key, value: value })
  this.length++

  return this
}

Batch.prototype.del = function (key) {
  try {
    this.batch.del(key)
  } catch (err) {
    throw new WriteError(err)
  }

  this.ops.push({ type: 'del', key: key })
  this.length++

  return this
}

Batch.prototype.clear = function () {
  try {
    this.batch.clear()
  } catch (err) {
    throw new WriteError(err)
  }

  this.ops = []
  this.length = 0

  return this
}

Batch.prototype.write = function (callback) {
  var levelup = this._levelup
  var ops = this.ops
  var promise

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  try {
    this.batch.write(function (err) {
      if (err) { return callback(new WriteError(err)) }
      levelup.emit('batch', ops)
      callback()
    })
  } catch (err) {
    throw new WriteError(err)
  }

  return promise
}

module.exports = Batch


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

/* Copyright (c) 2012-2018 LevelUP contributors
 * See list at <https://github.com/level/levelup#contributing>
 * MIT License
 * <https://github.com/level/levelup/blob/master/LICENSE.md>
 */

var EventEmitter = __webpack_require__(7).EventEmitter
var inherits = __webpack_require__(1).inherits
var extend = __webpack_require__(26)
var DeferredLevelDOWN = __webpack_require__(143)
var IteratorStream = __webpack_require__(159)
var Batch = __webpack_require__(160)
var errors = __webpack_require__(69)
var assert = __webpack_require__(102)
var promisify = __webpack_require__(70)

var WriteError = errors.WriteError
var ReadError = errors.ReadError
var NotFoundError = errors.NotFoundError
var OpenError = errors.OpenError
var InitializationError = errors.InitializationError

// Possible AbstractLevelDOWN#status values:
//  - 'new'     - newly created, not opened or closed
//  - 'opening' - waiting for the database to be opened, post open()
//  - 'open'    - successfully opened the database, available for use
//  - 'closing' - waiting for the database to be closed, post close()
//  - 'closed'  - database has been successfully closed, should not be
//                 used except for another open() operation

function LevelUP (db, options, callback) {
  if (!(this instanceof LevelUP)) {
    return new LevelUP(db, options, callback)
  }

  var error

  EventEmitter.call(this)
  this.setMaxListeners(Infinity)

  if (typeof options === 'function') {
    callback = options
    options = {}
  }

  options = options || {}

  if (!db || typeof db !== 'object') {
    error = new InitializationError('First argument must be an abstract-leveldown compliant store')
    if (typeof callback === 'function') {
      return process.nextTick(callback, error)
    }
    throw error
  }

  assert.equal(typeof db.status, 'string', '.status required, old abstract-leveldown')

  this.options = getOptions(options)
  this._db = db
  this.db = new DeferredLevelDOWN(db)
  this.open(callback)
}

LevelUP.prototype.emit = EventEmitter.prototype.emit
LevelUP.prototype.once = EventEmitter.prototype.once
inherits(LevelUP, EventEmitter)

LevelUP.prototype.open = function (callback) {
  var self = this
  var promise

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  if (this.isOpen()) {
    process.nextTick(callback, null, self)
    return promise
  }

  if (this._isOpening()) {
    this.once('open', function () { callback(null, self) })
    return promise
  }

  this.emit('opening')

  this.db.open(this.options, function (err) {
    if (err) {
      return callback(new OpenError(err))
    }
    self.db = self._db
    callback(null, self)
    self.emit('open')
    self.emit('ready')
  })

  return promise
}

LevelUP.prototype.close = function (callback) {
  var self = this
  var promise

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  if (this.isOpen()) {
    this.db.close(function () {
      self.emit('closed')
      callback.apply(null, arguments)
    })
    this.emit('closing')
    this.db = new DeferredLevelDOWN(this._db)
  } else if (this.isClosed()) {
    process.nextTick(callback)
  } else if (this.db.status === 'closing') {
    this.once('closed', callback)
  } else if (this._isOpening()) {
    this.once('open', function () {
      self.close(callback)
    })
  }

  return promise
}

LevelUP.prototype.isOpen = function () {
  return this.db.status === 'open'
}

LevelUP.prototype._isOpening = function () {
  return this.db.status === 'opening'
}

LevelUP.prototype.isClosed = function () {
  return (/^clos|new/).test(this.db.status)
}

LevelUP.prototype.get = function (key, options, callback) {
  if (key === null || key === undefined) {
    throw new ReadError('get() requires a key argument')
  }

  var promise

  callback = getCallback(options, callback)

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  if (maybeError(this, callback)) { return promise }

  options = getOptions(options)

  this.db.get(key, options, function (err, value) {
    if (err) {
      if ((/notfound/i).test(err) || err.notFound) {
        err = new NotFoundError('Key not found in database [' + key + ']', err)
      } else {
        err = new ReadError(err)
      }
      return callback(err)
    }
    callback(null, value)
  })

  return promise
}

LevelUP.prototype.put = function (key, value, options, callback) {
  if (key === null || key === undefined) {
    throw new WriteError('put() requires a key argument')
  }

  var self = this
  var promise

  callback = getCallback(options, callback)

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  if (maybeError(this, callback)) { return promise }

  options = getOptions(options)

  this.db.put(key, value, options, function (err) {
    if (err) {
      return callback(new WriteError(err))
    }
    self.emit('put', key, value)
    callback()
  })

  return promise
}

LevelUP.prototype.del = function (key, options, callback) {
  if (key === null || key === undefined) {
    throw new WriteError('del() requires a key argument')
  }

  var self = this
  var promise

  callback = getCallback(options, callback)

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  if (maybeError(this, callback)) { return promise }

  options = getOptions(options)

  this.db.del(key, options, function (err) {
    if (err) {
      return callback(new WriteError(err))
    }
    self.emit('del', key)
    callback()
  })

  return promise
}

LevelUP.prototype.batch = function (arr, options, callback) {
  if (!arguments.length) {
    return new Batch(this)
  }

  if (!Array.isArray(arr)) {
    throw new WriteError('batch() requires an array argument')
  }

  var self = this
  var promise

  callback = getCallback(options, callback)

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  if (maybeError(this, callback)) { return promise }

  options = getOptions(options)

  arr = arr.map(function (op) {
    if (!op.type && op.key !== undefined && op.value !== undefined) { op.type = 'put' }
    return op
  })

  this.db.batch(arr, options, function (err) {
    if (err) {
      return callback(new WriteError(err))
    }
    self.emit('batch', arr)
    callback()
  })

  return promise
}

LevelUP.prototype.readStream =
LevelUP.prototype.createReadStream = function (options) {
  options = extend({ keys: true, values: true }, options)
  if (typeof options.limit !== 'number') { options.limit = -1 }
  return new IteratorStream(this.db.iterator(options), options)
}

LevelUP.prototype.keyStream =
LevelUP.prototype.createKeyStream = function (options) {
  return this.createReadStream(extend(options, { keys: true, values: false }))
}

LevelUP.prototype.valueStream =
LevelUP.prototype.createValueStream = function (options) {
  return this.createReadStream(extend(options, { keys: false, values: true }))
}

LevelUP.prototype.toString = function () {
  return 'LevelUP'
}

function getCallback (options, callback) {
  return typeof options === 'function' ? options : callback
}

function getOptions (options) {
  return typeof options === 'object' && options !== null ? options : {}
}

function maybeError (db, callback) {
  if (!db._isOpening() && !db.isOpen()) {
    process.nextTick(callback, new ReadError('Database is not open'))
    return true
  }
}

LevelUP.errors = errors
module.exports = LevelUP.default = LevelUP


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

var through = __webpack_require__(43)
var split = __webpack_require__(185)
var EOL = __webpack_require__(206).EOL
var stringify = __webpack_require__(155)

module.exports = parse
module.exports.serialize = module.exports.stringify = serialize
module.exports.parse = parse

function parse (opts) {
  opts = opts || {}
  opts.strict = opts.strict !== false

  function parseRow (row) {
    try {
      if (row) return JSON.parse(row)
    } catch (e) {
      if (opts.strict) {
        this.emit('error', new Error('Could not parse row ' + row.slice(0, 50) + '...'))
      }
    }
  }

  return split(parseRow, opts)
}

function serialize (opts) {
  return through.obj(opts, function(obj, enc, cb) {
    cb(null, stringify(obj) + EOL)
  })
}


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(165)


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assign = __webpack_require__(163);

module.exports = function (Class) {
  function WrappedClass() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return new (Function.prototype.bind.apply(Class, [null].concat(args)))();
  }
  assign(WrappedClass, Class);
  WrappedClass.prototype = Class.prototype;
  return WrappedClass;
};

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = common;

var commonRe = /\/|\./;

/**
 * Provides common type definitions.
 * Can also be used to provide additional google types or your own custom types.
 * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name
 * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition
 * @returns {undefined}
 * @property {INamespace} google/protobuf/any.proto Any
 * @property {INamespace} google/protobuf/duration.proto Duration
 * @property {INamespace} google/protobuf/empty.proto Empty
 * @property {INamespace} google/protobuf/field_mask.proto FieldMask
 * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue
 * @property {INamespace} google/protobuf/timestamp.proto Timestamp
 * @property {INamespace} google/protobuf/wrappers.proto Wrappers
 * @example
 * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)
 * protobuf.common("descriptor", descriptorJson);
 *
 * // manually provides a custom definition (uses my.foo namespace)
 * protobuf.common("my/foo/bar.proto", myFooBarJson);
 */
function common(name, json) {
    if (!commonRe.test(name)) {
        name = "google/protobuf/" + name + ".proto";
        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };
    }
    common[name] = json;
}

// Not provided because of limited use (feel free to discuss or to provide yourself):
//
// google/protobuf/descriptor.proto
// google/protobuf/source_context.proto
// google/protobuf/type.proto
//
// Stripped and pre-parsed versions of these non-bundled files are instead available as part of
// the repository or package within the google/protobuf directory.

common("any", {

    /**
     * Properties of a google.protobuf.Any message.
     * @interface IAny
     * @type {Object}
     * @property {string} [typeUrl]
     * @property {Uint8Array} [bytes]
     * @memberof common
     */
    Any: {
        fields: {
            type_url: {
                type: "string",
                id: 1
            },
            value: {
                type: "bytes",
                id: 2
            }
        }
    }
});

var timeType;

common("duration", {

    /**
     * Properties of a google.protobuf.Duration message.
     * @interface IDuration
     * @type {Object}
     * @property {number|Long} [seconds]
     * @property {number} [nanos]
     * @memberof common
     */
    Duration: timeType = {
        fields: {
            seconds: {
                type: "int64",
                id: 1
            },
            nanos: {
                type: "int32",
                id: 2
            }
        }
    }
});

common("timestamp", {

    /**
     * Properties of a google.protobuf.Timestamp message.
     * @interface ITimestamp
     * @type {Object}
     * @property {number|Long} [seconds]
     * @property {number} [nanos]
     * @memberof common
     */
    Timestamp: timeType
});

common("empty", {

    /**
     * Properties of a google.protobuf.Empty message.
     * @interface IEmpty
     * @memberof common
     */
    Empty: {
        fields: {}
    }
});

common("struct", {

    /**
     * Properties of a google.protobuf.Struct message.
     * @interface IStruct
     * @type {Object}
     * @property {Object.<string,IValue>} [fields]
     * @memberof common
     */
    Struct: {
        fields: {
            fields: {
                keyType: "string",
                type: "Value",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.Value message.
     * @interface IValue
     * @type {Object}
     * @property {string} [kind]
     * @property {0} [nullValue]
     * @property {number} [numberValue]
     * @property {string} [stringValue]
     * @property {boolean} [boolValue]
     * @property {IStruct} [structValue]
     * @property {IListValue} [listValue]
     * @memberof common
     */
    Value: {
        oneofs: {
            kind: {
                oneof: [
                    "nullValue",
                    "numberValue",
                    "stringValue",
                    "boolValue",
                    "structValue",
                    "listValue"
                ]
            }
        },
        fields: {
            nullValue: {
                type: "NullValue",
                id: 1
            },
            numberValue: {
                type: "double",
                id: 2
            },
            stringValue: {
                type: "string",
                id: 3
            },
            boolValue: {
                type: "bool",
                id: 4
            },
            structValue: {
                type: "Struct",
                id: 5
            },
            listValue: {
                type: "ListValue",
                id: 6
            }
        }
    },

    NullValue: {
        values: {
            NULL_VALUE: 0
        }
    },

    /**
     * Properties of a google.protobuf.ListValue message.
     * @interface IListValue
     * @type {Object}
     * @property {Array.<IValue>} [values]
     * @memberof common
     */
    ListValue: {
        fields: {
            values: {
                rule: "repeated",
                type: "Value",
                id: 1
            }
        }
    }
});

common("wrappers", {

    /**
     * Properties of a google.protobuf.DoubleValue message.
     * @interface IDoubleValue
     * @type {Object}
     * @property {number} [value]
     * @memberof common
     */
    DoubleValue: {
        fields: {
            value: {
                type: "double",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.FloatValue message.
     * @interface IFloatValue
     * @type {Object}
     * @property {number} [value]
     * @memberof common
     */
    FloatValue: {
        fields: {
            value: {
                type: "float",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.Int64Value message.
     * @interface IInt64Value
     * @type {Object}
     * @property {number|Long} [value]
     * @memberof common
     */
    Int64Value: {
        fields: {
            value: {
                type: "int64",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.UInt64Value message.
     * @interface IUInt64Value
     * @type {Object}
     * @property {number|Long} [value]
     * @memberof common
     */
    UInt64Value: {
        fields: {
            value: {
                type: "uint64",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.Int32Value message.
     * @interface IInt32Value
     * @type {Object}
     * @property {number} [value]
     * @memberof common
     */
    Int32Value: {
        fields: {
            value: {
                type: "int32",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.UInt32Value message.
     * @interface IUInt32Value
     * @type {Object}
     * @property {number} [value]
     * @memberof common
     */
    UInt32Value: {
        fields: {
            value: {
                type: "uint32",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.BoolValue message.
     * @interface IBoolValue
     * @type {Object}
     * @property {boolean} [value]
     * @memberof common
     */
    BoolValue: {
        fields: {
            value: {
                type: "bool",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.StringValue message.
     * @interface IStringValue
     * @type {Object}
     * @property {string} [value]
     * @memberof common
     */
    StringValue: {
        fields: {
            value: {
                type: "string",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.BytesValue message.
     * @interface IBytesValue
     * @type {Object}
     * @property {Uint8Array} [value]
     * @memberof common
     */
    BytesValue: {
        fields: {
            value: {
                type: "bytes",
                id: 1
            }
        }
    }
});

common("field_mask", {

    /**
     * Properties of a google.protobuf.FieldMask message.
     * @interface IDoubleValue
     * @type {Object}
     * @property {number} [value]
     * @memberof common
     */
    FieldMask: {
        fields: {
            paths: {
                rule: "repeated",
                type: "string",
                id: 1
            }
        }
    }
});

/**
 * Gets the root definition of the specified common proto file.
 *
 * Bundled definitions are:
 * - google/protobuf/any.proto
 * - google/protobuf/duration.proto
 * - google/protobuf/empty.proto
 * - google/protobuf/field_mask.proto
 * - google/protobuf/struct.proto
 * - google/protobuf/timestamp.proto
 * - google/protobuf/wrappers.proto
 *
 * @param {string} file Proto file name
 * @returns {INamespace|null} Root definition or `null` if not defined
 */
common.get = function get(file) {
    return common[file] || null;
};


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var protobuf = module.exports = __webpack_require__(168);

protobuf.build = "light";

/**
 * A node-style callback as used by {@link load} and {@link Root#load}.
 * @typedef LoadCallback
 * @type {function}
 * @param {Error|null} error Error, if any, otherwise `null`
 * @param {Root} [root] Root, if there hasn't been an error
 * @returns {undefined}
 */

/**
 * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.
 * @param {string|string[]} filename One or multiple files to load
 * @param {Root} root Root namespace, defaults to create a new one if omitted.
 * @param {LoadCallback} callback Callback function
 * @returns {undefined}
 * @see {@link Root#load}
 */
function load(filename, root, callback) {
    if (typeof root === "function") {
        callback = root;
        root = new protobuf.Root();
    } else if (!root)
        root = new protobuf.Root();
    return root.load(filename, callback);
}

/**
 * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.
 * @name load
 * @function
 * @param {string|string[]} filename One or multiple files to load
 * @param {LoadCallback} callback Callback function
 * @returns {undefined}
 * @see {@link Root#load}
 * @variation 2
 */
// function load(filename:string, callback:LoadCallback):undefined

/**
 * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.
 * @name load
 * @function
 * @param {string|string[]} filename One or multiple files to load
 * @param {Root} [root] Root namespace, defaults to create a new one if omitted.
 * @returns {Promise<Root>} Promise
 * @see {@link Root#load}
 * @variation 3
 */
// function load(filename:string, [root:Root]):Promise<Root>

protobuf.load = load;

/**
 * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).
 * @param {string|string[]} filename One or multiple files to load
 * @param {Root} [root] Root namespace, defaults to create a new one if omitted.
 * @returns {Root} Root namespace
 * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid
 * @see {@link Root#loadSync}
 */
function loadSync(filename, root) {
    if (!root)
        root = new protobuf.Root();
    return root.loadSync(filename);
}

protobuf.loadSync = loadSync;

// Serialization
protobuf.encoder          = __webpack_require__(76);
protobuf.decoder          = __webpack_require__(75);
protobuf.verifier         = __webpack_require__(80);
protobuf.converter        = __webpack_require__(74);

// Reflection
protobuf.ReflectionObject = __webpack_require__(15);
protobuf.Namespace        = __webpack_require__(20);
protobuf.Root             = __webpack_require__(38);
protobuf.Enum             = __webpack_require__(5);
protobuf.Type             = __webpack_require__(40);
protobuf.Field            = __webpack_require__(10);
protobuf.OneOf            = __webpack_require__(23);
protobuf.MapField         = __webpack_require__(34);
protobuf.Service          = __webpack_require__(39);
protobuf.Method           = __webpack_require__(36);

// Runtime
protobuf.Message          = __webpack_require__(35);
protobuf.wrappers         = __webpack_require__(81);

// Utility
protobuf.types            = __webpack_require__(16);
protobuf.util             = __webpack_require__(2);

// Configure reflection
protobuf.ReflectionObject._configure(protobuf.Root);
protobuf.Namespace._configure(protobuf.Type, protobuf.Service);
protobuf.Root._configure(protobuf.Type);
protobuf.Field._configure(protobuf.Type);


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var protobuf = exports;

/**
 * Build type, one of `"full"`, `"light"` or `"minimal"`.
 * @name build
 * @type {string}
 * @const
 */
protobuf.build = "minimal";

// Serialization
protobuf.Writer       = __webpack_require__(41);
protobuf.BufferWriter = __webpack_require__(174);
protobuf.Reader       = __webpack_require__(37);
protobuf.BufferReader = __webpack_require__(171);

// Utility
protobuf.util         = __webpack_require__(6);
protobuf.rpc          = __webpack_require__(78);
protobuf.roots        = __webpack_require__(77);
protobuf.configure    = configure;

/* istanbul ignore next */
/**
 * Reconfigures the library according to the environment.
 * @returns {undefined}
 */
function configure() {
    protobuf.Reader._configure(protobuf.BufferReader);
    protobuf.util._configure();
}

// Configure serialization
protobuf.Writer._configure(protobuf.BufferWriter);
configure();


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var protobuf = module.exports = __webpack_require__(167);

protobuf.build = "full";

// Parser
protobuf.tokenize         = __webpack_require__(79);
protobuf.parse            = __webpack_require__(170);
protobuf.common           = __webpack_require__(166);

// Configure parser
protobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = parse;

parse.filename = null;
parse.defaults = { keepCase: false };

var tokenize  = __webpack_require__(79),
    Root      = __webpack_require__(38),
    Type      = __webpack_require__(40),
    Field     = __webpack_require__(10),
    MapField  = __webpack_require__(34),
    OneOf     = __webpack_require__(23),
    Enum      = __webpack_require__(5),
    Service   = __webpack_require__(39),
    Method    = __webpack_require__(36),
    types     = __webpack_require__(16),
    util      = __webpack_require__(2);

var base10Re    = /^[1-9][0-9]*$/,
    base10NegRe = /^-?[1-9][0-9]*$/,
    base16Re    = /^0[x][0-9a-fA-F]+$/,
    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,
    base8Re     = /^0[0-7]+$/,
    base8NegRe  = /^-?0[0-7]+$/,
    numberRe    = /^(?![eE])[0-9]*(?:\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,
    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,
    typeRefRe   = /^(?:\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,
    fqTypeRefRe = /^(?:\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;

/**
 * Result object returned from {@link parse}.
 * @interface IParserResult
 * @property {string|undefined} package Package name, if declared
 * @property {string[]|undefined} imports Imports, if any
 * @property {string[]|undefined} weakImports Weak imports, if any
 * @property {string|undefined} syntax Syntax, if specified (either `"proto2"` or `"proto3"`)
 * @property {Root} root Populated root instance
 */

/**
 * Options modifying the behavior of {@link parse}.
 * @interface IParseOptions
 * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case
 * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.
 */

/**
 * Options modifying the behavior of JSON serialization.
 * @interface IToJSONOptions
 * @property {boolean} [keepComments=false] Serializes comments.
 */

/**
 * Parses the given .proto source and returns an object with the parsed contents.
 * @param {string} source Source contents
 * @param {Root} root Root to populate
 * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.
 * @returns {IParserResult} Parser result
 * @property {string} filename=null Currently processing file name for error reporting, if known
 * @property {IParseOptions} defaults Default {@link IParseOptions}
 */
function parse(source, root, options) {
    /* eslint-disable callback-return */
    if (!(root instanceof Root)) {
        options = root;
        root = new Root();
    }
    if (!options)
        options = parse.defaults;

    var tn = tokenize(source, options.alternateCommentMode || false),
        next = tn.next,
        push = tn.push,
        peek = tn.peek,
        skip = tn.skip,
        cmnt = tn.cmnt;

    var head = true,
        pkg,
        imports,
        weakImports,
        syntax,
        isProto3 = false;

    var ptr = root;

    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;

    /* istanbul ignore next */
    function illegal(token, name, insideTryCatch) {
        var filename = parse.filename;
        if (!insideTryCatch)
            parse.filename = null;
        return Error("illegal " + (name || "token") + " '" + token + "' (" + (filename ? filename + ", " : "") + "line " + tn.line + ")");
    }

    function readString() {
        var values = [],
            token;
        do {
            /* istanbul ignore if */
            if ((token = next()) !== "\"" && token !== "'")
                throw illegal(token);

            values.push(next());
            skip(token);
            token = peek();
        } while (token === "\"" || token === "'");
        return values.join("");
    }

    function readValue(acceptTypeRef) {
        var token = next();
        switch (token) {
            case "'":
            case "\"":
                push(token);
                return readString();
            case "true": case "TRUE":
                return true;
            case "false": case "FALSE":
                return false;
        }
        try {
            return parseNumber(token, /* insideTryCatch */ true);
        } catch (e) {

            /* istanbul ignore else */
            if (acceptTypeRef && typeRefRe.test(token))
                return token;

            /* istanbul ignore next */
            throw illegal(token, "value");
        }
    }

    function readRanges(target, acceptStrings) {
        var token, start;
        do {
            if (acceptStrings && ((token = peek()) === "\"" || token === "'"))
                target.push(readString());
            else
                target.push([ start = parseId(next()), skip("to", true) ? parseId(next()) : start ]);
        } while (skip(",", true));
        skip(";");
    }

    function parseNumber(token, insideTryCatch) {
        var sign = 1;
        if (token.charAt(0) === "-") {
            sign = -1;
            token = token.substring(1);
        }
        switch (token) {
            case "inf": case "INF": case "Inf":
                return sign * Infinity;
            case "nan": case "NAN": case "Nan": case "NaN":
                return NaN;
            case "0":
                return 0;
        }
        if (base10Re.test(token))
            return sign * parseInt(token, 10);
        if (base16Re.test(token))
            return sign * parseInt(token, 16);
        if (base8Re.test(token))
            return sign * parseInt(token, 8);

        /* istanbul ignore else */
        if (numberRe.test(token))
            return sign * parseFloat(token);

        /* istanbul ignore next */
        throw illegal(token, "number", insideTryCatch);
    }

    function parseId(token, acceptNegative) {
        switch (token) {
            case "max": case "MAX": case "Max":
                return 536870911;
            case "0":
                return 0;
        }

        /* istanbul ignore if */
        if (!acceptNegative && token.charAt(0) === "-")
            throw illegal(token, "id");

        if (base10NegRe.test(token))
            return parseInt(token, 10);
        if (base16NegRe.test(token))
            return parseInt(token, 16);

        /* istanbul ignore else */
        if (base8NegRe.test(token))
            return parseInt(token, 8);

        /* istanbul ignore next */
        throw illegal(token, "id");
    }

    function parsePackage() {

        /* istanbul ignore if */
        if (pkg !== undefined)
            throw illegal("package");

        pkg = next();

        /* istanbul ignore if */
        if (!typeRefRe.test(pkg))
            throw illegal(pkg, "name");

        ptr = ptr.define(pkg);
        skip(";");
    }

    function parseImport() {
        var token = peek();
        var whichImports;
        switch (token) {
            case "weak":
                whichImports = weakImports || (weakImports = []);
                next();
                break;
            case "public":
                next();
                // eslint-disable-line no-fallthrough
            default:
                whichImports = imports || (imports = []);
                break;
        }
        token = readString();
        skip(";");
        whichImports.push(token);
    }

    function parseSyntax() {
        skip("=");
        syntax = readString();
        isProto3 = syntax === "proto3";

        /* istanbul ignore if */
        if (!isProto3 && syntax !== "proto2")
            throw illegal(syntax, "syntax");

        skip(";");
    }

    function parseCommon(parent, token) {
        switch (token) {

            case "option":
                parseOption(parent, token);
                skip(";");
                return true;

            case "message":
                parseType(parent, token);
                return true;

            case "enum":
                parseEnum(parent, token);
                return true;

            case "service":
                parseService(parent, token);
                return true;

            case "extend":
                parseExtension(parent, token);
                return true;
        }
        return false;
    }

    function ifBlock(obj, fnIf, fnElse) {
        var trailingLine = tn.line;
        if (obj) {
            obj.comment = cmnt(); // try block-type comment
            obj.filename = parse.filename;
        }
        if (skip("{", true)) {
            var token;
            while ((token = next()) !== "}")
                fnIf(token);
            skip(";", true);
        } else {
            if (fnElse)
                fnElse();
            skip(";");
            if (obj && typeof obj.comment !== "string")
                obj.comment = cmnt(trailingLine); // try line-type comment if no block
        }
    }

    function parseType(parent, token) {

        /* istanbul ignore if */
        if (!nameRe.test(token = next()))
            throw illegal(token, "type name");

        var type = new Type(token);
        ifBlock(type, function parseType_block(token) {
            if (parseCommon(type, token))
                return;

            switch (token) {

                case "map":
                    parseMapField(type, token);
                    break;

                case "required":
                case "optional":
                case "repeated":
                    parseField(type, token);
                    break;

                case "oneof":
                    parseOneOf(type, token);
                    break;

                case "extensions":
                    readRanges(type.extensions || (type.extensions = []));
                    break;

                case "reserved":
                    readRanges(type.reserved || (type.reserved = []), true);
                    break;

                default:
                    /* istanbul ignore if */
                    if (!isProto3 || !typeRefRe.test(token))
                        throw illegal(token);

                    push(token);
                    parseField(type, "optional");
                    break;
            }
        });
        parent.add(type);
    }

    function parseField(parent, rule, extend) {
        var type = next();
        if (type === "group") {
            parseGroup(parent, rule);
            return;
        }

        /* istanbul ignore if */
        if (!typeRefRe.test(type))
            throw illegal(type, "type");

        var name = next();

        /* istanbul ignore if */
        if (!nameRe.test(name))
            throw illegal(name, "name");

        name = applyCase(name);
        skip("=");

        var field = new Field(name, parseId(next()), type, rule, extend);
        ifBlock(field, function parseField_block(token) {

            /* istanbul ignore else */
            if (token === "option") {
                parseOption(field, token);
                skip(";");
            } else
                throw illegal(token);

        }, function parseField_line() {
            parseInlineOptions(field);
        });
        parent.add(field);

        // JSON defaults to packed=true if not set so we have to set packed=false explicity when
        // parsing proto2 descriptors without the option, where applicable. This must be done for
        // all known packable types and anything that could be an enum (= is not a basic type).
        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))
            field.setOption("packed", false, /* ifNotSet */ true);
    }

    function parseGroup(parent, rule) {
        var name = next();

        /* istanbul ignore if */
        if (!nameRe.test(name))
            throw illegal(name, "name");

        var fieldName = util.lcFirst(name);
        if (name === fieldName)
            name = util.ucFirst(name);
        skip("=");
        var id = parseId(next());
        var type = new Type(name);
        type.group = true;
        var field = new Field(fieldName, id, name, rule);
        field.filename = parse.filename;
        ifBlock(type, function parseGroup_block(token) {
            switch (token) {

                case "option":
                    parseOption(type, token);
                    skip(";");
                    break;

                case "required":
                case "optional":
                case "repeated":
                    parseField(type, token);
                    break;

                /* istanbul ignore next */
                default:
                    throw illegal(token); // there are no groups with proto3 semantics
            }
        });
        parent.add(type)
              .add(field);
    }

    function parseMapField(parent) {
        skip("<");
        var keyType = next();

        /* istanbul ignore if */
        if (types.mapKey[keyType] === undefined)
            throw illegal(keyType, "type");

        skip(",");
        var valueType = next();

        /* istanbul ignore if */
        if (!typeRefRe.test(valueType))
            throw illegal(valueType, "type");

        skip(">");
        var name = next();

        /* istanbul ignore if */
        if (!nameRe.test(name))
            throw illegal(name, "name");

        skip("=");
        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);
        ifBlock(field, function parseMapField_block(token) {

            /* istanbul ignore else */
            if (token === "option") {
                parseOption(field, token);
                skip(";");
            } else
                throw illegal(token);

        }, function parseMapField_line() {
            parseInlineOptions(field);
        });
        parent.add(field);
    }

    function parseOneOf(parent, token) {

        /* istanbul ignore if */
        if (!nameRe.test(token = next()))
            throw illegal(token, "name");

        var oneof = new OneOf(applyCase(token));
        ifBlock(oneof, function parseOneOf_block(token) {
            if (token === "option") {
                parseOption(oneof, token);
                skip(";");
            } else {
                push(token);
                parseField(oneof, "optional");
            }
        });
        parent.add(oneof);
    }

    function parseEnum(parent, token) {

        /* istanbul ignore if */
        if (!nameRe.test(token = next()))
            throw illegal(token, "name");

        var enm = new Enum(token);
        ifBlock(enm, function parseEnum_block(token) {
          switch(token) {
            case "option":
              parseOption(enm, token);
              skip(";");
              break;

            case "reserved":
              readRanges(enm.reserved || (enm.reserved = []), true);
              break;

            default:
              parseEnumValue(enm, token);
          }
        });
        parent.add(enm);
    }

    function parseEnumValue(parent, token) {

        /* istanbul ignore if */
        if (!nameRe.test(token))
            throw illegal(token, "name");

        skip("=");
        var value = parseId(next(), true),
            dummy = {};
        ifBlock(dummy, function parseEnumValue_block(token) {

            /* istanbul ignore else */
            if (token === "option") {
                parseOption(dummy, token); // skip
                skip(";");
            } else
                throw illegal(token);

        }, function parseEnumValue_line() {
            parseInlineOptions(dummy); // skip
        });
        parent.add(token, value, dummy.comment);
    }

    function parseOption(parent, token) {
        var isCustom = skip("(", true);

        /* istanbul ignore if */
        if (!typeRefRe.test(token = next()))
            throw illegal(token, "name");

        var name = token;
        if (isCustom) {
            skip(")");
            name = "(" + name + ")";
            token = peek();
            if (fqTypeRefRe.test(token)) {
                name += token;
                next();
            }
        }
        skip("=");
        parseOptionValue(parent, name);
    }

    function parseOptionValue(parent, name) {
        if (skip("{", true)) { // { a: "foo" b { c: "bar" } }
            do {
                /* istanbul ignore if */
                if (!nameRe.test(token = next()))
                    throw illegal(token, "name");

                if (peek() === "{")
                    parseOptionValue(parent, name + "." + token);
                else {
                    skip(":");
                    if (peek() === "{")
                        parseOptionValue(parent, name + "." + token);
                    else
                        setOption(parent, name + "." + token, readValue(true));
                }
            } while (!skip("}", true));
        } else
            setOption(parent, name, readValue(true));
        // Does not enforce a delimiter to be universal
    }

    function setOption(parent, name, value) {
        if (parent.setOption)
            parent.setOption(name, value);
    }

    function parseInlineOptions(parent) {
        if (skip("[", true)) {
            do {
                parseOption(parent, "option");
            } while (skip(",", true));
            skip("]");
        }
        return parent;
    }

    function parseService(parent, token) {

        /* istanbul ignore if */
        if (!nameRe.test(token = next()))
            throw illegal(token, "service name");

        var service = new Service(token);
        ifBlock(service, function parseService_block(token) {
            if (parseCommon(service, token))
                return;

            /* istanbul ignore else */
            if (token === "rpc")
                parseMethod(service, token);
            else
                throw illegal(token);
        });
        parent.add(service);
    }

    function parseMethod(parent, token) {
        var type = token;

        /* istanbul ignore if */
        if (!nameRe.test(token = next()))
            throw illegal(token, "name");

        var name = token,
            requestType, requestStream,
            responseType, responseStream;

        skip("(");
        if (skip("stream", true))
            requestStream = true;

        /* istanbul ignore if */
        if (!typeRefRe.test(token = next()))
            throw illegal(token);

        requestType = token;
        skip(")"); skip("returns"); skip("(");
        if (skip("stream", true))
            responseStream = true;

        /* istanbul ignore if */
        if (!typeRefRe.test(token = next()))
            throw illegal(token);

        responseType = token;
        skip(")");

        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);
        ifBlock(method, function parseMethod_block(token) {

            /* istanbul ignore else */
            if (token === "option") {
                parseOption(method, token);
                skip(";");
            } else
                throw illegal(token);

        });
        parent.add(method);
    }

    function parseExtension(parent, token) {

        /* istanbul ignore if */
        if (!typeRefRe.test(token = next()))
            throw illegal(token, "reference");

        var reference = token;
        ifBlock(null, function parseExtension_block(token) {
            switch (token) {

                case "required":
                case "repeated":
                case "optional":
                    parseField(parent, token, reference);
                    break;

                default:
                    /* istanbul ignore if */
                    if (!isProto3 || !typeRefRe.test(token))
                        throw illegal(token);
                    push(token);
                    parseField(parent, "optional", reference);
                    break;
            }
        });
    }

    var token;
    while ((token = next()) !== null) {
        switch (token) {

            case "package":

                /* istanbul ignore if */
                if (!head)
                    throw illegal(token);

                parsePackage();
                break;

            case "import":

                /* istanbul ignore if */
                if (!head)
                    throw illegal(token);

                parseImport();
                break;

            case "syntax":

                /* istanbul ignore if */
                if (!head)
                    throw illegal(token);

                parseSyntax();
                break;

            case "option":

                /* istanbul ignore if */
                if (!head)
                    throw illegal(token);

                parseOption(ptr, token);
                skip(";");
                break;

            default:

                /* istanbul ignore else */
                if (parseCommon(ptr, token)) {
                    head = false;
                    continue;
                }

                /* istanbul ignore next */
                throw illegal(token);
        }
    }

    parse.filename = null;
    return {
        "package"     : pkg,
        "imports"     : imports,
         weakImports  : weakImports,
         syntax       : syntax,
         root         : root
    };
}

/**
 * Parses the given .proto source and returns an object with the parsed contents.
 * @name parse
 * @function
 * @param {string} source Source contents
 * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.
 * @returns {IParserResult} Parser result
 * @property {string} filename=null Currently processing file name for error reporting, if known
 * @property {IParseOptions} defaults Default {@link IParseOptions}
 * @variation 2
 */


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = BufferReader;

// extends Reader
var Reader = __webpack_require__(37);
(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;

var util = __webpack_require__(6);

/**
 * Constructs a new buffer reader instance.
 * @classdesc Wire format reader using node buffers.
 * @extends Reader
 * @constructor
 * @param {Buffer} buffer Buffer to read from
 */
function BufferReader(buffer) {
    Reader.call(this, buffer);

    /**
     * Read buffer.
     * @name BufferReader#buf
     * @type {Buffer}
     */
}

/* istanbul ignore else */
if (util.Buffer)
    BufferReader.prototype._slice = util.Buffer.prototype.slice;

/**
 * @override
 */
BufferReader.prototype.string = function read_string_buffer() {
    var len = this.uint32(); // modifies pos
    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));
};

/**
 * Reads a sequence of bytes preceeded by its length as a varint.
 * @name BufferReader#bytes
 * @function
 * @returns {Buffer} Value read
 */


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = Service;

var util = __webpack_require__(6);

// Extends EventEmitter
(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;

/**
 * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.
 *
 * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.
 * @typedef rpc.ServiceMethodCallback
 * @template TRes extends Message<TRes>
 * @type {function}
 * @param {Error|null} error Error, if any
 * @param {TRes} [response] Response message
 * @returns {undefined}
 */

/**
 * A service method part of a {@link rpc.Service} as created by {@link Service.create}.
 * @typedef rpc.ServiceMethod
 * @template TReq extends Message<TReq>
 * @template TRes extends Message<TRes>
 * @type {function}
 * @param {TReq|Properties<TReq>} request Request message or plain object
 * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message
 * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`
 */

/**
 * Constructs a new RPC service instance.
 * @classdesc An RPC service as returned by {@link Service#create}.
 * @exports rpc.Service
 * @extends util.EventEmitter
 * @constructor
 * @param {RPCImpl} rpcImpl RPC implementation
 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
 */
function Service(rpcImpl, requestDelimited, responseDelimited) {

    if (typeof rpcImpl !== "function")
        throw TypeError("rpcImpl must be a function");

    util.EventEmitter.call(this);

    /**
     * RPC implementation. Becomes `null` once the service is ended.
     * @type {RPCImpl|null}
     */
    this.rpcImpl = rpcImpl;

    /**
     * Whether requests are length-delimited.
     * @type {boolean}
     */
    this.requestDelimited = Boolean(requestDelimited);

    /**
     * Whether responses are length-delimited.
     * @type {boolean}
     */
    this.responseDelimited = Boolean(responseDelimited);
}

/**
 * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.
 * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method
 * @param {Constructor<TReq>} requestCtor Request constructor
 * @param {Constructor<TRes>} responseCtor Response constructor
 * @param {TReq|Properties<TReq>} request Request message or plain object
 * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback
 * @returns {undefined}
 * @template TReq extends Message<TReq>
 * @template TRes extends Message<TRes>
 */
Service.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {

    if (!request)
        throw TypeError("request must be specified");

    var self = this;
    if (!callback)
        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);

    if (!self.rpcImpl) {
        setTimeout(function() { callback(Error("already ended")); }, 0);
        return undefined;
    }

    try {
        return self.rpcImpl(
            method,
            requestCtor[self.requestDelimited ? "encodeDelimited" : "encode"](request).finish(),
            function rpcCallback(err, response) {

                if (err) {
                    self.emit("error", err, method);
                    return callback(err);
                }

                if (response === null) {
                    self.end(/* endedByRPC */ true);
                    return undefined;
                }

                if (!(response instanceof responseCtor)) {
                    try {
                        response = responseCtor[self.responseDelimited ? "decodeDelimited" : "decode"](response);
                    } catch (err) {
                        self.emit("error", err, method);
                        return callback(err);
                    }
                }

                self.emit("data", response, method);
                return callback(null, response);
            }
        );
    } catch (err) {
        self.emit("error", err, method);
        setTimeout(function() { callback(err); }, 0);
        return undefined;
    }
};

/**
 * Ends this service and emits the `end` event.
 * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.
 * @returns {rpc.Service} `this`
 */
Service.prototype.end = function end(endedByRPC) {
    if (this.rpcImpl) {
        if (!endedByRPC) // signal end to rpcImpl
            this.rpcImpl(null, null, null);
        this.rpcImpl = null;
        this.emit("end").off();
    }
    return this;
};


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = LongBits;

var util = __webpack_require__(6);

/**
 * Constructs new long bits.
 * @classdesc Helper class for working with the low and high bits of a 64 bit value.
 * @memberof util
 * @constructor
 * @param {number} lo Low 32 bits, unsigned
 * @param {number} hi High 32 bits, unsigned
 */
function LongBits(lo, hi) {

    // note that the casts below are theoretically unnecessary as of today, but older statically
    // generated converter code might still call the ctor with signed 32bits. kept for compat.

    /**
     * Low bits.
     * @type {number}
     */
    this.lo = lo >>> 0;

    /**
     * High bits.
     * @type {number}
     */
    this.hi = hi >>> 0;
}

/**
 * Zero bits.
 * @memberof util.LongBits
 * @type {util.LongBits}
 */
var zero = LongBits.zero = new LongBits(0, 0);

zero.toNumber = function() { return 0; };
zero.zzEncode = zero.zzDecode = function() { return this; };
zero.length = function() { return 1; };

/**
 * Zero hash.
 * @memberof util.LongBits
 * @type {string}
 */
var zeroHash = LongBits.zeroHash = "\0\0\0\0\0\0\0\0";

/**
 * Constructs new long bits from the specified number.
 * @param {number} value Value
 * @returns {util.LongBits} Instance
 */
LongBits.fromNumber = function fromNumber(value) {
    if (value === 0)
        return zero;
    var sign = value < 0;
    if (sign)
        value = -value;
    var lo = value >>> 0,
        hi = (value - lo) / 4294967296 >>> 0;
    if (sign) {
        hi = ~hi >>> 0;
        lo = ~lo >>> 0;
        if (++lo > 4294967295) {
            lo = 0;
            if (++hi > 4294967295)
                hi = 0;
        }
    }
    return new LongBits(lo, hi);
};

/**
 * Constructs new long bits from a number, long or string.
 * @param {Long|number|string} value Value
 * @returns {util.LongBits} Instance
 */
LongBits.from = function from(value) {
    if (typeof value === "number")
        return LongBits.fromNumber(value);
    if (util.isString(value)) {
        /* istanbul ignore else */
        if (util.Long)
            value = util.Long.fromString(value);
        else
            return LongBits.fromNumber(parseInt(value, 10));
    }
    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;
};

/**
 * Converts this long bits to a possibly unsafe JavaScript number.
 * @param {boolean} [unsigned=false] Whether unsigned or not
 * @returns {number} Possibly unsafe number
 */
LongBits.prototype.toNumber = function toNumber(unsigned) {
    if (!unsigned && this.hi >>> 31) {
        var lo = ~this.lo + 1 >>> 0,
            hi = ~this.hi     >>> 0;
        if (!lo)
            hi = hi + 1 >>> 0;
        return -(lo + hi * 4294967296);
    }
    return this.lo + this.hi * 4294967296;
};

/**
 * Converts this long bits to a long.
 * @param {boolean} [unsigned=false] Whether unsigned or not
 * @returns {Long} Long
 */
LongBits.prototype.toLong = function toLong(unsigned) {
    return util.Long
        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))
        /* istanbul ignore next */
        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };
};

var charCodeAt = String.prototype.charCodeAt;

/**
 * Constructs new long bits from the specified 8 characters long hash.
 * @param {string} hash Hash
 * @returns {util.LongBits} Bits
 */
LongBits.fromHash = function fromHash(hash) {
    if (hash === zeroHash)
        return zero;
    return new LongBits(
        ( charCodeAt.call(hash, 0)
        | charCodeAt.call(hash, 1) << 8
        | charCodeAt.call(hash, 2) << 16
        | charCodeAt.call(hash, 3) << 24) >>> 0
    ,
        ( charCodeAt.call(hash, 4)
        | charCodeAt.call(hash, 5) << 8
        | charCodeAt.call(hash, 6) << 16
        | charCodeAt.call(hash, 7) << 24) >>> 0
    );
};

/**
 * Converts this long bits to a 8 characters long hash.
 * @returns {string} Hash
 */
LongBits.prototype.toHash = function toHash() {
    return String.fromCharCode(
        this.lo        & 255,
        this.lo >>> 8  & 255,
        this.lo >>> 16 & 255,
        this.lo >>> 24      ,
        this.hi        & 255,
        this.hi >>> 8  & 255,
        this.hi >>> 16 & 255,
        this.hi >>> 24
    );
};

/**
 * Zig-zag encodes this long bits.
 * @returns {util.LongBits} `this`
 */
LongBits.prototype.zzEncode = function zzEncode() {
    var mask =   this.hi >> 31;
    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;
    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;
    return this;
};

/**
 * Zig-zag decodes this long bits.
 * @returns {util.LongBits} `this`
 */
LongBits.prototype.zzDecode = function zzDecode() {
    var mask = -(this.lo & 1);
    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;
    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;
    return this;
};

/**
 * Calculates the length of this longbits when encoded as a varint.
 * @returns {number} Length
 */
LongBits.prototype.length = function length() {
    var part0 =  this.lo,
        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,
        part2 =  this.hi >>> 24;
    return part2 === 0
         ? part1 === 0
           ? part0 < 16384
             ? part0 < 128 ? 1 : 2
             : part0 < 2097152 ? 3 : 4
           : part1 < 16384
             ? part1 < 128 ? 5 : 6
             : part1 < 2097152 ? 7 : 8
         : part2 < 128 ? 9 : 10;
};


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = BufferWriter;

// extends Writer
var Writer = __webpack_require__(41);
(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;

var util = __webpack_require__(6);

var Buffer = util.Buffer;

/**
 * Constructs a new buffer writer instance.
 * @classdesc Wire format writer using node buffers.
 * @extends Writer
 * @constructor
 */
function BufferWriter() {
    Writer.call(this);
}

/**
 * Allocates a buffer of the specified size.
 * @param {number} size Buffer size
 * @returns {Buffer} Buffer
 */
BufferWriter.alloc = function alloc_buffer(size) {
    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);
};

var writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === "set"
    ? function writeBytesBuffer_set(val, buf, pos) {
        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)
                           // also works for plain array values
    }
    /* istanbul ignore next */
    : function writeBytesBuffer_copy(val, buf, pos) {
        if (val.copy) // Buffer values
            val.copy(buf, pos, 0, val.length);
        else for (var i = 0; i < val.length;) // plain array values
            buf[pos++] = val[i++];
    };

/**
 * @override
 */
BufferWriter.prototype.bytes = function write_bytes_buffer(value) {
    if (util.isString(value))
        value = util._Buffer_from(value, "base64");
    var len = value.length >>> 0;
    this.uint32(len);
    if (len)
        this._push(writeBytesBuffer, len, value);
    return this;
};

function writeStringBuffer(val, buf, pos) {
    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)
        util.utf8.write(val, buf, pos);
    else
        buf.utf8Write(val, pos);
}

/**
 * @override
 */
BufferWriter.prototype.string = function write_string_buffer(value) {
    var len = Buffer.byteLength(value);
    this.uint32(len);
    if (len)
        this._push(writeStringBuffer, len, value);
    return this;
};


/**
 * Finishes the write operation.
 * @name BufferWriter#finish
 * @function
 * @returns {Buffer} Finished buffer
 */


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

var pump = __webpack_require__(176)
var inherits = __webpack_require__(0)
var Duplexify = __webpack_require__(60)

var toArray = function(args) {
  if (!args.length) return []
  return Array.isArray(args[0]) ? args[0] : Array.prototype.slice.call(args)
}

var define = function(opts) {
  var Pumpify = function() {
    var streams = toArray(arguments)
    if (!(this instanceof Pumpify)) return new Pumpify(streams)
    Duplexify.call(this, null, null, opts)
    if (streams.length) this.setPipeline(streams)
  }

  inherits(Pumpify, Duplexify)

  Pumpify.prototype.setPipeline = function() {
    var streams = toArray(arguments)
    var self = this
    var ended = false
    var w = streams[0]
    var r = streams[streams.length-1]

    r = r.readable ? r : null
    w = w.writable ? w : null

    var onclose = function() {
      streams[0].emit('error', new Error('stream was destroyed'))
    }

    this.on('close', onclose)
    this.on('prefinish', function() {
      if (!ended) self.cork()
    })

    pump(streams, function(err) {
      self.removeListener('close', onclose)
      if (err) return self.destroy(err)
      ended = true
      self.uncork()
    })

    if (this.destroyed) return onclose()
    this.setWritable(w)
    this.setReadable(r)
  }

  return Pumpify
}

module.exports = define({destroy:false})
module.exports.obj = define({destroy:false, objectMode:true, highWaterMark:16})
module.exports.ctor = define


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

var once = __webpack_require__(71)
var eos = __webpack_require__(66)
var fs = __webpack_require__(28) // we only need fs to get the ReadStream and WriteStream prototypes

var noop = function () {}
var ancient = /^v?\.0/.test(process.version)

var isFn = function (fn) {
  return typeof fn === 'function'
}

var isFS = function (stream) {
  if (!ancient) return false // newer node version do not need to care about fs is a special way
  if (!fs) return false // browser
  return (stream instanceof (fs.ReadStream || noop) || stream instanceof (fs.WriteStream || noop)) && isFn(stream.close)
}

var isRequest = function (stream) {
  return stream.setHeader && isFn(stream.abort)
}

var destroyer = function (stream, reading, writing, callback) {
  callback = once(callback)

  var closed = false
  stream.on('close', function () {
    closed = true
  })

  eos(stream, {readable: reading, writable: writing}, function (err) {
    if (err) return callback(err)
    closed = true
    callback()
  })

  var destroyed = false
  return function (err) {
    if (closed) return
    if (destroyed) return
    destroyed = true

    if (isFS(stream)) return stream.close(noop) // use close for fs streams to avoid fd leaks
    if (isRequest(stream)) return stream.abort() // request.destroy just do .end - .abort is what we want

    if (isFn(stream.destroy)) return stream.destroy()

    callback(err || new Error('stream was destroyed'))
  }
}

var call = function (fn) {
  fn()
}

var pipe = function (from, to) {
  return from.pipe(to)
}

var pump = function () {
  var streams = Array.prototype.slice.call(arguments)
  var callback = isFn(streams[streams.length - 1] || noop) && streams.pop() || noop

  if (Array.isArray(streams[0])) streams = streams[0]
  if (streams.length < 2) throw new Error('pump requires two streams per minimum')

  var error
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1
    var writing = i > 0
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err
      if (err) destroys.forEach(call)
      if (reading) return
      destroys.forEach(call)
      callback(error)
    })
  })

  streams.reduce(pipe)
}

module.exports = pump


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.



module.exports = PassThrough;

var Transform = __webpack_require__(83);

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Buffer = __webpack_require__(13).Buffer;
/*<replacement>*/
var bufferShim = __webpack_require__(22);
/*</replacement>*/

module.exports = BufferList;

function BufferList() {
  this.head = null;
  this.tail = null;
  this.length = 0;
}

BufferList.prototype.push = function (v) {
  var entry = { data: v, next: null };
  if (this.length > 0) this.tail.next = entry;else this.head = entry;
  this.tail = entry;
  ++this.length;
};

BufferList.prototype.unshift = function (v) {
  var entry = { data: v, next: this.head };
  if (this.length === 0) this.tail = entry;
  this.head = entry;
  ++this.length;
};

BufferList.prototype.shift = function () {
  if (this.length === 0) return;
  var ret = this.head.data;
  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
  --this.length;
  return ret;
};

BufferList.prototype.clear = function () {
  this.head = this.tail = null;
  this.length = 0;
};

BufferList.prototype.join = function (s) {
  if (this.length === 0) return '';
  var p = this.head;
  var ret = '' + p.data;
  while (p = p.next) {
    ret += s + p.data;
  }return ret;
};

BufferList.prototype.concat = function (n) {
  if (this.length === 0) return bufferShim.alloc(0);
  if (this.length === 1) return this.head.data;
  var ret = bufferShim.allocUnsafe(n >>> 0);
  var p = this.head;
  var i = 0;
  while (p) {
    p.data.copy(ret, i);
    i += p.data.length;
    p = p.next;
  }
  return ret;
};

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

var Stream = __webpack_require__(9);
if (process.env.READABLE_STREAM === 'disable' && Stream) {
  module.exports = Stream;
  exports = module.exports = Stream.Readable;
  exports.Readable = Stream.Readable;
  exports.Writable = Stream.Writable;
  exports.Duplex = Stream.Duplex;
  exports.Transform = Stream.Transform;
  exports.PassThrough = Stream.PassThrough;
  exports.Stream = Stream;
} else {
  exports = module.exports = __webpack_require__(82);
  exports.Stream = Stream || exports;
  exports.Readable = exports;
  exports.Writable = __webpack_require__(84);
  exports.Duplex = __webpack_require__(17);
  exports.Transform = __webpack_require__(83);
  exports.PassThrough = __webpack_require__(177);
}


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = __webpack_require__(181)
exports.sha1 = __webpack_require__(182)
exports.sha224 = __webpack_require__(183)
exports.sha256 = __webpack_require__(87)
exports.sha384 = __webpack_require__(184)
exports.sha512 = __webpack_require__(88)


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = __webpack_require__(0)
var Hash = __webpack_require__(18)
var Buffer = __webpack_require__(12).Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = __webpack_require__(0)
var Hash = __webpack_require__(18)
var Buffer = __webpack_require__(12).Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = __webpack_require__(0)
var Sha256 = __webpack_require__(87)
var Hash = __webpack_require__(18)
var Buffer = __webpack_require__(12).Buffer

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(0)
var SHA512 = __webpack_require__(88)
var Hash = __webpack_require__(18)
var Buffer = __webpack_require__(12).Buffer

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
Copyright (c) 2014-2016, Matteo Collina <hello@matteocollina.com>

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/



var through = __webpack_require__(43)
var StringDecoder = __webpack_require__(207).StringDecoder

function transform (chunk, enc, cb) {
  this._last += this._decoder.write(chunk)
  if (this._last.length > this.maxLength) {
    return cb(new Error('maximum buffer reached'))
  }

  var list = this._last.split(this.matcher)

  this._last = list.pop()

  for (var i = 0; i < list.length; i++) {
    push(this, this.mapper(list[i]))
  }

  cb()
}

function flush (cb) {
  // forward any gibberish left in there
  this._last += this._decoder.end()

  if (this._last) {
    push(this, this.mapper(this._last))
  }

  cb()
}

function push (self, val) {
  if (val !== undefined) {
    self.push(val)
  }
}

function noop (incoming) {
  return incoming
}

function split (matcher, mapper, options) {
  // Set defaults for any arguments not supplied.
  matcher = matcher || /\r?\n/
  mapper = mapper || noop
  options = options || {}

  // Test arguments explicitly.
  switch (arguments.length) {
    case 1:
      // If mapper is only argument.
      if (typeof matcher === 'function') {
        mapper = matcher
        matcher = /\r?\n/
      // If options is only argument.
      } else if (typeof matcher === 'object' && !(matcher instanceof RegExp)) {
        options = matcher
        matcher = /\r?\n/
      }
      break

    case 2:
      // If mapper and options are arguments.
      if (typeof matcher === 'function') {
        options = mapper
        mapper = matcher
        matcher = /\r?\n/
      // If matcher and options are arguments.
      } else if (typeof mapper === 'object') {
        options = mapper
        mapper = noop
      }
  }

  var stream = through(options, transform, flush)

  // this stream is in objectMode only in the readable part
  stream._readableState.objectMode = true

  // objectMode default hwm is 16 and not 16384
  if (stream._readableState.highWaterMark && !options.highWaterMark) {
    stream._readableState.highWaterMark = 16
  }

  stream._last = ''
  stream._decoder = new StringDecoder('utf8')
  stream.matcher = matcher
  stream.mapper = mapper
  stream.maxLength = options.maxLength

  return stream
}

module.exports = split


/***/ }),
/* 186 */
/***/ (function(module, exports) {

module.exports = shift

function shift (stream) {
  var rs = stream._readableState
  if (!rs) return null
  return rs.objectMode ? stream.read() : stream.read(getStateLength(rs))
}

function getStateLength (state) {
  if (state.buffer.length) {
    // Since node 6.3.0 state.buffer is a BufferList not an array
    if (state.buffer.head) {
      return state.buffer.head.data.length
    }

    return state.buffer[0].length
  }

  return state.length
}


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var hasFlag = __webpack_require__(151);

var support = function (level) {
	if (level === 0) {
		return false;
	}

	return {
		level: level,
		hasBasic: true,
		has256: level >= 2,
		has16m: level >= 3
	};
};

var supportLevel = (function () {
	if (hasFlag('no-color') ||
		hasFlag('no-colors') ||
		hasFlag('color=false')) {
		return 0;
	}

	if (hasFlag('color=16m') ||
		hasFlag('color=full') ||
		hasFlag('color=truecolor')) {
		return 3;
	}

	if (hasFlag('color=256')) {
		return 2;
	}

	if (hasFlag('color') ||
		hasFlag('colors') ||
		hasFlag('color=true') ||
		hasFlag('color=always')) {
		return 1;
	}

	if (process.stdout && !process.stdout.isTTY) {
		return 0;
	}

	if (process.platform === 'win32') {
		return 1;
	}

	if ('CI' in process.env) {
		if ('TRAVIS' in process.env || process.env.CI === 'Travis') {
			return 1;
		}

		return 0;
	}

	if ('TEAMCITY_VERSION' in process.env) {
		return process.env.TEAMCITY_VERSION.match(/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/) === null ? 0 : 1;
	}

	if (/^(screen|xterm)-256(?:color)?/.test(process.env.TERM)) {
		return 2;
	}

	if (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {
		return 1;
	}

	if ('COLORTERM' in process.env) {
		return 1;
	}

	if (process.env.TERM === 'dumb') {
		return 0;
	}

	return 0;
})();

if (supportLevel === 0 && 'FORCE_COLOR' in process.env) {
	supportLevel = 1;
}

module.exports = process && support(supportLevel);


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.



module.exports = PassThrough;

var Transform = __webpack_require__(90);

/*<replacement>*/
var util = __webpack_require__(3);
util.inherits = __webpack_require__(0);
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = __webpack_require__(11).Buffer;
var util = __webpack_require__(1);

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

var Stream = __webpack_require__(9);
if (process.env.READABLE_STREAM === 'disable' && Stream) {
  module.exports = Stream;
  exports = module.exports = Stream.Readable;
  exports.Readable = Stream.Readable;
  exports.Writable = Stream.Writable;
  exports.Duplex = Stream.Duplex;
  exports.Transform = Stream.Transform;
  exports.PassThrough = Stream.PassThrough;
  exports.Stream = Stream;
} else {
  exports = module.exports = __webpack_require__(89);
  exports.Stream = Stream || exports;
  exports.Readable = exports;
  exports.Writable = __webpack_require__(91);
  exports.Duplex = __webpack_require__(19);
  exports.Transform = __webpack_require__(90);
  exports.PassThrough = __webpack_require__(188);
}


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(190).Transform


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var has = Object.prototype.hasOwnProperty;

/**
 * An auto incrementing id which we can use to create "unique" Ultron instances
 * so we can track the event emitters that are added through the Ultron
 * interface.
 *
 * @type {Number}
 * @private
 */
var id = 0;

/**
 * Ultron is high-intelligence robot. It gathers intelligence so it can start improving
 * upon his rudimentary design. It will learn from your EventEmitting patterns
 * and exterminate them.
 *
 * @constructor
 * @param {EventEmitter} ee EventEmitter instance we need to wrap.
 * @api public
 */
function Ultron(ee) {
  if (!(this instanceof Ultron)) return new Ultron(ee);

  this.id = id++;
  this.ee = ee;
}

/**
 * Register a new EventListener for the given event.
 *
 * @param {String} event Name of the event.
 * @param {Functon} fn Callback function.
 * @param {Mixed} context The context of the function.
 * @returns {Ultron}
 * @api public
 */
Ultron.prototype.on = function on(event, fn, context) {
  fn.__ultron = this.id;
  this.ee.on(event, fn, context);

  return this;
};
/**
 * Add an EventListener that's only called once.
 *
 * @param {String} event Name of the event.
 * @param {Function} fn Callback function.
 * @param {Mixed} context The context of the function.
 * @returns {Ultron}
 * @api public
 */
Ultron.prototype.once = function once(event, fn, context) {
  fn.__ultron = this.id;
  this.ee.once(event, fn, context);

  return this;
};

/**
 * Remove the listeners we assigned for the given event.
 *
 * @returns {Ultron}
 * @api public
 */
Ultron.prototype.remove = function remove() {
  var args = arguments
    , event;

  //
  // When no event names are provided we assume that we need to clear all the
  // events that were assigned through us.
  //
  if (args.length === 1 && 'string' === typeof args[0]) {
    args = args[0].split(/[, ]+/);
  } else if (!args.length) {
    args = [];

    for (event in this.ee._events) {
      if (has.call(this.ee._events, event)) args.push(event);
    }
  }

  for (var i = 0; i < args.length; i++) {
    var listeners = this.ee.listeners(args[i]);

    for (var j = 0; j < listeners.length; j++) {
      event = listeners[j];

      //
      // Once listeners have a `listener` property that stores the real listener
      // in the EventEmitter that ships with Node.js.
      //
      if (event.listener) {
        if (event.listener.__ultron !== this.id) continue;
        delete event.listener.__ultron;
      } else {
        if (event.__ultron !== this.id) continue;
        delete event.__ultron;
      }

      this.ee.removeListener(args[i], event);
    }
  }

  return this;
};

/**
 * Destroy the Ultron instance, remove all listeners and release all references.
 *
 * @returns {Boolean}
 * @api public
 */
Ultron.prototype.destroy = function destroy() {
  if (!this.ee) return false;

  this.remove();
  this.ee = null;

  return true;
};

//
// Expose the module.
//
module.exports = Ultron;


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * UTF-8 validate: UTF-8 validation for WebSockets.
 * Copyright(c) 2015 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */



/**
 * Checks if a given buffer contains only correct UTF-8.
 * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by
 * Markus Kuhn.
 *
 * @param {Buffer} buf The buffer to check
 * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`
 * @public
 */
const isValidUTF8 = (buf) => {
  var len = buf.length;
  var i = 0;

  while (i < len) {
    if (buf[i] < 0x80) {  // 0xxxxxxx
      i++;
    } else if ((buf[i] & 0xe0) === 0xc0) {  // 110xxxxx 10xxxxxx
      if (
        i + 1 === len ||
        (buf[i + 1] & 0xc0) !== 0x80 ||
        (buf[i] & 0xfe) === 0xc0  // overlong
      ) {
        return false;
      } else {
        i += 2;
      }
    } else if ((buf[i] & 0xf0) === 0xe0) {  // 1110xxxx 10xxxxxx 10xxxxxx
      if (
        i + 2 >= len ||
        (buf[i + 1] & 0xc0) !== 0x80 ||
        (buf[i + 2] & 0xc0) !== 0x80 ||
        buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 ||  // overlong
        buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0     // surrogate (U+D800 - U+DFFF)
      ) {
        return false;
      } else {
        i += 3;
      }
    } else if ((buf[i] & 0xf8) === 0xf0) {  // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
      if (
        i + 3 >= len ||
        (buf[i + 1] & 0xc0) !== 0x80 ||
        (buf[i + 2] & 0xc0) !== 0x80 ||
        (buf[i + 3] & 0xc0) !== 0x80 ||
        buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 ||  // overlong
        buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4  // > U+10FFFF
      ) {
        return false;
      } else {
        i += 4;
      }
    } else {
      return false;
    }
  }

  return true;
};

module.exports = isValidUTF8;


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


try {
  module.exports = __webpack_require__(59)('validation');
} catch (e) {
  module.exports = __webpack_require__(193);
}


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {


var Server = __webpack_require__(196)

module.exports = __webpack_require__(94)
module.exports.Server = Server
module.exports.createServer = Server


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {


var inherits = __webpack_require__(0)
var WebSocketServer = __webpack_require__(95).Server
var stream = __webpack_require__(94)

module.exports = Server

function Server(opts, cb) {
  if (!(this instanceof Server)) {
    return new Server(opts, cb)
  }

  WebSocketServer.call(this, opts)

  var proxied = false
  this.on('newListener', function(event) {
    if (!proxied && event === 'stream') {
      proxied = true
      this.on('connection', function(conn) {
        this.emit('stream', stream(conn, opts))
      })
    }
  })

  if (cb) {
    this.on('stream', cb)
  }
}

inherits(Server, WebSocketServer)



/***/ }),
/* 197 */
/***/ (function(module, exports) {

// Returns a wrapper function that returns a wrapped callback
// The wrapper function should do some stuff, and return a
// presumably different callback function.
// This makes sure that own properties are retained, so that
// decorations and such are not lost along the way.
module.exports = wrappy
function wrappy (fn, cb) {
  if (fn && cb) return wrappy(fn)(cb)

  if (typeof fn !== 'function')
    throw new TypeError('need wrapper function')

  Object.keys(fn).forEach(function (k) {
    wrapper[k] = fn[k]
  })

  return wrapper

  function wrapper() {
    var args = new Array(arguments.length)
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i]
    }
    var ret = fn.apply(this, args)
    var cb = args[args.length-1]
    if (typeof ret === 'function' && ret !== cb) {
      Object.keys(cb).forEach(function (k) {
        ret[k] = cb[k]
      })
    }
    return ret
  }
}


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var util = __webpack_require__(1);

function BufferPool(initialSize, growStrategy, shrinkStrategy) {
  if (this instanceof BufferPool === false) {
    throw new TypeError("Classes can't be function-called");
  }

  if (typeof initialSize === 'function') {
    shrinkStrategy = growStrategy;
    growStrategy = initialSize;
    initialSize = 0;
  }
  else if (typeof initialSize === 'undefined') {
    initialSize = 0;
  }
  this._growStrategy = (growStrategy || function(db, size) {
    return db.used + size;
  }).bind(null, this);
  this._shrinkStrategy = (shrinkStrategy || function(db) {
    return initialSize;
  }).bind(null, this);
  this._buffer = initialSize ? new Buffer(initialSize) : null;
  this._offset = 0;
  this._used = 0;
  this._changeFactor = 0;
  this.__defineGetter__('size', function(){
    return this._buffer == null ? 0 : this._buffer.length;
  });
  this.__defineGetter__('used', function(){
    return this._used;
  });
}

BufferPool.prototype.get = function(length) {
  if (this._buffer == null || this._offset + length > this._buffer.length) {
    var newBuf = new Buffer(this._growStrategy(length));
    this._buffer = newBuf;
    this._offset = 0;
  }
  this._used += length;
  var buf = this._buffer.slice(this._offset, this._offset + length);
  this._offset += length;
  return buf;
}

BufferPool.prototype.reset = function(forceNewBuffer) {
  var len = this._shrinkStrategy();
  if (len < this.size) this._changeFactor -= 1;
  if (forceNewBuffer || this._changeFactor < -2) {
    this._changeFactor = 0;
    this._buffer = len ? new Buffer(len) : null;
  }
  this._offset = 0;
  this._used = 0;
}

module.exports = BufferPool;


/***/ }),
/* 199 */
/***/ (function(module, exports) {

/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

exports.BufferUtil = {
  merge: function(mergedBuffer, buffers) {
    var offset = 0;
    for (var i = 0, l = buffers.length; i < l; ++i) {
      var buf = buffers[i];
      buf.copy(mergedBuffer, offset);
      offset += buf.length;
    }
  },
  mask: function(source, mask, output, offset, length) {
    var maskNum = mask.readUInt32LE(0, true);
    var i = 0;
    for (; i < length - 3; i += 4) {
      var num = maskNum ^ source.readUInt32LE(i, true);
      if (num < 0) num = 4294967296 + num;
      output.writeUInt32LE(num, offset + i, true);
    }
    switch (length % 4) {
      case 3: output[offset + i + 2] = source[i + 2] ^ mask[2];
      case 2: output[offset + i + 1] = source[i + 1] ^ mask[1];
      case 1: output[offset + i] = source[i] ^ mask[0];
      case 0:;
    }
  },
  unmask: function(data, mask) {
    var maskNum = mask.readUInt32LE(0, true);
    var length = data.length;
    var i = 0;
    for (; i < length - 3; i += 4) {
      var num = maskNum ^ data.readUInt32LE(i, true);
      if (num < 0) num = 4294967296 + num;
      data.writeUInt32LE(num, i, true);
    }
    switch (length % 4) {
      case 3: data[i + 2] = data[i + 2] ^ mask[2];
      case 2: data[i + 1] = data[i + 1] ^ mask[1];
      case 1: data[i] = data[i] ^ mask[0];
      case 0:;
    }
  }
}


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var util = __webpack_require__(1);

/**
 * State constants
 */

var EMPTY = 0
  , BODY = 1;
var BINARYLENGTH = 2
  , BINARYBODY = 3;

/**
 * Hixie Receiver implementation
 */

function Receiver () {
  if (this instanceof Receiver === false) {
    throw new TypeError("Classes can't be function-called");
  }

  this.state = EMPTY;
  this.buffers = [];
  this.messageEnd = -1;
  this.spanLength = 0;
  this.dead = false;

  this.onerror = function() {};
  this.ontext = function() {};
  this.onbinary = function() {};
  this.onclose = function() {};
  this.onping = function() {};
  this.onpong = function() {};
}

module.exports = Receiver;

/**
 * Add new data to the parser.
 *
 * @api public
 */

Receiver.prototype.add = function(data) {
  if (this.dead) return;
  var self = this;
  function doAdd() {
    if (self.state === EMPTY) {
      if (data.length == 2 && data[0] == 0xFF && data[1] == 0x00) {
        self.reset();
        self.onclose();
        return;
      }
      if (data[0] === 0x80) {
        self.messageEnd = 0;
        self.state = BINARYLENGTH;
        data = data.slice(1);
      } else {

      if (data[0] !== 0x00) {
        self.error('payload must start with 0x00 byte', true);
        return;
      }
      data = data.slice(1);
      self.state = BODY;

      }
    }
    if (self.state === BINARYLENGTH) {
      var i = 0;
      while ((i < data.length) && (data[i] & 0x80)) {
        self.messageEnd = 128 * self.messageEnd + (data[i] & 0x7f);
        ++i;
      }
      if (i < data.length) {
        self.messageEnd = 128 * self.messageEnd + (data[i] & 0x7f);
        self.state = BINARYBODY;
        ++i;
      }
      if (i > 0)
        data = data.slice(i);
    }
    if (self.state === BINARYBODY) {
      var dataleft = self.messageEnd - self.spanLength;
      if (data.length >= dataleft) {
        // consume the whole buffer to finish the frame
        self.buffers.push(data);
        self.spanLength += dataleft;
        self.messageEnd = dataleft;
        return self.parse();
      }
      // frame's not done even if we consume it all
      self.buffers.push(data);
      self.spanLength += data.length;
      return;
    }
    self.buffers.push(data);
    if ((self.messageEnd = bufferIndex(data, 0xFF)) != -1) {
      self.spanLength += self.messageEnd;
      return self.parse();
    }
    else self.spanLength += data.length;
  }
  while(data) data = doAdd();
};

/**
 * Releases all resources used by the receiver.
 *
 * @api public
 */

Receiver.prototype.cleanup = function() {
  this.dead = true;
  this.state = EMPTY;
  this.buffers = [];
};

/**
 * Process buffered data.
 *
 * @api public
 */

Receiver.prototype.parse = function() {
  var output = new Buffer(this.spanLength);
  var outputIndex = 0;
  for (var bi = 0, bl = this.buffers.length; bi < bl - 1; ++bi) {
    var buffer = this.buffers[bi];
    buffer.copy(output, outputIndex);
    outputIndex += buffer.length;
  }
  var lastBuffer = this.buffers[this.buffers.length - 1];
  if (this.messageEnd > 0) lastBuffer.copy(output, outputIndex, 0, this.messageEnd);
  if (this.state !== BODY) --this.messageEnd;
  var tail = null;
  if (this.messageEnd < lastBuffer.length - 1) {
    tail = lastBuffer.slice(this.messageEnd + 1);
  }
  this.reset();
  this.ontext(output.toString('utf8'));
  return tail;
};

/**
 * Handles an error
 *
 * @api private
 */

Receiver.prototype.error = function (reason, terminate) {
  if (this.dead) return;
  this.reset();
  if(typeof reason == 'string'){
    this.onerror(new Error(reason), terminate);
  }
  else if(reason.constructor == Error){
    this.onerror(reason, terminate);
  }
  else{
    this.onerror(new Error("An error occured"),terminate);
  }
  return this;
};

/**
 * Reset parser state
 *
 * @api private
 */

Receiver.prototype.reset = function (reason) {
  if (this.dead) return;
  this.state = EMPTY;
  this.buffers = [];
  this.messageEnd = -1;
  this.spanLength = 0;
};

/**
 * Internal api
 */

function bufferIndex(buffer, byte) {
  for (var i = 0, l = buffer.length; i < l; ++i) {
    if (buffer[i] === byte) return i;
  }
  return -1;
}


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var events = __webpack_require__(7)
  , util = __webpack_require__(1)
  , EventEmitter = events.EventEmitter;

/**
 * Hixie Sender implementation
 */

function Sender(socket) {
  if (this instanceof Sender === false) {
    throw new TypeError("Classes can't be function-called");
  }

  events.EventEmitter.call(this);

  this.socket = socket;
  this.continuationFrame = false;
  this.isClosed = false;
}

module.exports = Sender;

/**
 * Inherits from EventEmitter.
 */

util.inherits(Sender, events.EventEmitter);

/**
 * Frames and writes data.
 *
 * @api public
 */

Sender.prototype.send = function(data, options, cb) {
  if (this.isClosed) return;

  var isString = typeof data == 'string'
    , length = isString ? Buffer.byteLength(data) : data.length
    , lengthbytes = (length > 127) ? 2 : 1 // assume less than 2**14 bytes
    , writeStartMarker = this.continuationFrame == false
    , writeEndMarker = !options || !(typeof options.fin != 'undefined' && !options.fin)
    , buffer = new Buffer((writeStartMarker ? ((options && options.binary) ? (1 + lengthbytes) : 1) : 0) + length + ((writeEndMarker && !(options && options.binary)) ? 1 : 0))
    , offset = writeStartMarker ? 1 : 0;

  if (writeStartMarker) {
    if (options && options.binary) {
      buffer.write('\x80', 'binary');
      // assume length less than 2**14 bytes
      if (lengthbytes > 1)
        buffer.write(String.fromCharCode(128+length/128), offset++, 'binary');
      buffer.write(String.fromCharCode(length&0x7f), offset++, 'binary');
    } else
      buffer.write('\x00', 'binary');
  }

  if (isString) buffer.write(data, offset, 'utf8');
  else data.copy(buffer, offset, 0);

  if (writeEndMarker) {
    if (options && options.binary) {
      // sending binary, not writing end marker
    } else
      buffer.write('\xff', offset + length, 'binary');
    this.continuationFrame = false;
  }
  else this.continuationFrame = true;

  try {
    this.socket.write(buffer, 'binary', cb);
  } catch (e) {
    this.error(e.toString());
  }
};

/**
 * Sends a close instruction to the remote party.
 *
 * @api public
 */

Sender.prototype.close = function(code, data, mask, cb) {
  if (this.isClosed) return;
  this.isClosed = true;
  try {
    if (this.continuationFrame) this.socket.write(new Buffer([0xff], 'binary'));
    this.socket.write(new Buffer([0xff, 0x00]), 'binary', cb);
  } catch (e) {
    this.error(e.toString());
  }
};

/**
 * Sends a ping message to the remote party. Not available for hixie.
 *
 * @api public
 */

Sender.prototype.ping = function(data, options) {};

/**
 * Sends a pong message to the remote party. Not available for hixie.
 *
 * @api public
 */

Sender.prototype.pong = function(data, options) {};

/**
 * Handles an error
 *
 * @api private
 */

Sender.prototype.error = function (reason) {
  this.emit('error', reason);
  return this;
};


/***/ }),
/* 202 */
/***/ (function(module, exports) {

/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

exports.Validation = {
  isValidUTF8: function(buffer) {
    return true;
  }
};


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var isValidUTF8;

try {
  isValidUTF8 = __webpack_require__(194);
} catch (e) {
  isValidUTF8 = __webpack_require__(202);
}

module.exports = typeof isValidUTF8 === 'object'
  ? isValidUTF8.Validation.isValidUTF8
  : isValidUTF8;


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var util = __webpack_require__(1)
  , events = __webpack_require__(7)
  , http = __webpack_require__(29)
  , crypto = __webpack_require__(27)
  , Options = __webpack_require__(72)
  , WebSocket = __webpack_require__(101)
  , Extensions = __webpack_require__(98)
  , PerMessageDeflate = __webpack_require__(25)
  , tls = __webpack_require__(208)
  , url = __webpack_require__(21);

/**
 * WebSocket Server implementation
 */

function WebSocketServer(options, callback) {
  if (this instanceof WebSocketServer === false) {
    return new WebSocketServer(options, callback);
  }

  events.EventEmitter.call(this);

  options = new Options({
    host: '0.0.0.0',
    port: null,
    server: null,
    verifyClient: null,
    handleProtocols: null,
    path: null,
    noServer: false,
    disableHixie: false,
    clientTracking: true,
    perMessageDeflate: true,
    maxPayload: 100 * 1024 * 1024
  }).merge(options);

  if (!options.isDefinedAndNonNull('port') && !options.isDefinedAndNonNull('server') && !options.value.noServer) {
    throw new TypeError('`port` or a `server` must be provided');
  }

  var self = this;

  if (options.isDefinedAndNonNull('port')) {
    this._server = http.createServer(function (req, res) {
      var body = http.STATUS_CODES[426];
      res.writeHead(426, {
        'Content-Length': body.length,
        'Content-Type': 'text/plain'
      });
      res.end(body);
    });
    this._server.allowHalfOpen = false;
    this._server.listen(options.value.port, options.value.host, callback);
    this._closeServer = function() { if (self._server) self._server.close(); };
  }
  else if (options.value.server) {
    this._server = options.value.server;
    if (options.value.path) {
      // take note of the path, to avoid collisions when multiple websocket servers are
      // listening on the same http server
      if (this._server._webSocketPaths && options.value.server._webSocketPaths[options.value.path]) {
        throw new Error('two instances of WebSocketServer cannot listen on the same http server path');
      }
      if (typeof this._server._webSocketPaths !== 'object') {
        this._server._webSocketPaths = {};
      }
      this._server._webSocketPaths[options.value.path] = 1;
    }
  }
  if (this._server) {
    this._onceServerListening = function() { self.emit('listening'); };
    this._server.once('listening', this._onceServerListening);
  }

  if (typeof this._server != 'undefined') {
    this._onServerError = function(error) { self.emit('error', error) };
    this._server.on('error', this._onServerError);
    this._onServerUpgrade = function(req, socket, upgradeHead) {
      //copy upgradeHead to avoid retention of large slab buffers used in node core
      var head = new Buffer(upgradeHead.length);
      upgradeHead.copy(head);

      self.handleUpgrade(req, socket, head, function(client) {
        self.emit('connection'+req.url, client);
        self.emit('connection', client);
      });
    };
    this._server.on('upgrade', this._onServerUpgrade);
  }

  this.options = options.value;
  this.path = options.value.path;
  this.clients = [];
}

/**
 * Inherits from EventEmitter.
 */

util.inherits(WebSocketServer, events.EventEmitter);

/**
 * Immediately shuts down the connection.
 *
 * @api public
 */

WebSocketServer.prototype.close = function(callback) {
  // terminate all associated clients
  var error = null;
  try {
    for (var i = 0, l = this.clients.length; i < l; ++i) {
      this.clients[i].terminate();
    }
  }
  catch (e) {
    error = e;
  }

  // remove path descriptor, if any
  if (this.path && this._server._webSocketPaths) {
    delete this._server._webSocketPaths[this.path];
    if (Object.keys(this._server._webSocketPaths).length == 0) {
      delete this._server._webSocketPaths;
    }
  }

  // close the http server if it was internally created
  try {
    if (typeof this._closeServer !== 'undefined') {
      this._closeServer();
    }
  }
  finally {
    if (this._server) {
      this._server.removeListener('listening', this._onceServerListening);
      this._server.removeListener('error', this._onServerError);
      this._server.removeListener('upgrade', this._onServerUpgrade);
    }
    delete this._server;
  }
  if(callback)
    callback(error);
  else if(error)
    throw error;
}

/**
 * Handle a HTTP Upgrade request.
 *
 * @api public
 */

WebSocketServer.prototype.handleUpgrade = function(req, socket, upgradeHead, cb) {
  // check for wrong path
  if (this.options.path) {
    var u = url.parse(req.url);
    if (u && u.pathname !== this.options.path) return;
  }

  if (typeof req.headers.upgrade === 'undefined' || req.headers.upgrade.toLowerCase() !== 'websocket') {
    abortConnection(socket, 400, 'Bad Request');
    return;
  }

  if (req.headers['sec-websocket-key1']) handleHixieUpgrade.apply(this, arguments);
  else handleHybiUpgrade.apply(this, arguments);
}

module.exports = WebSocketServer;

/**
 * Entirely private apis,
 * which may or may not be bound to a sepcific WebSocket instance.
 */

function handleHybiUpgrade(req, socket, upgradeHead, cb) {
  // handle premature socket errors
  var errorHandler = function() {
    try { socket.destroy(); } catch (e) {}
  }
  socket.on('error', errorHandler);

  // verify key presence
  if (!req.headers['sec-websocket-key']) {
    abortConnection(socket, 400, 'Bad Request');
    return;
  }

  // verify version
  var version = parseInt(req.headers['sec-websocket-version']);
  if ([8, 13].indexOf(version) === -1) {
    abortConnection(socket, 400, 'Bad Request');
    return;
  }

  // verify protocol
  var protocols = req.headers['sec-websocket-protocol'];

  // verify client
  var origin = version < 13 ?
    req.headers['sec-websocket-origin'] :
    req.headers['origin'];

  // handle extensions offer
  var extensionsOffer = Extensions.parse(req.headers['sec-websocket-extensions']);

  // handler to call when the connection sequence completes
  var self = this;
  var completeHybiUpgrade2 = function(protocol) {

    // calc key
    var key = req.headers['sec-websocket-key'];
    var shasum = crypto.createHash('sha1');
    shasum.update(key + "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
    key = shasum.digest('base64');

    var headers = [
        'HTTP/1.1 101 Switching Protocols'
      , 'Upgrade: websocket'
      , 'Connection: Upgrade'
      , 'Sec-WebSocket-Accept: ' + key
    ];

    if (typeof protocol != 'undefined') {
      headers.push('Sec-WebSocket-Protocol: ' + protocol);
    }

    var extensions = {};
    try {
      extensions = acceptExtensions.call(self, extensionsOffer);
    } catch (err) {
      abortConnection(socket, 400, 'Bad Request');
      return;
    }

    if (Object.keys(extensions).length) {
      var serverExtensions = {};
      Object.keys(extensions).forEach(function(token) {
        serverExtensions[token] = [extensions[token].params]
      });
      headers.push('Sec-WebSocket-Extensions: ' + Extensions.format(serverExtensions));
    }

    // allows external modification/inspection of handshake headers
    self.emit('headers', headers);

    socket.setTimeout(0);
    socket.setNoDelay(true);
    try {
      socket.write(headers.concat('', '').join('\r\n'));
    }
    catch (e) {
      // if the upgrade write fails, shut the connection down hard
      try { socket.destroy(); } catch (e) {}
      return;
    }

    var client = new WebSocket([req, socket, upgradeHead], {
      protocolVersion: version,
      protocol: protocol,
      extensions: extensions,
      maxPayload: self.options.maxPayload
    });

    if (self.options.clientTracking) {
      self.clients.push(client);
      client.on('close', function() {
        var index = self.clients.indexOf(client);
        if (index != -1) {
          self.clients.splice(index, 1);
        }
      });
    }

    // signal upgrade complete
    socket.removeListener('error', errorHandler);
    cb(client);
  }

  // optionally call external protocol selection handler before
  // calling completeHybiUpgrade2
  var completeHybiUpgrade1 = function() {
    // choose from the sub-protocols
    if (typeof self.options.handleProtocols == 'function') {
        var protList = (protocols || "").split(/, */);
        var callbackCalled = false;
        var res = self.options.handleProtocols(protList, function(result, protocol) {
          callbackCalled = true;
          if (!result) abortConnection(socket, 401, 'Unauthorized');
          else completeHybiUpgrade2(protocol);
        });
        if (!callbackCalled) {
            // the handleProtocols handler never called our callback
            abortConnection(socket, 501, 'Could not process protocols');
        }
        return;
    } else {
        if (typeof protocols !== 'undefined') {
            completeHybiUpgrade2(protocols.split(/, */)[0]);
        }
        else {
            completeHybiUpgrade2();
        }
    }
  }

  // optionally call external client verification handler
  if (typeof this.options.verifyClient == 'function') {
    var info = {
      origin: origin,
      secure: typeof req.connection.authorized !== 'undefined' || typeof req.connection.encrypted !== 'undefined',
      req: req
    };
    if (this.options.verifyClient.length == 2) {
      this.options.verifyClient(info, function(result, code, name) {
        if (typeof code === 'undefined') code = 401;
        if (typeof name === 'undefined') name = http.STATUS_CODES[code];

        if (!result) abortConnection(socket, code, name);
        else completeHybiUpgrade1();
      });
      return;
    }
    else if (!this.options.verifyClient(info)) {
      abortConnection(socket, 401, 'Unauthorized');
      return;
    }
  }

  completeHybiUpgrade1();
}

function handleHixieUpgrade(req, socket, upgradeHead, cb) {
  // handle premature socket errors
  var errorHandler = function() {
    try { socket.destroy(); } catch (e) {}
  }
  socket.on('error', errorHandler);

  // bail if options prevent hixie
  if (this.options.disableHixie) {
    abortConnection(socket, 401, 'Hixie support disabled');
    return;
  }

  // verify key presence
  if (!req.headers['sec-websocket-key2']) {
    abortConnection(socket, 400, 'Bad Request');
    return;
  }

  var origin = req.headers['origin']
    , self = this;

  // setup handshake completion to run after client has been verified
  var onClientVerified = function() {
    var wshost;
    if (!req.headers['x-forwarded-host'])
        wshost = req.headers.host;
    else
        wshost = req.headers['x-forwarded-host'];
    var location = ((req.headers['x-forwarded-proto'] === 'https' || socket.encrypted) ? 'wss' : 'ws') + '://' + wshost + req.url
      , protocol = req.headers['sec-websocket-protocol'];

    // build the response header and return a Buffer
    var buildResponseHeader = function() {
      var headers = [
          'HTTP/1.1 101 Switching Protocols'
        , 'Upgrade: WebSocket'
        , 'Connection: Upgrade'
        , 'Sec-WebSocket-Location: ' + location
      ];
      if (typeof protocol != 'undefined') headers.push('Sec-WebSocket-Protocol: ' + protocol);
      if (typeof origin != 'undefined') headers.push('Sec-WebSocket-Origin: ' + origin);

      return new Buffer(headers.concat('', '').join('\r\n'));
    };

    // send handshake response before receiving the nonce
    var handshakeResponse = function() {

      socket.setTimeout(0);
      socket.setNoDelay(true);

      var headerBuffer = buildResponseHeader();

      try {
        socket.write(headerBuffer, 'binary', function(err) {
          // remove listener if there was an error
          if (err) socket.removeListener('data', handler);
          return;
        });
      } catch (e) {
        try { socket.destroy(); } catch (e) {}
        return;
      };
    };

    // handshake completion code to run once nonce has been successfully retrieved
    var completeHandshake = function(nonce, rest, headerBuffer) {
      // calculate key
      var k1 = req.headers['sec-websocket-key1']
        , k2 = req.headers['sec-websocket-key2']
        , md5 = crypto.createHash('md5');

      [k1, k2].forEach(function (k) {
        var n = parseInt(k.replace(/[^\d]/g, ''))
          , spaces = k.replace(/[^ ]/g, '').length;
        if (spaces === 0 || n % spaces !== 0){
          abortConnection(socket, 400, 'Bad Request');
          return;
        }
        n /= spaces;
        md5.update(String.fromCharCode(
          n >> 24 & 0xFF,
          n >> 16 & 0xFF,
          n >> 8  & 0xFF,
          n       & 0xFF));
      });
      md5.update(nonce.toString('binary'));

      socket.setTimeout(0);
      socket.setNoDelay(true);

      try {
        var hashBuffer = new Buffer(md5.digest('binary'), 'binary');
        var handshakeBuffer = new Buffer(headerBuffer.length + hashBuffer.length);
        headerBuffer.copy(handshakeBuffer, 0);
        hashBuffer.copy(handshakeBuffer, headerBuffer.length);

        // do a single write, which - upon success - causes a new client websocket to be setup
        socket.write(handshakeBuffer, 'binary', function(err) {
          if (err) return; // do not create client if an error happens
          var client = new WebSocket([req, socket, rest], {
            protocolVersion: 'hixie-76',
            protocol: protocol
          });
          if (self.options.clientTracking) {
            self.clients.push(client);
            client.on('close', function() {
              var index = self.clients.indexOf(client);
              if (index != -1) {
                self.clients.splice(index, 1);
              }
            });
          }

          // signal upgrade complete
          socket.removeListener('error', errorHandler);
          cb(client);
        });
      }
      catch (e) {
        try { socket.destroy(); } catch (e) {}
        return;
      }
    }

    // retrieve nonce
    var nonceLength = 8;
    if (upgradeHead && upgradeHead.length >= nonceLength) {
      var nonce = upgradeHead.slice(0, nonceLength);
      var rest = upgradeHead.length > nonceLength ? upgradeHead.slice(nonceLength) : null;
      completeHandshake.call(self, nonce, rest, buildResponseHeader());
    }
    else {
      // nonce not present in upgradeHead
      var nonce = new Buffer(nonceLength);
      upgradeHead.copy(nonce, 0);
      var received = upgradeHead.length;
      var rest = null;
      var handler = function (data) {
        var toRead = Math.min(data.length, nonceLength - received);
        if (toRead === 0) return;
        data.copy(nonce, received, 0, toRead);
        received += toRead;
        if (received == nonceLength) {
          socket.removeListener('data', handler);
          if (toRead < data.length) rest = data.slice(toRead);

          // complete the handshake but send empty buffer for headers since they have already been sent
          completeHandshake.call(self, nonce, rest, new Buffer(0));
        }
      }

      // handle additional data as we receive it
      socket.on('data', handler);

      // send header response before we have the nonce to fix haproxy buffering
      handshakeResponse();
    }
  }

  // verify client
  if (typeof this.options.verifyClient == 'function') {
    var info = {
      origin: origin,
      secure: typeof req.connection.authorized !== 'undefined' || typeof req.connection.encrypted !== 'undefined',
      req: req
    };
    if (this.options.verifyClient.length == 2) {
      var self = this;
      this.options.verifyClient(info, function(result, code, name) {
        if (typeof code === 'undefined') code = 401;
        if (typeof name === 'undefined') name = http.STATUS_CODES[code];

        if (!result) abortConnection(socket, code, name);
        else onClientVerified.apply(self);
      });
      return;
    }
    else if (!this.options.verifyClient(info)) {
      abortConnection(socket, 401, 'Unauthorized');
      return;
    }
  }

  // no client verification required
  onClientVerified();
}

function acceptExtensions(offer) {
  var extensions = {};
  var options = this.options.perMessageDeflate;
  var maxPayload = this.options.maxPayload;
  if (options && offer[PerMessageDeflate.extensionName]) {
    var perMessageDeflate = new PerMessageDeflate(options !== true ? options : {}, true, maxPayload);
    perMessageDeflate.accept(offer[PerMessageDeflate.extensionName]);
    extensions[PerMessageDeflate.extensionName] = perMessageDeflate;
  }
  return extensions;
}

function abortConnection(socket, code, name) {
  try {
    var response = [
      'HTTP/1.1 ' + code + ' ' + name,
      'Content-type: text/html'
    ];
    socket.write(response.concat('', '').join('\r\n'));
  }
  catch (e) { /* ignore errors - we've aborted this connection */ }
  finally {
    // ensure that an early aborted connection is shut down completely
    try { socket.destroy(); } catch (e) {}
  }
}


/***/ }),
/* 205 */
/***/ (function(module, exports) {

module.exports = {
	"nested": {
		"orm": {
			"nested": {
				"MultiRef": {
					"fields": {
						"refs": {
							"rule": "repeated",
							"type": "bytes",
							"id": 1
						}
					}
				},
				"Counter": {
					"fields": {
						"count": {
							"type": "int64",
							"id": 1
						}
					}
				}
			}
		},
		"crypto": {
			"nested": {
				"PublicKey": {
					"oneofs": {
						"pub": {
							"oneof": [
								"ed25519"
							]
						}
					},
					"fields": {
						"ed25519": {
							"type": "bytes",
							"id": 1
						}
					}
				},
				"PrivateKey": {
					"oneofs": {
						"priv": {
							"oneof": [
								"ed25519"
							]
						}
					},
					"fields": {
						"ed25519": {
							"type": "bytes",
							"id": 1
						}
					}
				},
				"Signature": {
					"oneofs": {
						"sig": {
							"oneof": [
								"ed25519"
							]
						}
					},
					"fields": {
						"ed25519": {
							"type": "bytes",
							"id": 1
						}
					}
				}
			}
		},
		"app": {
			"nested": {
				"Tx": {
					"oneofs": {
						"sum": {
							"oneof": [
								"sendMsg"
							]
						}
					},
					"fields": {
						"sendMsg": {
							"type": "cash.SendMsg",
							"id": 1
						},
						"fees": {
							"type": "cash.FeeInfo",
							"id": 20
						},
						"signatures": {
							"rule": "repeated",
							"type": "sigs.StdSignature",
							"id": 21
						}
					}
				},
				"ResultSet": {
					"fields": {
						"results": {
							"rule": "repeated",
							"type": "bytes",
							"id": 1
						}
					}
				}
			}
		},
		"sigs": {
			"nested": {
				"UserData": {
					"fields": {
						"pubKey": {
							"type": "crypto.PublicKey",
							"id": 1
						},
						"sequence": {
							"type": "int64",
							"id": 2
						}
					}
				},
				"StdSignature": {
					"fields": {
						"sequence": {
							"type": "int64",
							"id": 1
						},
						"pubKey": {
							"type": "crypto.PublicKey",
							"id": 2
						},
						"signature": {
							"type": "crypto.Signature",
							"id": 4
						}
					}
				}
			}
		},
		"cash": {
			"nested": {
				"Set": {
					"fields": {
						"coins": {
							"rule": "repeated",
							"type": "x.Coin",
							"id": 1
						}
					}
				},
				"SendMsg": {
					"fields": {
						"src": {
							"type": "bytes",
							"id": 1
						},
						"dest": {
							"type": "bytes",
							"id": 2
						},
						"amount": {
							"type": "x.Coin",
							"id": 3
						},
						"memo": {
							"type": "string",
							"id": 4
						},
						"ref": {
							"type": "bytes",
							"id": 5
						}
					}
				},
				"FeeInfo": {
					"fields": {
						"payer": {
							"type": "bytes",
							"id": 1
						},
						"fees": {
							"type": "x.Coin",
							"id": 2
						}
					}
				}
			}
		},
		"x": {
			"nested": {
				"Coin": {
					"fields": {
						"whole": {
							"type": "int64",
							"id": 1
						},
						"fractional": {
							"type": "int64",
							"id": 2
						},
						"ticker": {
							"type": "string",
							"id": 3
						},
						"issuer": {
							"type": "string",
							"id": 4
						}
					}
				}
			}
		}
	}
};

/***/ }),
/* 206 */
/***/ (function(module, exports) {

module.exports = require("os");

/***/ }),
/* 207 */
/***/ (function(module, exports) {

module.exports = require("string_decoder");

/***/ }),
/* 208 */
/***/ (function(module, exports) {

module.exports = require("tls");

/***/ }),
/* 209 */
/***/ (function(module, exports) {

module.exports = require("tty");

/***/ })
/******/ ]);
});